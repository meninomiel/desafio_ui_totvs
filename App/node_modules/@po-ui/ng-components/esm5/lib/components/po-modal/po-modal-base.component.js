import { __decorate, __metadata } from "tslib";
import { Input, EventEmitter, Directive } from '@angular/core';
import { convertToBoolean } from './../../utils/util';
/**
 * @description
 *
 * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.
 *
 * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.
 *
 * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,
 * `po-table` e os demais componentes do PO.
 *
 * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como
 * definir um estado de carregando e / ou desabilitado. Também é possível definir o botão com o tipo *danger*.
 *
 * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.
 */
var PoModalBaseComponent = /** @class */ (function () {
    function PoModalBaseComponent() {
        this._hideClose = false;
        this._size = 'md';
        /**
         * Define o fechamento da modal ao clicar fora da mesma.
         * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.
         */
        this.clickOut = false;
        // Controla se a modal fica oculto ou visível, por padrão é oculto
        this.isHidden = true;
        // Event emmiter para quando a modal é fechada pelo 'X'.
        this.onXClosed = new EventEmitter();
    }
    Object.defineProperty(PoModalBaseComponent.prototype, "size", {
        get: function () {
            return this._size;
        },
        /**
         * Define o tamanho da modal.
         *
         * Valores válidos:
         *  - `sm` (pequeno)
         *  - `md` (médio)
         *  - `lg` (grande)
         *  - `xl` (extra grande)
         *  - `auto` (automático)
         *
         * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.
         * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.
         *
         * > Todas as opções de tamanho possuem uma largura máxima de **768px**.
         */
        set: function (value) {
            var sizes = ['sm', 'md', 'lg', 'xl', 'auto'];
            this._size = sizes.indexOf(value) > -1 ? value : 'md';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoModalBaseComponent.prototype, "setClickOut", {
        set: function (value) {
            this.clickOut = value === '' ? false : convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoModalBaseComponent.prototype, "hideClose", {
        get: function () {
            return this._hideClose;
        },
        /**
         * @optional
         *
         * @description
         *
         * Oculta o ícone de fechar do cabeçalho da modal.
         *
         * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.
         *
         * @default `false`
         */
        set: function (value) {
            this._hideClose = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    /** Função para fechar a modal. */
    PoModalBaseComponent.prototype.close = function (xClosed) {
        if (xClosed === void 0) { xClosed = false; }
        this.isHidden = true;
        if (xClosed) {
            this.onXClosed.emit(xClosed);
        }
    };
    /** Função para abrir a modal. */
    PoModalBaseComponent.prototype.open = function () {
        this.validPrimaryAction();
        this.isHidden = false;
    };
    PoModalBaseComponent.prototype.validPrimaryAction = function () {
        var _this = this;
        if (!this.primaryAction) {
            this.primaryAction = {
                action: function () { return _this.close(); },
                label: 'Ok'
            };
        }
        if (!this.primaryAction['action']) {
            this.primaryAction['action'] = function () { return _this.close(); };
        }
        if (!this.primaryAction['label']) {
            this.primaryAction['label'] = 'Ok';
        }
    };
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoModalBaseComponent.prototype, "title", void 0);
    __decorate([
        Input('p-primary-action'),
        __metadata("design:type", Object)
    ], PoModalBaseComponent.prototype, "primaryAction", void 0);
    __decorate([
        Input('p-secondary-action'),
        __metadata("design:type", Object)
    ], PoModalBaseComponent.prototype, "secondaryAction", void 0);
    __decorate([
        Input('p-size'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoModalBaseComponent.prototype, "size", null);
    __decorate([
        Input('p-click-out'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoModalBaseComponent.prototype, "setClickOut", null);
    __decorate([
        Input('p-hide-close'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoModalBaseComponent.prototype, "hideClose", null);
    PoModalBaseComponent = __decorate([
        Directive()
    ], PoModalBaseComponent);
    return PoModalBaseComponent;
}());
export { PoModalBaseComponent };
//# sourceMappingURL=data:application/json;base64,