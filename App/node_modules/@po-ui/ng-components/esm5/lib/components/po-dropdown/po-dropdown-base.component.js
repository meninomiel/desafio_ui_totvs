import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { convertToBoolean } from './../../utils/util';
/**
 * @description
 *
 * O componente `po-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.
 *
 * > Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`
 * no módulo principal para o correto funcionamento deste componente:
 *
 * ```
 * import { RouterModule } from '@angular/router';
 *
 * @NgModule({
 *   imports: [
 *     ...
 *     RouterModule.forRoot([]),
 *     PoModule
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   exports: [],
 *   providers: [],
 *   bootstrap: [
 *     AppComponent
 *   ]
 * })
 * export class AppModule { }
 * ```
 * > Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando
 * [/Configurando as rotas do po-menu](/guides/getting-started).
 */
var PoDropdownBaseComponent = /** @class */ (function () {
    function PoDropdownBaseComponent() {
        this._disabled = false;
        this.icon = 'po-icon-arrow-down';
        this.open = false;
    }
    Object.defineProperty(PoDropdownBaseComponent.prototype, "actions", {
        get: function () {
            return this._actions;
        },
        /** Lista de ações que serão exibidas no componente. */
        set: function (value) {
            this._actions = Array.isArray(value) ? value : [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoDropdownBaseComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        /**
         * @optional
         *
         * @description
         *
         * Desabilita o campo.
         *
         * @default `false`
         */
        set: function (value) {
            this._disabled = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoDropdownBaseComponent.prototype, "actions", null);
    __decorate([
        Input('p-disabled'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoDropdownBaseComponent.prototype, "disabled", null);
    __decorate([
        Input('p-label'),
        __metadata("design:type", String)
    ], PoDropdownBaseComponent.prototype, "label", void 0);
    PoDropdownBaseComponent = __decorate([
        Directive()
    ], PoDropdownBaseComponent);
    return PoDropdownBaseComponent;
}());
export { PoDropdownBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHJvcGRvd24tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWRyb3Bkb3duL3BvLWRyb3Bkb3duLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUl0RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBOEJHO0FBR0g7SUFBQTtRQUVVLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFFbkMsU0FBSSxHQUFXLG9CQUFvQixDQUFDO1FBQ3BDLFNBQUksR0FBWSxLQUFLLENBQUM7SUE4QnhCLENBQUM7SUEzQnFCLHNCQUFJLDRDQUFPO2FBSS9CO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7UUFQRCx1REFBdUQ7YUFDbkMsVUFBWSxLQUE4QjtZQUM1RCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3BELENBQUM7OztPQUFBO0lBZW9CLHNCQUFJLDZDQUFRO2FBSWpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFmRDs7Ozs7Ozs7V0FRRzthQUNrQixVQUFhLEtBQWM7WUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQyxDQUFDOzs7T0FBQTtJQW5CbUI7UUFBbkIsS0FBSyxDQUFDLFdBQVcsQ0FBQztrQ0FBb0IsS0FBSzt5Q0FBTCxLQUFLOzBEQUUzQztJQWVvQjtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzs7MkRBRW5CO0lBT2lCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OzBEQUFlO0lBbENyQix1QkFBdUI7UUFEbkMsU0FBUyxFQUFFO09BQ0MsdUJBQXVCLENBbUNuQztJQUFELDhCQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0FuQ1ksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Ecm9wZG93bkFjdGlvbiB9IGZyb20gJy4vcG8tZHJvcGRvd24tYWN0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1kcm9wZG93bmAgcG9kZSBzZXIgdXRpbGl6YWRvIGNvbW8gdW0gYWdydXBhZG9yIGRlIGHDp8O1ZXMgZSAvIG91IG9ww6fDtWVzLlxuICpcbiAqID4gQ2FzbyBuw6NvIGhhamEgY29uZmlndXJhw6fDo28gZGUgcm90YXMgZW0gc3VhIGFwbGljYcOnw6NvLCBzZSBmYXogbmVjZXNzw6FyaW8gaW1wb3J0YXIgbyBgUm91dGVyTW9kdWxlYFxuICogbm8gbcOzZHVsbyBwcmluY2lwYWwgcGFyYSBvIGNvcnJldG8gZnVuY2lvbmFtZW50byBkZXN0ZSBjb21wb25lbnRlOlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLi4uXG4gKiAgICAgUm91dGVyTW9kdWxlLmZvclJvb3QoW10pLFxuICogICAgIFBvTW9kdWxlXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudFxuICogICBdLFxuICogICBleHBvcnRzOiBbXSxcbiAqICAgcHJvdmlkZXJzOiBbXSxcbiAqICAgYm9vdHN0cmFwOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50XG4gKiAgIF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKiA+IFBhcmEgbWFpb3JlcyBkw7p2aWRhcyByZWZlcmVudGUgw6AgY29uZmlndXJhw6fDo28gZGUgcm90YXMsIGFjZXNzZSBlbSBub3NzbyBwb3J0YWwgL0d1aWFzIC9Db21lw6dhbmRvXG4gKiBbL0NvbmZpZ3VyYW5kbyBhcyByb3RhcyBkbyBwby1tZW51XSgvZ3VpZGVzL2dldHRpbmctc3RhcnRlZCkuXG4gKi9cblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9Ecm9wZG93bkJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF9hY3Rpb25zOiBBcnJheTxQb0Ryb3Bkb3duQWN0aW9uPjtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBpY29uOiBzdHJpbmcgPSAncG8taWNvbi1hcnJvdy1kb3duJztcbiAgb3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBMaXN0YSBkZSBhw6fDtWVzIHF1ZSBzZXLDo28gZXhpYmlkYXMgbm8gY29tcG9uZW50ZS4gKi9cbiAgQElucHV0KCdwLWFjdGlvbnMnKSBzZXQgYWN0aW9ucyh2YWx1ZTogQXJyYXk8UG9Ecm9wZG93bkFjdGlvbj4pIHtcbiAgICB0aGlzLl9hY3Rpb25zID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFtdO1xuICB9XG5cbiAgZ2V0IGFjdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGlvbnM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIG8gY2FtcG8uXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG5cbiAgLyoqIEFkaWNpb25hIHVtIHLDs3R1bG8gYW8gYGRyb3Bkb3duYC4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcbn1cbiJdfQ==