import { __assign, __decorate, __metadata } from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PoTreeViewService } from '../services/po-tree-view.service';
var PoTreeViewItemComponent = /** @class */ (function () {
    function PoTreeViewItemComponent(treeViewService) {
        this.treeViewService = treeViewService;
    }
    Object.defineProperty(PoTreeViewItemComponent.prototype, "hasSubItems", {
        get: function () {
            return !!(this.item.subItems && this.item.subItems.length);
        },
        enumerable: true,
        configurable: true
    });
    PoTreeViewItemComponent.prototype.onClick = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.item.expanded = !this.item.expanded;
        this.treeViewService.emitExpandedEvent(__assign({}, this.item));
    };
    PoTreeViewItemComponent.prototype.onSelect = function (selectedItem) {
        this.treeViewService.emitSelectedEvent(__assign({}, selectedItem));
    };
    PoTreeViewItemComponent.prototype.trackByFunction = function (index) {
        return index;
    };
    PoTreeViewItemComponent.ctorParameters = function () { return [
        { type: PoTreeViewService }
    ]; };
    __decorate([
        Input('p-item'),
        __metadata("design:type", Object)
    ], PoTreeViewItemComponent.prototype, "item", void 0);
    __decorate([
        Input('p-selectable'),
        __metadata("design:type", Boolean)
    ], PoTreeViewItemComponent.prototype, "selectable", void 0);
    PoTreeViewItemComponent = __decorate([
        Component({
            selector: 'po-tree-view-item',
            template: "<li class=\"po-tree-view-item\">\n  <po-tree-view-item-header\n    [p-item]=\"item\"\n    [p-selectable]=\"selectable\"\n    (p-expanded)=\"onClick($event)\"\n    (p-selected)=\"onSelect(item)\"\n  >\n  </po-tree-view-item-header>\n\n  <ul *ngIf=\"hasSubItems\" class=\"po-tree-view-item-group\" [@toggleBody]=\"item.expanded ? 'expanded' : 'collapsed'\">\n    <po-tree-view-item\n      *ngFor=\"let subItem of item.subItems; trackBy: trackByFunction\"\n      [p-item]=\"subItem\"\n      [p-selectable]=\"selectable\"\n    >\n    </po-tree-view-item>\n  </ul>\n</li>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            animations: [
                trigger('toggleBody', [
                    state('collapsed', style({
                        'overflow-y': 'hidden',
                        visibility: 'hidden',
                        opacity: 0,
                        height: '0'
                    })),
                    transition('expanded => collapsed', [
                        style({ height: '*' }),
                        animate(100, style({ opacity: 0 })),
                        animate(200, style({ height: 0 }))
                    ]),
                    transition('collapsed => expanded', [
                        style({ height: '0' }),
                        animate(100, style({ opacity: 1 })),
                        animate(200, style({ height: '*' }))
                    ])
                ])
            ]
        }),
        __metadata("design:paramtypes", [PoTreeViewService])
    ], PoTreeViewItemComponent);
    return PoTreeViewItemComponent;
}());
export { PoTreeViewItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10cmVlLXZpZXcvcG8tdHJlZS12aWV3LWl0ZW0vcG8tdHJlZS12aWV3LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBOEJyRTtJQVNFLGlDQUFvQixlQUFrQztRQUFsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBbUI7SUFBRyxDQUFDO0lBSjFELHNCQUFJLGdEQUFXO2FBQWY7WUFDRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELENBQUM7OztPQUFBO0lBSUQseUNBQU8sR0FBUCxVQUFRLEtBQWlCO1FBQ3ZCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUV6QyxJQUFJLENBQUMsZUFBZSxDQUFDLGlCQUFpQixjQUFNLElBQUksQ0FBQyxJQUFJLEVBQUcsQ0FBQztJQUMzRCxDQUFDO0lBRUQsMENBQVEsR0FBUixVQUFTLFlBQTRCO1FBQ25DLElBQUksQ0FBQyxlQUFlLENBQUMsaUJBQWlCLGNBQU0sWUFBWSxFQUFHLENBQUM7SUFDOUQsQ0FBQztJQUVELGlEQUFlLEdBQWYsVUFBZ0IsS0FBYTtRQUMzQixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O2dCQWpCb0MsaUJBQWlCOztJQVJyQztRQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDOzt5REFBc0I7SUFFZjtRQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOzsrREFBcUI7SUFIaEMsdUJBQXVCO1FBNUJuQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLG9rQkFBaUQ7WUFDakQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsVUFBVSxFQUFFO2dCQUNWLE9BQU8sQ0FBQyxZQUFZLEVBQUU7b0JBQ3BCLEtBQUssQ0FDSCxXQUFXLEVBQ1gsS0FBSyxDQUFDO3dCQUNKLFlBQVksRUFBRSxRQUFRO3dCQUN0QixVQUFVLEVBQUUsUUFBUTt3QkFDcEIsT0FBTyxFQUFFLENBQUM7d0JBQ1YsTUFBTSxFQUFFLEdBQUc7cUJBQ1osQ0FBQyxDQUNIO29CQUNELFVBQVUsQ0FBQyx1QkFBdUIsRUFBRTt3QkFDbEMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO3dCQUN0QixPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNuQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3FCQUNuQyxDQUFDO29CQUNGLFVBQVUsQ0FBQyx1QkFBdUIsRUFBRTt3QkFDbEMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO3dCQUN0QixPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNuQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO3FCQUNyQyxDQUFDO2lCQUNILENBQUM7YUFDSDtTQUNGLENBQUM7eUNBVXFDLGlCQUFpQjtPQVQzQyx1QkFBdUIsQ0EyQm5DO0lBQUQsOEJBQUM7Q0FBQSxBQTNCRCxJQTJCQztTQTNCWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVHJlZVZpZXdJdGVtIH0gZnJvbSAnLi9wby10cmVlLXZpZXctaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9UcmVlVmlld1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wby10cmVlLXZpZXcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRyZWUtdmlldy1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRyZWUtdmlldy1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCd0b2dnbGVCb2R5JywgW1xuICAgICAgc3RhdGUoXG4gICAgICAgICdjb2xsYXBzZWQnLFxuICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgJ292ZXJmbG93LXknOiAnaGlkZGVuJyxcbiAgICAgICAgICB2aXNpYmlsaXR5OiAnaGlkZGVuJyxcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIGhlaWdodDogJzAnXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgdHJhbnNpdGlvbignZXhwYW5kZWQgPT4gY29sbGFwc2VkJywgW1xuICAgICAgICBzdHlsZSh7IGhlaWdodDogJyonIH0pLFxuICAgICAgICBhbmltYXRlKDEwMCwgc3R5bGUoeyBvcGFjaXR5OiAwIH0pKSxcbiAgICAgICAgYW5pbWF0ZSgyMDAsIHN0eWxlKHsgaGVpZ2h0OiAwIH0pKVxuICAgICAgXSksXG4gICAgICB0cmFuc2l0aW9uKCdjb2xsYXBzZWQgPT4gZXhwYW5kZWQnLCBbXG4gICAgICAgIHN0eWxlKHsgaGVpZ2h0OiAnMCcgfSksXG4gICAgICAgIGFuaW1hdGUoMTAwLCBzdHlsZSh7IG9wYWNpdHk6IDEgfSkpLFxuICAgICAgICBhbmltYXRlKDIwMCwgc3R5bGUoeyBoZWlnaHQ6ICcqJyB9KSlcbiAgICAgIF0pXG4gICAgXSlcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQb1RyZWVWaWV3SXRlbUNvbXBvbmVudCB7XG4gIEBJbnB1dCgncC1pdGVtJykgaXRlbTogUG9UcmVlVmlld0l0ZW07XG5cbiAgQElucHV0KCdwLXNlbGVjdGFibGUnKSBzZWxlY3RhYmxlOiBib29sZWFuO1xuXG4gIGdldCBoYXNTdWJJdGVtcygpIHtcbiAgICByZXR1cm4gISEodGhpcy5pdGVtLnN1Ykl0ZW1zICYmIHRoaXMuaXRlbS5zdWJJdGVtcy5sZW5ndGgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0cmVlVmlld1NlcnZpY2U6IFBvVHJlZVZpZXdTZXJ2aWNlKSB7fVxuXG4gIG9uQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgdGhpcy5pdGVtLmV4cGFuZGVkID0gIXRoaXMuaXRlbS5leHBhbmRlZDtcblxuICAgIHRoaXMudHJlZVZpZXdTZXJ2aWNlLmVtaXRFeHBhbmRlZEV2ZW50KHsgLi4udGhpcy5pdGVtIH0pO1xuICB9XG5cbiAgb25TZWxlY3Qoc2VsZWN0ZWRJdGVtOiBQb1RyZWVWaWV3SXRlbSkge1xuICAgIHRoaXMudHJlZVZpZXdTZXJ2aWNlLmVtaXRTZWxlY3RlZEV2ZW50KHsgLi4uc2VsZWN0ZWRJdGVtIH0pO1xuICB9XG5cbiAgdHJhY2tCeUZ1bmN0aW9uKGluZGV4OiBudW1iZXIpIHtcbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbn1cbiJdfQ==