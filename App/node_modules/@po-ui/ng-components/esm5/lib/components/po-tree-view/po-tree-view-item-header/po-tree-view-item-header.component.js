import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
var PoTreeViewItemHeaderComponent = /** @class */ (function () {
    function PoTreeViewItemHeaderComponent() {
        this.selectable = false;
        this.expanded = new EventEmitter();
        this.selected = new EventEmitter();
    }
    Object.defineProperty(PoTreeViewItemHeaderComponent.prototype, "hasSubItems", {
        get: function () {
            return !!(this.item.subItems && this.item.subItems.length);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        ViewChild('inputCheckbox'),
        __metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "inputCheckbox", void 0);
    __decorate([
        Input('p-item'),
        __metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "item", void 0);
    __decorate([
        Input('p-selectable'),
        __metadata("design:type", Boolean)
    ], PoTreeViewItemHeaderComponent.prototype, "selectable", void 0);
    __decorate([
        Output('p-expanded'),
        __metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "expanded", void 0);
    __decorate([
        Output('p-selected'),
        __metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "selected", void 0);
    PoTreeViewItemHeaderComponent = __decorate([
        Component({
            selector: 'po-tree-view-item-header',
            template: "<div class=\"po-tree-view-item-header\">\n  <button *ngIf=\"hasSubItems\" class=\"po-tree-view-item-header-button\" (click)=\"expanded.emit($event)\">\n    <span\n      class=\"po-icon po-icon-arrow-down po-tree-view-item-header-button-icon\"\n      [class.po-tree-view-item-header-button-icon-transform]=\"item.expanded\"\n    >\n    </span>\n  </button>\n\n  <ng-container *ngIf=\"selectable; then checkboxTemplate; else labelTemplate\"></ng-container>\n</div>\n\n<ng-template #labelTemplate>\n  <span class=\"po-tree-view-item-header-label\" [class.po-tree-view-item-header-padding]=\"!hasSubItems\">\n    {{ item.label }}\n  </span>\n</ng-template>\n\n<ng-template #checkboxTemplate>\n  <po-checkbox\n    class=\"po-tree-view-item-header-checkbox\"\n    [class.po-tree-view-item-header-padding]=\"!hasSubItems\"\n    [p-label]=\"item.label\"\n    [(ngModel)]=\"item.selected\"\n    (p-change)=\"selected.emit(item)\"\n  >\n  </po-checkbox>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], PoTreeViewItemHeaderComponent);
    return PoTreeViewItemHeaderComponent;
}());
export { PoTreeViewItemHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdHJlZS12aWV3L3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci9wby10cmVlLXZpZXctaXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMzRztJQUFBO1FBS3lCLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFFN0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFFMUMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFLM0QsQ0FBQztJQUhDLHNCQUFJLHNEQUFXO2FBQWY7WUFDRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELENBQUM7OztPQUFBO0lBWjJCO1FBQTNCLFNBQVMsQ0FBQyxlQUFlLENBQUM7O3dFQUFlO0lBRXpCO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OytEQUFzQjtJQUVmO1FBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7O3FFQUE2QjtJQUU3QjtRQUFyQixNQUFNLENBQUMsWUFBWSxDQUFDOzttRUFBMkM7SUFFMUM7UUFBckIsTUFBTSxDQUFDLFlBQVksQ0FBQzs7bUVBQW9DO0lBVDlDLDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLDY4QkFBd0Q7WUFDeEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztPQUNXLDZCQUE2QixDQWN6QztJQUFELG9DQUFDO0NBQUEsQUFkRCxJQWNDO1NBZFksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9UcmVlVmlld0l0ZW0gfSBmcm9tICcuLi9wby10cmVlLXZpZXctaXRlbS9wby10cmVlLXZpZXctaXRlbS5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10cmVlLXZpZXctaXRlbS1oZWFkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9UcmVlVmlld0l0ZW1IZWFkZXJDb21wb25lbnQge1xuICBAVmlld0NoaWxkKCdpbnB1dENoZWNrYm94JykgaW5wdXRDaGVja2JveDtcblxuICBASW5wdXQoJ3AtaXRlbScpIGl0ZW06IFBvVHJlZVZpZXdJdGVtO1xuXG4gIEBJbnB1dCgncC1zZWxlY3RhYmxlJykgc2VsZWN0YWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoJ3AtZXhwYW5kZWQnKSBleHBhbmRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcblxuICBAT3V0cHV0KCdwLXNlbGVjdGVkJykgc2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBnZXQgaGFzU3ViSXRlbXMoKSB7XG4gICAgcmV0dXJuICEhKHRoaXMuaXRlbS5zdWJJdGVtcyAmJiB0aGlzLml0ZW0uc3ViSXRlbXMubGVuZ3RoKTtcbiAgfVxufVxuIl19