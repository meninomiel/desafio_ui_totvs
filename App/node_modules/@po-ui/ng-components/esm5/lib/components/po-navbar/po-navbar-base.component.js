import { __assign, __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { browserLanguage, convertToBoolean, poLocaleDefault } from '../../utils/util';
import { PoMenuComponent } from '../po-menu';
export var poNavbarLiteralsDefault = {
    en: {
        navbarLinks: 'Navbar links'
    },
    es: {
        navbarLinks: 'Navbar links'
    },
    pt: {
        navbarLinks: 'Navbar links'
    },
    ru: {
        navbarLinks: 'Navbar связи'
    }
};
/**
 * @description
 *
 * O componente `po-navbar` é um cabeçalho fixo que permite apresentar uma lista de links para facilitar a navegação pelas
 * páginas da aplicação. Também possui ícones com ações.
 */
var PoNavbarBaseComponent = /** @class */ (function () {
    function PoNavbarBaseComponent() {
        this._iconActions = [];
        this._items = [];
        this._shadow = false;
    }
    Object.defineProperty(PoNavbarBaseComponent.prototype, "iconActions", {
        get: function () {
            return this._iconActions;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define uma lista de ações apresentadas em ícones no lado direito do `po-navbar`.
         */
        set: function (value) {
            this._iconActions = Array.isArray(value) ? value : [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoNavbarBaseComponent.prototype, "items", {
        get: function () {
            return this._items;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define uma lista de items do `po-navbar`.
         */
        set: function (value) {
            this._items = Array.isArray(value) ? value : [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoNavbarBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals || poNavbarLiteralsDefault[browserLanguage()];
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com a literal usada na propriedade `p-literals`.
         *
         * Para customizar a literal, basta declarar um objeto do tipo `PoNavbarLiterals` conforme exemplo abaixo:
         *
         * ```
         *  const customLiterals: PoNavbarLiterals = {
         *    navbarLinks: 'Itens de navegação'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <po-navbar
         *   [p-literals]="customLiterals">
         * </po-navbar>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do *browser* (pt, en, es).
         */
        set: function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = __assign(__assign(__assign({}, poNavbarLiteralsDefault[poLocaleDefault]), poNavbarLiteralsDefault[browserLanguage()]), value);
            }
            else {
                this._literals = poNavbarLiteralsDefault[browserLanguage()];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoNavbarBaseComponent.prototype, "logo", {
        get: function () {
            return this._logo;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define a logo apresentada `po-navbar`.
         */
        set: function (value) {
            this._logo = value;
            if (this.menu) {
                this.validateMenuLogo();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoNavbarBaseComponent.prototype, "shadow", {
        get: function () {
            return this._shadow;
        },
        /**
         * @optional
         *
         * @description
         *
         * Aplica uma sombra na parte inferior do `po-navbar`.
         *
         * @default `false`
         */
        set: function (value) {
            this._shadow = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-icon-actions'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoNavbarBaseComponent.prototype, "iconActions", null);
    __decorate([
        Input('p-items'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoNavbarBaseComponent.prototype, "items", null);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoNavbarBaseComponent.prototype, "literals", null);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoNavbarBaseComponent.prototype, "logo", null);
    __decorate([
        Input('p-menu'),
        __metadata("design:type", PoMenuComponent)
    ], PoNavbarBaseComponent.prototype, "menu", void 0);
    __decorate([
        Input('p-shadow'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoNavbarBaseComponent.prototype, "shadow", null);
    PoNavbarBaseComponent = __decorate([
        Directive()
    ], PoNavbarBaseComponent);
    return PoNavbarBaseComponent;
}());
export { PoNavbarBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1uYXZiYXIvcG8tbmF2YmFyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXRGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFLN0MsTUFBTSxDQUFDLElBQU0sdUJBQXVCLEdBQUc7SUFDckMsRUFBRSxFQUFvQjtRQUNwQixXQUFXLEVBQUUsY0FBYztLQUM1QjtJQUNELEVBQUUsRUFBb0I7UUFDcEIsV0FBVyxFQUFFLGNBQWM7S0FDNUI7SUFDRCxFQUFFLEVBQW9CO1FBQ3BCLFdBQVcsRUFBRSxjQUFjO0tBQzVCO0lBQ0QsRUFBRSxFQUFvQjtRQUNwQixXQUFXLEVBQUUsY0FBYztLQUM1QjtDQUNGLENBQUM7QUFFRjs7Ozs7R0FLRztBQUVIO0lBQUE7UUFDVSxpQkFBWSxHQUE4QixFQUFFLENBQUM7UUFDN0MsV0FBTSxHQUF3QixFQUFFLENBQUM7UUFHakMsWUFBTyxHQUFZLEtBQUssQ0FBQztJQXVJbkMsQ0FBQztJQTlIMEIsc0JBQUksOENBQVc7YUFJeEM7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0IsQ0FBQztRQWJEOzs7Ozs7V0FNRzthQUNzQixVQUFnQixLQUFnQztZQUN2RSxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3hELENBQUM7OztPQUFBO0lBYWlCLHNCQUFJLHdDQUFLO2FBSTNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFiRDs7Ozs7O1dBTUc7YUFDZSxVQUFVLEtBQTBCO1lBQ3BELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDbEQsQ0FBQzs7O09BQUE7SUErQm9CLHNCQUFJLDJDQUFRO2FBV2pDO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLHVCQUF1QixDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7UUFDdEUsQ0FBQztRQXRDRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBd0JHO2FBQ2tCLFVBQWEsS0FBdUI7WUFDdkQsSUFBSSxLQUFLLFlBQVksTUFBTSxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksS0FBSyxDQUFDLEVBQUU7Z0JBQ3hELElBQUksQ0FBQyxTQUFTLGtDQUNULHVCQUF1QixDQUFDLGVBQWUsQ0FBQyxHQUN4Qyx1QkFBdUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxHQUMxQyxLQUFLLENBQ1QsQ0FBQzthQUNIO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxTQUFTLEdBQUcsdUJBQXVCLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQzthQUM3RDtRQUNILENBQUM7OztPQUFBO0lBWWdCLHNCQUFJLHVDQUFJO2FBT3pCO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFoQkQ7Ozs7OztXQU1HO2FBQ2MsVUFBUyxLQUFhO1lBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBRW5CLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDYixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQzthQUN6QjtRQUNILENBQUM7OztPQUFBO0lBeUNrQixzQkFBSSx5Q0FBTTthQUk3QjtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDO1FBZkQ7Ozs7Ozs7O1dBUUc7YUFDZ0IsVUFBVyxLQUFjO1lBQzFDLElBQUksQ0FBQyxPQUFPLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUF2SHdCO1FBQXhCLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztrQ0FBd0IsS0FBSzt5Q0FBTCxLQUFLOzREQUVwRDtJQWFpQjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDO2tDQUFrQixLQUFLO3lDQUFMLEtBQUs7c0RBRXZDO0lBK0JvQjtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzs7eURBVW5CO0lBWWdCO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OztxREFNZjtJQThCZ0I7UUFBaEIsS0FBSyxDQUFDLFFBQVEsQ0FBQztrQ0FBUSxlQUFlO3VEQUFDO0lBV3JCO1FBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7Ozt1REFFakI7SUFySW1CLHFCQUFxQjtRQUQxQyxTQUFTLEVBQUU7T0FDVSxxQkFBcUIsQ0E0STFDO0lBQUQsNEJBQUM7Q0FBQSxBQTVJRCxJQTRJQztTQTVJcUIscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIGNvbnZlcnRUb0Jvb2xlYW4sIHBvTG9jYWxlRGVmYXVsdCB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb01lbnVDb21wb25lbnQgfSBmcm9tICcuLi9wby1tZW51JztcbmltcG9ydCB7IFBvTmF2YmFySWNvbkFjdGlvbiB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1uYXZiYXItaWNvbi1hY3Rpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTmF2YmFySXRlbSB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1uYXZiYXItaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9OYXZiYXJMaXRlcmFscyB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1uYXZiYXItbGl0ZXJhbHMuaW50ZXJmYWNlJztcblxuZXhwb3J0IGNvbnN0IHBvTmF2YmFyTGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFBvTmF2YmFyTGl0ZXJhbHM+e1xuICAgIG5hdmJhckxpbmtzOiAnTmF2YmFyIGxpbmtzJ1xuICB9LFxuICBlczogPFBvTmF2YmFyTGl0ZXJhbHM+e1xuICAgIG5hdmJhckxpbmtzOiAnTmF2YmFyIGxpbmtzJ1xuICB9LFxuICBwdDogPFBvTmF2YmFyTGl0ZXJhbHM+e1xuICAgIG5hdmJhckxpbmtzOiAnTmF2YmFyIGxpbmtzJ1xuICB9LFxuICBydTogPFBvTmF2YmFyTGl0ZXJhbHM+e1xuICAgIG5hdmJhckxpbmtzOiAnTmF2YmFyINGB0LLRj9C30LgnXG4gIH1cbn07XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1uYXZiYXJgIMOpIHVtIGNhYmXDp2FsaG8gZml4byBxdWUgcGVybWl0ZSBhcHJlc2VudGFyIHVtYSBsaXN0YSBkZSBsaW5rcyBwYXJhIGZhY2lsaXRhciBhIG5hdmVnYcOnw6NvIHBlbGFzXG4gKiBww6FnaW5hcyBkYSBhcGxpY2HDp8Ojby4gVGFtYsOpbSBwb3NzdWkgw61jb25lcyBjb20gYcOnw7Vlcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUG9OYXZiYXJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfaWNvbkFjdGlvbnM6IEFycmF5PFBvTmF2YmFySWNvbkFjdGlvbj4gPSBbXTtcbiAgcHJpdmF0ZSBfaXRlbXM6IEFycmF5PFBvTmF2YmFySXRlbT4gPSBbXTtcbiAgcHJpdmF0ZSBfbGl0ZXJhbHM6IFBvTmF2YmFyTGl0ZXJhbHM7XG4gIHByaXZhdGUgX2xvZ286IHN0cmluZztcbiAgcHJpdmF0ZSBfc2hhZG93OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIHVtYSBsaXN0YSBkZSBhw6fDtWVzIGFwcmVzZW50YWRhcyBlbSDDrWNvbmVzIG5vIGxhZG8gZGlyZWl0byBkbyBgcG8tbmF2YmFyYC5cbiAgICovXG4gIEBJbnB1dCgncC1pY29uLWFjdGlvbnMnKSBzZXQgaWNvbkFjdGlvbnModmFsdWU6IEFycmF5PFBvTmF2YmFySWNvbkFjdGlvbj4pIHtcbiAgICB0aGlzLl9pY29uQWN0aW9ucyA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbXTtcbiAgfVxuXG4gIGdldCBpY29uQWN0aW9ucygpOiBBcnJheTxQb05hdmJhckljb25BY3Rpb24+IHtcbiAgICByZXR1cm4gdGhpcy5faWNvbkFjdGlvbnM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgdW1hIGxpc3RhIGRlIGl0ZW1zIGRvIGBwby1uYXZiYXJgLlxuICAgKi9cbiAgQElucHV0KCdwLWl0ZW1zJykgc2V0IGl0ZW1zKHZhbHVlOiBBcnJheTxQb05hdmJhckl0ZW0+KSB7XG4gICAgdGhpcy5faXRlbXMgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW107XG4gIH1cblxuICBnZXQgaXRlbXMoKTogQXJyYXk8UG9OYXZiYXJJdGVtPiB7XG4gICAgcmV0dXJuIHRoaXMuX2l0ZW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogT2JqZXRvIGNvbSBhIGxpdGVyYWwgdXNhZGEgbmEgcHJvcHJpZWRhZGUgYHAtbGl0ZXJhbHNgLlxuICAgKlxuICAgKiBQYXJhIGN1c3RvbWl6YXIgYSBsaXRlcmFsLCBiYXN0YSBkZWNsYXJhciB1bSBvYmpldG8gZG8gdGlwbyBgUG9OYXZiYXJMaXRlcmFsc2AgY29uZm9ybWUgZXhlbXBsbyBhYmFpeG86XG4gICAqXG4gICAqIGBgYFxuICAgKiAgY29uc3QgY3VzdG9tTGl0ZXJhbHM6IFBvTmF2YmFyTGl0ZXJhbHMgPSB7XG4gICAqICAgIG5hdmJhckxpbmtzOiAnSXRlbnMgZGUgbmF2ZWdhw6fDo28nXG4gICAqICB9O1xuICAgKiBgYGBcbiAgICpcbiAgICogRSBwYXJhIGNhcnJlZ2FyIGFzIGxpdGVyYWlzIGN1c3RvbWl6YWRhcywgYmFzdGEgYXBlbmFzIHBhc3NhciBvIG9iamV0byBwYXJhIG8gY29tcG9uZW50ZS5cbiAgICpcbiAgICogYGBgXG4gICAqIDxwby1uYXZiYXJcbiAgICogICBbcC1saXRlcmFsc109XCJjdXN0b21MaXRlcmFsc1wiPlxuICAgKiA8L3BvLW5hdmJhcj5cbiAgICogYGBgXG4gICAqXG4gICAqICA+IE8gb2JqZXRvIHBhZHLDo28gZGUgbGl0ZXJhaXMgc2Vyw6EgdHJhZHV6aWRvIGRlIGFjb3JkbyBjb20gbyBpZGlvbWEgZG8gKmJyb3dzZXIqIChwdCwgZW4sIGVzKS5cbiAgICovXG4gIEBJbnB1dCgncC1saXRlcmFscycpIHNldCBsaXRlcmFscyh2YWx1ZTogUG9OYXZiYXJMaXRlcmFscykge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE9iamVjdCAmJiAhKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICB0aGlzLl9saXRlcmFscyA9IHtcbiAgICAgICAgLi4ucG9OYXZiYXJMaXRlcmFsc0RlZmF1bHRbcG9Mb2NhbGVEZWZhdWx0XSxcbiAgICAgICAgLi4ucG9OYXZiYXJMaXRlcmFsc0RlZmF1bHRbYnJvd3Nlckxhbmd1YWdlKCldLFxuICAgICAgICAuLi52YWx1ZVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fbGl0ZXJhbHMgPSBwb05hdmJhckxpdGVyYWxzRGVmYXVsdFticm93c2VyTGFuZ3VhZ2UoKV07XG4gICAgfVxuICB9XG4gIGdldCBsaXRlcmFscygpIHtcbiAgICByZXR1cm4gdGhpcy5fbGl0ZXJhbHMgfHwgcG9OYXZiYXJMaXRlcmFsc0RlZmF1bHRbYnJvd3Nlckxhbmd1YWdlKCldO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIGEgbG9nbyBhcHJlc2VudGFkYSBgcG8tbmF2YmFyYC5cbiAgICovXG4gIEBJbnB1dCgncC1sb2dvJykgc2V0IGxvZ28odmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX2xvZ28gPSB2YWx1ZTtcblxuICAgIGlmICh0aGlzLm1lbnUpIHtcbiAgICAgIHRoaXMudmFsaWRhdGVNZW51TG9nbygpO1xuICAgIH1cbiAgfVxuICBnZXQgbG9nbygpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9nbztcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENhc28gasOhIHBvc3N1YSB1bSBtZW51IG5hIGFwbGljYcOnw6NvIG8gbWVzbW8gZGV2ZSBzZXIgcmVwYXNzYWRvIHBhcmEgZXNzYSBwcm9wcmllZGFkZSBwYXJhIHF1ZSBxdWFuZG8gZW50cmUgZW0gbW9kb1xuICAgKiByZXNwb25zaXZvIG9zIGl0ZW1zIGRvIGBwby1uYXZiYXJgIHBvc3NhbSBzZXIgYWRpY2lvbmFkb3Mgbm8gcHJpbWVpcm8gaXRlbSBkbyBtZW51IGRlZmluaWRvLlxuICAgKlxuICAgKiA+IEFvIHV0aWxpemFyIG1lbnUgZSBuYXZiYXIgY29tIGxvZ28gbWFudMOpbSBhcGVuYXMgYSBsb2dvIGRvIG5hdmJhci5cbiAgICpcbiAgICogRXhlbXBsbzpcbiAgICpcbiAgICogYGBgXG4gICAqIDxwby1uYXZiYXJcbiAgICogIFtwLWl0ZW1zXT1cIml0ZW1zXCJcbiAgICogIFtwLWljb24tYWN0aW9uc109XCJpY29uQWN0aW9uc1wiXG4gICAqICBbcC1tZW51XT1cInVzZXJNZW51XCI+XG4gICAqIDwvcG8tbmF2YmFyPlxuICAgKiA8ZGl2IGNsYXNzPVwicG8td3JhcHBlclwiPlxuICAgKiAgPHBvLW1lbnUgI3VzZXJNZW51XG4gICAqICAgW3AtbWVudXNdPVwiW3sgbGFiZWw6ICdJdGVtIDEnLCBsaW5rOiAnLycgfV1cIj5cbiAgICogIDwvcG8tbWVudT5cbiAgICogPC9kaXY+XG4gICAqIGBgYFxuICAgKi9cbiAgQElucHV0KCdwLW1lbnUnKSBtZW51PzogUG9NZW51Q29tcG9uZW50O1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEFwbGljYSB1bWEgc29tYnJhIG5hIHBhcnRlIGluZmVyaW9yIGRvIGBwby1uYXZiYXJgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Atc2hhZG93Jykgc2V0IHNoYWRvdyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3NoYWRvdyA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IHNoYWRvdygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fc2hhZG93O1xuICB9XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IHZhbGlkYXRlTWVudUxvZ28oKTogdm9pZDtcbn1cbiJdfQ==