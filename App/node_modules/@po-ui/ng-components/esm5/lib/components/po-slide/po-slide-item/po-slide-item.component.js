import { __decorate, __metadata } from "tslib";
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { isIEOrEdge } from '../../../utils/util';
import { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para cada item do po-slide.
 */
var PoSlideItemComponent = /** @class */ (function () {
    function PoSlideItemComponent() {
        this.isIEOrEdge = isIEOrEdge();
    }
    PoSlideItemComponent.prototype.setLinkType = function () {
        if (!this.template && this.link) {
            return this.link.startsWith('http') ? 'externalLink' : 'internalLink';
        }
        return 'noLink';
    };
    __decorate([
        ViewChild('slideItem', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoSlideItemComponent.prototype, "itemElement", void 0);
    __decorate([
        Input('p-action'),
        __metadata("design:type", Function)
    ], PoSlideItemComponent.prototype, "action", void 0);
    __decorate([
        Input('p-alt'),
        __metadata("design:type", String)
    ], PoSlideItemComponent.prototype, "alt", void 0);
    __decorate([
        Input('p-data'),
        __metadata("design:type", Array)
    ], PoSlideItemComponent.prototype, "data", void 0);
    __decorate([
        Input('p-image'),
        __metadata("design:type", String)
    ], PoSlideItemComponent.prototype, "image", void 0);
    __decorate([
        Input('p-image-height'),
        __metadata("design:type", Number)
    ], PoSlideItemComponent.prototype, "imageHeight", void 0);
    __decorate([
        Input('p-template'),
        __metadata("design:type", PoSlideContentTemplateDirective)
    ], PoSlideItemComponent.prototype, "template", void 0);
    __decorate([
        Input('p-link'),
        __metadata("design:type", String)
    ], PoSlideItemComponent.prototype, "link", void 0);
    PoSlideItemComponent = __decorate([
        Component({
            selector: 'po-slide-item',
            template: "<div\n  #slideItem\n  class=\"po-slide-item\"\n  [class.po-slide-item-background-image]=\"!template && isIEOrEdge\"\n  [style.background-image]=\"!template && isIEOrEdge ? 'url(' + image + ')' : ''\"\n  [ngSwitch]=\"setLinkType()\"\n>\n  <!-- slide com link interno -->\n  <a *ngSwitchCase=\"'internalLink'\" class=\"po-slide-item-link\" [routerLink]=\"link\">\n    <ng-container [ngTemplateOutlet]=\"slideItemImage\" [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image } }\">\n    </ng-container>\n  </a>\n  <!-- slide com link externo -->\n  <a *ngSwitchCase=\"'externalLink'\" class=\"po-slide-item-link\" [href]=\"link\">\n    <ng-container [ngTemplateOutlet]=\"slideItemImage\" [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image } }\">\n    </ng-container>\n  </a>\n  <!-- slide sem link -->\n  <a\n    *ngSwitchCase=\"'noLink'\"\n    [ngClass]=\"action ? 'po-slide-item-link' : 'po-slide-item-no-link'\"\n    (click)=\"action ? action(data) : undefined\"\n  >\n    <ng-container\n      [ngTemplateOutlet]=\"template ? slideItemTemplate : slideItemImage\"\n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image, data: data } }\"\n    >\n    </ng-container>\n  </a>\n</div>\n\n<ng-template #slideItemTemplate let-item=\"item\" ; let-index=\"index\">\n  <div *ngIf=\"template\" class=\"po-slide-item-content\">\n    <ng-template\n      [ngTemplateOutlet]=\"template.templateRef\"\n      [ngTemplateOutletContext]=\"{ $implicit: item.data, index: index }\"\n    >\n    </ng-template>\n  </div>\n</ng-template>\n\n<ng-template #slideItemImage let-item=\"item\">\n  <img\n    *ngIf=\"item.image && !isIEOrEdge\"\n    class=\"po-slide-image\"\n    [alt]=\"item.alt\"\n    [src]=\"item.image\"\n    [style.height.px]=\"imageHeight\"\n  />\n</ng-template>\n"
        })
    ], PoSlideItemComponent);
    return PoSlideItemComponent;
}());
export { PoSlideItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXNsaWRlL3BvLXNsaWRlLWl0ZW0vcG8tc2xpZGUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBRXBHOzs7Ozs7R0FNRztBQUtIO0lBQUE7UUFHRSxlQUFVLEdBQVEsVUFBVSxFQUFFLENBQUM7SUE4QmpDLENBQUM7SUFQQywwQ0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztTQUN2RTtRQUVELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUEvQnlDO1FBQXpDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQWMsVUFBVTs2REFBQztJQUsvQztRQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDO2tDQUFTLFFBQVE7d0RBQUM7SUFHcEI7UUFBZixLQUFLLENBQUMsT0FBTyxDQUFDOztxREFBYTtJQUdYO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7a0NBQU8sS0FBSztzREFBTTtJQUdoQjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzt1REFBZTtJQUdQO1FBQXhCLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQzs7NkRBQXFCO0lBR3hCO1FBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7a0NBQVcsK0JBQStCOzBEQUFDO0lBRzlDO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O3NEQUFjO0lBeEJuQixvQkFBb0I7UUFKaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsc3dEQUE2QztTQUM5QyxDQUFDO09BQ1csb0JBQW9CLENBaUNoQztJQUFELDJCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0FqQ1ksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzSUVPckVkZ2UgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvcG8tc2xpZGUtY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBjYWRhIGl0ZW0gZG8gcG8tc2xpZGUuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXNsaWRlLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tc2xpZGUtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9TbGlkZUl0ZW1Db21wb25lbnQge1xuICBAVmlld0NoaWxkKCdzbGlkZUl0ZW0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBpdGVtRWxlbWVudDogRWxlbWVudFJlZjtcblxuICBpc0lFT3JFZGdlOiBhbnkgPSBpc0lFT3JFZGdlKCk7XG5cbiAgLyoqIEHDp8OjbyBleGVjdXRhZGEgYW8gY2xpY2FyIGVtIHVtYSBpbWFnZW0gKi9cbiAgQElucHV0KCdwLWFjdGlvbicpIGFjdGlvbjogRnVuY3Rpb247XG5cbiAgLyoqIFRleHRvIGFsdGVybmF0aXZvIHF1YW5kbyBhIGltYWdlbSBuw6NvIMOpIGVuY29udHJhZGEgKi9cbiAgQElucHV0KCdwLWFsdCcpIGFsdDogc3RyaW5nO1xuXG4gIC8qKiBEYWRvcyBwYXJhIG8gdGVtcGxhdGUgY3VzdG9taXphZG8gKi9cbiAgQElucHV0KCdwLWRhdGEnKSBkYXRhOiBBcnJheTxhbnk+O1xuXG4gIC8qKiBDYW1pbmhvIGRhIGltYWdlbSAqL1xuICBASW5wdXQoJ3AtaW1hZ2UnKSBpbWFnZTogc3RyaW5nO1xuXG4gIC8qKiBBbHR1cmEgZGEgaW1hZ2VtICovXG4gIEBJbnB1dCgncC1pbWFnZS1oZWlnaHQnKSBpbWFnZUhlaWdodDogbnVtYmVyO1xuXG4gIC8qKiBUZW1wbGF0ZSBjdXN0b21pemFkbyAqL1xuICBASW5wdXQoJ3AtdGVtcGxhdGUnKSB0ZW1wbGF0ZTogUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZTtcblxuICAvKiogTGluayBleGVjdXRhZG8gYW8gY2xpY2FyIGVtIHVtYSBpbWFnZW0gKi9cbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBzdHJpbmc7XG5cbiAgc2V0TGlua1R5cGUoKSB7XG4gICAgaWYgKCF0aGlzLnRlbXBsYXRlICYmIHRoaXMubGluaykge1xuICAgICAgcmV0dXJuIHRoaXMubGluay5zdGFydHNXaXRoKCdodHRwJykgPyAnZXh0ZXJuYWxMaW5rJyA6ICdpbnRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnbm9MaW5rJztcbiAgfVxufVxuIl19