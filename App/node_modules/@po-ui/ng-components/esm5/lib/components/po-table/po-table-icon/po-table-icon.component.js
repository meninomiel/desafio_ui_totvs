import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir um ícone na tabela.
 */
var PoTableIconComponent = /** @class */ (function () {
    function PoTableIconComponent() {
        /** Output click. */
        this.click = new EventEmitter();
    }
    Object.defineProperty(PoTableIconComponent.prototype, "allowTooltip", {
        get: function () {
            return !this.disabled && this.iconTooltip;
        },
        enumerable: true,
        configurable: true
    });
    PoTableIconComponent.prototype.onClick = function (event) {
        if (this.clickable) {
            this.click.emit(event);
        }
    };
    PoTableIconComponent.prototype.tooltipMouseEnter = function () {
        if (this.allowTooltip) {
            this.tooltip = this.iconTooltip;
        }
    };
    PoTableIconComponent.prototype.tooltipMouseLeave = function () {
        this.tooltip = undefined;
    };
    __decorate([
        Input('p-clickable'),
        __metadata("design:type", Boolean)
    ], PoTableIconComponent.prototype, "clickable", void 0);
    __decorate([
        Input('p-color'),
        __metadata("design:type", String)
    ], PoTableIconComponent.prototype, "color", void 0);
    __decorate([
        Input('p-disabled'),
        __metadata("design:type", Boolean)
    ], PoTableIconComponent.prototype, "disabled", void 0);
    __decorate([
        Input('p-icon'),
        __metadata("design:type", String)
    ], PoTableIconComponent.prototype, "icon", void 0);
    __decorate([
        Input('p-icon-tooltip'),
        __metadata("design:type", String)
    ], PoTableIconComponent.prototype, "iconTooltip", void 0);
    __decorate([
        Output('p-click'),
        __metadata("design:type", EventEmitter)
    ], PoTableIconComponent.prototype, "click", void 0);
    PoTableIconComponent = __decorate([
        Component({
            selector: 'po-table-icon',
            template: "<span\n  class=\"po-icon {{ icon }} {{ disabled ? '' : color }}\"\n  [ngClass]=\"{ 'po-clickable': clickable, 'po-table-icon-disabled': disabled }\"\n  [p-tooltip]=\"tooltip\"\n  (click)=\"onClick($event)\"\n  (mouseenter)=\"tooltipMouseEnter()\"\n  (mouseleave)=\"tooltipMouseLeave()\"\n>\n</span>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], PoTableIconComponent);
    return PoTableIconComponent;
}());
export { PoTableIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWljb24vcG8tdGFibGUtaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEc7Ozs7OztHQU1HO0FBTUg7SUFBQTtRQWtCRSxvQkFBb0I7UUFDRCxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFxQm5FLENBQUM7SUFuQkMsc0JBQVksOENBQVk7YUFBeEI7WUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzVDLENBQUM7OztPQUFBO0lBRUQsc0NBQU8sR0FBUCxVQUFRLEtBQUs7UUFDWCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDeEI7SUFDSCxDQUFDO0lBRUQsZ0RBQWlCLEdBQWpCO1FBQ0UsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUNqQztJQUNILENBQUM7SUFFRCxnREFBaUIsR0FBakI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztJQUMzQixDQUFDO0lBbkNxQjtRQUFyQixLQUFLLENBQUMsYUFBYSxDQUFDOzsyREFBb0I7SUFHdkI7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7dURBQWU7SUFHWDtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzswREFBbUI7SUFHdEI7UUFBaEIsS0FBSyxDQUFDLFFBQVEsQ0FBQzs7c0RBQWM7SUFHTDtRQUF4QixLQUFLLENBQUMsZ0JBQWdCLENBQUM7OzZEQUFxQjtJQUcxQjtRQUFsQixNQUFNLENBQUMsU0FBUyxDQUFDO2tDQUFRLFlBQVk7dURBQTJCO0lBbkJ0RCxvQkFBb0I7UUFMaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsd1RBQTZDO1lBQzdDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1NBQ2hELENBQUM7T0FDVyxvQkFBb0IsQ0F3Q2hDO0lBQUQsMkJBQUM7Q0FBQSxBQXhDRCxJQXdDQztTQXhDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgZXhpYmlyIHVtIMOtY29uZSBuYSB0YWJlbGEuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtaWNvbi5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVJY29uQ29tcG9uZW50IHtcbiAgdG9vbHRpcDogc3RyaW5nO1xuXG4gIC8qKiBEZWZpbmUgc2UgbyDDrWNvbmUgw6kgY2xpY8OhdmVsLiAqL1xuICBASW5wdXQoJ3AtY2xpY2thYmxlJykgY2xpY2thYmxlOiBib29sZWFuO1xuXG4gIC8qKiBDb3IgZG8gw61jb25lLiAqL1xuICBASW5wdXQoJ3AtY29sb3InKSBjb2xvcjogc3RyaW5nO1xuXG4gIC8qKiBEZXNhYmlsaXRhZG8uICovXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xuXG4gIC8qKiBDbGFzc2UgY3NzIGRvIMOtY29uZS4gKi9cbiAgQElucHV0KCdwLWljb24nKSBpY29uOiBzdHJpbmc7XG5cbiAgLyoqIFRleHRvIGRvIHRvb2x0aXAuICovXG4gIEBJbnB1dCgncC1pY29uLXRvb2x0aXAnKSBpY29uVG9vbHRpcDogc3RyaW5nO1xuXG4gIC8qKiBPdXRwdXQgY2xpY2suICovXG4gIEBPdXRwdXQoJ3AtY2xpY2snKSBjbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJpdmF0ZSBnZXQgYWxsb3dUb29sdGlwKCkge1xuICAgIHJldHVybiAhdGhpcy5kaXNhYmxlZCAmJiB0aGlzLmljb25Ub29sdGlwO1xuICB9XG5cbiAgb25DbGljayhldmVudCkge1xuICAgIGlmICh0aGlzLmNsaWNrYWJsZSkge1xuICAgICAgdGhpcy5jbGljay5lbWl0KGV2ZW50KTtcbiAgICB9XG4gIH1cblxuICB0b29sdGlwTW91c2VFbnRlcigpIHtcbiAgICBpZiAodGhpcy5hbGxvd1Rvb2x0aXApIHtcbiAgICAgIHRoaXMudG9vbHRpcCA9IHRoaXMuaWNvblRvb2x0aXA7XG4gICAgfVxuICB9XG5cbiAgdG9vbHRpcE1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy50b29sdGlwID0gdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=