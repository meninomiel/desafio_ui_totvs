import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { capitalizeFirstLetter, isTypeof } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por apresentar o detalhe de cada linha da tabela.
 */
var PoTableDetailComponent = /** @class */ (function () {
    function PoTableDetailComponent(decimalPipe) {
        this.decimalPipe = decimalPipe;
        /**
         * Define se a tabela possui a opção de `selectable` habilitada.
         */
        this.isSelectable = false;
        /**
         * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
         */
        this.selectRow = new EventEmitter();
    }
    Object.defineProperty(PoTableDetailComponent.prototype, "detail", {
        get: function () {
            return this._detail;
        },
        /**
         * Configuração da linha de detalhes.
         */
        set: function (value) {
            this._detail = this.returnPoTableDetailObject(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "detailColumns", {
        get: function () {
            var _a;
            return ((_a = this.detail) === null || _a === void 0 ? void 0 : _a.columns) || [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderInline", {
        get: function () {
            return (this.detail && !this.detail['typeHeader']) || this.detail['typeHeader'] === 'inline';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderTop", {
        get: function () {
            return this.detail && this.detail['typeHeader'] === 'top';
        },
        enumerable: true,
        configurable: true
    });
    PoTableDetailComponent.prototype.formatNumberDetail = function (value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    };
    PoTableDetailComponent.prototype.getColumnTitleLabel = function (detail) {
        return detail.label || capitalizeFirstLetter(detail.property);
    };
    PoTableDetailComponent.prototype.onSelectRow = function (item) {
        item.$selected = !item.$selected;
        this.selectRow.emit(item);
    };
    PoTableDetailComponent.prototype.returnPoTableDetailObject = function (value) {
        if (value && isTypeof(value, 'object')) {
            if (value.columns) {
                value.columns.forEach(function (column) { return (column.property = column.property || column.column); });
            }
            if (Array.isArray(value)) {
                return { columns: value };
            }
            if (value.columns) {
                return value;
            }
        }
    };
    PoTableDetailComponent.ctorParameters = function () { return [
        { type: DecimalPipe }
    ]; };
    __decorate([
        Input('p-detail'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoTableDetailComponent.prototype, "detail", null);
    __decorate([
        Input('p-items'),
        __metadata("design:type", Array)
    ], PoTableDetailComponent.prototype, "items", void 0);
    __decorate([
        Input('p-selectable'),
        __metadata("design:type", Boolean)
    ], PoTableDetailComponent.prototype, "isSelectable", void 0);
    __decorate([
        Output('p-select-row'),
        __metadata("design:type", EventEmitter)
    ], PoTableDetailComponent.prototype, "selectRow", void 0);
    PoTableDetailComponent = __decorate([
        Component({
            selector: 'po-table-detail',
            template: "<table class=\"po-table-master-detail\">\n  <thead *ngIf=\"typeHeaderTop\">\n    <tr>\n      <th class=\"po-table-header po-table-column-selectable\" *ngIf=\"isSelectable\"></th>\n      <th class=\"po-table-header po-table-header-column po-table-header-master-detail\"></th>\n      <th class=\"po-table-header po-table-header-ellipsis\" *ngFor=\"let detail of detail.columns\">\n        {{ getColumnTitleLabel(detail) }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr\n      class=\"po-table-detail-row\"\n      [class.po-table-row-active]=\"item.$selected && isSelectable\"\n      *ngFor=\"let item of items\"\n    >\n      <ng-container *ngIf=\"isSelectable; else masterDetailSpace\">\n        <td class=\"po-table-column-master-detail-space-checkbox\"></td>\n        <td class=\"po-table-column po-table-column-selectable\">\n          <input class=\"po-table-checkbox\" type=\"checkbox\" [class.po-table-checkbox-checked]=\"item.$selected\" />\n          <label class=\"po-table-checkbox-label po-clickable\" (click)=\"onSelectRow(item)\"> </label>\n        </td>\n      </ng-container>\n\n      <ng-template #masterDetailSpace>\n        <td class=\"po-table-column-master-detail-space\"></td>\n      </ng-template>\n\n      <td\n        class=\"po-table-column-master-detail po-table-master-detail-label\"\n        (click)=\"isSelectable ? onSelectRow(item) : 'javascript:;'\"\n        *ngFor=\"let detail of detailColumns\"\n      >\n        <strong *ngIf=\"typeHeaderInline\"> {{ getColumnTitleLabel(detail) }}: </strong>\n\n        <ng-container [ngSwitch]=\"detail.type\">\n          <span *ngSwitchCase=\"'currency'\">{{ item[detail.property] | currency: detail.format:'symbol':'1.2-2' }}</span>\n          <span *ngSwitchCase=\"'date'\">{{ item[detail.property] | date: detail.format || 'dd/MM/yyyy' }}</span>\n          <span *ngSwitchCase=\"'time'\">{{ item[detail.property] | po_time: detail.format || 'HH:mm:ss.ffffff' }}</span>\n          <span *ngSwitchCase=\"'dateTime'\">\n            {{ item[detail.property] | date: detail.format || 'dd/MM/yyyy HH:mm:ss' }}\n          </span>\n          <span *ngSwitchCase=\"'number'\">{{ formatNumberDetail(item[detail.property], detail.format) }}</span>\n          <span *ngSwitchDefault>{{ item[detail.property] }}</span>\n        </ng-container>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
        }),
        __metadata("design:paramtypes", [DecimalPipe])
    ], PoTableDetailComponent);
    return PoTableDetailComponent;
}());
export { PoTableDetailComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtZGV0YWlsL3BvLXRhYmxlLWRldGFpbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUt0RTs7Ozs7O0dBTUc7QUFLSDtJQTZCRSxnQ0FBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFWNUM7O1dBRUc7UUFDb0IsaUJBQVksR0FBYSxLQUFLLENBQUM7UUFFdEQ7O1dBRUc7UUFDcUIsY0FBUyxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRWpDLENBQUM7SUF2QjdCLHNCQUFJLDBDQUFNO2FBSTdCO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3RCLENBQUM7UUFURDs7V0FFRzthQUNnQixVQUFXLEtBQW9CO1lBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZELENBQUM7OztPQUFBO0lBdUJELHNCQUFJLGlEQUFhO2FBQWpCOztZQUNFLE9BQU8sT0FBQSxJQUFJLENBQUMsTUFBTSwwQ0FBRSxPQUFPLEtBQUksRUFBRSxDQUFDO1FBQ3BDLENBQUM7OztPQUFBO0lBRUQsc0JBQUksb0RBQWdCO2FBQXBCO1lBQ0UsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxRQUFRLENBQUM7UUFDL0YsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxpREFBYTthQUFqQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQztRQUM1RCxDQUFDOzs7T0FBQTtJQUVELG1EQUFrQixHQUFsQixVQUFtQixLQUFVLEVBQUUsTUFBYztRQUMzQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxvREFBbUIsR0FBbkIsVUFBb0IsTUFBMkI7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxJQUFJLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRUQsNENBQVcsR0FBWCxVQUFZLElBQUk7UUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU8sMERBQXlCLEdBQWpDLFVBQWtDLEtBQVU7UUFDMUMsSUFBSSxLQUFLLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRTtZQUN0QyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0JBQ2pCLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFwRCxDQUFvRCxDQUFDLENBQUM7YUFDdkY7WUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3hCLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDM0I7WUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0JBQ2pCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7U0FDRjtJQUNILENBQUM7O2dCQTdDZ0MsV0FBVzs7SUF2QnpCO1FBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7Ozt3REFFakI7SUFTaUI7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQztrQ0FBUSxLQUFLO3lEQUFNO0lBS2I7UUFBdEIsS0FBSyxDQUFDLGNBQWMsQ0FBQzs7Z0VBQWdDO0lBSzlCO1FBQXZCLE1BQU0sQ0FBQyxjQUFjLENBQUM7a0NBQWEsWUFBWTs2REFBZ0M7SUEzQnJFLHNCQUFzQjtRQUpsQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLHMwRUFBK0M7U0FDaEQsQ0FBQzt5Q0E4QmlDLFdBQVc7T0E3QmpDLHNCQUFzQixDQTJFbEM7SUFBRCw2QkFBQztDQUFBLEFBM0VELElBMkVDO1NBM0VZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZWNpbWFsUGlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IGNhcGl0YWxpemVGaXJzdExldHRlciwgaXNUeXBlb2YgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9UYWJsZURldGFpbCB9IGZyb20gJy4vcG8tdGFibGUtZGV0YWlsLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1RhYmxlRGV0YWlsQ29sdW1uIH0gZnJvbSAnLi9wby10YWJsZS1kZXRhaWwtY29sdW1uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIGFwcmVzZW50YXIgbyBkZXRhbGhlIGRlIGNhZGEgbGluaGEgZGEgdGFiZWxhLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1kZXRhaWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RhYmxlRGV0YWlsQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfZGV0YWlsOiBQb1RhYmxlRGV0YWlsO1xuXG4gIC8qKlxuICAgKiBDb25maWd1cmHDp8OjbyBkYSBsaW5oYSBkZSBkZXRhbGhlcy5cbiAgICovXG4gIEBJbnB1dCgncC1kZXRhaWwnKSBzZXQgZGV0YWlsKHZhbHVlOiBQb1RhYmxlRGV0YWlsKSB7XG4gICAgdGhpcy5fZGV0YWlsID0gdGhpcy5yZXR1cm5Qb1RhYmxlRGV0YWlsT2JqZWN0KHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkZXRhaWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RldGFpbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBMaXN0YSBkZSBpdGVucyBkbyBfZGV0YWlsXyBkYSB0YWJlbGEuXG4gICAqL1xuICBASW5wdXQoJ3AtaXRlbXMnKSBpdGVtczogQXJyYXk8YW55PjtcblxuICAvKipcbiAgICogRGVmaW5lIHNlIGEgdGFiZWxhIHBvc3N1aSBhIG9ww6fDo28gZGUgYHNlbGVjdGFibGVgIGhhYmlsaXRhZGEuXG4gICAqL1xuICBASW5wdXQoJ3Atc2VsZWN0YWJsZScpIGlzU2VsZWN0YWJsZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQcOnw6NvIGV4ZWN1dGFkYSBhbyBzZWxlY2lvbmFyIG91IGRlc21hcmNhciBhIHNlbGXDp8OjbyBkZSB1bWEgbGluaGEgZGUgZGV0YWxoZSBkbyBgcG8tdGFibGVgLlxuICAgKi9cbiAgQE91dHB1dCgncC1zZWxlY3Qtcm93Jykgc2VsZWN0Um93PzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRlY2ltYWxQaXBlOiBEZWNpbWFsUGlwZSkge31cblxuICBnZXQgZGV0YWlsQ29sdW1ucygpOiBBcnJheTxQb1RhYmxlRGV0YWlsQ29sdW1uPiB7XG4gICAgcmV0dXJuIHRoaXMuZGV0YWlsPy5jb2x1bW5zIHx8IFtdO1xuICB9XG5cbiAgZ2V0IHR5cGVIZWFkZXJJbmxpbmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICh0aGlzLmRldGFpbCAmJiAhdGhpcy5kZXRhaWxbJ3R5cGVIZWFkZXInXSkgfHwgdGhpcy5kZXRhaWxbJ3R5cGVIZWFkZXInXSA9PT0gJ2lubGluZSc7XG4gIH1cblxuICBnZXQgdHlwZUhlYWRlclRvcCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5kZXRhaWwgJiYgdGhpcy5kZXRhaWxbJ3R5cGVIZWFkZXInXSA9PT0gJ3RvcCc7XG4gIH1cblxuICBmb3JtYXROdW1iZXJEZXRhaWwodmFsdWU6IGFueSwgZm9ybWF0OiBzdHJpbmcpIHtcbiAgICBpZiAoIWZvcm1hdCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmRlY2ltYWxQaXBlLnRyYW5zZm9ybSh2YWx1ZSwgZm9ybWF0KTtcbiAgfVxuXG4gIGdldENvbHVtblRpdGxlTGFiZWwoZGV0YWlsOiBQb1RhYmxlRGV0YWlsQ29sdW1uKSB7XG4gICAgcmV0dXJuIGRldGFpbC5sYWJlbCB8fCBjYXBpdGFsaXplRmlyc3RMZXR0ZXIoZGV0YWlsLnByb3BlcnR5KTtcbiAgfVxuXG4gIG9uU2VsZWN0Um93KGl0ZW0pIHtcbiAgICBpdGVtLiRzZWxlY3RlZCA9ICFpdGVtLiRzZWxlY3RlZDtcbiAgICB0aGlzLnNlbGVjdFJvdy5lbWl0KGl0ZW0pO1xuICB9XG5cbiAgcHJpdmF0ZSByZXR1cm5Qb1RhYmxlRGV0YWlsT2JqZWN0KHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgJiYgaXNUeXBlb2YodmFsdWUsICdvYmplY3QnKSkge1xuICAgICAgaWYgKHZhbHVlLmNvbHVtbnMpIHtcbiAgICAgICAgdmFsdWUuY29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiAoY29sdW1uLnByb3BlcnR5ID0gY29sdW1uLnByb3BlcnR5IHx8IGNvbHVtbi5jb2x1bW4pKTtcbiAgICAgIH1cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB7IGNvbHVtbnM6IHZhbHVlIH07XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWx1ZS5jb2x1bW5zKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==