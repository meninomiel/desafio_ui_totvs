//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"po-table-column.interface.js","sourceRoot":"ng://@po-ui/ng-components/","sources":["lib/components/po-table/interfaces/po-table-column.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { PoTableBoolean } from './po-table-boolean.interface';\nimport { PoTableColumnIcon } from '../po-table-column-icon/po-table-column-icon.interface';\nimport { PoTableColumnLabel } from '../po-table-column-label/po-table-column-label.interface';\nimport { PoTableDetail } from '../po-table-detail/po-table-detail.interface';\nimport { PoTableSubtitleColumn } from '../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @usedBy PoTableComponent\n *\n * @description\n *\n * Interface para configuração das colunas do `po-table`.\n *\n * As definições das colunas serão aplicadas linha a linha.\n */\nexport interface PoTableColumn {\n  /**\n   * Define uma ação na coluna quando o tipo da coluna for `link` ou `icon`.\n   *\n   * > Quando for do tipo `link` será enviado como primeiro parâmetro o valor da coluna\n   * e no segundo parâmetro o objeto completo da linha. Caso tenha sido definido uma ação e um link na coluna, a ação\n   * será executada ao invés do link.\n   *\n   * > Quando for do tipo `icon` enviará o objeto completo da linha e o segundo parâmetro será a definição da coluna.\n   */\n  action?: Function;\n\n  /**\n   * Define um objeto do tipo `PoTableBoolean` para as colunas do tipo _boolean_. Por exemplo:\n   *\n   * ```\n   *  { property: 'approbation', type: 'boolean', boolean: {\n   *    trueLabel: 'Accepted', falseLabel: 'Rejected'\n   *  }}\n   * ```\n   *\n   * > Caso não seja definido um objeto para colunas do tipo *boolean*,\n   * esta exibirá por padrão `Sim` e `Não` de acordo com os valores _booleanos_.\n   */\n  boolean?: PoTableBoolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a cor que será aplicada no conteúdo da coluna.\n   *\n   * Valores válidos:\n   * - <span class=\"dot po-color-01\"></span> `color-01`\n   * - <span class=\"dot po-color-02\"></span> `color-02`\n   * - <span class=\"dot po-color-03\"></span> `color-03`\n   * - <span class=\"dot po-color-04\"></span> `color-04`\n   * - <span class=\"dot po-color-05\"></span> `color-05`\n   * - <span class=\"dot po-color-06\"></span> `color-06`\n   * - <span class=\"dot po-color-07\"></span> `color-07`\n   * - <span class=\"dot po-color-08\"></span> `color-08`\n   * - <span class=\"dot po-color-09\"></span> `color-09`\n   * - <span class=\"dot po-color-10\"></span> `color-10`\n   * - <span class=\"dot po-color-11\"></span> `color-11`\n   * - <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * > Existe a possibilidade de informar uma função que retorne um dos valores aceitos, serão passados\n   * por parâmetro a linha e a coluna atual, por exemplo:\n   *\n   * ```\n   * (row, column) => { row[column] == 'text' ? 'color-03' : 'color-09' }\n   * ```\n   *\n   * > É possível também usá-la na coluna do tipo `icons` para alteração das cores de seu conteúdo conforme exemplo abaixo,\n   * contudo, desta forma sobrepõe a cor especificada em cada objeto caso haja:\n   *\n   * ```\n   * { property: 'columnIcon', label: 'Like', type: 'icon', color: 'color-08', icons: [\n   *   { value: 'po-icon-star', action: () => this.notification() }\n   * ]},\n   * ```\n   */\n  color?: string | Function;\n\n  /**\n   * Define um objeto que segue a interface `PoTableDetail`, para as colunas de detalhes. Por exemplo:\n   *\n   * ```\n   * { columns: [{ property: 'package', label: 'Pacote' }], typeHeader: 'top' }\n   * ```\n   *\n   */\n  detail?: PoTableDetail;\n\n  /**\n   * Função que deve retornar um booleano para habilitar ou desabilitar o *link* e sua ação.\n   *\n   * > Propriedade disponível nas colunas do tipo `link`.\n   */\n  disabled?: Function;\n\n  /**\n   * Formato de exibição do valor da coluna:\n   * - Formato para moeda (currency). Exemplos: 'BRL', 'USD'.\n   * - Formato para data (date): aceita apenas os caracteres de dia(dd), mês(MM ou mm) e ano (yyyy ou yy),\n   * caso não seja informado um formato o mesmo será 'dd/MM/yyyy'. Exemplos: 'dd/MM/yyyy', 'dd-MM-yy', 'mm/dd/yyyy'.\n   * - Formato para horário (time): aceita apenas os caracteres de hora(HH), minutos(mm), segundos(ss) e\n   *  milisegundos(f-ffffff), os milisegundos são opcionais, caso não seja informado um formato o mesmo será\n   * 'HH:mm:ss'. Exemplos: 'HH:mm', 'HH:mm:ss.ffffff', 'HH:mm:ss.ff', 'mm:ss.fff'.\n   * - Formato para números (number): aceita um valor seguindo o padrão [**DecimalPipe**](https://angular.io/api/common/DecimalPipe)\n   *  para formatação, e caso não seja informado, o número será exibido na sua forma original. Exemplo:\n   *\n   *  +  Com o valor de entrada: `50` e a valor para formatação: `'1.2-5'` o resultado será: `50.00`\n   */\n  format?: string;\n\n  /**\n   * @description\n   *\n   * Define um *array* de objetos para colunas de ícones que irá sobrepor os valores como `action` e `color`\n   * definidos na coluna, à partir do *value* da [`PoTableColumnIcon`](documentation/po-table#tableColumnIcon), por exemplo:\n   *\n   * ```\n   *  { property: 'columnIcon', label: 'Icons', type: 'icon', action: this.favorite.bind(this), icons: [\n   *    { value: 'delete', icon: 'po-icon-plus', color: 'color-06', action: this.add.bind(this), tooltip: 'Adiciona um novo item' },\n   *    { value: 'edit', icon: 'po-icon-edit', action: this.edit.bind(this) },\n   *    { value: 'delete', icon: 'po-icon-delete', color: 'color-12', action: this.remove.bind(this) }\n   *  ]},\n   * ```\n   *\n   * ```\n   *  ...\n   *  { id: 1, columnIcon: ['po-icon-edit', 'po-icon-remove', 'po-icon-star'] }\n   *  ...\n   *\n   * ```\n   */\n  icons?: Array<PoTableColumnIcon>;\n\n  /**\n   * Texto para título da coluna.\n   *\n   * Caso não seja informado, será utilizado como *label* o valor da propriedade *property* com a primeira letra em maiúsculo.\n   */\n  label?: string;\n\n  /**\n   * Define um array de objetos para as colunas de label, onde 'labels' é uma lista de objetos\n   * do tipo `PoTableColumnLabel` na qual devem ser definidas os labels. Por exemplo:\n   *\n   * ```\n   * { property: 'flightStatus', label: 'Status', type: 'label', width:'100px', labels: [\n   *  { value: 'confirmed', color: 'color-11', label: 'Confirmado', tooltip: 'Flight Status' },\n   *  { value: 'delayed', color: 'color-08', label: 'Atrasado', tooltip: 'Flight Status' }\n   * }\n   * ```\n   *\n   */\n  labels?: Array<PoTableColumnLabel>;\n\n  /**\n   * Define o nome da propriedade que conterá o `link` a ser redirecionado.\n   *\n   * @default link\n   */\n  link?: string;\n\n  /** Nome identificador da coluna. */\n  property?: string;\n\n  /**\n   * Define um array de objetos para as colunas de legenda. Onde, `subtitles` é uma lista de objetos do tipo PoTableSubtitle na qual\n   * devem ser definidas as opções de legenda. Por exemplo:\n   *\n   * ```\n   * { property: 'flightStatus', label: 'Status', color: 'subtitle', width:'100px', subtitles: [\n   *  { value: 'confirmed', color: 'color-11', label: 'Confirmado', content: '1' },\n   *  { value: 'delayed', color: 'color-08', label: 'Atrasado', content: '2' }\n   * }\n   * ```\n   * Nesse exemplo a coluna escolhida para legenda é 'flightStatus', se o valor dessa coluna for 'confirmed', o texto da legenda será\n   * 'Confirmado'.\n   *\n   */\n  subtitles?: Array<PoTableSubtitleColumn>;\n\n  /**\n   * Define um texto de ajuda que será exibido ao passar o *mouse* sobre um texto.\n   *\n   * > O tooltip só será visível se for uma coluna do tipo *link*.\n   *\n   * > Caso a propriedade `p-hide-text-overflow` esteja habilitada e o conteúdo da célula exceder a largura da coluna,\n   * é ignorado o valor atribuído ao *tooltip* e será exibido justamente o conteúdo da célula.\n   */\n  tooltip?: string;\n\n  /**\n   * Tipo da coluna.\n   *\n   * Valores válidos:\n   * - `boolean`: Exibirá por padrão `Sim` e `Não` de acordo com os valores *booleanos*.\n   * > Caso necessite exibir valores diferentes do padrão, deve-se utilizar a propriedade `boolean` desta interface.\n   * - `currency`: valores monetários.\n   *\n   * - `date`: valor de datas.\n   *  + Aceita os tipos _string_ e _Date_ padrão do Javascript,\n   *  por exemplo: `'2017-11-28'` ou `new Date(2017, 10, 28)`.\n   *\n   * - `dateTime`: valor de data com horário.\n   *  + Aceita o tipo _string_ no formato **ISO-8601** extendido **'yyyy-mm-ddThh:mm:ss+|-hh:mm'**\n   * e o tipo _Date_ padrão do Javascript, por exemplo: `'2017-11-28T00:00:00-02:00'` ou `new Date(2017, 10, 28)`.\n   *\n   * - `detail`: array de objetos para o master-detail.\n   * - `icon`: *array* de *string* ou objetos para a coluna de ícones.\n   * - `label`: texto com destaque.\n   * - `link`: habilita link na coluna para ação ou navegação.\n   * - `number`: valores numéricos.\n   * - `string`: textos.\n   * - `subtitle`: array de objetos para a coluna de legenda.\n   *\n   * - `time`: valor de horário.\n   *  + Aceita o tipo _string_ nos formatos **'HH:mm:ss'** ou **'HH:mm:ss.ffffff'**, por exemplo: `'23:12:45'`.\n   *\n   * @default `string`\n   */\n  type?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Controla a exibição da coluna. Caso seja definido um valor falso, a coluna não será exibida mas mas será possível torná-la\n   * visível através do **gerenciador de colunas**.\n   *\n   * > A disponibilidade de visualização pode limitar-se de acordo com a definição de `p-max-columns`.\n   *\n   * @default `true`\n   */\n  visible?: boolean;\n\n  /**\n   * A largura da coluna pode ser informada em pixels ou porcentagem.\n   * > Exemplo: '100px' ou '20%'.\n   */\n  width?: string;\n}\n"]}