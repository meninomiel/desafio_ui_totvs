//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"po-dynamic-form-field.interface.js","sourceRoot":"ng://@po-ui/ng-components/","sources":["lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-field.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { PoLookupColumn } from '../../po-field/po-lookup/interfaces/po-lookup-column.interface';\nimport { PoMultiselectOption } from '../../po-field/po-multiselect/po-multiselect-option.interface';\nimport { PoSelectOption } from '../../po-field/po-select/po-select-option.interface';\n\nimport { PoDynamicField } from '../po-dynamic-field.interface';\n\n/**\n * @usedBy PoDynamicFormComponent, PoAdvancedFilterComponent, PoPageDynamicSearchComponent\n *\n * @docsExtends PoDynamicField\n *\n * @description\n *\n * Interface para definição das propriedades dos campos de entrada que serão criados dinamicamente.\n */\nexport interface PoDynamicFormField extends PoDynamicField {\n  /**\n   * Define as colunas para utilização da busca avançada. Usada somente em conjunto com a propriedade `searchService`,\n   * essa propriedade deve receber um array de objetos que implementam a interface [`PoLookupColumn`](/documentation/po-lookup).\n   *\n   * > Caso sejam informadas colunas, deve-se obrigatoriamente conter colunas definidas como *label* e *value* para valores\n   * de tela e do model respectivamente.\n   */\n  columns?: Array<PoLookupColumn>;\n\n  /** Define a obrigatoriedade do campo. */\n  required?: boolean;\n\n  /**\n   * Define se a indicação de campo opcional será exibida.\n   *\n   * > A indicação não será exibida, se:\n   * - O campo for `required`, ou;\n   * - Não possuir `help` e `label`.\n   */\n  optional?: boolean;\n\n  /** Lista de opções que serão exibidos em um componente, podendo selecionar uma opção. */\n  options?: Array<string> | Array<PoSelectOption> | Array<PoMultiselectOption>;\n\n  /**\n   * Permite que o usuário faça múltipla seleção dentro da lista de opções.\n   *\n   * > Caso utilizar a propriedade `optionsService` esta propriedade será ignorada.\n   */\n  optionsMulti?: boolean;\n\n  /** Serviço que será utilizado para buscar os itens e preencher a lista de opções dinamicamente. */\n  optionsService?: string;\n\n  /**\n   * Serviço que será utilizado para realizar a busca avançada. Pode ser utilizado em conjunto com a propriedade `columns`.\n   *\n   * **Importante:**\n   * > Caso utilizar a propriedade `optionsService` esta propriedade será ignorada.\n   * > Para que funcione corretamente, é importante que o serviço siga o\n   * [guia de API do PO UI](https://po-ui.io/guides/api).\n   */\n  searchService?: string;\n\n  /** Máscara para o campo. */\n  mask?: string;\n\n  /** Regex para validação do campo. */\n  pattern?: string;\n\n  /** Tamanho mínimo de caracteres. */\n  minLength?: number;\n\n  /** Tamanho máximo de caracteres. */\n  maxLength?: number;\n\n  /** Desabilita o campo caso informar o valor *true*. */\n  disabled?: boolean;\n\n  /** Texto de ajuda. */\n  help?: string;\n\n  /** Texto exibido quando o valor do componente for *true*. */\n  booleanTrue?: string;\n\n  /** Texto exibido quando o valor do componente for *false*. */\n  booleanFalse?: string;\n\n  /** Valor máximo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*. */\n  maxValue?: string | number;\n\n  /** Valor mínimo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*. */\n  minValue?: string | number;\n\n  /** Quantidade de linhas exibidas no `po-textarea`. */\n  rows?: number;\n\n  /** Esconde a informação estilo *password*, pode ser utilizado quando o tipo de dado for *string*. */\n  secret?: boolean;\n\n  /**\n   * Função ou serviço para validar as **mudanças do campo**.\n   *\n   * * A propriedade aceita os seguintes tipos:\n   * - **String**: Endpoint usado pelo componente para requisição via `POST`.\n   * - **Function**: Método que será executado.\n   *\n   * Ao ser executado, irá receber como parâmetro um objeto com o nome da propriedade\n   * alterada e o novo valor, conforme a interface `PoDynamicFormFieldChanged`:\n   *\n   * ```\n   * { property: 'property name', value: 'new value' }\n   * ```\n   *\n   * O retorno desta função deve ser do tipo [PoDynamicFormFieldValidation](documentation/po-dynamic-form#po-dynamic-form-field-validation),\n   * onde o usuário poderá determinar as novas propriedades do campo.\n   * Por exemplo:\n   *\n   * ```\n   * onChangeField(changeValue): PoDynamicFormFieldValidation {\n   *\n   * if (changeValue.property === 'birthday' && !this.validate('birthday')) {\n   *   return {\n   *     value: '',\n   *     field: { property: 'birthday', required: true },\n   *     focus: true\n   *   };\n   * }\n   * ```\n   *\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ```\n   * { property: 'state', gridColumns: 6, validate: this.myFunction.bind(this) }\n   * ```\n   */\n  validate?: string | Function;\n\n  /**\n   * Objeto que será enviado como parâmetro nas requisições de busca usados pelos componentes `po-lookup` e\n   * `po-combo`.\n   *\n   * Por exemplo, para o parâmetro `{ age: 23 }` a URL da requisição ficaria:\n   *\n   * ```\n   * url + ?age=23&filter=Peter\n   * ```\n   */\n  params?: any;\n\n  /**\n   * Mensagem que será apresentada quando o campo ficar inválido.\n   *\n   * O campo fica inválido quando as seguintes propriedades não forem respeitadas:\n   *  - pattern;\n   *  - minValue;\n   *  - maxValue;\n   *\n   * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  errorMessage?: string;\n\n  /**\n   * Formato de exibição da data.\n   *\n   * Valores válidos:\n   *\n   * - dd/mm/yyyy\n   * - mm/dd/yyyy\n   * - yyyy/mm/dd\n   *\n   * > Esta propriedade pode ser utilizada quando o `type` for *PoDynamicFieldType.Date* ou *PoDynamicFieldType.DateTime*.\n   */\n  format?: string;\n}\n"]}