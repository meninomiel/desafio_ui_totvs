import { __decorate, __extends, __metadata } from "tslib";
import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { Location } from '@angular/common';
import { NavigationEnd, Router } from '@angular/router';
import { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';
import { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';
import { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';
/**
 * @docsExtends PoMenuPanelBaseComponent
 *
 * @description
 *
 * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de
 *  sua aplicação:
 *
 * ````
 * import { RouterModule, Routes } from '@angular/router';
 *
 * ...
 *
 * @NgModule({
 *   imports: [
 *     RouterModule,
 *     Routes,
 *     ...
 *     PoModule,
 *     ...
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 *
 * Além disso é necessário criar um módulo configurando as rotas da aplicação.
 *
 * ```
 * import { NgModule } from '@angular/core';
 *
 * import { RouterModule, Routes } from '@angular/router';
 *
 * import { HelloWorldComponent } from './hello-world/hello-world.component';
 *
 * const routes: Routes = [
 *   {path: 'hello-world', component: HelloWorldComponent}
 * ];
 *
 * @NgModule({
 *   imports: [RouterModule.forRoot(routes, {useHash: true})],
 *   exports: [RouterModule]
 * })
 * export class AppRoutingModule {}
 * ```
 *
 * @example
 *
 * <example name="po-menu-panel-basic" title="PO Menu Panel Basic">
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html"> </file>
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-labs" title="PO Menu Panel Labs">
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html"> </file>
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-customer" title="PO Menu Panel - Customers">
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html"> </file>
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts"> </file>
 * </example>
 */
var PoMenuPanelComponent = /** @class */ (function (_super) {
    __extends(PoMenuPanelComponent, _super);
    function PoMenuPanelComponent(viewRef, location, menuItemsService, router) {
        var _this = _super.call(this) || this;
        _this.location = location;
        _this.menuItemsService = menuItemsService;
        _this.router = router;
        _this.parentRef = viewRef['_hostView'][8];
        return _this;
    }
    PoMenuPanelComponent.prototype.ngOnDestroy = function () {
        this.itemSubscription.unsubscribe();
        this.routeSubscription.unsubscribe();
    };
    PoMenuPanelComponent.prototype.ngOnInit = function () {
        this.subscribeToMenuItem();
        this.subscribeToRoute();
    };
    PoMenuPanelComponent.prototype.activateMenuByUrl = function (urlPath, menus) {
        var _this = this;
        if (menus) {
            return menus.some(function (menu) {
                if (getFormattedLink(menu.link) === urlPath) {
                    _this.activateMenuItem(menu);
                    return true;
                }
            });
        }
    };
    PoMenuPanelComponent.prototype.activateMenuItem = function (menu) {
        this.activeMenuItem = menu;
        this.linkActive = getFormattedLink(menu.link);
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });
    };
    PoMenuPanelComponent.prototype.checkActiveMenuByUrl = function (urlPath) {
        if (!this.linkActive || this.linkActive !== urlPath) {
            this.activateMenuByUrl(urlPath, this.menus);
        }
    };
    PoMenuPanelComponent.prototype.clickMenuItem = function (menu) {
        if (menu.action) {
            callFunction(menu.action, this.parentRef, menu);
        }
        if (menu.type === 'externalLink') {
            openExternalLink(menu.link);
        }
        else if (menu.type === 'internalLink') {
            this.activateMenuItem(menu);
        }
    };
    PoMenuPanelComponent.prototype.subscribeToRoute = function () {
        var _this = this;
        this.routeSubscription = this.router.events.subscribe(function (rounterEvent) {
            if (rounterEvent instanceof NavigationEnd) {
                _this.checkActiveMenuByUrl(_this.location.path());
            }
        });
    };
    PoMenuPanelComponent.prototype.subscribeToMenuItem = function () {
        var _this = this;
        this.itemSubscription = this.menuItemsService
            .receiveFromChildMenuClicked()
            .subscribe(function (menu) { return _this.clickMenuItem(menu); });
    };
    PoMenuPanelComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Location },
        { type: PoMenuPanelItemsService },
        { type: Router }
    ]; };
    PoMenuPanelComponent = __decorate([
        Component({
            selector: 'po-menu-panel',
            template: "<div class=\"po-menu-panel\">\n  <div class=\"po-menu-panel-logo-container\">\n    <a href=\"./\">\n      <div class=\"po-menu-panel-logo\"></div>\n    </a>\n  </div>\n\n  <nav class=\"po-menu-panel-container\">\n    <div class=\"po-menu-panel-inner\">\n      <div *ngFor=\"let menu of menus; let menuIndex = index\" class=\"po-menu-panel-item-wrapper\">\n        <po-menu-panel-item [class.po-menu-panel-item-first]=\"menuIndex === 0\" [p-menu-item-internal]=\"menu\">\n        </po-menu-panel-item>\n      </div>\n    </div>\n  </nav>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ViewContainerRef,
            Location,
            PoMenuPanelItemsService,
            Router])
    ], PoMenuPanelComponent);
    return PoMenuPanelComponent;
}(PoMenuPanelBaseComponent));
export { PoMenuPanelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLW1lbnUtcGFuZWwvcG8tbWVudS1wYW5lbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUl4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFcEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFakY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtFRztBQU1IO0lBQTBDLHdDQUF3QjtJQVFoRSw4QkFDRSxPQUF5QixFQUNqQixRQUFrQixFQUNsQixnQkFBeUMsRUFDekMsTUFBYztRQUp4QixZQU1FLGlCQUFPLFNBRVI7UUFOUyxjQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLHNCQUFnQixHQUFoQixnQkFBZ0IsQ0FBeUI7UUFDekMsWUFBTSxHQUFOLE1BQU0sQ0FBUTtRQUd0QixLQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7SUFDM0MsQ0FBQztJQUVELDBDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUM7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QUM7Q0FBQSxBQTVFRCxDQUEwQyx3QkFBd0IsR0E0RWpFO1NBNUVZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2F0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5hdmlnYXRpb25FbmQsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBjYWxsRnVuY3Rpb24sIGdldEZvcm1hdHRlZExpbmssIG9wZW5FeHRlcm5hbExpbmsgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9NZW51UGFuZWxCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1tZW51LXBhbmVsLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbSB9IGZyb20gJy4vcG8tbWVudS1wYW5lbC1pdGVtL3BvLW1lbnUtcGFuZWwtaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbXNTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9wby1tZW51LXBhbmVsLWl0ZW1zLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb01lbnVQYW5lbEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBQYXJhIG8gbWVudSBmdW5jaW9uYXIgY29ycmV0YW1lbnRlIMOpIG5lY2Vzc8OhcmlvIGltcG9ydGFyIG8gYFJvdXRlck1vZHVsZWAgZSBgUm91dGVzYCBkbyBtw7NkdWxvIHByaW5jaXBhbCBkZVxuICogIHN1YSBhcGxpY2HDp8OjbzpcbiAqXG4gKiBgYGBgXG4gKiBpbXBvcnQgeyBSb3V0ZXJNb2R1bGUsIFJvdXRlcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG4gKlxuICogLi4uXG4gKlxuICogQE5nTW9kdWxlKHtcbiAqICAgaW1wb3J0czogW1xuICogICAgIFJvdXRlck1vZHVsZSxcbiAqICAgICBSb3V0ZXMsXG4gKiAgICAgLi4uXG4gKiAgICAgUG9Nb2R1bGUsXG4gKiAgICAgLi4uXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudFxuICogICBdLFxuICogICBwcm92aWRlcnM6IFtdLFxuICogICBib290c3RyYXA6IFtBcHBDb21wb25lbnRdXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIEFwcE1vZHVsZSB7IH1cbiAqIGBgYFxuICpcbiAqIEFsw6ltIGRpc3NvIMOpIG5lY2Vzc8OhcmlvIGNyaWFyIHVtIG3Ds2R1bG8gY29uZmlndXJhbmRvIGFzIHJvdGFzIGRhIGFwbGljYcOnw6NvLlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAqXG4gKiBpbXBvcnQgeyBSb3V0ZXJNb2R1bGUsIFJvdXRlcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG4gKlxuICogaW1wb3J0IHsgSGVsbG9Xb3JsZENvbXBvbmVudCB9IGZyb20gJy4vaGVsbG8td29ybGQvaGVsbG8td29ybGQuY29tcG9uZW50JztcbiAqXG4gKiBjb25zdCByb3V0ZXM6IFJvdXRlcyA9IFtcbiAqICAge3BhdGg6ICdoZWxsby13b3JsZCcsIGNvbXBvbmVudDogSGVsbG9Xb3JsZENvbXBvbmVudH1cbiAqIF07XG4gKlxuICogQE5nTW9kdWxlKHtcbiAqICAgaW1wb3J0czogW1JvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcywge3VzZUhhc2g6IHRydWV9KV0sXG4gKiAgIGV4cG9ydHM6IFtSb3V0ZXJNb2R1bGVdXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIEFwcFJvdXRpbmdNb2R1bGUge31cbiAqIGBgYFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW1lbnUtcGFuZWwtYmFzaWNcIiB0aXRsZT1cIlBPIE1lbnUgUGFuZWwgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tZW51LXBhbmVsLWJhc2ljL3NhbXBsZS1wby1tZW51LXBhbmVsLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tZW51LXBhbmVsLWJhc2ljL3NhbXBsZS1wby1tZW51LXBhbmVsLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW1lbnUtcGFuZWwtbGFic1wiIHRpdGxlPVwiUE8gTWVudSBQYW5lbCBMYWJzXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbWVudS1wYW5lbC1sYWJzL3NhbXBsZS1wby1tZW51LXBhbmVsLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW1lbnUtcGFuZWwtbGFicy9zYW1wbGUtcG8tbWVudS1wYW5lbC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW1lbnUtcGFuZWwtY3VzdG9tZXJcIiB0aXRsZT1cIlBPIE1lbnUgUGFuZWwgLSBDdXN0b21lcnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tZW51LXBhbmVsLWN1c3RvbWVyL3NhbXBsZS1wby1tZW51LXBhbmVsLWN1c3RvbWVyLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tZW51LXBhbmVsLWN1c3RvbWVyL3NhbXBsZS1wby1tZW51LXBhbmVsLWN1c3RvbWVyLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbWVudS1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1tZW51LXBhbmVsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb01lbnVQYW5lbENvbXBvbmVudCBleHRlbmRzIFBvTWVudVBhbmVsQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcbiAgYWN0aXZlTWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbTtcbiAgbGlua0FjdGl2ZTogc3RyaW5nO1xuICBwYXJlbnRSZWY6IGFueTtcblxuICBwcml2YXRlIHJvdXRlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHByaXZhdGUgaXRlbVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHZpZXdSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBsb2NhdGlvbjogTG9jYXRpb24sXG4gICAgcHJpdmF0ZSBtZW51SXRlbXNTZXJ2aWNlOiBQb01lbnVQYW5lbEl0ZW1zU2VydmljZSxcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyXG4gICkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5wYXJlbnRSZWYgPSB2aWV3UmVmWydfaG9zdFZpZXcnXVs4XTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaXRlbVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIHRoaXMucm91dGVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc3Vic2NyaWJlVG9NZW51SXRlbSgpO1xuICAgIHRoaXMuc3Vic2NyaWJlVG9Sb3V0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhY3RpdmF0ZU1lbnVCeVVybCh1cmxQYXRoOiBzdHJpbmcsIG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgaWYgKG1lbnVzKSB7XG4gICAgICByZXR1cm4gbWVudXMuc29tZShtZW51ID0+IHtcbiAgICAgICAgaWYgKGdldEZvcm1hdHRlZExpbmsobWVudS5saW5rKSA9PT0gdXJsUGF0aCkge1xuICAgICAgICAgIHRoaXMuYWN0aXZhdGVNZW51SXRlbShtZW51KTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhY3RpdmF0ZU1lbnVJdGVtKG1lbnU6IFBvTWVudVBhbmVsSXRlbSk6IHZvaWQge1xuICAgIHRoaXMuYWN0aXZlTWVudUl0ZW0gPSBtZW51O1xuICAgIHRoaXMubGlua0FjdGl2ZSA9IGdldEZvcm1hdHRlZExpbmsobWVudS5saW5rKTtcbiAgICB0aGlzLm1lbnVJdGVtc1NlcnZpY2Uuc2VuZFRvQ2hpbGRNZW51Q2xpY2tlZCh7IGFjdGl2ZTogdGhpcy5hY3RpdmVNZW51SXRlbSwgYWN0aXZhdGVkQnlSb3V0ZTogdHJ1ZSB9KTtcbiAgfVxuXG4gIHByaXZhdGUgY2hlY2tBY3RpdmVNZW51QnlVcmwodXJsUGF0aDogc3RyaW5nKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmxpbmtBY3RpdmUgfHwgdGhpcy5saW5rQWN0aXZlICE9PSB1cmxQYXRoKSB7XG4gICAgICB0aGlzLmFjdGl2YXRlTWVudUJ5VXJsKHVybFBhdGgsIHRoaXMubWVudXMpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY2xpY2tNZW51SXRlbShtZW51OiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCkge1xuICAgIGlmIChtZW51LmFjdGlvbikge1xuICAgICAgY2FsbEZ1bmN0aW9uKG1lbnUuYWN0aW9uLCB0aGlzLnBhcmVudFJlZiwgbWVudSk7XG4gICAgfVxuXG4gICAgaWYgKG1lbnUudHlwZSA9PT0gJ2V4dGVybmFsTGluaycpIHtcbiAgICAgIG9wZW5FeHRlcm5hbExpbmsobWVudS5saW5rKTtcbiAgICB9IGVsc2UgaWYgKG1lbnUudHlwZSA9PT0gJ2ludGVybmFsTGluaycpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVNZW51SXRlbShtZW51KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZVRvUm91dGUoKSB7XG4gICAgdGhpcy5yb3V0ZVN1YnNjcmlwdGlvbiA9IHRoaXMucm91dGVyLmV2ZW50cy5zdWJzY3JpYmUocm91bnRlckV2ZW50ID0+IHtcbiAgICAgIGlmIChyb3VudGVyRXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kKSB7XG4gICAgICAgIHRoaXMuY2hlY2tBY3RpdmVNZW51QnlVcmwodGhpcy5sb2NhdGlvbi5wYXRoKCkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBzdWJzY3JpYmVUb01lbnVJdGVtKCkge1xuICAgIHRoaXMuaXRlbVN1YnNjcmlwdGlvbiA9IHRoaXMubWVudUl0ZW1zU2VydmljZVxuICAgICAgLnJlY2VpdmVGcm9tQ2hpbGRNZW51Q2xpY2tlZCgpXG4gICAgICAuc3Vic2NyaWJlKChtZW51OiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCkgPT4gdGhpcy5jbGlja01lbnVJdGVtKG1lbnUpKTtcbiAgfVxufVxuIl19