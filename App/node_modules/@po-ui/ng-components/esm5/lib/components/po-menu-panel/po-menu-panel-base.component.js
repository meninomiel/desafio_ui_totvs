import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { isExternalLink } from '../../utils/util';
/**
 * @description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
var PoMenuPanelBaseComponent = /** @class */ (function () {
    function PoMenuPanelBaseComponent() {
    }
    Object.defineProperty(PoMenuPanelBaseComponent.prototype, "menus", {
        get: function () {
            return this._menus;
        },
        /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
        set: function (menus) {
            this._menus = Array.isArray(menus) ? menus : [];
            this.setMenuExtraProperties(this._menus);
            this.validateMenus(this._menus);
        },
        enumerable: true,
        configurable: true
    });
    PoMenuPanelBaseComponent.prototype.setMenuExtraProperties = function (menus) {
        var _this = this;
        menus.forEach(function (menuItem) { return _this.setMenuItemProperties(menuItem); });
    };
    PoMenuPanelBaseComponent.prototype.setMenuItemProperties = function (menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    };
    PoMenuPanelBaseComponent.prototype.setMenuType = function (menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    };
    PoMenuPanelBaseComponent.prototype.validateMenu = function (menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    };
    PoMenuPanelBaseComponent.prototype.validateMenus = function (menus) {
        var _this = this;
        menus.forEach(function (menu) { return _this.validateMenu(menu); });
    };
    __decorate([
        Input('p-menus'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoMenuPanelBaseComponent.prototype, "menus", null);
    PoMenuPanelBaseComponent = __decorate([
        Directive()
    ], PoMenuPanelBaseComponent);
    return PoMenuPanelBaseComponent;
}());
export { PoMenuPanelBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLbEQ7Ozs7Ozs7O0dBUUc7QUFFSDtJQUFBO0lBaURBLENBQUM7SUE3Q21CLHNCQUFJLDJDQUFLO2FBTzNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFWRCw0SEFBNEg7YUFDMUcsVUFBVSxLQUE2QjtZQUN2RCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBRWhELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7SUFNTyx5REFBc0IsR0FBOUIsVUFBK0IsS0FBNkI7UUFBNUQsaUJBRUM7UUFEQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsS0FBSSxDQUFDLHFCQUFxQixDQUEwQixRQUFRLENBQUMsRUFBN0QsQ0FBNkQsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFTyx3REFBcUIsR0FBN0IsVUFBOEIsUUFBaUM7UUFDN0QsUUFBUSxDQUFDLEVBQUUsR0FBRyxRQUFRLENBQUMsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU8sOENBQVcsR0FBbkIsVUFBb0IsUUFBeUI7UUFDM0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDbEIsT0FBTyxRQUFRLENBQUM7U0FDakI7UUFFRCxJQUFJLGNBQWMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakMsT0FBTyxjQUFjLENBQUM7U0FDdkI7UUFFRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRU8sK0NBQVksR0FBcEIsVUFBcUIsUUFBeUI7UUFDNUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzREFBc0QsQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztJQUVPLGdEQUFhLEdBQXJCLFVBQXNCLEtBQUs7UUFBM0IsaUJBRUM7UUFEQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBdkIsQ0FBdUIsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUE1Q2lCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7a0NBQWtCLEtBQUs7eUNBQUwsS0FBSzt5REFLdkM7SUFUVSx3QkFBd0I7UUFEcEMsU0FBUyxFQUFFO09BQ0Msd0JBQXdCLENBaURwQztJQUFELCtCQUFDO0NBQUEsQUFqREQsSUFpREM7U0FqRFksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyB2NCBhcyB1dWlkIH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyBpc0V4dGVybmFsTGluayB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb01lbnVQYW5lbEl0ZW0gfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbUludGVybmFsIH0gZnJvbSAnLi9wby1tZW51LXBhbmVsLWl0ZW0vcG8tbWVudS1wYW5lbC1pdGVtLWludGVybmFsLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0ZSDDqSB1bSBjb21wb25lbnRlIGRlIG1lbnUgbGF0ZXJhbCBjb21wb3N0byBhcGVuYXMgcG9yIMOtY29uZXMgZSBjb20gdW0gbsOtdmVsLCB1dGlsaXphZG8gcGFyYSBuYXZlZ2HDp8Ojb1xuICogZW0gcMOhZ2luYXMgaW50ZXJuYXMsIGV4dGVybmFzIGRhIGFwbGljYcOnw6NvIG91IGFjaW9uYSB1bWEgYcOnw6NvLlxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tbWVudS1wYW5lbGAgcmVjZWJlIHVtYSBsaXN0YSBkZSBvYmpldG9zIGRvIHRpcG8gYE1lbnVQYW5lbEl0ZW1gIGNvbSBhcyBpbmZvcm1hw6fDtWVzIGRvc1xuICogaXRlbnMgZGUgbWVudSBjb21vIHRleHRvcywgbGlua3MgcGFyYSByZWRpcmVjaW9uYW1lbnRvLCBhw6fDtWVzIGUgw61jb25lcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9NZW51UGFuZWxCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfbWVudXM7XG5cbiAgLyoqIExpc3RhIGRvcyBpdGVucyBkbyBgcG8tbWVudS1wYW5lbGAuIFNlIG8gdmFsb3IgZXN0aXZlciBpbmRlZmluaWRvIG91IGludsOhbGlkbywgc2Vyw6EgaW5pY2lhbGl6YWRvIGNvbW8gdW0gYXJyYXkgdmF6aW8uICovXG4gIEBJbnB1dCgncC1tZW51cycpIHNldCBtZW51cyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xuICAgIHRoaXMuX21lbnVzID0gQXJyYXkuaXNBcnJheShtZW51cykgPyBtZW51cyA6IFtdO1xuXG4gICAgdGhpcy5zZXRNZW51RXh0cmFQcm9wZXJ0aWVzKHRoaXMuX21lbnVzKTtcbiAgICB0aGlzLnZhbGlkYXRlTWVudXModGhpcy5fbWVudXMpO1xuICB9XG5cbiAgZ2V0IG1lbnVzKCkge1xuICAgIHJldHVybiB0aGlzLl9tZW51cztcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudUV4dHJhUHJvcGVydGllcyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xuICAgIG1lbnVzLmZvckVhY2gobWVudUl0ZW0gPT4gdGhpcy5zZXRNZW51SXRlbVByb3BlcnRpZXMoPFBvTWVudVBhbmVsSXRlbUludGVybmFsPm1lbnVJdGVtKSk7XG4gIH1cblxuICBwcml2YXRlIHNldE1lbnVJdGVtUHJvcGVydGllcyhtZW51SXRlbTogUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwpIHtcbiAgICBtZW51SXRlbS5pZCA9IG1lbnVJdGVtLmlkIHx8IHV1aWQoKTtcbiAgICBtZW51SXRlbS50eXBlID0gdGhpcy5zZXRNZW51VHlwZShtZW51SXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHNldE1lbnVUeXBlKG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW0pOiBzdHJpbmcge1xuICAgIGlmICghbWVudUl0ZW0ubGluaykge1xuICAgICAgcmV0dXJuICdub0xpbmsnO1xuICAgIH1cblxuICAgIGlmIChpc0V4dGVybmFsTGluayhtZW51SXRlbS5saW5rKSkge1xuICAgICAgcmV0dXJuICdleHRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnaW50ZXJuYWxMaW5rJztcbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVNZW51KG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW0pIHtcbiAgICBpZiAoIW1lbnVJdGVtLmxhYmVsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gUG9NZW51UGFuZWxJdGVtLmxhYmVsIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XG4gICAgfVxuXG4gICAgaWYgKCFtZW51SXRlbS5pY29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gUG9NZW51UGFuZWxJdGVtLmljb24gbsOjbyBwb2RlIHNlciB2YXppby4nKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlTWVudXMobWVudXMpOiB2b2lkIHtcbiAgICBtZW51cy5mb3JFYWNoKG1lbnUgPT4gdGhpcy52YWxpZGF0ZU1lbnUobWVudSkpO1xuICB9XG59XG4iXX0=