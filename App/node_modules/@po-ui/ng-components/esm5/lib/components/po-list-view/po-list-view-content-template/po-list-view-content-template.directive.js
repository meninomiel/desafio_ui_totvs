import { __decorate, __metadata } from "tslib";
import { Directive, Input, TemplateRef } from '@angular/core';
/**
 * @usedBy PoListViewComponent
 *
 * @description
 *
 * Esta diretiva permite que sejam apresentadas informações essenciais de cada item.
 *
 * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.
 *  - Item: `item` determina o item da linha corrente.
 *  - Índice: `index` determina o índice da linha corrente.
 *
 * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-list-view
 *   p-property-title="name"
 *   [p-items]="[{id: 1, name: "Register", email: register@po-ui.com}]">
 *
 *   <ng-template p-list-view-content-template let-item let-code="index">
 *     <div class="po-row">
 *       <po-info class="po-md-6" p-label="Code" [p-value]="code"></po-info>
 *       <po-info class="po-md-6" p-label="Email" [p-value]="item.email"></po-info>
 *     </div>
 *   </ng-template>
 *
 * </po-list-view>
 *
 * ...
 * ```
 *
 * ```
 * ...
 * <po-list-view
 *    p-property-title="name"
 *    [p-items]="[{id: 1, name: "Register", email: register@po-ui.com}]">
 *
 *    <div *p-list-view-content-template="let item, let i=index" class="po-row">
 *      <po-info class="po-md-12" p-label="Email" [p-value]="item.email"></po-info>
 *    </div>
 * </po-list-view>
 * ...
 *
 * ```
 *
 * A diretiva **p-list-view-content-template**, possibilita também alterar o título dos itens. Para isto,
 * é necessário atribuir a referência da função que faz a alteração, à propriedade `p-title`,
 * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:
 *
 * ```
 * ...
 * @Component({
 *    selector: 'app-root',
 *    template: `
 *      ...
 *      <po-list-view
 *        [p-items]="items">
 *        <ng-template p-list-view-content-template let-item [p-title]="customTitle">
 *          <div class="po-row">
 *            <po-info class="po-md-12" p-label="Customer" [p-value]="item.customer"></po-info>
 *          </div>
 *        </ng-template>
 *      ...
 *    `
 * })
 * export class AppComponent {
 *    public items = [{
 *      code: 1200,
 *      product: 'Rice',
 *      customer: 'Supermarket 1',
 *    }, {
 *      code: 1355,
 *      product: 'Bean',
 *      customer: 'Supermarket 2'
 *    }];
 *
 *    customTitle(item) {
 *      return `${item.code} - ${item.product}`;
 *    }
 * }
 * ```
 */
var PoListViewContentTemplateDirective = /** @class */ (function () {
    // Necessário manter templateRef para o funcionamento do row template.
    function PoListViewContentTemplateDirective(templateRef) {
        this.templateRef = templateRef;
    }
    PoListViewContentTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    __decorate([
        Input('p-title'),
        __metadata("design:type", Function)
    ], PoListViewContentTemplateDirective.prototype, "title", void 0);
    PoListViewContentTemplateDirective = __decorate([
        Directive({
            selector: '[p-list-view-content-template]'
        }),
        __metadata("design:paramtypes", [TemplateRef])
    ], PoListViewContentTemplateDirective);
    return PoListViewContentTemplateDirective;
}());
export { PoListViewContentTemplateDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1saXN0LXZpZXcvcG8tbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGUvcG8tbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWlGRztBQUlIO0lBWUUsc0VBQXNFO0lBQ3RFLDRDQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7SUFBRyxDQUFDOztnQkFBcEIsV0FBVzs7SUFIekI7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7cUVBQXlCO0lBVi9CLGtDQUFrQztRQUg5QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZ0NBQWdDO1NBQzNDLENBQUM7eUNBY2dDLFdBQVc7T0FiaEMsa0NBQWtDLENBYzlDO0lBQUQseUNBQUM7Q0FBQSxBQWRELElBY0M7U0FkWSxrQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEB1c2VkQnkgUG9MaXN0Vmlld0NvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGEgZGlyZXRpdmEgcGVybWl0ZSBxdWUgc2VqYW0gYXByZXNlbnRhZGFzIGluZm9ybWHDp8O1ZXMgZXNzZW5jaWFpcyBkZSBjYWRhIGl0ZW0uXG4gKlxuICogRGV2ZS1zZSB1dGlsaXphciBjb21vIHBhcsOibWV0cm8gYSByZWZlcsOqbmNpYSBkbyBpdGVtIGUvb3Ugw61uZGljZSwgc2VuZG8gcG9yIHBhZHLDo28gbyBpdGVtLlxuICogIC0gSXRlbTogYGl0ZW1gIGRldGVybWluYSBvIGl0ZW0gZGEgbGluaGEgY29ycmVudGUuXG4gKiAgLSDDjW5kaWNlOiBgaW5kZXhgIGRldGVybWluYSBvIMOtbmRpY2UgZGEgbGluaGEgY29ycmVudGUuXG4gKlxuICogRXN0YSBkaXJldGl2YSBwb2RlIHNlciB1c2FkYSBkZSBkdWFzIGZvcm1hczogZXhwbMOtY2l0YSBvdSAqc3ludGF4IHN1Z2FyKi4gVmVqYSBhIHNlZ3VpciBhbWJvcywgcmVzcGVjdGl2YW1lbnRlOlxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tbGlzdC12aWV3XG4gKiAgIHAtcHJvcGVydHktdGl0bGU9XCJuYW1lXCJcbiAqICAgW3AtaXRlbXNdPVwiW3tpZDogMSwgbmFtZTogXCJSZWdpc3RlclwiLCBlbWFpbDogcmVnaXN0ZXJAcG8tdWkuY29tfV1cIj5cbiAqXG4gKiAgIDxuZy10ZW1wbGF0ZSBwLWxpc3Qtdmlldy1jb250ZW50LXRlbXBsYXRlIGxldC1pdGVtIGxldC1jb2RlPVwiaW5kZXhcIj5cbiAqICAgICA8ZGl2IGNsYXNzPVwicG8tcm93XCI+XG4gKiAgICAgICA8cG8taW5mbyBjbGFzcz1cInBvLW1kLTZcIiBwLWxhYmVsPVwiQ29kZVwiIFtwLXZhbHVlXT1cImNvZGVcIj48L3BvLWluZm8+XG4gKiAgICAgICA8cG8taW5mbyBjbGFzcz1cInBvLW1kLTZcIiBwLWxhYmVsPVwiRW1haWxcIiBbcC12YWx1ZV09XCJpdGVtLmVtYWlsXCI+PC9wby1pbmZvPlxuICogICAgIDwvZGl2PlxuICogICA8L25nLXRlbXBsYXRlPlxuICpcbiAqIDwvcG8tbGlzdC12aWV3PlxuICpcbiAqIC4uLlxuICogYGBgXG4gKlxuICogYGBgXG4gKiAuLi5cbiAqIDxwby1saXN0LXZpZXdcbiAqICAgIHAtcHJvcGVydHktdGl0bGU9XCJuYW1lXCJcbiAqICAgIFtwLWl0ZW1zXT1cIlt7aWQ6IDEsIG5hbWU6IFwiUmVnaXN0ZXJcIiwgZW1haWw6IHJlZ2lzdGVyQHBvLXVpLmNvbX1dXCI+XG4gKlxuICogICAgPGRpdiAqcC1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZT1cImxldCBpdGVtLCBsZXQgaT1pbmRleFwiIGNsYXNzPVwicG8tcm93XCI+XG4gKiAgICAgIDxwby1pbmZvIGNsYXNzPVwicG8tbWQtMTJcIiBwLWxhYmVsPVwiRW1haWxcIiBbcC12YWx1ZV09XCJpdGVtLmVtYWlsXCI+PC9wby1pbmZvPlxuICogICAgPC9kaXY+XG4gKiA8L3BvLWxpc3Qtdmlldz5cbiAqIC4uLlxuICpcbiAqIGBgYFxuICpcbiAqIEEgZGlyZXRpdmEgKipwLWxpc3Qtdmlldy1jb250ZW50LXRlbXBsYXRlKiosIHBvc3NpYmlsaXRhIHRhbWLDqW0gYWx0ZXJhciBvIHTDrXR1bG8gZG9zIGl0ZW5zLiBQYXJhIGlzdG8sXG4gKiDDqSBuZWNlc3PDoXJpbyBhdHJpYnVpciBhIHJlZmVyw6puY2lhIGRhIGZ1bsOnw6NvIHF1ZSBmYXogYSBhbHRlcmHDp8Ojbywgw6AgcHJvcHJpZWRhZGUgYHAtdGl0bGVgLFxuICogYSBtZXNtYSBkZXZlIHJldG9ybmFyIHVtIHZhbG9yIGRvIHRpcG8gKnN0cmluZyouIFZlamEgbyBleGVtcGxvIGEgc2VndWlyOlxuICpcbiAqIGBgYFxuICogLi4uXG4gKiBAQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnYXBwLXJvb3QnLFxuICogICAgdGVtcGxhdGU6IGBcbiAqICAgICAgLi4uXG4gKiAgICAgIDxwby1saXN0LXZpZXdcbiAqICAgICAgICBbcC1pdGVtc109XCJpdGVtc1wiPlxuICogICAgICAgIDxuZy10ZW1wbGF0ZSBwLWxpc3Qtdmlldy1jb250ZW50LXRlbXBsYXRlIGxldC1pdGVtIFtwLXRpdGxlXT1cImN1c3RvbVRpdGxlXCI+XG4gKiAgICAgICAgICA8ZGl2IGNsYXNzPVwicG8tcm93XCI+XG4gKiAgICAgICAgICAgIDxwby1pbmZvIGNsYXNzPVwicG8tbWQtMTJcIiBwLWxhYmVsPVwiQ3VzdG9tZXJcIiBbcC12YWx1ZV09XCJpdGVtLmN1c3RvbWVyXCI+PC9wby1pbmZvPlxuICogICAgICAgICAgPC9kaXY+XG4gKiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgLi4uXG4gKiAgICBgXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICBwdWJsaWMgaXRlbXMgPSBbe1xuICogICAgICBjb2RlOiAxMjAwLFxuICogICAgICBwcm9kdWN0OiAnUmljZScsXG4gKiAgICAgIGN1c3RvbWVyOiAnU3VwZXJtYXJrZXQgMScsXG4gKiAgICB9LCB7XG4gKiAgICAgIGNvZGU6IDEzNTUsXG4gKiAgICAgIHByb2R1Y3Q6ICdCZWFuJyxcbiAqICAgICAgY3VzdG9tZXI6ICdTdXBlcm1hcmtldCAyJ1xuICogICAgfV07XG4gKlxuICogICAgY3VzdG9tVGl0bGUoaXRlbSkge1xuICogICAgICByZXR1cm4gYCR7aXRlbS5jb2RlfSAtICR7aXRlbS5wcm9kdWN0fWA7XG4gKiAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3AtbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0xpc3RWaWV3Q29udGVudFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRnVuw6fDo28gcXVlIGRldmUgcmV0b3JuYXIgdW0gdmFsb3IgZG8gdGlwbyBgc3RyaW5nYCwgcXVlIHNlcsOhIHV0aWxpemFkbyBjb21vIG8gdMOtdHVsbyBkZSBjYWRhIGl0ZW0gZGEgbGlzdGEuXG4gICAqXG4gICAqID4gUG9yIHBhcsOibWV0cm8gc2Vyw6EgZW52aWFkbyBvIGl0ZW0gY29ycmVudGUsIG9uZGUgcG9kZXLDoSB1dGlsaXrDoS1sbyBwYXJhIHJlY3VwZXJhciBkYWRvcyBzb2JyZSBvIG1lc21vLlxuICAgKi9cbiAgQElucHV0KCdwLXRpdGxlJykgdGl0bGU6IChpdGVtKSA9PiBzdHJpbmc7XG5cbiAgLy8gTmVjZXNzw6FyaW8gbWFudGVyIHRlbXBsYXRlUmVmIHBhcmEgbyBmdW5jaW9uYW1lbnRvIGRvIHJvdyB0ZW1wbGF0ZS5cbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuIl19