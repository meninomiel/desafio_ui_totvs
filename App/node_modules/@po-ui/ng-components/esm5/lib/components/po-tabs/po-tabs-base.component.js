import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/**
 * @description
 *
 * O componente `po-tabs` é responsável por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,
 * ideal para facilitar a organização de conteúdos.
 *
 * Em dispositivos móveis o componente exibirá tadas as abas de maneira linear gerando um *scroll* na horizontal. Já em telas telas com
 * resoluções maiores, o componente exibirá até cinco abas normalmente, porém, à partir de seis abas o componente automaticamente torna
 * visível apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.
 *
 * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.
 *
 * É possível realizar a navegação entre as abas através da tecla TAB do teclado.
 * Caso uma aba estiver desabilitada, não receberá foco de navegação.
 *
 * #### Boas práticas
 *
 * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;
 * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.
 */
var PoTabsBaseComponent = /** @class */ (function () {
    function PoTabsBaseComponent() {
        this._small = false;
    }
    Object.defineProperty(PoTabsBaseComponent.prototype, "small", {
        get: function () {
            return this._small;
        },
        /**
         * @optinal
         *
         * @description
         *
         * Diminui o tamanho das abas.
         *
         * @default `false`
         */
        set: function (value) {
            this._small = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-small'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoTabsBaseComponent.prototype, "small", null);
    PoTabsBaseComponent = __decorate([
        Directive()
    ], PoTabsBaseComponent);
    return PoTabsBaseComponent;
}());
export { PoTabsBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFicy1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFicy9wby10YWJzLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUVIO0lBQUE7UUFDVSxXQUFNLEdBQWEsS0FBSyxDQUFDO0lBa0JuQyxDQUFDO0lBUG1CLHNCQUFJLHNDQUFLO2FBSTNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFmRDs7Ozs7Ozs7V0FRRzthQUNlLFVBQVUsS0FBYztZQUN4QyxJQUFJLENBQUMsTUFBTSxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLENBQUM7OztPQUFBO0lBRmlCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OztvREFFaEI7SUFkVSxtQkFBbUI7UUFEL0IsU0FBUyxFQUFFO09BQ0MsbUJBQW1CLENBbUIvQjtJQUFELDBCQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FuQlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10YWJzYCDDqSByZXNwb25zw6F2ZWwgcG9yIGFncnVwYXIgW2FiYXNdKC9kb2N1bWVudGF0aW9uL3BvLXRhYikgZGlzcG9zdGFzIG51bWEgbGluaGEgaG9yaXpvbnRhbCxcbiAqIGlkZWFsIHBhcmEgZmFjaWxpdGFyIGEgb3JnYW5pemHDp8OjbyBkZSBjb250ZcO6ZG9zLlxuICpcbiAqIEVtIGRpc3Bvc2l0aXZvcyBtw7N2ZWlzIG8gY29tcG9uZW50ZSBleGliaXLDoSB0YWRhcyBhcyBhYmFzIGRlIG1hbmVpcmEgbGluZWFyIGdlcmFuZG8gdW0gKnNjcm9sbCogbmEgaG9yaXpvbnRhbC4gSsOhIGVtIHRlbGFzIHRlbGFzIGNvbVxuICogcmVzb2x1w6fDtWVzIG1haW9yZXMsIG8gY29tcG9uZW50ZSBleGliaXLDoSBhdMOpIGNpbmNvIGFiYXMgbm9ybWFsbWVudGUsIHBvcsOpbSwgw6AgcGFydGlyIGRlIHNlaXMgYWJhcyBvIGNvbXBvbmVudGUgYXV0b21hdGljYW1lbnRlIHRvcm5hXG4gKiB2aXPDrXZlbCBhcGVuYXMgYXMgcXVhdHJvIHByaW1laXJhcywgYWdydXBhbmRvIGFzIHN1YnNlcXVlbnRlcyBuYSBxdWludGEgYWJhIHJvdHVsYWRhIGRlICoqTWFpcyoqLlxuICpcbiAqID4gQXMgYWJhcyBxdWUgZXN0aXZlcmVtIGFncnVwYWRhcyBzZXLDo28gZGlzcG9zdGFzIG51bWEgY2FzY2F0YSBzdXNwZW5zYSBxdWUgc2Vyw6EgZXhpYmlkYSBhbyBjbGljYXIgbm8gYm90w6NvICoqTWFpcyoqLlxuICpcbiAqIMOJIHBvc3PDrXZlbCByZWFsaXphciBhIG5hdmVnYcOnw6NvIGVudHJlIGFzIGFiYXMgYXRyYXbDqXMgZGEgdGVjbGEgVEFCIGRvIHRlY2xhZG8uXG4gKiBDYXNvIHVtYSBhYmEgZXN0aXZlciBkZXNhYmlsaXRhZGEsIG7Do28gcmVjZWJlcsOhIGZvY28gZGUgbmF2ZWdhw6fDo28uXG4gKlxuICogIyMjIyBCb2FzIHByw6F0aWNhc1xuICpcbiAqIC0gRXZpdGUgdXRpbGl6YXIgdW1hIHF1YW50aWRhZGUgZXhjZXNzaXZhIGRlIGFiYXMsIHBvaXMgaXLDoSBnZXJhciB1bSAqc2Nyb2xsKiBtdWl0byBsb25nbyBubyBgZHJvcGRvd25gO1xuICogLSBFdml0ZSBgbGFiZWxzYCBleHRlbnNvcyBwYXJhIGFzIGB0YWJzYCBwb2lzIHBvZGVtIHF1ZWJyYXIgc2V1ICpsYXlvdXQqLCB1c2UgYGxhYmVsc2AgZGlyZXRvcywgY3VydG9zIGUgaW50dWl0aXZvcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9UYWJzQmFzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX3NtYWxsPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW5hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGltaW51aSBvIHRhbWFuaG8gZGFzIGFiYXMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1zbWFsbCcpIHNldCBzbWFsbCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3NtYWxsID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgc21hbGwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3NtYWxsO1xuICB9XG59XG4iXX0=