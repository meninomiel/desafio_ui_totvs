import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';
var PoGridHeadComponent = /** @class */ (function () {
    function PoGridHeadComponent(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.align = 'left';
        this.boolean = false;
        this.position = '';
        this.tabIndex = -1;
    }
    Object.defineProperty(PoGridHeadComponent.prototype, "width", {
        get: function () {
            return this._width ? this._width + "px" : '100%';
        },
        set: function (value) {
            this._width = value;
        },
        enumerable: true,
        configurable: true
    });
    PoGridHeadComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input('p-align'),
        __metadata("design:type", String)
    ], PoGridHeadComponent.prototype, "align", void 0);
    __decorate([
        Input('p-freeze'),
        __metadata("design:type", Boolean)
    ], PoGridHeadComponent.prototype, "boolean", void 0);
    __decorate([
        Input('p-position'),
        __metadata("design:type", String)
    ], PoGridHeadComponent.prototype, "position", void 0);
    __decorate([
        Input('p-tab-index'),
        __metadata("design:type", Number)
    ], PoGridHeadComponent.prototype, "tabIndex", void 0);
    __decorate([
        Input('p-width'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoGridHeadComponent.prototype, "width", null);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoGridHeadComponent.prototype, "title", void 0);
    PoGridHeadComponent = __decorate([
        Component({
            selector: 'po-grid-head',
            template: "<div>\n  <div [id]=\"position\" class=\"po-grid-head-content po-grid-head-{{ align }}\" tabindex=\"{{ title ? 0 : -1 }}\">\n    <span>{{ title || '&nbsp;' }}</span>\n  </div>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoGridHeadComponent);
    return PoGridHeadComponent;
}());
export { PoGridHeadComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZ3JpZC9wby1ncmlkLWhlYWQvcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU0zRjtJQW9CRSw2QkFBb0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFqQnRDLFVBQUssR0FBWSxNQUFNLENBQUM7UUFFdkIsWUFBTyxHQUFhLEtBQUssQ0FBQztRQUV4QixhQUFRLEdBQVksRUFBRSxDQUFDO1FBRXRCLGFBQVEsR0FBWSxDQUFDLENBQUMsQ0FBQztJQVdjLENBQUM7SUFUMUMsc0JBQUksc0NBQUs7YUFHM0I7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFJLElBQUksQ0FBQyxNQUFNLE9BQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ25ELENBQUM7YUFMaUIsVUFBVSxLQUFzQjtZQUNoRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FBQTs7Z0JBT3NDLGlCQUFpQjs7SUFqQnRDO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3NEQUF5QjtJQUV2QjtRQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDOzt3REFBMkI7SUFFeEI7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7eURBQXdCO0lBRXRCO1FBQXJCLEtBQUssQ0FBQyxhQUFhLENBQUM7O3lEQUF3QjtJQUUzQjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzs7b0RBRWhCO0lBS2lCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3NEQUFnQjtJQWxCdEIsbUJBQW1CO1FBSi9CLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxjQUFjO1lBQ3hCLG9NQUE0QztTQUM3QyxDQUFDO3lDQXFCdUMsaUJBQWlCO09BcEI3QyxtQkFBbUIsQ0FxQi9CO0lBQUQsMEJBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQXJCWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWdyaWQtaGVhZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1ncmlkLWhlYWQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvR3JpZEhlYWRDb21wb25lbnQge1xuICBwcml2YXRlIF93aWR0aDogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIEBJbnB1dCgncC1hbGlnbicpIGFsaWduPzogc3RyaW5nID0gJ2xlZnQnO1xuXG4gIEBJbnB1dCgncC1mcmVlemUnKSBib29sZWFuPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgncC1wb3NpdGlvbicpIHBvc2l0aW9uPzogc3RyaW5nID0gJyc7XG5cbiAgQElucHV0KCdwLXRhYi1pbmRleCcpIHRhYkluZGV4PzogbnVtYmVyID0gLTE7XG5cbiAgQElucHV0KCdwLXdpZHRoJykgc2V0IHdpZHRoKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIpIHtcbiAgICB0aGlzLl93aWR0aCA9IHZhbHVlO1xuICB9XG4gIGdldCB3aWR0aCgpOiBzdHJpbmcgfCBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl93aWR0aCA/IGAke3RoaXMuX3dpZHRofXB4YCA6ICcxMDAlJztcbiAgfVxuXG4gIEBJbnB1dCgncC10aXRsZScpIHRpdGxlPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7fVxufVxuIl19