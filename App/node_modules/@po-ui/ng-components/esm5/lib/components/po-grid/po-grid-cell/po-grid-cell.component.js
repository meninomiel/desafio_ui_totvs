import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';
var PoGridCellComponent = /** @class */ (function () {
    function PoGridCellComponent(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this._value = '';
        this.edit = false;
        this.editValue = '';
        this.align = 'left';
        this.freeze = false;
        this.tabIndex = -1;
        this.position = '';
        this.readonly = false;
        this.required = false;
        this.valueChange = new EventEmitter();
    }
    Object.defineProperty(PoGridCellComponent.prototype, "width", {
        get: function () {
            return this._width ? this._width + "px" : '100%';
        },
        set: function (value) {
            this._width = value;
            if (this.freeze && !this._width) {
                this._width = 100;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoGridCellComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        // @Input('p-value') value?: string;
        set: function (value) {
            this._value = value;
            this.valueChange.emit(this._value);
        },
        enumerable: true,
        configurable: true
    });
    PoGridCellComponent.prototype.onKeyDownContent = function (event) {
        // console.log('onKeyDownContent: ', event);
        // BACKSPACE / DELETE
        if (!event.ctrlKey && (event.keyCode === 8 || event.keyCode === 46)) {
            if (this.readonly) {
                return;
            }
            event.preventDefault();
            this.value = '';
            return;
        }
        // ENTER
        if (event.keyCode === 13) {
            event.preventDefault();
            this.onEditCell(this.value);
            return;
        }
        // A..Z - 0..9
        if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57)) {
            event.preventDefault();
            this.onEditCell(event.key);
            return;
        }
    };
    PoGridCellComponent.prototype.dblclick = function (event) {
        // console.log('dblclick: ', event);
        event.preventDefault();
        this.onEditCell(this.value);
    };
    PoGridCellComponent.prototype.onBlurInput = function (event) {
        // console.log('onBlurInput: ', event);
        this.value = this.editValue;
        this.editValue = undefined;
        this.edit = false;
    };
    PoGridCellComponent.prototype.onKeyDownInput = function (event) {
        // console.log('onKeyDownInput: ', event);
        // ENTER
        if (event.keyCode === 13) {
            this.value = this.editValue;
            this.editValue = undefined;
            this.edit = false;
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
        }
        // ESCAPE
        if (event.keyCode === 27) {
            this.editValue = undefined;
            this.edit = false;
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
            event.stopPropagation();
        }
    };
    PoGridCellComponent.prototype.onEditCell = function (value) {
        if (this.readonly) {
            return;
        }
        this.editValue = value;
        this.edit = true;
        this.changeDetectorRef.detectChanges();
        this.inputElement.nativeElement.focus();
    };
    PoGridCellComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input('p-align'),
        __metadata("design:type", String)
    ], PoGridCellComponent.prototype, "align", void 0);
    __decorate([
        Input('p-freeze'),
        __metadata("design:type", Boolean)
    ], PoGridCellComponent.prototype, "freeze", void 0);
    __decorate([
        Input('p-tab-index'),
        __metadata("design:type", Number)
    ], PoGridCellComponent.prototype, "tabIndex", void 0);
    __decorate([
        Input('p-position'),
        __metadata("design:type", String)
    ], PoGridCellComponent.prototype, "position", void 0);
    __decorate([
        Input('p-width'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoGridCellComponent.prototype, "width", null);
    __decorate([
        Input('p-readonly'),
        __metadata("design:type", Boolean)
    ], PoGridCellComponent.prototype, "readonly", void 0);
    __decorate([
        Input('p-required'),
        __metadata("design:type", Boolean)
    ], PoGridCellComponent.prototype, "required", void 0);
    __decorate([
        Output('p-valueChange'),
        __metadata("design:type", Object)
    ], PoGridCellComponent.prototype, "valueChange", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoGridCellComponent.prototype, "value", null);
    __decorate([
        ViewChild('inputElement', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoGridCellComponent.prototype, "inputElement", void 0);
    __decorate([
        ViewChild('contentElement', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoGridCellComponent.prototype, "contentElement", void 0);
    PoGridCellComponent = __decorate([
        Component({
            selector: 'po-grid-cell',
            template: "<div>\n  <ng-container *ngIf=\"edit; then input; else content\"></ng-container>\n\n  <ng-template #content>\n    <div\n      #contentElement\n      [id]=\"position\"\n      class=\"po-grid-cell-content po-grid-cell-{{ align }} {{ !value && required ? 'po-grid-cell-required' : '' }}\"\n      (keydown)=\"onKeyDownContent($event)\"\n      tabindex=\"{{ readonly ? -1 : 0 }}\"\n      (dblclick)=\"dblclick($event)\"\n    >\n      <span>{{ value || '&nbsp;' }}</span>\n    </div>\n  </ng-template>\n\n  <ng-template #input>\n    <input\n      [id]=\"position\"\n      #inputElement\n      class=\"po-grid-cell-input\"\n      [(ngModel)]=\"editValue\"\n      (keydown.arrowup)=\"$event.stopPropagation()\"\n      (keydown.arrowdown)=\"$event.stopPropagation()\"\n      (keydown.arrowleft)=\"$event.stopPropagation()\"\n      (keydown.arrowright)=\"$event.stopPropagation()\"\n      (keydown)=\"onKeyDownInput($event)\"\n      (blur)=\"onBlurInput($event)\"\n    />\n\n    <!-- <po-input\n      #inputElement class=\"po-grid-cell-input\"\n      [(ngModel)]=\"editValue\"\n      (keydown)=\"onKeyDownInput($event)\"\n      (p-blur)=\"onBlurInput($event)\">\n    </po-input> -->\n  </ng-template>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoGridCellComponent);
    return PoGridCellComponent;
}());
export { PoGridCellComponent };
//# sourceMappingURL=data:application/json;base64,