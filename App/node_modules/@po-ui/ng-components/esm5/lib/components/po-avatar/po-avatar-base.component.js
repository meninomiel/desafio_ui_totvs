import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
var PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
var PO_AVATAR_SIZE_DEFAULT = 'md';
/**
 * @description
 *
 * O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
var PoAvatarBaseComponent = /** @class */ (function () {
    function PoAvatarBaseComponent() {
        this._size = 'md';
    }
    Object.defineProperty(PoAvatarBaseComponent.prototype, "size", {
        get: function () {
            return this._size;
        },
        /**
         * @optional
         *
         * @description
         *
         * Tamanho de exibição do componente.
         *
         * Valores válidos:
         *  - `xs` (24x24)
         *  - `sm` (32x32)
         *  - `md` (64x64)
         *  - `lg` (96x96)
         *  - `xl` (144x144)
         *
         * @default `md`
         */
        set: function (value) {
            this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-src'),
        __metadata("design:type", String)
    ], PoAvatarBaseComponent.prototype, "src", void 0);
    __decorate([
        Input('p-size'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoAvatarBaseComponent.prototype, "size", null);
    PoAvatarBaseComponent = __decorate([
        Directive()
    ], PoAvatarBaseComponent);
    return PoAvatarBaseComponent;
}());
export { PoAvatarBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1hdmF0YXIvcG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxJQUFNLGVBQWUsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RCxJQUFNLHNCQUFzQixHQUFHLElBQUksQ0FBQztBQUVwQzs7Ozs7Ozs7R0FRRztBQUVIO0lBQUE7UUFDVSxVQUFLLEdBQVcsSUFBSSxDQUFDO0lBOEIvQixDQUFDO0lBTmtCLHNCQUFJLHVDQUFJO2FBR3pCO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFyQkQ7Ozs7Ozs7Ozs7Ozs7OztXQWVHO2FBQ2MsVUFBUyxLQUFhO1lBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsZUFBZSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQztRQUNoRixDQUFDOzs7T0FBQTtJQXBCZTtRQUFmLEtBQUssQ0FBQyxPQUFPLENBQUM7O3NEQUFhO0lBa0JYO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OztxREFFZjtJQTNCVSxxQkFBcUI7UUFEakMsU0FBUyxFQUFFO09BQ0MscUJBQXFCLENBK0JqQztJQUFELDRCQUFDO0NBQUEsQUEvQkQsSUErQkM7U0EvQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5jb25zdCBQT19BVkFUQVJfU0laRVMgPSBbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107XG5jb25zdCBQT19BVkFUQVJfU0laRV9ERUZBVUxUID0gJ21kJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLWF2YXRhcmAgw6kgdW0gY29udGFpbmVyIHBhcmEgaW1hZ2VucyBlbSBtaW5pYXR1cmEsIHBvc3N1aSB1bSBmb3JtYXRvIHJlZG9uZG8gZSBjaW5jbyBvcMOnw7VlcyBkZVxuICogdGFtYW5obywgcG9kZSBzZXIgdXRpbGl6YWRvIHBhcmEgbW9zdHJhciBhIGZvdG8gZG8gcGVyZmlsIGRlIHVtIHVzdcOhcmlvLCBlbnRyZSBvdXRyYXMgcG9zc2liaWxpZGFkZXMuXG4gKlxuICogQWzDqW0gZGUgcG9kZXIgc2VyIHV0aWxpemFkbyBzZXBhcmFkYW1lbnRlLCDDqSBwb3Nzw612ZWwgdXNhciBvIGBwby1hdmF0YXJgIGp1bnRhbWVudGUgY29tIG91dHJvcyBjb21wb25lbnRlcyBlIGNyaWFyXG4gKiBsYXlvdXRzIHJpY29zIGUgYmVtIGludGVyZXNzYW50ZXMgcGFyYSBvcyB1c3XDoXJpb3MsIGNvbW8gcG9yIGV4ZW1wbG8sIHVtYSBsaXN0YSBkZSBpdGVucyBvdSBwcm9kdXRvcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9BdmF0YXJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfc2l6ZTogc3RyaW5nID0gJ21kJztcblxuICAvKipcbiAgICogRm9udGUgZGEgaW1hZ2VtIHF1ZSBwb2RlIHNlciB1bSBjYW1pbmhvIGxvY2FsIChgLi9hc3NldHMvaW1hZ2VzL2xvZ28tYmxhY2stc21hbGwucG5nYClcbiAgICogb3UgdW0gc2Vydmlkb3IgZXh0ZXJubyAoYGh0dHBzOi8vcG8tdWkuaW8vYXNzZXRzL2ltYWdlcy9sb2dvLWJsYWNrLXNtYWxsLnBuZ2ApLlxuICAgKi9cbiAgQElucHV0KCdwLXNyYycpIHNyYzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjb21wb25lbnRlLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKiAgLSBgeHNgICgyNHgyNClcbiAgICogIC0gYHNtYCAoMzJ4MzIpXG4gICAqICAtIGBtZGAgKDY0eDY0KVxuICAgKiAgLSBgbGdgICg5Nng5NilcbiAgICogIC0gYHhsYCAoMTQ0eDE0NClcbiAgICpcbiAgICogQGRlZmF1bHQgYG1kYFxuICAgKi9cbiAgQElucHV0KCdwLXNpemUnKSBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fc2l6ZSA9IFBPX0FWQVRBUl9TSVpFUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFBPX0FWQVRBUl9TSVpFX0RFRkFVTFQ7XG4gIH1cbiAgZ2V0IHNpemUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgfVxufVxuIl19