import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
/**
 * @description
 *
 * Este componente gera uma estrutura de navegação que apresenta ao usuário a localização
 * da URL atual, exibindo as antecessoras conforme é realizado a navegação na aplicação.
 *
 * Quando não houver espaçamento suficiente para exibi-lás, o componente se encarrega também
 * de agrupar as URLs antecessoras, gerando assim um ícone que permite a visualização em cascata.
 *
 * Caso um endereço seja especificado na propriedade `p-favorite-service`, o componente permite ao usuário
 * favoritar a URL.
 *
 * Havendo necessidade de incluir parâmetros na requisição do serviço,
 * o componente dispõe da propriedade `p-params-service` que recebe um objeto contendo as informações.
 */
var PoBreadcrumbBaseComponent = /** @class */ (function () {
    function PoBreadcrumbBaseComponent() {
        this.itemsView = [];
        this._items = [];
    }
    Object.defineProperty(PoBreadcrumbBaseComponent.prototype, "items", {
        get: function () {
            return this._items;
        },
        /**
         * @description
         *
         * Lista de itens do _breadcrumb_.
         *
         * **Exemplo:**
         * ```
         * { label: 'Po Portal', link: 'portal' }
         * ```
         */
        set: function (items) {
            this._items = items;
            this.itemsView = [].concat(items);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-favorite-service'),
        __metadata("design:type", String)
    ], PoBreadcrumbBaseComponent.prototype, "favoriteService", void 0);
    __decorate([
        Input('p-items'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoBreadcrumbBaseComponent.prototype, "items", null);
    __decorate([
        Input('p-params-service'),
        __metadata("design:type", Object)
    ], PoBreadcrumbBaseComponent.prototype, "paramsService", void 0);
    PoBreadcrumbBaseComponent = __decorate([
        Directive()
    ], PoBreadcrumbBaseComponent);
    return PoBreadcrumbBaseComponent;
}());
export { PoBreadcrumbBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYnJlYWRjcnVtYi9wby1icmVhZGNydW1iLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUlqRDs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUVIO0lBQUE7UUFDRSxjQUFTLEdBQTRCLEVBQUUsQ0FBQztRQUNoQyxXQUFNLEdBQTRCLEVBQUUsQ0FBQztJQWdHL0MsQ0FBQztJQXJCbUIsc0JBQUksNENBQUs7YUFLM0I7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQztRQWpCRDs7Ozs7Ozs7O1dBU0c7YUFDZSxVQUFVLEtBQThCO1lBQ3hELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxDQUFDOzs7T0FBQTtJQWY0QjtRQUE1QixLQUFLLENBQUMsb0JBQW9CLENBQUM7O3NFQUEwQjtJQVlwQztRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDO2tDQUFrQixLQUFLO3lDQUFMLEtBQUs7MERBR3ZDO0lBYTBCO1FBQTFCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzs7b0VBQXdCO0lBN0Z2Qyx5QkFBeUI7UUFEckMsU0FBUyxFQUFFO09BQ0MseUJBQXlCLENBa0dyQztJQUFELGdDQUFDO0NBQUEsQUFsR0QsSUFrR0M7U0FsR1kseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0JyZWFkY3J1bWJJdGVtIH0gZnJvbSAnLi9wby1icmVhZGNydW1iLWl0ZW0uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RlIGNvbXBvbmVudGUgZ2VyYSB1bWEgZXN0cnV0dXJhIGRlIG5hdmVnYcOnw6NvIHF1ZSBhcHJlc2VudGEgYW8gdXN1w6FyaW8gYSBsb2NhbGl6YcOnw6NvXG4gKiBkYSBVUkwgYXR1YWwsIGV4aWJpbmRvIGFzIGFudGVjZXNzb3JhcyBjb25mb3JtZSDDqSByZWFsaXphZG8gYSBuYXZlZ2HDp8OjbyBuYSBhcGxpY2HDp8Ojby5cbiAqXG4gKiBRdWFuZG8gbsOjbyBob3V2ZXIgZXNwYcOnYW1lbnRvIHN1ZmljaWVudGUgcGFyYSBleGliaS1sw6FzLCBvIGNvbXBvbmVudGUgc2UgZW5jYXJyZWdhIHRhbWLDqW1cbiAqIGRlIGFncnVwYXIgYXMgVVJMcyBhbnRlY2Vzc29yYXMsIGdlcmFuZG8gYXNzaW0gdW0gw61jb25lIHF1ZSBwZXJtaXRlIGEgdmlzdWFsaXphw6fDo28gZW0gY2FzY2F0YS5cbiAqXG4gKiBDYXNvIHVtIGVuZGVyZcOnbyBzZWphIGVzcGVjaWZpY2FkbyBuYSBwcm9wcmllZGFkZSBgcC1mYXZvcml0ZS1zZXJ2aWNlYCwgbyBjb21wb25lbnRlIHBlcm1pdGUgYW8gdXN1w6FyaW9cbiAqIGZhdm9yaXRhciBhIFVSTC5cbiAqXG4gKiBIYXZlbmRvIG5lY2Vzc2lkYWRlIGRlIGluY2x1aXIgcGFyw6JtZXRyb3MgbmEgcmVxdWlzacOnw6NvIGRvIHNlcnZpw6dvLFxuICogbyBjb21wb25lbnRlIGRpc3DDtWUgZGEgcHJvcHJpZWRhZGUgYHAtcGFyYW1zLXNlcnZpY2VgIHF1ZSByZWNlYmUgdW0gb2JqZXRvIGNvbnRlbmRvIGFzIGluZm9ybWHDp8O1ZXMuXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGNsYXNzIFBvQnJlYWRjcnVtYkJhc2VDb21wb25lbnQge1xuICBpdGVtc1ZpZXc6IEFycmF5PFBvQnJlYWRjcnVtYkl0ZW0+ID0gW107XG4gIHByaXZhdGUgX2l0ZW1zOiBBcnJheTxQb0JyZWFkY3J1bWJJdGVtPiA9IFtdO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFBlcm1pdGUgZGVmaW5pciB1bWEgVVJMIG5vIGNvbXBvbmVudGUgYHBvLWJyZWFkY3J1bWJgIHBhcmEgZmF2b3JpdGFyIG91IGRlc2Zhdm9yaXRhci5cbiAgICogPiBQYXJhIHV0aWxpemFyIGVzdGEgcHJvcHJpZWRhZGUsIG8gw7psdGltbyBgUG9CcmVhZGNydW1iSXRlbWAgZGEgbGlzdGEgZGUgaXRlbXMgZGEgcHJvcHJpZWRhZGUgYHAtaXRlbXNgIGRldmUgdGVyIHVtIGxpbmsgaW5mb3JtYWRvLlxuICAgKlxuICAgKiA+IEEgQVBJIGRldmUgZXN0YXIgcHJlcGFyYWRhIHBhcmEgcmV0b3JuYXIgdW0gb2JqZXRvIG5vIGZvcm1hdG8gYHsgaXNGYXZvcml0ZTogYm9vbGVhbiB9YC5cbiAgICpcbiAgICogQW8gaW5pY2lhciwgbyBgcG8tYnJlYWRjcnVtYmAgZmF6IHVtIEdFVCBuYSBVUkwgZGVmaW5pZGEgbmEgcHJvcHJpZWRhZGUgYHAtZmF2b3JpdGUtc2VydmljZWAgZSBkZXZlIHJldG9ybmFyIGEgcHJvcHJpZWRhZGVcbiAgICogYHsgaXNGYXZvcml0ZTogYm9vbGVhbiB9YCBkbyDDumx0aW1vIGBQb0JyZWFkY3J1bWJJdGVtYCBkZWZpbmlkbyBuYSBsaXN0YSBkZSBpdGVucyBkYSBwcm9wcmllZGFkZSBgcC1pdGVtc2AuXG4gICAqXG4gICAqIEFvIGNsaWNhciBlbSBmYXZvcml0YXIgb3UgZGVzZmF2b3JpdGFyIG8gYHBvLWJyZWFkY3J1bWJgIGZheiB1bSBQT1NUIGNvbSBvIGxpbmsgZSBhIHByb3ByaWVkYWRlIGB7IGlzRmF2b3JpdGU6IGJvb2xlYW4gfWBcbiAgICogZGVmaW5pZG9zIG5vIMO6bHRpbW8gaXRlbSBkYSBwcm9wcmllZGFkZSBgcC1pdGVtc2AuXG4gICAqXG4gICAqID4gQ2FzbyBhbGd1bSBwYXLDom1ldHJvIHNlamEgZGVmaW5pZG8gbmEgcHJvcHJpZWRhZGUgYHAtcGFyYW1zLXNlcnZpY2VgLCBvIG1lc21vIHNlcsOhIGVudmlhZG8gcGFyYSBhIEFQSSBlIHJldG9ybmFyw6FcbiAgICogYXDDs3MgZmF6ZXIgdW0gR0VUIG91IFBPU1QuXG4gICAqXG4gICAqIEV4ZW1wbG8gZGUgVVJMIGNvbnRlbmRvIG8gc2VydmnDp28gZGUgZmF2b3JpdGFyIG91IGRlc2Zhdm9yaXRhcjpcbiAgICpcbiAgICogYGBgXG4gICAqIGh0dHBzOi8vcG8tdWkuaW8vc2FtcGxlL2FwaS9mYXZvcml0ZVxuICAgKiBgYGBcbiAgICpcbiAgICogQW8gZmF6ZXIgbyBHRVQgbyBgcG8tYnJlYWRjcnVtYmAgY29uY2F0ZW5hIG8gbGluayBjb20gYSBVUkwgZGUgc2VydmnDp28uIEV4ZW1wbG86XG4gICAqXG4gICAqIGBgYFxuICAgKiBHRVQgaHR0cDovLzxkb21haW4+L2FwaS9mYXZvcml0ZT91cmw9L2V4YW1wbGVcbiAgICogYGBgXG4gICAqXG4gICAqIGBgYFxuICAgKiBHRVQgaHR0cDovL3BvLmNvbS5ici9zYW1wbGUvYXBpL2Zhdm9yaXRlP3VybD0vZXhhbXBsZVxuICAgKiBgYGBcbiAgICpcbiAgICogYGBgXG4gICAqIFBPU1RcbiAgICogcGF5bG9hZDogeyBpc0Zhdm9yaXRlOiB0cnVlLCB1cmw6ICcvZXhhbXBsZScgfVxuICAgKiBgYGBcbiAgICpcbiAgICogQ2FzbyBwb3NzdWEgcGFyw6JtZXRyb3MgZGVmaW5pZG9zIG5hIHByb3ByaWVkYWRlIGBwLXBhcmFtcy1zZXJ2aWNlYDpcbiAgICpcbiAgICogYGBgXG4gICAqIFBPU1RcbiAgICogcGF5bG9hZDogeyBpc0Zhdm9yaXRlOiB0cnVlLCB1cmw6IFwiL2V4YW1wbGVcIiwgcGFyYW1zOiBcInsgaWQ6IDE0LCB1c2VyOiAnZGV2LnBvJyB9XCIgfVxuICAgKiBgYGBcbiAgICpcbiAgICogRXhlbXBsb3MgZGUgcmV0b3JubzpcbiAgICpcbiAgICogYGBgXG4gICAqIHsgaXNGYXZvcml0ZTogdHJ1ZSwgdXJsOiBcIi9leGFtcGxlXCIgfVxuICAgKiBgYGBcbiAgICpcbiAgICogYGBgXG4gICAqIHsgaXNGYXZvcml0ZTogZmFsc2UsIHVybDogXCIvZXhhbXBsZVwiIH1cbiAgICogYGBgXG4gICAqXG4gICAqIGBgYFxuICAgKiB7IGlzRmF2b3JpdGU6IGZhbHNlLCB1cmw6IFwiL2V4YW1wbGVcIiwgcGFyYW1zOiBcInsgaWQ6IDE0LCB1c2VyOiAnZGV2LnBvJyB9XCIgfVxuICAgKiBgYGBcbiAgICovXG4gIEBJbnB1dCgncC1mYXZvcml0ZS1zZXJ2aWNlJykgZmF2b3JpdGVTZXJ2aWNlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTGlzdGEgZGUgaXRlbnMgZG8gX2JyZWFkY3J1bWJfLlxuICAgKlxuICAgKiAqKkV4ZW1wbG86KipcbiAgICogYGBgXG4gICAqIHsgbGFiZWw6ICdQbyBQb3J0YWwnLCBsaW5rOiAncG9ydGFsJyB9XG4gICAqIGBgYFxuICAgKi9cbiAgQElucHV0KCdwLWl0ZW1zJykgc2V0IGl0ZW1zKGl0ZW1zOiBBcnJheTxQb0JyZWFkY3J1bWJJdGVtPikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5pdGVtc1ZpZXcgPSBbXS5jb25jYXQoaXRlbXMpO1xuICB9XG5cbiAgZ2V0IGl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLl9pdGVtcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9iamV0byBxdWUgcG9zc2liaWxpdGEgbyBlbnZpbyBkZSBwYXLDom1ldHJvcyBhZGljaW9uYWlzIMOgIHJlcXVpc2nDp8Ojby5cbiAgICovXG4gIEBJbnB1dCgncC1wYXJhbXMtc2VydmljZScpIHBhcmFtc1NlcnZpY2U/OiBvYmplY3Q7XG5cbiAgcHJvdGVjdGVkIGNsaWNrb3V0TGlzdGVuZXI6ICgpID0+IHZvaWQ7XG5cbiAgcHJvdGVjdGVkIHJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xufVxuIl19