import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { convertToInt } from '../../utils/util';
/**
 * @description
 *
 * O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.
 */
var PoToolbarBaseComponent = /** @class */ (function () {
    function PoToolbarBaseComponent() {
        /** Se falso, oculta o ícone de notificações. */
        this.showNotification = true;
    }
    Object.defineProperty(PoToolbarBaseComponent.prototype, "notificationNumber", {
        get: function () {
            return this._notificationNumber;
        },
        /**
         * @optional
         *
         * @description
         *
         * Número de notificações.
         */
        set: function (value) {
            this._notificationNumber = convertToInt(value, 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoToolbarBaseComponent.prototype, "isShowProfile", {
        get: function () {
            return !!(this.profile || this.profileActions);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Array)
    ], PoToolbarBaseComponent.prototype, "actions", void 0);
    __decorate([
        Input('p-actions-icon'),
        __metadata("design:type", String)
    ], PoToolbarBaseComponent.prototype, "actionsIcon", void 0);
    __decorate([
        Input('p-profile'),
        __metadata("design:type", Object)
    ], PoToolbarBaseComponent.prototype, "profile", void 0);
    __decorate([
        Input('p-profile-actions'),
        __metadata("design:type", Array)
    ], PoToolbarBaseComponent.prototype, "profileActions", void 0);
    __decorate([
        Input('p-show-notification'),
        __metadata("design:type", Boolean)
    ], PoToolbarBaseComponent.prototype, "showNotification", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoToolbarBaseComponent.prototype, "title", void 0);
    __decorate([
        Input('p-notification-actions'),
        __metadata("design:type", Array)
    ], PoToolbarBaseComponent.prototype, "notificationActions", void 0);
    __decorate([
        Input('p-notification-number'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], PoToolbarBaseComponent.prototype, "notificationNumber", null);
    PoToolbarBaseComponent = __decorate([
        Directive()
    ], PoToolbarBaseComponent);
    return PoToolbarBaseComponent;
}());
export { PoToolbarBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdG9vbGJhci9wby10b29sYmFyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLaEQ7Ozs7R0FJRztBQUVIO0lBQUE7UUErQkUsZ0RBQWdEO1FBQ2xCLHFCQUFnQixHQUFhLElBQUksQ0FBQztJQWdDbEUsQ0FBQztJQVhpQyxzQkFBSSxzREFBa0I7YUFJdEQ7WUFDRSxPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUNsQyxDQUFDO1FBYkQ7Ozs7OztXQU1HO2FBQzZCLFVBQXVCLEtBQWE7WUFDbEUsSUFBSSxDQUFDLG1CQUFtQixHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEQsQ0FBQzs7O09BQUE7SUFNRCxzQkFBSSxpREFBYTthQUFqQjtZQUNFLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDakQsQ0FBQzs7O09BQUE7SUFyRG1CO1FBQW5CLEtBQUssQ0FBQyxXQUFXLENBQUM7a0NBQVcsS0FBSzsyREFBa0I7SUFhNUI7UUFBeEIsS0FBSyxDQUFDLGdCQUFnQixDQUFDOzsrREFBc0I7SUFHMUI7UUFBbkIsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7MkRBQTRCO0lBR25CO1FBQTNCLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztrQ0FBa0IsS0FBSztrRUFBa0I7SUFHdEM7UUFBN0IsS0FBSyxDQUFDLHFCQUFxQixDQUFDOztvRUFBbUM7SUFHOUM7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7eURBQWU7SUFTQztRQUFoQyxLQUFLLENBQUMsd0JBQXdCLENBQUM7a0NBQXVCLEtBQUs7dUVBQWtCO0lBUzlDO1FBQS9CLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQzs7O29FQUU5QjtJQXZEVSxzQkFBc0I7UUFEbEMsU0FBUyxFQUFFO09BQ0Msc0JBQXNCLENBZ0VsQztJQUFELDZCQUFDO0NBQUEsQUFoRUQsSUFnRUM7U0FoRVksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9Ub29sYmFyQWN0aW9uIH0gZnJvbSAnLi9wby10b29sYmFyLWFjdGlvbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9Ub29sYmFyUHJvZmlsZSB9IGZyb20gJy4vcG8tdG9vbGJhci1wcm9maWxlL3BvLXRvb2xiYXItcHJvZmlsZS5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tdG9vbGJhcmAgw6kgdW0gY2FiZcOnYWxobyBwYXJhIG8gdMOtdHVsbyBkYSBhcGxpY2HDp8OjbyBlIGluZm9ybWHDp8O1ZXMgZGUgdXN1w6FyaW8gZSBub3RpZmljYcOnw7VlcyBxdWFuZG8gaG91dmVyIG5lY2Vzc2lkYWRlLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb1Rvb2xiYXJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfbm90aWZpY2F0aW9uTnVtYmVyPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7VlcyBxdWUgc2Vyw6NvIGV4aWJpZGFzIGFvIGNsaWNhciBubyDDrWNvbmUgZGVjbGFyYWRvIGVtIGBwLWFjdGlvbnMtaWNvbmAuXG4gICAqL1xuICBASW5wdXQoJ3AtYWN0aW9ucycpIGFjdGlvbnM/OiBBcnJheTxQb1Rvb2xiYXJBY3Rpb24+O1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSB1bSBbw61jb25lXSgvZ3VpZGVzL2ljb25zKSBwYXJhIGEgcHJvcHJpZWRhZGUgYHAtYWN0aW9uc2AuXG4gICAqXG4gICAqID4gQ2FzbyBuw6NvIGhhamEgYcOnw7VlcyBkZWZpbmlkYXMgZW0gYHAtYWN0aW9uc2AsIG8gw61jb25lIG7Do28gc2Vyw6EgZXhpYmlkby5cbiAgICpcbiAgICogQGRlZmF1bHQgYHBvLWljb24tbW9yZWBcbiAgICovXG4gIEBJbnB1dCgncC1hY3Rpb25zLWljb24nKSBhY3Rpb25zSWNvbj86IHN0cmluZztcblxuICAvKiogRGVmaW5lIG8gb2JqZXRvIHF1ZSBzZXLDoSBvIGNhYmXDp2FsaG8gZGEgbGlzdGEgZGUgYcOnw7VlcyBjb20gYXMgaW5mb3JtYcOnw7VlcyBkbyBwZXJmaWwuICovXG4gIEBJbnB1dCgncC1wcm9maWxlJykgcHJvZmlsZT86IFBvVG9vbGJhclByb2ZpbGU7XG5cbiAgLyoqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7VlcyBxdWUgc2Vyw6NvIGV4aWJpZGFzIGFvIGNsaWNhciBubyDDrWNvbmUgZG8gcGVyZmlsLiAqL1xuICBASW5wdXQoJ3AtcHJvZmlsZS1hY3Rpb25zJykgcHJvZmlsZUFjdGlvbnM/OiBBcnJheTxQb1Rvb2xiYXJBY3Rpb24+O1xuXG4gIC8qKiBTZSBmYWxzbywgb2N1bHRhIG8gw61jb25lIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xuICBASW5wdXQoJ3Atc2hvdy1ub3RpZmljYXRpb24nKSBzaG93Tm90aWZpY2F0aW9uPzogYm9vbGVhbiA9IHRydWU7XG5cbiAgLyoqIFTDrXR1bG8gZG8gKnRvb2xiYXIqIGUgYXBsaWNhw6fDo28uICovXG4gIEBJbnB1dCgncC10aXRsZScpIHRpdGxlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTGlzdGEgZGUgYcOnw7VlcyBkYSBub3RpZmljYcOnw6NvLlxuICAgKi9cbiAgQElucHV0KCdwLW5vdGlmaWNhdGlvbi1hY3Rpb25zJykgbm90aWZpY2F0aW9uQWN0aW9ucz86IEFycmF5PFBvVG9vbGJhckFjdGlvbj47XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTsO6bWVybyBkZSBub3RpZmljYcOnw7Vlcy5cbiAgICovXG4gIEBJbnB1dCgncC1ub3RpZmljYXRpb24tbnVtYmVyJykgc2V0IG5vdGlmaWNhdGlvbk51bWJlcih2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyID0gY29udmVydFRvSW50KHZhbHVlLCAwKTtcbiAgfVxuXG4gIGdldCBub3RpZmljYXRpb25OdW1iZXIoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyO1xuICB9XG5cbiAgZ2V0IGlzU2hvd1Byb2ZpbGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICEhKHRoaXMucHJvZmlsZSB8fCB0aGlzLnByb2ZpbGVBY3Rpb25zKTtcbiAgfVxufVxuIl19