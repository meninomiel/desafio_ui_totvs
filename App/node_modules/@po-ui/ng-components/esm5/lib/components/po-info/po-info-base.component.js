import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { PoInfoOrientation } from './po-info-orietation.enum';
var poInfoOrientationDefault = PoInfoOrientation.Vertical;
var PoInfoBaseComponent = /** @class */ (function () {
    function PoInfoBaseComponent() {
        this._orientation = poInfoOrientationDefault;
        this.poInfoOrientation = PoInfoOrientation;
    }
    Object.defineProperty(PoInfoBaseComponent.prototype, "labelSize", {
        get: function () {
            return this._labelSize;
        },
        /**
         * @optional
         *
         * @description
         *
         * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for
         * utilizado na orientação horizontal.
         *
         * Valores válidos:
         *  - `[1 .. 11]`
         *
         * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
         */
        set: function (value) {
            if (isNaN(parseInt(value, 10))) {
                this._labelSize = undefined;
            }
            else {
                value = parseInt(value, 10);
                this._labelSize = value < 1 || value > 11 ? undefined : value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoInfoBaseComponent.prototype, "orientation", {
        get: function () {
            return this._orientation;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define o layout de exibição.
         *
         * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.
         *
         * @default `vertical`
         */
        set: function (value) {
            this._orientation = Object.values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-label'),
        __metadata("design:type", String)
    ], PoInfoBaseComponent.prototype, "label", void 0);
    __decorate([
        Input('p-label-size'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], PoInfoBaseComponent.prototype, "labelSize", null);
    __decorate([
        Input('p-orientation'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoInfoBaseComponent.prototype, "orientation", null);
    __decorate([
        Input('p-url'),
        __metadata("design:type", String)
    ], PoInfoBaseComponent.prototype, "url", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", String)
    ], PoInfoBaseComponent.prototype, "value", void 0);
    PoInfoBaseComponent = __decorate([
        Directive()
    ], PoInfoBaseComponent);
    return PoInfoBaseComponent;
}());
export { PoInfoBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5mby1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8taW5mby9wby1pbmZvLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUU5RCxJQUFNLHdCQUF3QixHQUFHLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztBQUc1RDtJQUFBO1FBRVUsaUJBQVksR0FBc0Isd0JBQXdCLENBQUM7UUFFbkQsc0JBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUE2RHhELENBQUM7SUEzQ3dCLHNCQUFJLDBDQUFTO2FBVXBDO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7UUF6QkQ7Ozs7Ozs7Ozs7OztXQVlHO2FBQ29CLFVBQWMsS0FBYTtZQUNoRCxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQU0sS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUU7Z0JBQ25DLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO2FBQzdCO2lCQUFNO2dCQUNMLEtBQUssR0FBRyxRQUFRLENBQU0sS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUVqQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssR0FBRyxDQUFDLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7YUFDL0Q7UUFDSCxDQUFDOzs7T0FBQTtJQWlCdUIsc0JBQUksNENBQVc7YUFHdkM7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0IsQ0FBQztRQWhCRDs7Ozs7Ozs7OztXQVVHO2FBQ3FCLFVBQWdCLEtBQXdCO1lBQzlELElBQUksQ0FBQyxZQUFZLEdBQVMsTUFBTyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQztRQUNqSCxDQUFDOzs7T0FBQTtJQTFDaUI7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7c0RBQWU7SUFlVDtRQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOzs7d0RBUXJCO0lBaUJ1QjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs7MERBRXRCO0lBWWU7UUFBZixLQUFLLENBQUMsT0FBTyxDQUFDOztvREFBYztJQUdYO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3NEQUFnQjtJQWhFdEIsbUJBQW1CO1FBRC9CLFNBQVMsRUFBRTtPQUNDLG1CQUFtQixDQWlFL0I7SUFBRCwwQkFBQztDQUFBLEFBakVELElBaUVDO1NBakVZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9JbmZvT3JpZW50YXRpb24gfSBmcm9tICcuL3BvLWluZm8tb3JpZXRhdGlvbi5lbnVtJztcblxuY29uc3QgcG9JbmZvT3JpZW50YXRpb25EZWZhdWx0ID0gUG9JbmZvT3JpZW50YXRpb24uVmVydGljYWw7XG5cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGNsYXNzIFBvSW5mb0Jhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF9sYWJlbFNpemU6IG51bWJlcjtcbiAgcHJpdmF0ZSBfb3JpZW50YXRpb246IFBvSW5mb09yaWVudGF0aW9uID0gcG9JbmZvT3JpZW50YXRpb25EZWZhdWx0O1xuXG4gIHB1YmxpYyByZWFkb25seSBwb0luZm9PcmllbnRhdGlvbiA9IFBvSW5mb09yaWVudGF0aW9uO1xuXG4gIC8qKiBWYWxvciBkbyByw7N0dWxvIGEgc2VyIGV4aWJpZG8uICovXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogUXVhbnRpZGFkZSBkZSBbY29sdW5hc10oL2d1aWRlcy9ncmlkLXN5c3RlbSkgdXNhZGFzIHBhcmEgYSBleGliacOnw6NvIGRhIGBwLWxhYmVsYCBxdWFuZG8gbyBjb21wb25lbnRlIGZvclxuICAgKiB1dGlsaXphZG8gbmEgb3JpZW50YcOnw6NvIGhvcml6b250YWwuXG4gICAqXG4gICAqIFZhbG9yZXMgdsOhbGlkb3M6XG4gICAqICAtIGBbMSAuLiAxMV1gXG4gICAqXG4gICAqID4gQSBwcm9wcmllZGFkZSBgcC12YWx1ZWAgcmVjZWJlIG8gbsO6bWVybyBkZSBjb2x1bmFzIHJlc3RhbnRlcywgcG9yIGV4ZW1wbG8sIHNlIGRlZmluaWRvIDMgY29sdW5hcyBhIG1lc21hIGFzc3VtZSA5IGNvbHVuYXMuXG4gICAqL1xuICBASW5wdXQoJ3AtbGFiZWwtc2l6ZScpIHNldCBsYWJlbFNpemUodmFsdWU6IG51bWJlcikge1xuICAgIGlmIChpc05hTihwYXJzZUludCg8YW55PnZhbHVlLCAxMCkpKSB7XG4gICAgICB0aGlzLl9sYWJlbFNpemUgPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlID0gcGFyc2VJbnQoPGFueT52YWx1ZSwgMTApO1xuXG4gICAgICB0aGlzLl9sYWJlbFNpemUgPSB2YWx1ZSA8IDEgfHwgdmFsdWUgPiAxMSA/IHVuZGVmaW5lZCA6IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIGdldCBsYWJlbFNpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFiZWxTaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIG8gbGF5b3V0IGRlIGV4aWJpw6fDo28uXG4gICAqXG4gICAqID4gUXVhbmRvIGRlZmluaWRvIG5hIGhvcml6b250YWwsIHBvZGUtc2UgdXRpbGl6YXIgYSBwcm9wcmllZGFkZSBgcC1sYWJlbC1zaXplYCBwYXJhIHVtIG1haW9yIGNvbnRyb2xlIGRhcyBpbmZvcm1hw6fDtWVzIGV4aWJpZGFzLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgdmVydGljYWxgXG4gICAqL1xuICBASW5wdXQoJ3Atb3JpZW50YXRpb24nKSBzZXQgb3JpZW50YXRpb24odmFsdWU6IFBvSW5mb09yaWVudGF0aW9uKSB7XG4gICAgdGhpcy5fb3JpZW50YXRpb24gPSAoPGFueT5PYmplY3QpLnZhbHVlcyhQb0luZm9PcmllbnRhdGlvbikuaW5jbHVkZXModmFsdWUpID8gdmFsdWUgOiBwb0luZm9PcmllbnRhdGlvbkRlZmF1bHQ7XG4gIH1cbiAgZ2V0IG9yaWVudGF0aW9uKCk6IFBvSW5mb09yaWVudGF0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5fb3JpZW50YXRpb247XG4gIH1cblxuICAvKipcbiAgICogQW8gaW5mb3JtYXIgdW1hIFVSTCwgbyBjb250ZcO6ZG8gc2Vyw6EgZXhpYmlkbyBuYSBmb3JtYSBkZSB1bSAqbGluayogZSBhbyBzZXIgY2xpY2FkbyBzZXLDoSByZWRpcmVjaW9uYWRvIHBhcmEgYSBVUkwgaW5mb3JtYWRhLlxuICAgKlxuICAgKiA+IENhc28gaW5mb3JtYXIgYGh0dHA6Ly9gIHNlcsOhIGFiZXJ0byB1bWEgbm92YSBhYmEuXG4gICAqIENhc28gaW5mb3JtYXIgdW0gY2FtaW5obyByZWxhdGl2bywgZXhlbXBsbzogYC9jdXN0b21lcnNgLCBzZXLDoSBhYmVydG8gbmEgYWJhIGF0dWFsLlxuICAgKlxuICAgKi9cbiAgQElucHV0KCdwLXVybCcpIHVybD86IHN0cmluZztcblxuICAvKiogVmFsb3IgZG8gY29udGXDumRvIGEgc2VyIGV4aWJpZG8uICovXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlPzogc3RyaW5nO1xufVxuIl19