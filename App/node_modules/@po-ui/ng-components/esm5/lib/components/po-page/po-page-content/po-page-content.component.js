import { __decorate, __extends, __metadata } from "tslib";
import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';
import { PoPageContentBaseComponent } from './po-page-content-base.component';
/**
 * @docsPrivate
 *
 * @docsExtends PoPageContentBaseComponent
 */
var PoPageContentComponent = /** @class */ (function (_super) {
    __extends(PoPageContentComponent, _super);
    function PoPageContentComponent(renderer) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.contentOpacity = 0;
        _this.height = '90%';
        _this.overflowY = 'none';
        _this.initializeListeners();
        return _this;
    }
    PoPageContentComponent.prototype.ngAfterViewInit = function () {
        this.recalculateHeaderSize();
    };
    PoPageContentComponent.prototype.ngOnDestroy = function () {
        this.removeListeners();
    };
    PoPageContentComponent.prototype.recalculateHeaderSize = function () {
        var _this = this;
        setTimeout(function () {
            var pageHeaderElement = document.querySelector('div.po-page-header');
            _this.setHeightContent(pageHeaderElement);
            _this.contentOpacity = 1;
        });
    };
    PoPageContentComponent.prototype.setHeightContent = function (poPageHeader) {
        var bodyHeight = document.body.clientHeight;
        var pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;
        var newHeight = bodyHeight - pageHeaderHeight;
        this.height = newHeight + "px";
    };
    PoPageContentComponent.prototype.initializeListeners = function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', function () {
            _this.recalculateHeaderSize();
        });
    };
    PoPageContentComponent.prototype.removeListeners = function () {
        this.resizeListener();
    };
    PoPageContentComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    PoPageContentComponent = __decorate([
        Component({
            selector: 'po-page-content',
            template: "<div class=\"po-page-content\" [style.height]=\"height\" [style.opacity]=\"contentOpacity\" [style.overflow-y]=\"overflowY\">\n  <ng-content></ng-content>\n</div>\n"
        }),
        __metadata("design:paramtypes", [Renderer2])
    ], PoPageContentComponent);
    return PoPageContentComponent;
}(PoPageContentBaseComponent));
export { PoPageContentComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS9wby1wYWdlLWNvbnRlbnQvcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUU5RTs7OztHQUlHO0FBS0g7SUFBNEMsMENBQTBCO0lBS3BFLGdDQUFtQixRQUFtQjtRQUF0QyxZQUNFLGlCQUFPLFNBRVI7UUFIa0IsY0FBUSxHQUFSLFFBQVEsQ0FBVztRQUp0QyxvQkFBYyxHQUFXLENBQUMsQ0FBQztRQUMzQixZQUFNLEdBQVcsS0FBSyxDQUFDO1FBQ3ZCLGVBQVMsR0FBVyxNQUFNLENBQUM7UUFJekIsS0FBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7O0lBQzdCLENBQUM7SUFFRCxnREFBZSxHQUFmO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELDRDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELHNEQUFxQixHQUFyQjtRQUFBLGlCQU9DO1FBTkMsVUFBVSxDQUFDO1lBQ1QsSUFBTSxpQkFBaUIsR0FBZ0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1lBRXBGLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ3pDLEtBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGlEQUFnQixHQUFoQixVQUFpQixZQUF5QjtRQUN4QyxJQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUM5QyxJQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0YsSUFBTSxTQUFTLEdBQUcsVUFBVSxHQUFHLGdCQUFnQixDQUFDO1FBRWhELElBQUksQ0FBQyxNQUFNLEdBQU0sU0FBUyxPQUFJLENBQUM7SUFDakMsQ0FBQztJQUVPLG9EQUFtQixHQUEzQjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFO1lBQzdELEtBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLGdEQUFlLEdBQXZCO1FBQ0UsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7O2dCQXRDNEIsU0FBUzs7SUFMM0Isc0JBQXNCO1FBSmxDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsZ0xBQStDO1NBQ2hELENBQUM7eUNBTTZCLFNBQVM7T0FMM0Isc0JBQXNCLENBNENsQztJQUFELDZCQUFDO0NBQUEsQUE1Q0QsQ0FBNEMsMEJBQTBCLEdBNENyRTtTQTVDWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvUGFnZUNvbnRlbnRCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wYWdlLWNvbnRlbnQtYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkb2NzRXh0ZW5kcyBQb1BhZ2VDb250ZW50QmFzZUNvbXBvbmVudFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1wYWdlLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1BhZ2VDb250ZW50Q29tcG9uZW50IGV4dGVuZHMgUG9QYWdlQ29udGVudEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICBjb250ZW50T3BhY2l0eTogbnVtYmVyID0gMDtcbiAgaGVpZ2h0OiBzdHJpbmcgPSAnOTAlJztcbiAgb3ZlcmZsb3dZOiBzdHJpbmcgPSAnbm9uZSc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaW5pdGlhbGl6ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMucmVjYWxjdWxhdGVIZWFkZXJTaXplKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgcmVjYWxjdWxhdGVIZWFkZXJTaXplKCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgcGFnZUhlYWRlckVsZW1lbnQ6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2LnBvLXBhZ2UtaGVhZGVyJyk7XG5cbiAgICAgIHRoaXMuc2V0SGVpZ2h0Q29udGVudChwYWdlSGVhZGVyRWxlbWVudCk7XG4gICAgICB0aGlzLmNvbnRlbnRPcGFjaXR5ID0gMTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldEhlaWdodENvbnRlbnQocG9QYWdlSGVhZGVyOiBIVE1MRWxlbWVudCkge1xuICAgIGNvbnN0IGJvZHlIZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcbiAgICBjb25zdCBwYWdlSGVhZGVySGVpZ2h0ID0gcG9QYWdlSGVhZGVyID8gcG9QYWdlSGVhZGVyLm9mZnNldFRvcCArIHBvUGFnZUhlYWRlci5vZmZzZXRIZWlnaHQgOiAwO1xuICAgIGNvbnN0IG5ld0hlaWdodCA9IGJvZHlIZWlnaHQgLSBwYWdlSGVhZGVySGVpZ2h0O1xuXG4gICAgdGhpcy5oZWlnaHQgPSBgJHtuZXdIZWlnaHR9cHhgO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzKCkge1xuICAgIHRoaXMucmVzaXplTGlzdGVuZXIgPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbignd2luZG93JywgJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgIHRoaXMucmVjYWxjdWxhdGVIZWFkZXJTaXplKCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyKCk7XG4gIH1cbn1cbiJdfQ==