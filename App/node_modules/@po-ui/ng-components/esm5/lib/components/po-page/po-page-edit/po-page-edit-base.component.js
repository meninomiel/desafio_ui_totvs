import { __assign, __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { browserLanguage, poLocaleDefault } from './../../../utils/util';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
export var poPageEditLiteralsDefault = {
    en: {
        cancel: 'Cancel',
        save: 'Save',
        saveNew: 'Save and New'
    },
    es: {
        cancel: 'Cancelar',
        save: 'Guardar',
        saveNew: 'Guardar y Nuevo'
    },
    pt: {
        cancel: 'Cancelar',
        save: 'Salvar',
        saveNew: 'Salvar e Novo'
    },
    ru: {
        cancel: 'отменить',
        save: 'экономить',
        saveNew: 'Сохранить и новый'
    }
};
/**
 * @description
 *
 * O componente **po-page-edit** é utilizado como container principal para tela de edição ou adição de um
 * registro, tendo a possibilidade de usar as ações de "Salvar", "Salvar e Novo" e "Cancelar".
 *
 * Os botões "Salvar" e "Salvar e Novo" podem ser habilitados/desabilitados utilizando a propriedade `p-disable-submit`.
 * Esta propriedade pode ser utilizada para desabilitar os botões caso exista um formulário inválido na página ou alguma
 * regra de negócio não tenha sido atendida.
 */
var PoPageEditBaseComponent = /** @class */ (function () {
    function PoPageEditBaseComponent() {
        /**
         * Evento que será disparado ao clicar no botão de "Cancelar".
         *
         * ```
         * <po-page-edit (p-cancel)="myCancelFunction()">
         * </po-page-edit>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Cancelar" não será exibido.
         */
        this.cancel = new EventEmitter();
        /**
         * Evento que será disparado ao clicar no botão de "Salvar".
         *
         * ```
         * <po-page-edit (p-save)="mySaveFunction()">
         * </po-page-edit>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Salvar" não será exibido.
         */
        this.save = new EventEmitter();
        /**
         * Evento que será disparado ao clicar no botão de "Salvar e Novo".
         *
         * ```
         * <po-page-edit (p-save-new)="mySaveNewFunction()">
         * </po-page-edit>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Salvar e Novo" não será exibido.
         */
        this.saveNew = new EventEmitter();
    }
    Object.defineProperty(PoPageEditBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals || poPageEditLiteralsDefault[browserLanguage()];
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `po-page-edit`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: PoPageEditLiterals = {
         *    cancel: 'Voltar',
         *    save: 'Confirmar',
         *    saveNew: 'Confirmar e criar um novo'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: PoPageEditLiterals = {
         *    cancel: 'Cancelar processo'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <po-page-edit
         *   [p-literals]="customLiterals">
         * </po-page-edit>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         */
        set: function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = __assign(__assign(__assign({}, poPageEditLiteralsDefault[poLocaleDefault]), poPageEditLiteralsDefault[browserLanguage()]), value);
            }
            else {
                this._literals = poPageEditLiteralsDefault[browserLanguage()];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageEditBaseComponent.prototype, "title", {
        get: function () {
            return this._title;
        },
        /** Título da página. */
        set: function (title) {
            var _this = this;
            this._title = title;
            setTimeout(function () { return _this.poPageContent.recalculateHeaderSize(); });
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        ViewChild(PoPageContentComponent, { static: true }),
        __metadata("design:type", PoPageContentComponent)
    ], PoPageEditBaseComponent.prototype, "poPageContent", void 0);
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageEditBaseComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-disable-submit'),
        __metadata("design:type", Boolean)
    ], PoPageEditBaseComponent.prototype, "disableSubmit", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageEditBaseComponent.prototype, "literals", null);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageEditBaseComponent.prototype, "title", null);
    __decorate([
        Output('p-cancel'),
        __metadata("design:type", Object)
    ], PoPageEditBaseComponent.prototype, "cancel", void 0);
    __decorate([
        Output('p-save'),
        __metadata("design:type", Object)
    ], PoPageEditBaseComponent.prototype, "save", void 0);
    __decorate([
        Output('p-save-new'),
        __metadata("design:type", Object)
    ], PoPageEditBaseComponent.prototype, "saveNew", void 0);
    PoPageEditBaseComponent = __decorate([
        Directive()
    ], PoPageEditBaseComponent);
    return PoPageEditBaseComponent;
}());
export { PoPageEditBaseComponent };
//# sourceMappingURL=data:application/json;base64,