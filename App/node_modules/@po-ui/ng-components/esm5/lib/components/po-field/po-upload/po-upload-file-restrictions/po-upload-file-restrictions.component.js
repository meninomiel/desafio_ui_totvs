import { __assign, __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';
import { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';
import { poUploadLiteralsDefault } from '../po-upload-base.component';
var PoUploadFileRestrictionsComponent = /** @class */ (function () {
    function PoUploadFileRestrictionsComponent(changeDetector) {
        this.changeDetector = changeDetector;
    }
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "allowedExtensions", {
        get: function () {
            return this._allowedExtensions;
        },
        set: function (value) {
            this._allowedExtensions = this.formatAllowedExtensions(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "maxFileSize", {
        get: function () {
            return this._maxFileSize;
        },
        set: function (value) {
            this._maxFileSize = formatBytes(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "minFileSize", {
        get: function () {
            return this._minFileSize;
        },
        set: function (value) {
            this._minFileSize = formatBytes(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "language", {
        get: function () {
            return browserLanguage();
        },
        enumerable: true,
        configurable: true
    });
    PoUploadFileRestrictionsComponent.prototype.ngOnInit = function () {
        this.setLiterals();
    };
    PoUploadFileRestrictionsComponent.prototype.formatAllowedExtensions = function (allowedExtensions) {
        var conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };
        return allowedExtensions
            ? allowedExtensions
                .join(', ')
                .toUpperCase()
                .replace(/,(?=[^,]*$)/, " " + conjunction[this.language])
            : undefined;
    };
    PoUploadFileRestrictionsComponent.prototype.setLiterals = function () {
        this.literals = __assign(__assign({}, poUploadLiteralsDefault[poLocaleDefault]), poUploadLiteralsDefault[this.language]);
        this.changeDetector.detectChanges();
    };
    PoUploadFileRestrictionsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input('p-allowed-extensions'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "allowedExtensions", null);
    __decorate([
        Input('p-max-files'),
        __metadata("design:type", Number)
    ], PoUploadFileRestrictionsComponent.prototype, "maxFiles", void 0);
    __decorate([
        Input('p-max-file-size'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "maxFileSize", null);
    __decorate([
        Input('p-min-file-size'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "minFileSize", null);
    PoUploadFileRestrictionsComponent = __decorate([
        Component({
            selector: 'po-upload-file-restrictions',
            template: "<p class=\"po-font-text-small\" *ngIf=\"maxFiles > 1\">\n  {{ literals?.numberOfFilesAllowed | poI18n: maxFiles }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"allowedExtensions\">\n  {{ literals?.allowedFormats | poI18n: allowedExtensions }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"minFileSize || maxFileSize\">\n  <span>{{ literals?.allowedSizes }}</span>\n\n  <span *ngIf=\"minFileSize && maxFileSize\">\n    {{ literals?.allowedFileSizeRange | poI18n: [minFileSize, maxFileSize] }}\n  </span>\n\n  <span *ngIf=\"minFileSize && !maxFileSize\">\n    {{ literals?.minFileSizeAllowed | poI18n: minFileSize }}\n  </span>\n\n  <span *ngIf=\"maxFileSize && !minFileSize\">\n    {{ literals?.maxFileSizeAllowed | poI18n: maxFileSize }}\n  </span>\n</p>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoUploadFileRestrictionsComponent);
    return PoUploadFileRestrictionsComponent;
}());
export { PoUploadFileRestrictionsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy9wby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckcsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFdkYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFPdEU7SUFxQ0UsMkNBQW9CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUFHLENBQUM7SUE5QjFCLHNCQUFJLGdFQUFpQjthQUlwRDtZQUNFLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2pDLENBQUM7YUFOOEIsVUFBc0IsS0FBSztZQUN4RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFNLEtBQUssQ0FBQyxDQUFDO1FBQ3JFLENBQUM7OztPQUFBO0lBUXlCLHNCQUFJLDBEQUFXO2FBSXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7YUFOeUIsVUFBZ0IsS0FBSztZQUM3QyxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBTSxLQUFLLENBQUMsQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTtJQU15QixzQkFBSSwwREFBVzthQUl6QztZQUNFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDO2FBTnlCLFVBQWdCLEtBQUs7WUFDN0MsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQU0sS0FBSyxDQUFDLENBQUM7UUFDOUMsQ0FBQzs7O09BQUE7SUFNRCxzQkFBSSx1REFBUTthQUFaO1lBQ0UsT0FBTyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FBQTtJQUlELG9EQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVPLG1FQUF1QixHQUEvQixVQUFnQyxpQkFBZ0M7UUFDOUQsSUFBTSxXQUFXLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBRTFELE9BQU8saUJBQWlCO1lBQ3RCLENBQUMsQ0FBQyxpQkFBaUI7aUJBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQztpQkFDVixXQUFXLEVBQUU7aUJBQ2IsT0FBTyxDQUFDLGFBQWEsRUFBRSxNQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFHLENBQUM7WUFDN0QsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNoQixDQUFDO0lBRU8sdURBQVcsR0FBbkI7UUFDRSxJQUFJLENBQUMsUUFBUSx5QkFDUix1QkFBdUIsQ0FBQyxlQUFlLENBQUMsR0FDeEMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUMxQyxDQUFDO1FBRUYsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnQkF4Qm1DLGlCQUFpQjs7SUE5QnRCO1FBQTlCLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQzs7OzhFQUU3QjtJQU1xQjtRQUFyQixLQUFLLENBQUMsYUFBYSxDQUFDOzt1RUFBa0I7SUFFYjtRQUF6QixLQUFLLENBQUMsaUJBQWlCLENBQUM7Ozt3RUFFeEI7SUFNeUI7UUFBekIsS0FBSyxDQUFDLGlCQUFpQixDQUFDOzs7d0VBRXhCO0lBM0JVLGlDQUFpQztRQUw3QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsNkJBQTZCO1lBQ3ZDLHV3QkFBMkQ7WUFDM0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQzt5Q0FzQ29DLGlCQUFpQjtPQXJDMUMsaUNBQWlDLENBOEQ3QztJQUFELHdDQUFDO0NBQUEsQUE5REQsSUE4REM7U0E5RFksaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgYnJvd3Nlckxhbmd1YWdlLCBmb3JtYXRCeXRlcywgcG9Mb2NhbGVEZWZhdWx0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IHBvVXBsb2FkTGl0ZXJhbHNEZWZhdWx0IH0gZnJvbSAnLi4vcG8tdXBsb2FkLWJhc2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVXBsb2FkRmlsZVJlc3RyaWN0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgX2FsbG93ZWRFeHRlbnNpb25zOiBzdHJpbmc7XG4gIHByaXZhdGUgX21heEZpbGVTaXplOiBzdHJpbmc7XG4gIHByaXZhdGUgX21pbkZpbGVTaXplOiBzdHJpbmc7XG5cbiAgbGl0ZXJhbHM6IGFueTtcblxuICBASW5wdXQoJ3AtYWxsb3dlZC1leHRlbnNpb25zJykgc2V0IGFsbG93ZWRFeHRlbnNpb25zKHZhbHVlKSB7XG4gICAgdGhpcy5fYWxsb3dlZEV4dGVuc2lvbnMgPSB0aGlzLmZvcm1hdEFsbG93ZWRFeHRlbnNpb25zKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IGFsbG93ZWRFeHRlbnNpb25zKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FsbG93ZWRFeHRlbnNpb25zO1xuICB9XG5cbiAgQElucHV0KCdwLW1heC1maWxlcycpIG1heEZpbGVzOiBudW1iZXI7XG5cbiAgQElucHV0KCdwLW1heC1maWxlLXNpemUnKSBzZXQgbWF4RmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9tYXhGaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1heEZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21heEZpbGVTaXplO1xuICB9XG5cbiAgQElucHV0KCdwLW1pbi1maWxlLXNpemUnKSBzZXQgbWluRmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9taW5GaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1pbkZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21pbkZpbGVTaXplO1xuICB9XG5cbiAgZ2V0IGxhbmd1YWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGJyb3dzZXJMYW5ndWFnZSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXRMaXRlcmFscygpO1xuICB9XG5cbiAgcHJpdmF0ZSBmb3JtYXRBbGxvd2VkRXh0ZW5zaW9ucyhhbGxvd2VkRXh0ZW5zaW9uczogQXJyYXk8c3RyaW5nPik6IHN0cmluZyB7XG4gICAgY29uc3QgY29uanVuY3Rpb24gPSB7ICdwdCc6ICdlJywgJ2VuJzogJ2FuZCcsICdlcyc6ICd5JyB9O1xuXG4gICAgcmV0dXJuIGFsbG93ZWRFeHRlbnNpb25zXG4gICAgICA/IGFsbG93ZWRFeHRlbnNpb25zXG4gICAgICAgICAgLmpvaW4oJywgJylcbiAgICAgICAgICAudG9VcHBlckNhc2UoKVxuICAgICAgICAgIC5yZXBsYWNlKC8sKD89W14sXSokKS8sIGAgJHtjb25qdW5jdGlvblt0aGlzLmxhbmd1YWdlXX1gKVxuICAgICAgOiB1bmRlZmluZWQ7XG4gIH1cblxuICBwcml2YXRlIHNldExpdGVyYWxzKCkge1xuICAgIHRoaXMubGl0ZXJhbHMgPSB7XG4gICAgICAuLi5wb1VwbG9hZExpdGVyYWxzRGVmYXVsdFtwb0xvY2FsZURlZmF1bHRdLFxuICAgICAgLi4ucG9VcGxvYWRMaXRlcmFsc0RlZmF1bHRbdGhpcy5sYW5ndWFnZV1cbiAgICB9O1xuXG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn1cbiJdfQ==