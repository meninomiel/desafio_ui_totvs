import { __decorate, __extends, __metadata } from "tslib";
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { Component, ElementRef, forwardRef, Input } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import { PoInputGeneric } from '../po-input-generic/po-input-generic';
/**
 * @docsExtends PoInputBaseComponent
 *
 * @description
 * O po-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.
 *
 * @example
 *
 * <example name="po-password-basic" title="PO Password Basic">
 *   <file name="sample-po-password-basic/sample-po-password-basic.component.html"> </file>
 *   <file name="sample-po-password-basic/sample-po-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-password-labs" title="PO Password Labs">
 *   <file name="sample-po-password-labs/sample-po-password-labs.component.html"> </file>
 *   <file name="sample-po-password-labs/sample-po-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-password-reset" title="PO Password - Reset">
 *   <file name="sample-po-password-reset/sample-po-password-reset.component.html"> </file>
 *   <file name="sample-po-password-reset/sample-po-password-reset.component.ts"> </file>
 * </example>
 */
var PoPasswordComponent = /** @class */ (function (_super) {
    __extends(PoPasswordComponent, _super);
    /* istanbul ignore next */
    function PoPasswordComponent(el) {
        var _this = _super.call(this, el) || this;
        _this._hidePasswordPeek = false;
        _this.type = 'password';
        _this.visiblePassword = false;
        return _this;
    }
    PoPasswordComponent_1 = PoPasswordComponent;
    Object.defineProperty(PoPasswordComponent.prototype, "hidePasswordPeek", {
        get: function () {
            return this._hidePasswordPeek;
        },
        /**
         * @optional
         *
         * @description
         *
         * Permite esconder a função de espiar a senha digitada.
         *
         * @default `false`
         */
        set: function (value) {
            this._hidePasswordPeek = convertToBoolean(value);
            if (value) {
                this.visiblePassword = false;
                this.type = 'password';
            }
        },
        enumerable: true,
        configurable: true
    });
    PoPasswordComponent.prototype.extraValidation = function (c) {
        return null;
    };
    PoPasswordComponent.prototype.showPassword = function () {
        this.visiblePassword = !this.visiblePassword;
        this.type = this.type === 'password' ? 'text' : 'password';
    };
    var PoPasswordComponent_1;
    PoPasswordComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input('p-hide-password-peek'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPasswordComponent.prototype, "hidePasswordPeek", null);
    PoPasswordComponent = PoPasswordComponent_1 = __decorate([
        Component({
            selector: 'po-password',
            template: "<po-field-container [p-label]=\"label\" [p-help]=\"help\" [p-optional]=\"!required && optional\">\n  <div class=\"po-field-container-content\">\n    <div class=\"po-field-icon-container-left\">\n      <span class=\"po-icon po-field-icon po-icon-lock\" [class.po-field-icon-disabled]=\"disabled\"> </span>\n    </div>\n\n    <input\n      #inp\n      class=\"po-input po-input-icon-left\"\n      [attr.name]=\"name\"\n      [autocomplete]=\"autocomplete\"\n      [class.po-input-double-icon-right]=\"clean && inp.value && !hidePasswordPeek\"\n      [class.po-input-icon-right]=\"clean || !hidePasswordPeek\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"disabled ? 'password' : type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\"\n    />\n\n    <div class=\"po-field-icon-container-right\">\n      <po-clean class=\"po-icon po-field-icon\" [p-element-ref]=\"inputEl\" (p-change-event)=\"clear($event)\"> </po-clean>\n\n      <span\n        *ngIf=\"!hidePasswordPeek && !disabled\"\n        class=\"po-icon po-field-icon\"\n        [ngClass]=\"visiblePassword ? 'po-icon-eye' : 'po-icon-eye-off po-field-icon-disabled'\"\n        (click)=\"showPassword()\"\n      >\n      </span>\n    </div>\n  </div>\n\n  <po-field-container-bottom [p-error-pattern]=\"getErrorPattern()\"> </po-field-container-bottom>\n</po-field-container>\n",
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return PoPasswordComponent_1; }),
                    multi: true
                },
                {
                    provide: NG_VALIDATORS,
                    useExisting: forwardRef(function () { return PoPasswordComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], PoPasswordComponent);
    return PoPasswordComponent;
}(PoInputGeneric));
export { PoPasswordComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1wYXNzd29yZC9wby1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBbUIsYUFBYSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkYsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFdEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFpQkg7SUFBeUMsdUNBQWM7SUEyQnJELDBCQUEwQjtJQUMxQiw2QkFBWSxFQUFjO1FBQTFCLFlBQ0Usa0JBQU0sRUFBRSxDQUFDLFNBQ1Y7UUE3Qk8sdUJBQWlCLEdBQWEsS0FBSyxDQUFDO1FBRTVDLFVBQUksR0FBRyxVQUFVLENBQUM7UUFDbEIscUJBQWUsR0FBRyxLQUFLLENBQUM7O0lBMEJ4QixDQUFDOzRCQTlCVSxtQkFBbUI7SUFlQyxzQkFBSSxpREFBZ0I7YUFRbkQ7WUFDRSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNoQyxDQUFDO1FBbkJEOzs7Ozs7OztXQVFHO2FBQzRCLFVBQXFCLEtBQWM7WUFDaEUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pELElBQUksS0FBSyxFQUFFO2dCQUNULElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO2dCQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQzthQUN4QjtRQUNILENBQUM7OztPQUFBO0lBV0QsNkNBQWUsR0FBZixVQUFnQixDQUFrQjtRQUNoQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCwwQ0FBWSxHQUFaO1FBQ0UsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7SUFDN0QsQ0FBQzs7O2dCQVhlLFVBQVU7O0lBYks7UUFBOUIsS0FBSyxDQUFDLHNCQUFzQixDQUFDOzs7K0RBTTdCO0lBckJVLG1CQUFtQjtRQWhCL0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGFBQWE7WUFDdkIsZ2hEQUEyQztZQUMzQyxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtvQkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEscUJBQW1CLEVBQW5CLENBQW1CLENBQUM7b0JBQ2xELEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxhQUFhO29CQUN0QixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxxQkFBbUIsRUFBbkIsQ0FBbUIsQ0FBQztvQkFDbEQsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7eUNBNkJnQixVQUFVO09BNUJmLG1CQUFtQixDQXdDL0I7SUFBRCwwQkFBQztDQUFBLEFBeENELENBQXlDLGNBQWMsR0F3Q3REO1NBeENZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMSURBVE9SUywgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcbmltcG9ydCB7IFBvSW5wdXRHZW5lcmljIH0gZnJvbSAnLi4vcG8taW5wdXQtZ2VuZXJpYy9wby1pbnB1dC1nZW5lcmljJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9JbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIE8gcG8tcGFzc3dvcmQgw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSBzZW5oYXMuIErDoSBwb3NzdWkgdGlwbywgZXN0aWxvIGUgw61jb25lIHByZWRlZmluaWRvcy5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYXNzd29yZC1iYXNpY1wiIHRpdGxlPVwiUE8gUGFzc3dvcmQgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYXNzd29yZC1iYXNpYy9zYW1wbGUtcG8tcGFzc3dvcmQtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhc3N3b3JkLWJhc2ljL3NhbXBsZS1wby1wYXNzd29yZC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYXNzd29yZC1sYWJzXCIgdGl0bGU9XCJQTyBQYXNzd29yZCBMYWJzXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFzc3dvcmQtbGFicy9zYW1wbGUtcG8tcGFzc3dvcmQtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFzc3dvcmQtbGFicy9zYW1wbGUtcG8tcGFzc3dvcmQtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYXNzd29yZC1yZXNldFwiIHRpdGxlPVwiUE8gUGFzc3dvcmQgLSBSZXNldFwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhc3N3b3JkLXJlc2V0L3NhbXBsZS1wby1wYXNzd29yZC1yZXNldC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFzc3dvcmQtcmVzZXQvc2FtcGxlLXBvLXBhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb1Bhc3N3b3JkQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUG9QYXNzd29yZENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQb1Bhc3N3b3JkQ29tcG9uZW50IGV4dGVuZHMgUG9JbnB1dEdlbmVyaWMge1xuICBwcml2YXRlIF9oaWRlUGFzc3dvcmRQZWVrPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIHR5cGUgPSAncGFzc3dvcmQnO1xuICB2aXNpYmxlUGFzc3dvcmQgPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBQZXJtaXRlIGVzY29uZGVyIGEgZnVuw6fDo28gZGUgZXNwaWFyIGEgc2VuaGEgZGlnaXRhZGEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1oaWRlLXBhc3N3b3JkLXBlZWsnKSBzZXQgaGlkZVBhc3N3b3JkUGVlayh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2hpZGVQYXNzd29yZFBlZWsgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMudmlzaWJsZVBhc3N3b3JkID0gZmFsc2U7XG4gICAgICB0aGlzLnR5cGUgPSAncGFzc3dvcmQnO1xuICAgIH1cbiAgfVxuXG4gIGdldCBoaWRlUGFzc3dvcmRQZWVrKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9oaWRlUGFzc3dvcmRQZWVrO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpIHtcbiAgICBzdXBlcihlbCk7XG4gIH1cblxuICBleHRyYVZhbGlkYXRpb24oYzogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnkgfSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBzaG93UGFzc3dvcmQoKSB7XG4gICAgdGhpcy52aXNpYmxlUGFzc3dvcmQgPSAhdGhpcy52aXNpYmxlUGFzc3dvcmQ7XG4gICAgdGhpcy50eXBlID0gdGhpcy50eXBlID09PSAncGFzc3dvcmQnID8gJ3RleHQnIDogJ3Bhc3N3b3JkJztcbiAgfVxufVxuIl19