import { PoUploadStatus } from './po-upload-status.enum';
// Classe respons√°vel pelo arquivo do PO Upload
var PoUploadFile = /** @class */ (function () {
    function PoUploadFile(file) {
        if (file) {
            this.name = file.name;
            this.displayName = file.name + " - " + this.getFileSize(file.size);
            this.extension = this.getExtension(file.name);
            this.size = file.size;
            this.rawFile = file;
            this.uid = this.generateUUID();
            this.status = PoUploadStatus.None;
        }
    }
    PoUploadFile.prototype.getExtension = function (value) {
        if (value) {
            var extension = value.substr(value.lastIndexOf('.'));
            return extension.toLowerCase();
        }
        return '';
    };
    PoUploadFile.prototype.generateUUID = function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    };
    // Retorna o tamanho do arquivo em KBytes.
    PoUploadFile.prototype.getFileSize = function (size) {
        var kbSize = 0;
        if (size) {
            kbSize = Math.ceil(size / 1024);
        }
        return kbSize + " KB";
    };
    return PoUploadFile;
}());
export { PoUploadFile };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFekQsK0NBQStDO0FBQy9DO0lBb0JFLHNCQUFZLElBQVM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFdBQVcsR0FBTSxJQUFJLENBQUMsSUFBSSxXQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRyxDQUFDO1lBQ25FLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQztTQUNuQztJQUNILENBQUM7SUFFTyxtQ0FBWSxHQUFwQixVQUFxQixLQUFhO1FBQ2hDLElBQUksS0FBSyxFQUFFO1lBQ1QsSUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdkQsT0FBTyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDaEM7UUFFRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFTyxtQ0FBWSxHQUFwQjtRQUNFLFNBQVMsRUFBRTtZQUNULE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUM7aUJBQzdDLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUJBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLENBQUM7UUFFRCxPQUFPLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUN2RixDQUFDO0lBRUQsMENBQTBDO0lBQ2xDLGtDQUFXLEdBQW5CLFVBQW9CLElBQVk7UUFDOUIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRWYsSUFBSSxJQUFJLEVBQUU7WUFDUixNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUM7U0FDakM7UUFFRCxPQUFVLE1BQU0sUUFBSyxDQUFDO0lBQ3hCLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUE3REQsSUE2REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb1VwbG9hZFN0YXR1cyB9IGZyb20gJy4vcG8tdXBsb2FkLXN0YXR1cy5lbnVtJztcblxuLy8gQ2xhc3NlIHJlc3BvbnPDoXZlbCBwZWxvIGFycXVpdm8gZG8gUE8gVXBsb2FkXG5leHBvcnQgY2xhc3MgUG9VcGxvYWRGaWxlIHtcbiAgLy8gTm9tZSBkbyBhcnF1aXZvLlxuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICAvLyBBcnF1aXZvIGJydXRvLlxuICBwdWJsaWMgcmF3RmlsZTogRmlsZTtcbiAgLy8gU3RhdHVzIGRlIGVudmlvIGRvIGFycXVpdm8uXG4gIHB1YmxpYyBzdGF0dXM/OiBQb1VwbG9hZFN0YXR1cztcbiAgLy8gSWRlbnRpZmljYWRvciBkbyBhcnF1aXZvLlxuICBwdWJsaWMgdWlkOiBzdHJpbmc7XG4gIC8vIEV4dGVuc8OjbyBkbyBhcnF1aXZvLlxuICBwdWJsaWMgZXh0ZW5zaW9uOiBzdHJpbmc7XG4gIC8vIFRhbWFuaG8gZG8gYXJxdWl2byBlbSBieXRlcztcbiAgcHVibGljIHNpemU6IG51bWJlcjtcblxuICAvLyBwcm9wcmllZGFkZSBwYXJhIGF1eGlsaWFyIGEgZXhpYmnDp8OjbyBkbyB0ZXh0byBubyBjb21wb25lbnRlIHByb2dyZXNzXG4gIGRpc3BsYXlOYW1lPzogc3RyaW5nO1xuXG4gIC8vIHBvcmNlbnRhZ2VtIHV0aWxpemFkYSBwYXJhIHJlcGFzc2FyIGFvIGNvbXBvbmVudGUgcHJvZ3Jlc3NcbiAgcGVyY2VudD86IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihmaWxlOiBhbnkpIHtcbiAgICBpZiAoZmlsZSkge1xuICAgICAgdGhpcy5uYW1lID0gZmlsZS5uYW1lO1xuICAgICAgdGhpcy5kaXNwbGF5TmFtZSA9IGAke2ZpbGUubmFtZX0gLSAke3RoaXMuZ2V0RmlsZVNpemUoZmlsZS5zaXplKX1gO1xuICAgICAgdGhpcy5leHRlbnNpb24gPSB0aGlzLmdldEV4dGVuc2lvbihmaWxlLm5hbWUpO1xuICAgICAgdGhpcy5zaXplID0gZmlsZS5zaXplO1xuICAgICAgdGhpcy5yYXdGaWxlID0gZmlsZTtcbiAgICAgIHRoaXMudWlkID0gdGhpcy5nZW5lcmF0ZVVVSUQoKTtcbiAgICAgIHRoaXMuc3RhdHVzID0gUG9VcGxvYWRTdGF0dXMuTm9uZTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldEV4dGVuc2lvbih2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBjb25zdCBleHRlbnNpb24gPSB2YWx1ZS5zdWJzdHIodmFsdWUubGFzdEluZGV4T2YoJy4nKSk7XG4gICAgICByZXR1cm4gZXh0ZW5zaW9uLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBnZW5lcmF0ZVVVSUQoKSB7XG4gICAgZnVuY3Rpb24gczQoKSB7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcigoMSArIE1hdGgucmFuZG9tKCkpICogMHgxMDAwMClcbiAgICAgICAgLnRvU3RyaW5nKDE2KVxuICAgICAgICAuc3Vic3RyaW5nKDEpO1xuICAgIH1cblxuICAgIHJldHVybiBzNCgpICsgczQoKSArICctJyArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArIHM0KCkgKyBzNCgpICsgczQoKTtcbiAgfVxuXG4gIC8vIFJldG9ybmEgbyB0YW1hbmhvIGRvIGFycXVpdm8gZW0gS0J5dGVzLlxuICBwcml2YXRlIGdldEZpbGVTaXplKHNpemU6IG51bWJlcik6IHN0cmluZyB7XG4gICAgbGV0IGtiU2l6ZSA9IDA7XG5cbiAgICBpZiAoc2l6ZSkge1xuICAgICAga2JTaXplID0gTWF0aC5jZWlsKHNpemUgLyAxMDI0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYCR7a2JTaXplfSBLQmA7XG4gIH1cbn1cbiJdfQ==