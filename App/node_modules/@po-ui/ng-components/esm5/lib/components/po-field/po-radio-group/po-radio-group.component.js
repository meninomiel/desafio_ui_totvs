import { __decorate, __extends, __metadata } from "tslib";
import { AfterViewInit, Component, DoCheck, ElementRef, forwardRef, Input, IterableDiffers, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { removeDuplicatedOptions } from '../../../utils/util';
import { PoRadioGroupBaseComponent } from './po-radio-group-base.component';
/**
 * @docsExtends PoRadioGroupBaseComponent
 *
 * @example
 *
 * <example name="po-radio-group-basic" title="PO Radio Group Basic">
 *  <file name="sample-po-radio-group-basic/sample-po-radio-group-basic.component.html"> </file>
 *  <file name="sample-po-radio-group-basic/sample-po-radio-group-basic.component.ts"> </file>
 *  <file name="sample-po-radio-group-basic/sample-po-radio-group-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-radio-group-basic/sample-po-radio-group-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-radio-group-labs" title="PO Radio Group Labs">
 *  <file name="sample-po-radio-group-labs/sample-po-radio-group-labs.component.html"> </file>
 *  <file name="sample-po-radio-group-labs/sample-po-radio-group-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-radio-group-translator" title="PO Radio Group - Translator">
 *  <file name="sample-po-radio-group-translator/sample-po-radio-group-translator.component.html"> </file>
 *  <file name="sample-po-radio-group-translator/sample-po-radio-group-translator.component.ts"> </file>
 * </example>
 *
 * <example name="po-radio-group-translator-reactive-form" title="PO Radio Group - Translator Reactive Form">
 *  <file name="sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.html"> </file>
 *  <file name="sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.ts"> </file>
 * </example>
 *
 */
var PoRadioGroupComponent = /** @class */ (function (_super) {
    __extends(PoRadioGroupComponent, _super);
    function PoRadioGroupComponent(differs) {
        var _this = _super.call(this) || this;
        _this.differ = differs.find([]).create(null);
        return _this;
    }
    PoRadioGroupComponent_1 = PoRadioGroupComponent;
    PoRadioGroupComponent.prototype.ngAfterViewInit = function () {
        if (this.autoFocus) {
            this.focus();
        }
    };
    PoRadioGroupComponent.prototype.ngDoCheck = function () {
        var change = this.differ.diff(this.options);
        if (change) {
            removeDuplicatedOptions(this.options);
        }
    };
    PoRadioGroupComponent.prototype.eventClick = function (value, disabled) {
        if (!disabled) {
            this.changeValue(value);
        }
    };
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoRadioGroupComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoRadioGroupComponent, { static: true }) radio: PoRadioGroupComponent;
     *
     * focusRadio() {
     *   this.radio.focus();
     * }
     * ```
     */
    PoRadioGroupComponent.prototype.focus = function () {
        var _this = this;
        if (this.radioLabels && !this.disabled) {
            var radioLabel = this.radioLabels.find(function (_, index) { return !_this.options[index].disabled; });
            if (radioLabel) {
                radioLabel.nativeElement.focus();
            }
        }
    };
    PoRadioGroupComponent.prototype.getElementByValue = function (value) {
        return this.inputEl.nativeElement.querySelector("input[value='" + value + "']");
    };
    PoRadioGroupComponent.prototype.onKeyUp = function (event, value) {
        var key = event.keyCode || event.which;
        if (this.isArrowKey(key)) {
            this.changeValue(value);
        }
    };
    PoRadioGroupComponent.prototype.isArrowKey = function (key) {
        return key >= 37 && key <= 40;
    };
    var PoRadioGroupComponent_1;
    PoRadioGroupComponent.ctorParameters = function () { return [
        { type: IterableDiffers }
    ]; };
    __decorate([
        Input('p-label'),
        __metadata("design:type", String)
    ], PoRadioGroupComponent.prototype, "label", void 0);
    __decorate([
        Input('p-help'),
        __metadata("design:type", String)
    ], PoRadioGroupComponent.prototype, "help", void 0);
    __decorate([
        ViewChild('inp', { read: ElementRef, static: true }),
        __metadata("design:type", ElementRef)
    ], PoRadioGroupComponent.prototype, "inputEl", void 0);
    __decorate([
        ViewChildren('inputRadio'),
        __metadata("design:type", QueryList)
    ], PoRadioGroupComponent.prototype, "radioLabels", void 0);
    PoRadioGroupComponent = PoRadioGroupComponent_1 = __decorate([
        Component({
            selector: 'po-radio-group',
            template: "<po-field-container [p-help]=\"help\" [p-label]=\"label\" [p-optional]=\"!required && optional\">\n  <div class=\"po-row po-pt-1 po-pb-1\" #inp>\n    <div *ngFor=\"let option of options\" class=\"po-radio-group-item po-md-{{ mdColumns }} po-lg-{{ columns }}\">\n      <input\n        #inputRadio\n        class=\"po-radio-group-input\"\n        type=\"radio\"\n        [attr.name]=\"name\"\n        [checked]=\"value === option.value\"\n        [class.po-radio-group-input-checked]=\"value === option.value\"\n        [disabled]=\"option.disabled === true || disabled\"\n        [required]=\"required\"\n        [value]=\"option.value\"\n        (keyup)=\"onKeyUp($event, option.value)\"\n      />\n      <label\n        class=\"po-radio-group-label\"\n        [class.po-clickable]=\"!inputRadio.disabled\"\n        [for]=\"name\"\n        (click)=\"eventClick(option.value, option.disabled === true || disabled)\"\n      >\n        {{ option.label }}\n      </label>\n    </div>\n  </div>\n  <po-field-container-bottom></po-field-container-bottom>\n</po-field-container>\n",
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return PoRadioGroupComponent_1; }),
                    multi: true
                },
                {
                    provide: NG_VALIDATORS,
                    useExisting: forwardRef(function () { return PoRadioGroupComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [IterableDiffers])
    ], PoRadioGroupComponent);
    return PoRadioGroupComponent;
}(PoRadioGroupBaseComponent));
export { PoRadioGroupComponent };
//# sourceMappingURL=data:application/json;base64,