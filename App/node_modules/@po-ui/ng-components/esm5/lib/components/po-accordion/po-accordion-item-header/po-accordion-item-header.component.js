import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
var PoAccordionItemHeaderComponent = /** @class */ (function () {
    function PoAccordionItemHeaderComponent() {
        this.expanded = false;
        this.toggle = new EventEmitter();
    }
    PoAccordionItemHeaderComponent.prototype.onClick = function () {
        this.expanded = !this.expanded;
        this.toggle.emit(this.expanded);
    };
    __decorate([
        Input('p-expanded'),
        __metadata("design:type", Boolean)
    ], PoAccordionItemHeaderComponent.prototype, "expanded", void 0);
    __decorate([
        Input('p-label'),
        __metadata("design:type", String)
    ], PoAccordionItemHeaderComponent.prototype, "label", void 0);
    __decorate([
        Output('p-toggle'),
        __metadata("design:type", Object)
    ], PoAccordionItemHeaderComponent.prototype, "toggle", void 0);
    PoAccordionItemHeaderComponent = __decorate([
        Component({
            selector: 'po-accordion-item-header',
            template: "<header class=\"po-accordion-item-header\">\n  <button class=\"po-accordion-item-header-button po-clickable\" (click)=\"onClick()\">\n    <div class=\"po-text-ellipsis po-accordion-item-header-title\">{{ label }}</div>\n    <span #icon class=\"po-icon po-accordion-item-header-icon po-icon-arrow-down\"> </span>\n  </button>\n</header>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], PoAccordionItemHeaderComponent);
    return PoAccordionItemHeaderComponent;
}());
export { PoAccordionItemHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYWNjb3JkaW9uL3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlci9wby1hY2NvcmRpb24taXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2hHO0lBQUE7UUFDdUIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUkzQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQU8zRCxDQUFDO0lBTEMsZ0RBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBRS9CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBVm9CO1FBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7O29FQUEyQjtJQUU3QjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOztpRUFBZTtJQUVaO1FBQW5CLE1BQU0sQ0FBQyxVQUFVLENBQUM7O2tFQUFzQztJQUw5Qyw4QkFBOEI7UUFMMUMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyw2VkFBc0Q7WUFDdEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztPQUNXLDhCQUE4QixDQVkxQztJQUFELHFDQUFDO0NBQUEsQUFaRCxJQVlDO1NBWlksOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWFjY29yZGlvbi1pdGVtLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAncG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9BY2NvcmRpb25JdGVtSGVhZGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCdwLWV4cGFuZGVkJykgZXhwYW5kZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIEBPdXRwdXQoJ3AtdG9nZ2xlJykgdG9nZ2xlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIG9uQ2xpY2soKSB7XG4gICAgdGhpcy5leHBhbmRlZCA9ICF0aGlzLmV4cGFuZGVkO1xuXG4gICAgdGhpcy50b2dnbGUuZW1pdCh0aGlzLmV4cGFuZGVkKTtcbiAgfVxufVxuIl19