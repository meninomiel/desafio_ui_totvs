import { __decorate, __extends, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';
import { PoDialogBaseService } from './po-dialog-base.service';
import { PoDialogComponent } from './po-dialog.component';
/**
 * @docsExtends PoDialogBaseService
 *
 * @example
 *
 * <example name="po-dialog-basic" title="PO Dialog Basic">
 *  <file name="sample-po-dialog-basic/sample-po-dialog-basic.component.html"> </file>
 *  <file name="sample-po-dialog-basic/sample-po-dialog-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-dialog-labs" title="PO Dialog Labs">
 *  <file name="sample-po-dialog-labs/sample-po-dialog-labs.component.html"> </file>
 *  <file name="sample-po-dialog-labs/sample-po-dialog-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-dialog-cancel-credit-card" title="PO Dialog - Cancel Credit Card">
 *  <file name="sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.html"> </file>
 *  <file name="sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.ts"> </file>
 * </example>
 */
var PoDialogService = /** @class */ (function (_super) {
    __extends(PoDialogService, _super);
    function PoDialogService(poComponentInjector) {
        var _this = _super.call(this) || this;
        _this.poComponentInjector = poComponentInjector;
        return _this;
    }
    PoDialogService.prototype.openDialog = function (dialogType, dialogOptions) {
        var componentRef = this.poComponentInjector.createComponentInApplication(PoDialogComponent);
        componentRef.changeDetectorRef.detectChanges();
        componentRef.instance.open(dialogOptions, dialogType, componentRef);
    };
    PoDialogService.ctorParameters = function () { return [
        { type: PoComponentInjectorService }
    ]; };
    PoDialogService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [PoComponentInjectorService])
    ], PoDialogService);
    return PoDialogService;
}(PoDialogBaseService));
export { PoDialogService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlhbG9nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9wby1kaWFsb2cvcG8tZGlhbG9nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBRXpELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBRXRHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRzFEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBRUg7SUFBcUMsbUNBQW1CO0lBQ3RELHlCQUFvQixtQkFBK0M7UUFBbkUsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLHlCQUFtQixHQUFuQixtQkFBbUIsQ0FBNEI7O0lBRW5FLENBQUM7SUFFRCxvQ0FBVSxHQUFWLFVBQVcsVUFBd0IsRUFBRSxhQUE0RDtRQUMvRixJQUFNLFlBQVksR0FBc0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLDRCQUE0QixDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDakgsWUFBWSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQy9DLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDdEUsQ0FBQzs7Z0JBUndDLDBCQUEwQjs7SUFEeEQsZUFBZTtRQUQzQixVQUFVLEVBQUU7eUNBRThCLDBCQUEwQjtPQUR4RCxlQUFlLENBVTNCO0lBQUQsc0JBQUM7Q0FBQSxBQVZELENBQXFDLG1CQUFtQixHQVV2RDtTQVZZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBDb21wb25lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Db21wb25lbnRJbmplY3RvclNlcnZpY2UgfSBmcm9tICcuLy4uL3BvLWNvbXBvbmVudC1pbmplY3Rvci9wby1jb21wb25lbnQtaW5qZWN0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBQb0RpYWxvZ0FsZXJ0T3B0aW9ucywgUG9EaWFsb2dDb25maXJtT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1kaWFsb2cuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRGlhbG9nQmFzZVNlcnZpY2UgfSBmcm9tICcuL3BvLWRpYWxvZy1iYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9EaWFsb2dDb21wb25lbnQgfSBmcm9tICcuL3BvLWRpYWxvZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9EaWFsb2dUeXBlIH0gZnJvbSAnLi9wby1kaWFsb2cuZW51bSc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvRGlhbG9nQmFzZVNlcnZpY2VcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kaWFsb2ctYmFzaWNcIiB0aXRsZT1cIlBPIERpYWxvZyBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGlhbG9nLWJhc2ljL3NhbXBsZS1wby1kaWFsb2ctYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGlhbG9nLWJhc2ljL3NhbXBsZS1wby1kaWFsb2ctYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZGlhbG9nLWxhYnNcIiB0aXRsZT1cIlBPIERpYWxvZyBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kaWFsb2ctbGFicy9zYW1wbGUtcG8tZGlhbG9nLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGlhbG9nLWxhYnMvc2FtcGxlLXBvLWRpYWxvZy1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRpYWxvZy1jYW5jZWwtY3JlZGl0LWNhcmRcIiB0aXRsZT1cIlBPIERpYWxvZyAtIENhbmNlbCBDcmVkaXQgQ2FyZFwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGlhbG9nLWNhbmNlbC1jcmVkaXQtY2FyZC9zYW1wbGUtcG8tZGlhbG9nLWNhbmNlbC1jcmVkaXQtY2FyZC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kaWFsb2ctY2FuY2VsLWNyZWRpdC1jYXJkL3NhbXBsZS1wby1kaWFsb2ctY2FuY2VsLWNyZWRpdC1jYXJkLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb0RpYWxvZ1NlcnZpY2UgZXh0ZW5kcyBQb0RpYWxvZ0Jhc2VTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwb0NvbXBvbmVudEluamVjdG9yOiBQb0NvbXBvbmVudEluamVjdG9yU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBvcGVuRGlhbG9nKGRpYWxvZ1R5cGU6IFBvRGlhbG9nVHlwZSwgZGlhbG9nT3B0aW9uczogUG9EaWFsb2dBbGVydE9wdGlvbnMgfCBQb0RpYWxvZ0NvbmZpcm1PcHRpb25zKTogdm9pZCB7XG4gICAgY29uc3QgY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8YW55PiA9IHRoaXMucG9Db21wb25lbnRJbmplY3Rvci5jcmVhdGVDb21wb25lbnRJbkFwcGxpY2F0aW9uKFBvRGlhbG9nQ29tcG9uZW50KTtcbiAgICBjb21wb25lbnRSZWYuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIGNvbXBvbmVudFJlZi5pbnN0YW5jZS5vcGVuKGRpYWxvZ09wdGlvbnMsIGRpYWxvZ1R5cGUsIGNvbXBvbmVudFJlZik7XG4gIH1cbn1cbiJdfQ==