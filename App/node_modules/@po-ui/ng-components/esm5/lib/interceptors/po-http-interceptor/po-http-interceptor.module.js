import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { PoAccordionModule } from '../../components/po-accordion/po-accordion.module';
import { PoModalModule } from '../../components/po-modal/po-modal.module';
import { PoNotificationModule } from '../../services/po-notification/po-notification.module';
import { PoNotificationService } from './../../services/po-notification/po-notification.service';
import { PoTagModule } from '../../components/po-tag/po-tag.module';
import { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';
import { PoHttpInterceptorService } from './po-http-interceptor.service';
var PoHttpInterceptorModule = /** @class */ (function () {
    function PoHttpInterceptorModule() {
    }
    PoHttpInterceptorModule = __decorate([
        NgModule({
            imports: [CommonModule, PoAccordionModule, PoModalModule, PoNotificationModule, PoTagModule],
            declarations: [PoHttpInterceptorDetailComponent],
            providers: [
                PoHttpInterceptorService,
                PoNotificationService,
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: PoHttpInterceptorService,
                    multi: true
                }
            ]
        })
    ], PoHttpInterceptorModule);
    return PoHttpInterceptorModule;
}());
export { PoHttpInterceptorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taHR0cC1pbnRlcmNlcHRvci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmNlcHRvcnMvcG8taHR0cC1pbnRlcmNlcHRvci9wby1odHRwLWludGVyY2VwdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDdEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUVwRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUNySCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQWV6RTtJQUFBO0lBQXNDLENBQUM7SUFBMUIsdUJBQXVCO1FBYm5DLFFBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsV0FBVyxDQUFDO1lBQzVGLFlBQVksRUFBRSxDQUFDLGdDQUFnQyxDQUFDO1lBQ2hELFNBQVMsRUFBRTtnQkFDVCx3QkFBd0I7Z0JBQ3hCLHFCQUFxQjtnQkFDckI7b0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtvQkFDMUIsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7T0FDVyx1QkFBdUIsQ0FBRztJQUFELDhCQUFDO0NBQUEsQUFBdkMsSUFBdUM7U0FBMUIsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9BY2NvcmRpb25Nb2R1bGUgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3BvLWFjY29yZGlvbi9wby1hY2NvcmRpb24ubW9kdWxlJztcbmltcG9ydCB7IFBvTW9kYWxNb2R1bGUgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3BvLW1vZGFsL3BvLW1vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBQb05vdGlmaWNhdGlvbk1vZHVsZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3BvLW5vdGlmaWNhdGlvbi9wby1ub3RpZmljYXRpb24ubW9kdWxlJztcbmltcG9ydCB7IFBvTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvVGFnTW9kdWxlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9wby10YWcvcG8tdGFnLm1vZHVsZSc7XG5cbmltcG9ydCB7IFBvSHR0cEludGVyY2VwdG9yRGV0YWlsQ29tcG9uZW50IH0gZnJvbSAnLi9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9IdHRwSW50ZXJjZXB0b3JTZXJ2aWNlIH0gZnJvbSAnLi9wby1odHRwLWludGVyY2VwdG9yLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQb0FjY29yZGlvbk1vZHVsZSwgUG9Nb2RhbE1vZHVsZSwgUG9Ob3RpZmljYXRpb25Nb2R1bGUsIFBvVGFnTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbUG9IdHRwSW50ZXJjZXB0b3JEZXRhaWxDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICBQb0h0dHBJbnRlcmNlcHRvclNlcnZpY2UsXG4gICAgUG9Ob3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLFxuICAgICAgdXNlQ2xhc3M6IFBvSHR0cEludGVyY2VwdG9yU2VydmljZSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFBvSHR0cEludGVyY2VwdG9yTW9kdWxlIHt9XG4iXX0=