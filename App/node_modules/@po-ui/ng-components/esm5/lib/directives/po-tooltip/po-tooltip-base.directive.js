import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';
var CONTENT_MAX_LENGTH = 140;
var PO_TOOLTIP_POSITION_DEFAULT = 'bottom';
/**
 * @description
 *
 * A diretiva po-tooltip deve ser utilizada para oferecer informações adicionais quando os usuários
 * passam o mouse sobre o elemento alvo ao qual ela está atribuída.
 *
 * O conteúdo é formado por um pequeno texto que deve contribuir para uma tomada de decisão ou
 * orientação do usuário. A ativação dele pode estar em qualquer componente ou tag HTML.
 *
 * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como
 * conteúdo deve-se utilizar o [**po-popover**](https://po-ui.io/documentation/po-popover?view=doc).
 */
var PoTooltipBaseDirective = /** @class */ (function () {
    function PoTooltipBaseDirective() {
        this._tooltip = '';
        this._tooltipPosition = 'bottom';
    }
    Object.defineProperty(PoTooltipBaseDirective.prototype, "tooltip", {
        get: function () {
            return this._tooltip;
        },
        /**
         * @description
         *
         * Habilita e atribui um texto ao po-tooltip, com limitação de 140 caracteres.
         */
        set: function (tooltip) {
            if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {
                this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);
            }
            else {
                this._tooltip = tooltip;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTooltipBaseDirective.prototype, "tooltipPosition", {
        get: function () {
            return this._tooltipPosition;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define a posição que o po-tooltip abrirá em relação ao componente alvo. Sugere-se que seja
         * usada a orientação "bottom" (abaixo), porém o mesmo é flexível e será rotacionado
         * automaticamente para se adequar a tela, caso necessário.
         *
         * Posições válidas:
         * - `right`: Posiciona o po-tooltip no lado direito do componente alvo.
         * - `right-bottom`: Posiciona o po-tooltip no lado direito inferior do componente alvo.
         * - `right-top`: Posiciona o po-tooltip no lado direito superior do componente alvo.
         * - `bottom`: Posiciona o po-tooltip abaixo do componente alvo.
         * - `bottom-left`: Posiciona o po-tooltip abaixo e à esquerda do componente alvo.
         * - `bottom-right`: Posiciona o po-tooltip abaixo e à direita do componente alvo.
         * - `left`: Posiciona o po-tooltip no lado esquerdo do componente alvo.
         * - `left-top`: Posiciona o po-tooltip no lado esquerdo superior do componente alvo.
         * - `left-bottom`: Posiciona o po-tooltip no lado esquerdo inferior do componente alvo.
         * - `top`: Posiciona o po-tooltip acima do componente alvo.
         * - `top-right`: Posiciona o po-tooltip acima e à direita do componente alvo.
         * - `top-left`: Posiciona o po-tooltip acima e à esquerda do componente alvo.
         *
         * @default bottom
         */
        set: function (position) {
            this._tooltipPosition = PO_CONTROL_POSITIONS.includes(position) ? position : PO_TOOLTIP_POSITION_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-tooltip'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoTooltipBaseDirective.prototype, "tooltip", null);
    __decorate([
        Input('p-tooltip-position'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoTooltipBaseDirective.prototype, "tooltipPosition", null);
    PoTooltipBaseDirective = __decorate([
        Directive()
    ], PoTooltipBaseDirective);
    return PoTooltipBaseDirective;
}());
export { PoTooltipBaseDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbHRpcC1iYXNlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvcG8tdG9vbHRpcC9wby10b29sdGlwLWJhc2UuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQztBQUUxRyxJQUFNLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztBQUMvQixJQUFNLDJCQUEyQixHQUFHLFFBQVEsQ0FBQztBQUU3Qzs7Ozs7Ozs7Ozs7R0FXRztBQUdIO0lBQUE7UUFDVSxhQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3BCLHFCQUFnQixHQUFZLFFBQVEsQ0FBQztJQWlEakQsQ0FBQztJQTFDcUIsc0JBQUksMkNBQU87YUFPL0I7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQztRQWREOzs7O1dBSUc7YUFDaUIsVUFBWSxPQUFlO1lBQzdDLElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsa0JBQWtCLEVBQUU7Z0JBQ2xELElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsa0JBQWtCLENBQUMsQ0FBQzthQUMxRDtpQkFBTTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQzthQUN6QjtRQUNILENBQUM7OztPQUFBO0lBOEI0QixzQkFBSSxtREFBZTthQUdoRDtZQUNFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQy9CLENBQUM7UUE5QkQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztXQXdCRzthQUMwQixVQUFvQixRQUFnQjtZQUMvRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsb0JBQW9CLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO1FBQzNHLENBQUM7OztPQUFBO0lBdENtQjtRQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDOzs7eURBTWxCO0lBOEI0QjtRQUE1QixLQUFLLENBQUMsb0JBQW9CLENBQUM7OztpRUFFM0I7SUEvQ1Usc0JBQXNCO1FBRGxDLFNBQVMsRUFBRTtPQUNDLHNCQUFzQixDQW1EbEM7SUFBRCw2QkFBQztDQUFBLEFBbkRELElBbURDO1NBbkRZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUE9fQ09OVFJPTF9QT1NJVElPTlMgfSBmcm9tICcuLy4uLy4uL3NlcnZpY2VzL3BvLWNvbnRyb2wtcG9zaXRpb24vcG8tY29udHJvbC1wb3NpdGlvbi5jb25zdGFudHMnO1xuXG5jb25zdCBDT05URU5UX01BWF9MRU5HVEggPSAxNDA7XG5jb25zdCBQT19UT09MVElQX1BPU0lUSU9OX0RFRkFVTFQgPSAnYm90dG9tJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBBIGRpcmV0aXZhIHBvLXRvb2x0aXAgZGV2ZSBzZXIgdXRpbGl6YWRhIHBhcmEgb2ZlcmVjZXIgaW5mb3JtYcOnw7VlcyBhZGljaW9uYWlzIHF1YW5kbyBvcyB1c3XDoXJpb3NcbiAqIHBhc3NhbSBvIG1vdXNlIHNvYnJlIG8gZWxlbWVudG8gYWx2byBhbyBxdWFsIGVsYSBlc3TDoSBhdHJpYnXDrWRhLlxuICpcbiAqIE8gY29udGXDumRvIMOpIGZvcm1hZG8gcG9yIHVtIHBlcXVlbm8gdGV4dG8gcXVlIGRldmUgY29udHJpYnVpciBwYXJhIHVtYSB0b21hZGEgZGUgZGVjaXPDo28gb3VcbiAqIG9yaWVudGHDp8OjbyBkbyB1c3XDoXJpby4gQSBhdGl2YcOnw6NvIGRlbGUgcG9kZSBlc3RhciBlbSBxdWFscXVlciBjb21wb25lbnRlIG91IHRhZyBIVE1MLlxuICpcbiAqIFBhcmEgdGV4dG9zIG1haW9yZXMgb3Ugbm8gY2FzbyBkZSBoYXZlciBhIG5lY2Vzc2lkYWRlIGRlIHV0aWxpemFyIGFsZ3VtIG91dHJvIGVsZW1lbnRvIGNvbW9cbiAqIGNvbnRlw7pkbyBkZXZlLXNlIHV0aWxpemFyIG8gWyoqcG8tcG9wb3ZlcioqXShodHRwczovL3BvLXVpLmlvL2RvY3VtZW50YXRpb24vcG8tcG9wb3Zlcj92aWV3PWRvYykuXG4gKi9cblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9Ub29sdGlwQmFzZURpcmVjdGl2ZSB7XG4gIHByaXZhdGUgX3Rvb2x0aXA6IHN0cmluZyA9ICcnO1xuICBwcm90ZWN0ZWQgX3Rvb2x0aXBQb3NpdGlvbj86IHN0cmluZyA9ICdib3R0b20nO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogSGFiaWxpdGEgZSBhdHJpYnVpIHVtIHRleHRvIGFvIHBvLXRvb2x0aXAsIGNvbSBsaW1pdGHDp8OjbyBkZSAxNDAgY2FyYWN0ZXJlcy5cbiAgICovXG4gIEBJbnB1dCgncC10b29sdGlwJykgc2V0IHRvb2x0aXAodG9vbHRpcDogc3RyaW5nKSB7XG4gICAgaWYgKHRvb2x0aXAgJiYgdG9vbHRpcC5sZW5ndGggPiBDT05URU5UX01BWF9MRU5HVEgpIHtcbiAgICAgIHRoaXMuX3Rvb2x0aXAgPSB0b29sdGlwLnN1YnN0cmluZygwLCBDT05URU5UX01BWF9MRU5HVEgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl90b29sdGlwID0gdG9vbHRpcDtcbiAgICB9XG4gIH1cbiAgZ2V0IHRvb2x0aXAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Rvb2x0aXA7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgYSBwb3Npw6fDo28gcXVlIG8gcG8tdG9vbHRpcCBhYnJpcsOhIGVtIHJlbGHDp8OjbyBhbyBjb21wb25lbnRlIGFsdm8uIFN1Z2VyZS1zZSBxdWUgc2VqYVxuICAgKiB1c2FkYSBhIG9yaWVudGHDp8OjbyBcImJvdHRvbVwiIChhYmFpeG8pLCBwb3LDqW0gbyBtZXNtbyDDqSBmbGV4w612ZWwgZSBzZXLDoSByb3RhY2lvbmFkb1xuICAgKiBhdXRvbWF0aWNhbWVudGUgcGFyYSBzZSBhZGVxdWFyIGEgdGVsYSwgY2FzbyBuZWNlc3PDoXJpby5cbiAgICpcbiAgICogUG9zacOnw7VlcyB2w6FsaWRhczpcbiAgICogLSBgcmlnaHRgOiBQb3NpY2lvbmEgbyBwby10b29sdGlwIG5vIGxhZG8gZGlyZWl0byBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYHJpZ2h0LWJvdHRvbWA6IFBvc2ljaW9uYSBvIHBvLXRvb2x0aXAgbm8gbGFkbyBkaXJlaXRvIGluZmVyaW9yIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICogLSBgcmlnaHQtdG9wYDogUG9zaWNpb25hIG8gcG8tdG9vbHRpcCBubyBsYWRvIGRpcmVpdG8gc3VwZXJpb3IgZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgKiAtIGBib3R0b21gOiBQb3NpY2lvbmEgbyBwby10b29sdGlwIGFiYWl4byBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYGJvdHRvbS1sZWZ0YDogUG9zaWNpb25hIG8gcG8tdG9vbHRpcCBhYmFpeG8gZSDDoCBlc3F1ZXJkYSBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYGJvdHRvbS1yaWdodGA6IFBvc2ljaW9uYSBvIHBvLXRvb2x0aXAgYWJhaXhvIGUgw6AgZGlyZWl0YSBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYGxlZnRgOiBQb3NpY2lvbmEgbyBwby10b29sdGlwIG5vIGxhZG8gZXNxdWVyZG8gZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgKiAtIGBsZWZ0LXRvcGA6IFBvc2ljaW9uYSBvIHBvLXRvb2x0aXAgbm8gbGFkbyBlc3F1ZXJkbyBzdXBlcmlvciBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYGxlZnQtYm90dG9tYDogUG9zaWNpb25hIG8gcG8tdG9vbHRpcCBubyBsYWRvIGVzcXVlcmRvIGluZmVyaW9yIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICogLSBgdG9wYDogUG9zaWNpb25hIG8gcG8tdG9vbHRpcCBhY2ltYSBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAqIC0gYHRvcC1yaWdodGA6IFBvc2ljaW9uYSBvIHBvLXRvb2x0aXAgYWNpbWEgZSDDoCBkaXJlaXRhIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICogLSBgdG9wLWxlZnRgOiBQb3NpY2lvbmEgbyBwby10b29sdGlwIGFjaW1hIGUgw6AgZXNxdWVyZGEgZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgKlxuICAgKiBAZGVmYXVsdCBib3R0b21cbiAgICovXG4gIEBJbnB1dCgncC10b29sdGlwLXBvc2l0aW9uJykgc2V0IHRvb2x0aXBQb3NpdGlvbihwb3NpdGlvbjogc3RyaW5nKSB7XG4gICAgdGhpcy5fdG9vbHRpcFBvc2l0aW9uID0gUE9fQ09OVFJPTF9QT1NJVElPTlMuaW5jbHVkZXMocG9zaXRpb24pID8gcG9zaXRpb24gOiBQT19UT09MVElQX1BPU0lUSU9OX0RFRkFVTFQ7XG4gIH1cbiAgZ2V0IHRvb2x0aXBQb3NpdGlvbigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl90b29sdGlwUG9zaXRpb247XG4gIH1cbn1cbiJdfQ==