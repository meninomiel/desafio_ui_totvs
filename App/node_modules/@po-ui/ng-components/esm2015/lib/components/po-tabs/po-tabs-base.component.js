import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/**
 * @description
 *
 * O componente `po-tabs` é responsável por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,
 * ideal para facilitar a organização de conteúdos.
 *
 * Em dispositivos móveis o componente exibirá tadas as abas de maneira linear gerando um *scroll* na horizontal. Já em telas telas com
 * resoluções maiores, o componente exibirá até cinco abas normalmente, porém, à partir de seis abas o componente automaticamente torna
 * visível apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.
 *
 * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.
 *
 * É possível realizar a navegação entre as abas através da tecla TAB do teclado.
 * Caso uma aba estiver desabilitada, não receberá foco de navegação.
 *
 * #### Boas práticas
 *
 * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;
 * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.
 */
let PoTabsBaseComponent = class PoTabsBaseComponent {
    constructor() {
        this._small = false;
    }
    /**
     * @optinal
     *
     * @description
     *
     * Diminui o tamanho das abas.
     *
     * @default `false`
     */
    set small(value) {
        this._small = convertToBoolean(value);
    }
    get small() {
        return this._small;
    }
};
__decorate([
    Input('p-small'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoTabsBaseComponent.prototype, "small", null);
PoTabsBaseComponent = __decorate([
    Directive()
], PoTabsBaseComponent);
export { PoTabsBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFicy1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFicy9wby10YWJzLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUVILElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0lBQWhDO1FBQ1UsV0FBTSxHQUFhLEtBQUssQ0FBQztJQWtCbkMsQ0FBQztJQWhCQzs7Ozs7Ozs7T0FRRztJQUNlLElBQUksS0FBSyxDQUFDLEtBQWM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Q0FDRixDQUFBO0FBUG1CO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OztnREFFaEI7QUFkVSxtQkFBbUI7SUFEL0IsU0FBUyxFQUFFO0dBQ0MsbUJBQW1CLENBbUIvQjtTQW5CWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLXRhYnNgIMOpIHJlc3BvbnPDoXZlbCBwb3IgYWdydXBhciBbYWJhc10oL2RvY3VtZW50YXRpb24vcG8tdGFiKSBkaXNwb3N0YXMgbnVtYSBsaW5oYSBob3Jpem9udGFsLFxuICogaWRlYWwgcGFyYSBmYWNpbGl0YXIgYSBvcmdhbml6YcOnw6NvIGRlIGNvbnRlw7pkb3MuXG4gKlxuICogRW0gZGlzcG9zaXRpdm9zIG3Ds3ZlaXMgbyBjb21wb25lbnRlIGV4aWJpcsOhIHRhZGFzIGFzIGFiYXMgZGUgbWFuZWlyYSBsaW5lYXIgZ2VyYW5kbyB1bSAqc2Nyb2xsKiBuYSBob3Jpem9udGFsLiBKw6EgZW0gdGVsYXMgdGVsYXMgY29tXG4gKiByZXNvbHXDp8O1ZXMgbWFpb3JlcywgbyBjb21wb25lbnRlIGV4aWJpcsOhIGF0w6kgY2luY28gYWJhcyBub3JtYWxtZW50ZSwgcG9yw6ltLCDDoCBwYXJ0aXIgZGUgc2VpcyBhYmFzIG8gY29tcG9uZW50ZSBhdXRvbWF0aWNhbWVudGUgdG9ybmFcbiAqIHZpc8OtdmVsIGFwZW5hcyBhcyBxdWF0cm8gcHJpbWVpcmFzLCBhZ3J1cGFuZG8gYXMgc3Vic2VxdWVudGVzIG5hIHF1aW50YSBhYmEgcm90dWxhZGEgZGUgKipNYWlzKiouXG4gKlxuICogPiBBcyBhYmFzIHF1ZSBlc3RpdmVyZW0gYWdydXBhZGFzIHNlcsOjbyBkaXNwb3N0YXMgbnVtYSBjYXNjYXRhIHN1c3BlbnNhIHF1ZSBzZXLDoSBleGliaWRhIGFvIGNsaWNhciBubyBib3TDo28gKipNYWlzKiouXG4gKlxuICogw4kgcG9zc8OtdmVsIHJlYWxpemFyIGEgbmF2ZWdhw6fDo28gZW50cmUgYXMgYWJhcyBhdHJhdsOpcyBkYSB0ZWNsYSBUQUIgZG8gdGVjbGFkby5cbiAqIENhc28gdW1hIGFiYSBlc3RpdmVyIGRlc2FiaWxpdGFkYSwgbsOjbyByZWNlYmVyw6EgZm9jbyBkZSBuYXZlZ2HDp8Ojby5cbiAqXG4gKiAjIyMjIEJvYXMgcHLDoXRpY2FzXG4gKlxuICogLSBFdml0ZSB1dGlsaXphciB1bWEgcXVhbnRpZGFkZSBleGNlc3NpdmEgZGUgYWJhcywgcG9pcyBpcsOhIGdlcmFyIHVtICpzY3JvbGwqIG11aXRvIGxvbmdvIG5vIGBkcm9wZG93bmA7XG4gKiAtIEV2aXRlIGBsYWJlbHNgIGV4dGVuc29zIHBhcmEgYXMgYHRhYnNgIHBvaXMgcG9kZW0gcXVlYnJhciBzZXUgKmxheW91dCosIHVzZSBgbGFiZWxzYCBkaXJldG9zLCBjdXJ0b3MgZSBpbnR1aXRpdm9zLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb1RhYnNCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfc21hbGw/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBvcHRpbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEaW1pbnVpIG8gdGFtYW5obyBkYXMgYWJhcy5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLXNtYWxsJykgc2V0IHNtYWxsKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fc21hbGwgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBzbWFsbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fc21hbGw7XG4gIH1cbn1cbiJdfQ==