import { __decorate, __metadata } from "tslib";
import { EventEmitter, Input, Output, Directive } from '@angular/core';
import { convertToBoolean, uuid } from '../../../utils/util';
/**
 * @description
 *
 * O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.
 *
 * Com este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,
 * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.
 *
 * > Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).
 */
let PoTabBaseComponent = class PoTabBaseComponent {
    constructor() {
        this._active = false;
        this._disabled = false;
        this._hide = false;
        // ID da aba
        this.id = uuid();
        /** Método disparado ao clicar na aba. */
        this.click = new EventEmitter();
    }
    /**
     * @optional
     *
     * @description
     *
     * Ativa a aba exibindo seu conteúdo.
     *
     * > Sugere-se utilizar na aba de conteúdo inicial.
     *
     * @default `false`
     */
    set active(active) {
        this._active = convertToBoolean(active);
        this.setDisplayOnActive();
    }
    get active() {
        return this._active;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a aba.
     *
     * @default `false`
     */
    set disabled(disabled) {
        this._disabled = convertToBoolean(disabled);
    }
    get disabled() {
        return this._disabled;
    }
    /**
     * @optional
     *
     * @description
     *
     * Oculta a aba.
     *
     * @default `false`
     */
    set hide(hide) {
        this._hide = convertToBoolean(hide);
    }
    get hide() {
        return this._hide;
    }
};
__decorate([
    Input('p-active'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoTabBaseComponent.prototype, "active", null);
__decorate([
    Input('p-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoTabBaseComponent.prototype, "disabled", null);
__decorate([
    Input('p-hide'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoTabBaseComponent.prototype, "hide", null);
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoTabBaseComponent.prototype, "label", void 0);
__decorate([
    Output('p-click'),
    __metadata("design:type", Object)
], PoTabBaseComponent.prototype, "click", void 0);
PoTabBaseComponent = __decorate([
    Directive()
], PoTabBaseComponent);
export { PoTabBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJzL3BvLXRhYi9wby10YWItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTdEOzs7Ozs7Ozs7R0FTRztBQUVILElBQXNCLGtCQUFrQixHQUF4QyxNQUFzQixrQkFBa0I7SUFBeEM7UUFDVSxZQUFPLEdBQWEsS0FBSyxDQUFDO1FBQzFCLGNBQVMsR0FBYSxLQUFLLENBQUM7UUFDNUIsVUFBSyxHQUFhLEtBQUssQ0FBQztRQUVoQyxZQUFZO1FBQ1osT0FBRSxHQUFZLElBQUksRUFBRSxDQUFDO1FBMkRyQix5Q0FBeUM7UUFDdEIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFHaEQsQ0FBQztJQTdEQzs7Ozs7Ozs7OztPQVVHO0lBQ2dCLElBQUksTUFBTSxDQUFDLE1BQWU7UUFDM0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7Ozs7Ozs7T0FRRztJQUNrQixJQUFJLFFBQVEsQ0FBQyxRQUFpQjtRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ2MsSUFBSSxJQUFJLENBQUMsSUFBYTtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztDQVNGLENBQUE7QUFsRG9CO0lBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7OztnREFHakI7QUFlb0I7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7O2tEQUVuQjtBQWVnQjtJQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDOzs7OENBRWY7QUFPaUI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7aURBQWU7QUFHYjtJQUFsQixNQUFNLENBQUMsU0FBUyxDQUFDOztpREFBNEI7QUFsRTFCLGtCQUFrQjtJQUR2QyxTQUFTLEVBQUU7R0FDVSxrQkFBa0IsQ0FxRXZDO1NBckVxQixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuLCB1dWlkIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10YWJgIHJlbmRlcml6YSB1bWEgYWJhIG5hIHF1YWwgZW52b2x2ZSB1bSBjb250ZcO6ZG8gSFRNTC5cbiAqXG4gKiBDb20gZXN0ZSBjb21wb25lbnRlIMOpIHBvc3PDrXZlbCBhdHJpYnVpciB1bSByw7N0dWxvIHBhcmEgYXV4aWxpYXIgbmEgaWRlbnRpZmljYcOnw6NvIGRvIGNvbnRlw7pkbywgYXRpdmFyIHBhcmEgcXVlIG8gbWVzbW8gc2VqYSBleGliaWRvLFxuICogZGVzYWJpbGl0YXIgcGFyYSBpbXBvc3NpYmlsaXRhciBvIGFjZXNzbywgYmVtIGNvbW8gb2N1bHRhciBwYXJhIGluZGlzcG9uaWJpbGl6YXIgYSBhYmEuXG4gKlxuICogPiBQYXJhIGNvbnRyb2xhciBhIG5hdmVnYcOnw6NvIGVudHJlIGRpdmVyc2FzIGFiYXMsIHV0aWxpemFyIG8gY29tcG9uZW50ZSBbYHBvLXRhYnNgXSgvZG9jdW1lbnRhdGlvbi9wby10YWJzKS5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUG9UYWJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfYWN0aXZlPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9kaXNhYmxlZD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfaGlkZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvLyBJRCBkYSBhYmFcbiAgaWQ/OiBzdHJpbmcgPSB1dWlkKCk7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogQXRpdmEgYSBhYmEgZXhpYmluZG8gc2V1IGNvbnRlw7pkby5cbiAgICpcbiAgICogPiBTdWdlcmUtc2UgdXRpbGl6YXIgbmEgYWJhIGRlIGNvbnRlw7pkbyBpbmljaWFsLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtYWN0aXZlJykgc2V0IGFjdGl2ZShhY3RpdmU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hY3RpdmUgPSBjb252ZXJ0VG9Cb29sZWFuKGFjdGl2ZSk7XG4gICAgdGhpcy5zZXREaXNwbGF5T25BY3RpdmUoKTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlc2FiaWxpdGEgYSBhYmEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIHNldCBkaXNhYmxlZChkaXNhYmxlZDogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gY29udmVydFRvQm9vbGVhbihkaXNhYmxlZCk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogT2N1bHRhIGEgYWJhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtaGlkZScpIHNldCBoaWRlKGhpZGU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlID0gY29udmVydFRvQm9vbGVhbihoaWRlKTtcbiAgfVxuXG4gIGdldCBoaWRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9oaWRlO1xuICB9XG5cbiAgLyoqIFLDs3R1bG8gZGEgYWJhLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKiBNw6l0b2RvIGRpc3BhcmFkbyBhbyBjbGljYXIgbmEgYWJhLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IHNldERpc3BsYXlPbkFjdGl2ZSgpO1xufVxuIl19