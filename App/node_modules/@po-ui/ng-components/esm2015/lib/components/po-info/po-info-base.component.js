import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { PoInfoOrientation } from './po-info-orietation.enum';
const poInfoOrientationDefault = PoInfoOrientation.Vertical;
let PoInfoBaseComponent = class PoInfoBaseComponent {
    constructor() {
        this._orientation = poInfoOrientationDefault;
        this.poInfoOrientation = PoInfoOrientation;
    }
    /**
     * @optional
     *
     * @description
     *
     * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for
     * utilizado na orientação horizontal.
     *
     * Valores válidos:
     *  - `[1 .. 11]`
     *
     * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
     */
    set labelSize(value) {
        if (isNaN(parseInt(value, 10))) {
            this._labelSize = undefined;
        }
        else {
            value = parseInt(value, 10);
            this._labelSize = value < 1 || value > 11 ? undefined : value;
        }
    }
    get labelSize() {
        return this._labelSize;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define o layout de exibição.
     *
     * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.
     *
     * @default `vertical`
     */
    set orientation(value) {
        this._orientation = Object.values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;
    }
    get orientation() {
        return this._orientation;
    }
};
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoInfoBaseComponent.prototype, "label", void 0);
__decorate([
    Input('p-label-size'),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], PoInfoBaseComponent.prototype, "labelSize", null);
__decorate([
    Input('p-orientation'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoInfoBaseComponent.prototype, "orientation", null);
__decorate([
    Input('p-url'),
    __metadata("design:type", String)
], PoInfoBaseComponent.prototype, "url", void 0);
__decorate([
    Input('p-value'),
    __metadata("design:type", String)
], PoInfoBaseComponent.prototype, "value", void 0);
PoInfoBaseComponent = __decorate([
    Directive()
], PoInfoBaseComponent);
export { PoInfoBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5mby1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8taW5mby9wby1pbmZvLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUU5RCxNQUFNLHdCQUF3QixHQUFHLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztBQUc1RCxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQUFoQztRQUVVLGlCQUFZLEdBQXNCLHdCQUF3QixDQUFDO1FBRW5ELHNCQUFpQixHQUFHLGlCQUFpQixDQUFDO0lBNkR4RCxDQUFDO0lBeERDOzs7Ozs7Ozs7Ozs7T0FZRztJQUNvQixJQUFJLFNBQVMsQ0FBQyxLQUFhO1FBQ2hELElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBTSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRTtZQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztTQUM3QjthQUFNO1lBQ0wsS0FBSyxHQUFHLFFBQVEsQ0FBTSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFFakMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLEdBQUcsQ0FBQyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQy9EO0lBQ0gsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBRUQ7Ozs7Ozs7Ozs7T0FVRztJQUNxQixJQUFJLFdBQVcsQ0FBQyxLQUF3QjtRQUM5RCxJQUFJLENBQUMsWUFBWSxHQUFTLE1BQU8sQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsd0JBQXdCLENBQUM7SUFDakgsQ0FBQztJQUNELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDO0NBYUYsQ0FBQTtBQTFEbUI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7a0RBQWU7QUFlVDtJQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOzs7b0RBUXJCO0FBaUJ1QjtJQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs7c0RBRXRCO0FBWWU7SUFBZixLQUFLLENBQUMsT0FBTyxDQUFDOztnREFBYztBQUdYO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O2tEQUFnQjtBQWhFdEIsbUJBQW1CO0lBRC9CLFNBQVMsRUFBRTtHQUNDLG1CQUFtQixDQWlFL0I7U0FqRVksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0luZm9PcmllbnRhdGlvbiB9IGZyb20gJy4vcG8taW5mby1vcmlldGF0aW9uLmVudW0nO1xuXG5jb25zdCBwb0luZm9PcmllbnRhdGlvbkRlZmF1bHQgPSBQb0luZm9PcmllbnRhdGlvbi5WZXJ0aWNhbDtcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9JbmZvQmFzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX2xhYmVsU2l6ZTogbnVtYmVyO1xuICBwcml2YXRlIF9vcmllbnRhdGlvbjogUG9JbmZvT3JpZW50YXRpb24gPSBwb0luZm9PcmllbnRhdGlvbkRlZmF1bHQ7XG5cbiAgcHVibGljIHJlYWRvbmx5IHBvSW5mb09yaWVudGF0aW9uID0gUG9JbmZvT3JpZW50YXRpb247XG5cbiAgLyoqIFZhbG9yIGRvIHLDs3R1bG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBRdWFudGlkYWRlIGRlIFtjb2x1bmFzXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSB1c2FkYXMgcGFyYSBhIGV4aWJpw6fDo28gZGEgYHAtbGFiZWxgIHF1YW5kbyBvIGNvbXBvbmVudGUgZm9yXG4gICAqIHV0aWxpemFkbyBuYSBvcmllbnRhw6fDo28gaG9yaXpvbnRhbC5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICogIC0gYFsxIC4uIDExXWBcbiAgICpcbiAgICogPiBBIHByb3ByaWVkYWRlIGBwLXZhbHVlYCByZWNlYmUgbyBuw7ptZXJvIGRlIGNvbHVuYXMgcmVzdGFudGVzLCBwb3IgZXhlbXBsbywgc2UgZGVmaW5pZG8gMyBjb2x1bmFzIGEgbWVzbWEgYXNzdW1lIDkgY29sdW5hcy5cbiAgICovXG4gIEBJbnB1dCgncC1sYWJlbC1zaXplJykgc2V0IGxhYmVsU2l6ZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgaWYgKGlzTmFOKHBhcnNlSW50KDxhbnk+dmFsdWUsIDEwKSkpIHtcbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSBwYXJzZUludCg8YW55PnZhbHVlLCAxMCk7XG5cbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9IHZhbHVlIDwgMSB8fCB2YWx1ZSA+IDExID8gdW5kZWZpbmVkIDogdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGxhYmVsU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYWJlbFNpemU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgbyBsYXlvdXQgZGUgZXhpYmnDp8Ojby5cbiAgICpcbiAgICogPiBRdWFuZG8gZGVmaW5pZG8gbmEgaG9yaXpvbnRhbCwgcG9kZS1zZSB1dGlsaXphciBhIHByb3ByaWVkYWRlIGBwLWxhYmVsLXNpemVgIHBhcmEgdW0gbWFpb3IgY29udHJvbGUgZGFzIGluZm9ybWHDp8O1ZXMgZXhpYmlkYXMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGB2ZXJ0aWNhbGBcbiAgICovXG4gIEBJbnB1dCgncC1vcmllbnRhdGlvbicpIHNldCBvcmllbnRhdGlvbih2YWx1ZTogUG9JbmZvT3JpZW50YXRpb24pIHtcbiAgICB0aGlzLl9vcmllbnRhdGlvbiA9ICg8YW55Pk9iamVjdCkudmFsdWVzKFBvSW5mb09yaWVudGF0aW9uKS5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IHBvSW5mb09yaWVudGF0aW9uRGVmYXVsdDtcbiAgfVxuICBnZXQgb3JpZW50YXRpb24oKTogUG9JbmZvT3JpZW50YXRpb24ge1xuICAgIHJldHVybiB0aGlzLl9vcmllbnRhdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbyBpbmZvcm1hciB1bWEgVVJMLCBvIGNvbnRlw7pkbyBzZXLDoSBleGliaWRvIG5hIGZvcm1hIGRlIHVtICpsaW5rKiBlIGFvIHNlciBjbGljYWRvIHNlcsOhIHJlZGlyZWNpb25hZG8gcGFyYSBhIFVSTCBpbmZvcm1hZGEuXG4gICAqXG4gICAqID4gQ2FzbyBpbmZvcm1hciBgaHR0cDovL2Agc2Vyw6EgYWJlcnRvIHVtYSBub3ZhIGFiYS5cbiAgICogQ2FzbyBpbmZvcm1hciB1bSBjYW1pbmhvIHJlbGF0aXZvLCBleGVtcGxvOiBgL2N1c3RvbWVyc2AsIHNlcsOhIGFiZXJ0byBuYSBhYmEgYXR1YWwuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtdXJsJykgdXJsPzogc3RyaW5nO1xuXG4gIC8qKiBWYWxvciBkbyBjb250ZcO6ZG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgQElucHV0KCdwLXZhbHVlJykgdmFsdWU/OiBzdHJpbmc7XG59XG4iXX0=