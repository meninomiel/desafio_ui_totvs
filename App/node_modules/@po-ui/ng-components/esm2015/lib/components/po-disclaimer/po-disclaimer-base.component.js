import { __decorate, __metadata } from "tslib";
import { EventEmitter, Input, Output, Directive } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
const PO_DISCLAIMER_TYPES = ['default', 'danger'];
const PO_DISCLAIMER_DEFAULT_TYPE = 'default';
/**
 * @docsPrivate
 *
 * @description
 *
 * O componente po-disclaimer é responsável por representar tags.
 * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,
 * como por exemplo, no po-multi-select.
 *
 */
let PoDisclaimerBaseComponent = class PoDisclaimerBaseComponent {
    constructor() {
        this._type = 'default';
        this._hideClose = false;
        this.showDisclaimer = true;
        /**
         * Evento disparado ao fechar o disclaimer.
         * Para este evento será passado como parâmetro um objeto com value, label e property.
         */
        this.closeAction = new EventEmitter();
    }
    /**
     * @description
     *
     * Esta propriedade esconde o botão para fechamento do po-disclaimer, ao utilizar esta propriedade
     * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.
     *
     * @default false
     */
    set hideClose(value) {
        this._hideClose = value === '' ? true : convertToBoolean(value);
    }
    get hideClose() {
        return this._hideClose;
    }
    /**
     * @description
     *
     * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.
     *
     * @default default
     * @optional
     */
    set type(type) {
        this._type = PO_DISCLAIMER_TYPES.includes(type) ? type : PO_DISCLAIMER_DEFAULT_TYPE;
    }
    get type() {
        return this._type;
    }
    close() {
        this.showDisclaimer = false;
        this.closeAction.emit({ value: this.value, label: this.label, property: this.property });
    }
    getLabel() {
        return this.label ? this.label : this.value;
    }
};
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoDisclaimerBaseComponent.prototype, "label", void 0);
__decorate([
    Input('p-value'),
    __metadata("design:type", String)
], PoDisclaimerBaseComponent.prototype, "value", void 0);
__decorate([
    Input('p-property'),
    __metadata("design:type", String)
], PoDisclaimerBaseComponent.prototype, "property", void 0);
__decorate([
    Input('p-hide-close'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoDisclaimerBaseComponent.prototype, "hideClose", null);
__decorate([
    Output('p-close-action'),
    __metadata("design:type", EventEmitter)
], PoDisclaimerBaseComponent.prototype, "closeAction", void 0);
__decorate([
    Input('p-type'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoDisclaimerBaseComponent.prototype, "type", null);
PoDisclaimerBaseComponent = __decorate([
    Directive()
], PoDisclaimerBaseComponent);
export { PoDisclaimerBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlzY2xhaW1lci1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZGlzY2xhaW1lci9wby1kaXNjbGFpbWVyLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXBELE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDbEQsTUFBTSwwQkFBMEIsR0FBRyxTQUFTLENBQUM7QUFFN0M7Ozs7Ozs7OztHQVNHO0FBRUgsSUFBYSx5QkFBeUIsR0FBdEMsTUFBYSx5QkFBeUI7SUFBdEM7UUFDVSxVQUFLLEdBQVcsU0FBUyxDQUFDO1FBQzFCLGVBQVUsR0FBYSxLQUFLLENBQUM7UUFFckMsbUJBQWMsR0FBRyxJQUFJLENBQUM7UUE4QnRCOzs7V0FHRztRQUN1QixnQkFBVyxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBMEJ0RixDQUFDO0lBOUNDOzs7Ozs7O09BT0c7SUFDb0IsSUFBSSxTQUFTLENBQUMsS0FBYztRQUNqRCxJQUFJLENBQUMsVUFBVSxHQUFRLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBUUQ7Ozs7Ozs7T0FPRztJQUNjLElBQUksSUFBSSxDQUFDLElBQVk7UUFDcEMsSUFBSSxDQUFDLEtBQUssR0FBRyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsMEJBQTBCLENBQUM7SUFDdEYsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzlDLENBQUM7Q0FDRixDQUFBO0FBdERtQjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzt3REFBZ0I7QUFHZjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzt3REFBZTtBQUdYO0lBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7OzJEQUFtQjtBQVVoQjtJQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOzs7MERBRXJCO0FBVXlCO0lBQXpCLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQzs4QkFBZSxZQUFZOzhEQUFnQztBQVVuRTtJQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDOzs7cURBRWY7QUFsRFUseUJBQXlCO0lBRHJDLFNBQVMsRUFBRTtHQUNDLHlCQUF5QixDQWdFckM7U0FoRVkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5jb25zdCBQT19ESVNDTEFJTUVSX1RZUEVTID0gWydkZWZhdWx0JywgJ2RhbmdlciddO1xuY29uc3QgUE9fRElTQ0xBSU1FUl9ERUZBVUxUX1RZUEUgPSAnZGVmYXVsdCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIHBvLWRpc2NsYWltZXIgw6kgcmVzcG9uc8OhdmVsIHBvciByZXByZXNlbnRhciB0YWdzLlxuICogU2V1IHVzbyDDqSByZWNvbWVuZGFkbyBlbSBidXNjYXMgZSBlbSBjYW1wb3Mgb25kZSDDqSBuZWNlc3PDoXJpbyByZXByZXNlbnRhciBvYmpldG9zIHNlbGVjaW9uYWRvcyxcbiAqIGNvbW8gcG9yIGV4ZW1wbG8sIG5vIHBvLW11bHRpLXNlbGVjdC5cbiAqXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGNsYXNzIFBvRGlzY2xhaW1lckJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF90eXBlOiBzdHJpbmcgPSAnZGVmYXVsdCc7XG4gIHByaXZhdGUgX2hpZGVDbG9zZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICBzaG93RGlzY2xhaW1lciA9IHRydWU7XG5cbiAgLyoqXG4gICAqIExhYmVsIHF1ZSBhcGFyZWNlcsOhIGRlbnRybyBkbyBwby1kaXNjbGFpbWVyLlxuICAgKiBRdWFuZG8gbsOjbyBmb3IgZGVmaW5pZG8gdW0gbGFiZWwgc2Vyw6EgYXByZXNlbnRhZGEgYSBwcm9wcmllZGFkZSBwLXZhbHVlLlxuICAgKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqIFZhbG9yIGRvIHBvLWRpc2NsYWltZXIuICovXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlOiBzdHJpbmc7XG5cbiAgLyoqIE5vbWUgZGEgcHJvcHJpZWRhZGUgdmluY3VsYWRhIMOgIGVzdGUgcG8tZGlzY2xhaW1lci4gKi9cbiAgQElucHV0KCdwLXByb3BlcnR5JykgcHJvcGVydHk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFc3RhIHByb3ByaWVkYWRlIGVzY29uZGUgbyBib3TDo28gcGFyYSBmZWNoYW1lbnRvIGRvIHBvLWRpc2NsYWltZXIsIGFvIHV0aWxpemFyIGVzdGEgcHJvcHJpZWRhZGVcbiAgICogc2VtIHBhc3NhciB2YWxvciBhIG1lc21hIMOpIHNldGFkYSBjb21vIGZhbHNlLCBvbmRlIG8gYm90w6NvIGRlIGZlY2hhbWVudG8gZXN0w6Egdmlzw612ZWwuXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBASW5wdXQoJ3AtaGlkZS1jbG9zZScpIHNldCBoaWRlQ2xvc2UodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlQ2xvc2UgPSA8YW55PnZhbHVlID09PSAnJyA/IHRydWUgOiBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBoaWRlQ2xvc2UoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2hpZGVDbG9zZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIGFvIGZlY2hhciBvIGRpc2NsYWltZXIuXG4gICAqIFBhcmEgZXN0ZSBldmVudG8gc2Vyw6EgcGFzc2FkbyBjb21vIHBhcsOibWV0cm8gdW0gb2JqZXRvIGNvbSB2YWx1ZSwgbGFiZWwgZSBwcm9wZXJ0eS5cbiAgICovXG4gIEBPdXRwdXQoJ3AtY2xvc2UtYWN0aW9uJykgY2xvc2VBY3Rpb24/OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogVGlwbyBkbyBwby1kaXNjbGFpbWVyLiBQb2RlIHNlciAnZGVmYXVsdCcgb3UgJ2RhbmdlcicuXG4gICAqXG4gICAqIEBkZWZhdWx0IGRlZmF1bHRcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBASW5wdXQoJ3AtdHlwZScpIHNldCB0eXBlKHR5cGU6IHN0cmluZykge1xuICAgIHRoaXMuX3R5cGUgPSBQT19ESVNDTEFJTUVSX1RZUEVTLmluY2x1ZGVzKHR5cGUpID8gdHlwZSA6IFBPX0RJU0NMQUlNRVJfREVGQVVMVF9UWVBFO1xuICB9XG5cbiAgZ2V0IHR5cGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgfVxuXG4gIGNsb3NlKCk6IHZvaWQge1xuICAgIHRoaXMuc2hvd0Rpc2NsYWltZXIgPSBmYWxzZTtcbiAgICB0aGlzLmNsb3NlQWN0aW9uLmVtaXQoeyB2YWx1ZTogdGhpcy52YWx1ZSwgbGFiZWw6IHRoaXMubGFiZWwsIHByb3BlcnR5OiB0aGlzLnByb3BlcnR5IH0pO1xuICB9XG5cbiAgZ2V0TGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMubGFiZWwgPyB0aGlzLmxhYmVsIDogdGhpcy52YWx1ZTtcbiAgfVxufVxuIl19