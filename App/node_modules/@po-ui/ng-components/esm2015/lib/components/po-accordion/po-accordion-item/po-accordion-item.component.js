import { __decorate, __metadata } from "tslib";
import { Component, Input, TemplateRef, ViewChild } from '@angular/core';
import { PoAccordionService } from '../services/po-accordion.service';
/**
 * @description
 *
 * Componente utilizado para renderizar os itens do `po-accordion`.
 *
 * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,
 * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:
 *
 * ```
 * <po-accordion>
 *   <po-accordion-item p-label="PO Accordion 1" #item1>
 *      Accordion 1
 *   </po-accordion-item>
 *
 *   <po-accordion-item p-label="PO Accordion 2">
 *      Accordion 2
 *   </po-accordion-item>
 * </po-accordion>
 * ```
 *
 * e no typescript pode-se utilizar o `@ViewChild`:
 *
 * ```
 *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;
 *
 *  ngAfterContentInit() {
 *    // ou utilizar o método collapse()
 *    this.item1.expand();
 *  }
 * ```
 */
let PoAccordionItemComponent = class PoAccordionItemComponent {
    constructor(accordionService) {
        this.accordionService = accordionService;
    }
    /**
     * Método para colapsar o `po-accordion-item`.
     */
    collapse() {
        this.expanded = false;
        this.accordionService.sendToParentAccordionItemClicked(this);
    }
    /**
     * Método para expandir o `po-accordion-item`.
     */
    expand() {
        this.expanded = true;
        this.accordionService.sendToParentAccordionItemClicked(this);
    }
};
PoAccordionItemComponent.ctorParameters = () => [
    { type: PoAccordionService }
];
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoAccordionItemComponent.prototype, "label", void 0);
__decorate([
    ViewChild(TemplateRef, { static: true }),
    __metadata("design:type", TemplateRef)
], PoAccordionItemComponent.prototype, "templateRef", void 0);
PoAccordionItemComponent = __decorate([
    Component({
        selector: 'po-accordion-item',
        template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n"
    }),
    __metadata("design:paramtypes", [PoAccordionService])
], PoAccordionItemComponent);
export { PoAccordionItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1hY2NvcmRpb24vcG8tYWNjb3JkaW9uLWl0ZW0vcG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXRFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4Qkc7QUFLSCxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF3QjtJQVFuQyxZQUFvQixnQkFBb0M7UUFBcEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtJQUFHLENBQUM7SUFFNUQ7O09BRUc7SUFDSCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFFdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGdDQUFnQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU07UUFDSixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUVyQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsZ0NBQWdDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0QsQ0FBQztDQUNGLENBQUE7O1lBbkJ1QyxrQkFBa0I7O0FBSnRDO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3VEQUFlO0FBRVU7SUFBekMsU0FBUyxDQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFBYyxXQUFXOzZEQUFNO0FBTjdELHdCQUF3QjtJQUpwQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsbUJBQW1CO1FBQzdCLHdFQUErQztLQUNoRCxDQUFDO3FDQVNzQyxrQkFBa0I7R0FSN0Msd0JBQXdCLENBMkJwQztTQTNCWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQWNjb3JkaW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3BvLWFjY29yZGlvbi5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHV0aWxpemFkbyBwYXJhIHJlbmRlcml6YXIgb3MgaXRlbnMgZG8gYHBvLWFjY29yZGlvbmAuXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1hY2NvcmRpb25gIGrDoSBmYXogbyBjb250cm9sZSBkZSBhYmVydHVyYSBlIGZlY2hhbWVudG8gZG9zIGl0ZW5zIGF1dG9tYXRpY2FtZW50ZSxcbiAqIG1hcyBjYXNvIGhvdXZlciBhIG5lY2Vzc2lkYWRlIGRlIGFicmlyIGFsZ3VtIGRvcyBgcG8tYWNjb3JkaW9uLWl0ZW1gIHZpYSBUeXBlc2NyaXB0LCBwb2RlIHNlciBmZWl0YSBkYSBzZWd1aW50ZSBmb3JtYTpcbiAqXG4gKiBgYGBcbiAqIDxwby1hY2NvcmRpb24+XG4gKiAgIDxwby1hY2NvcmRpb24taXRlbSBwLWxhYmVsPVwiUE8gQWNjb3JkaW9uIDFcIiAjaXRlbTE+XG4gKiAgICAgIEFjY29yZGlvbiAxXG4gKiAgIDwvcG8tYWNjb3JkaW9uLWl0ZW0+XG4gKlxuICogICA8cG8tYWNjb3JkaW9uLWl0ZW0gcC1sYWJlbD1cIlBPIEFjY29yZGlvbiAyXCI+XG4gKiAgICAgIEFjY29yZGlvbiAyXG4gKiAgIDwvcG8tYWNjb3JkaW9uLWl0ZW0+XG4gKiA8L3BvLWFjY29yZGlvbj5cbiAqIGBgYFxuICpcbiAqIGUgbm8gdHlwZXNjcmlwdCBwb2RlLXNlIHV0aWxpemFyIG8gYEBWaWV3Q2hpbGRgOlxuICpcbiAqIGBgYFxuICogIEBWaWV3Q2hpbGQoUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBpdGVtMTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50O1xuICpcbiAqICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gKiAgICAvLyBvdSB1dGlsaXphciBvIG3DqXRvZG8gY29sbGFwc2UoKVxuICogICAgdGhpcy5pdGVtMS5leHBhbmQoKTtcbiAqICB9XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tYWNjb3JkaW9uLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJ3BvLWFjY29yZGlvbi1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0FjY29yZGlvbkl0ZW1Db21wb25lbnQge1xuICBleHBhbmRlZDogYm9vbGVhbjtcblxuICAvKiogVMOtdHVsbyBkbyBpdGVtLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiB0cnVlIH0pIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWNjb3JkaW9uU2VydmljZTogUG9BY2NvcmRpb25TZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIHBhcmEgY29sYXBzYXIgbyBgcG8tYWNjb3JkaW9uLWl0ZW1gLlxuICAgKi9cbiAgY29sbGFwc2UoKSB7XG4gICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuXG4gICAgdGhpcy5hY2NvcmRpb25TZXJ2aWNlLnNlbmRUb1BhcmVudEFjY29yZGlvbkl0ZW1DbGlja2VkKHRoaXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIE3DqXRvZG8gcGFyYSBleHBhbmRpciBvIGBwby1hY2NvcmRpb24taXRlbWAuXG4gICAqL1xuICBleHBhbmQoKSB7XG4gICAgdGhpcy5leHBhbmRlZCA9IHRydWU7XG5cbiAgICB0aGlzLmFjY29yZGlvblNlcnZpY2Uuc2VuZFRvUGFyZW50QWNjb3JkaW9uSXRlbUNsaWNrZWQodGhpcyk7XG4gIH1cbn1cbiJdfQ==