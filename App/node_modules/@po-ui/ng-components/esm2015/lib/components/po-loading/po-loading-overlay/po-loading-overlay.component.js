import { __decorate, __metadata } from "tslib";
import { Component, ChangeDetectorRef } from '@angular/core';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';
/**
 *
 * @docsExtends PoLoadingOverlayBaseComponent
 *
 * @example
 *
 * <example name="po-loading-overlay-basic" title="PO Loading Overlay Basic">
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-labs" title="PO Loading Overlay Labs">
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-connection-test" title="PO Loading Overlay - Connection Test">
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
let PoLoadingOverlayComponent = class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {
    constructor(changeDetector, languageService) {
        super(languageService);
        this.changeDetector = changeDetector;
    }
};
PoLoadingOverlayComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: PoLanguageService }
];
PoLoadingOverlayComponent = __decorate([
    Component({
        selector: 'po-loading-overlay',
        template: "<div [class.po-overlay-absolute]=\"!screenLock\" [class.po-overlay-fixed]=\"screenLock\">\n  <po-loading class=\"po-loading-overlay-content\" [p-text]=\"text\"></po-loading>\n</div>\n"
    }),
    __metadata("design:paramtypes", [ChangeDetectorRef, PoLanguageService])
], PoLoadingOverlayComponent);
export { PoLoadingOverlayComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbG9hZGluZy9wby1sb2FkaW5nLW92ZXJsYXkvcG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUV4RixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUVwRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7QUFLSCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUEwQixTQUFRLDZCQUE2QjtJQUMxRSxZQUFtQixjQUFpQyxFQUFFLGVBQWtDO1FBQ3RGLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUROLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUVwRCxDQUFDO0NBQ0YsQ0FBQTs7WUFIb0MsaUJBQWlCO1lBQW1CLGlCQUFpQjs7QUFEN0UseUJBQXlCO0lBSnJDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxvQkFBb0I7UUFDOUIsbU1BQWdEO0tBQ2pELENBQUM7cUNBRW1DLGlCQUFpQixFQUFtQixpQkFBaUI7R0FEN0UseUJBQXlCLENBSXJDO1NBSlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tbGFuZ3VhZ2UvcG8tbGFuZ3VhZ2Uuc2VydmljZSc7XG5cbmltcG9ydCB7IFBvTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1sb2FkaW5nLW92ZXJsYXktYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqXG4gKiBAZG9jc0V4dGVuZHMgUG9Mb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1sb2FkaW5nLW92ZXJsYXktYmFzaWNcIiB0aXRsZT1cIlBPIExvYWRpbmcgT3ZlcmxheSBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbG9hZGluZy1vdmVybGF5LWxhYnNcIiB0aXRsZT1cIlBPIExvYWRpbmcgT3ZlcmxheSBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktbGFicy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWxhYnMvc2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3RcIiB0aXRsZT1cIlBPIExvYWRpbmcgT3ZlcmxheSAtIENvbm5lY3Rpb24gVGVzdFwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0L3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWxvYWRpbmctb3ZlcmxheScsXG4gIHRlbXBsYXRlVXJsOiAncG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0xvYWRpbmdPdmVybGF5Q29tcG9uZW50IGV4dGVuZHMgUG9Mb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLCBsYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgc3VwZXIobGFuZ3VhZ2VTZXJ2aWNlKTtcbiAgfVxufVxuIl19