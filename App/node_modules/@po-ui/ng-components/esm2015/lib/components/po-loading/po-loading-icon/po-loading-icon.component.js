import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que exibe um ícone de carregamento de conteúdo. A cor padrão para ele é a primária conforme o tema utilizado.
 * É possível alterá-la para um tom cinza conforme a necessidade.
 */
let PoLoadingIconComponent = class PoLoadingIconComponent {
    /**
     * @optional
     *
     * @description
     *
     * Definição para cor neutra (cinza) para o ícone de carregamento.
     *
     * @default `false`
     */
    set neutralColor(value) {
        this._neutralColor = convertToBoolean(value);
    }
    get neutralColor() {
        return this._neutralColor;
    }
};
__decorate([
    Input('p-neutral-color'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoLoadingIconComponent.prototype, "neutralColor", null);
PoLoadingIconComponent = __decorate([
    Component({
        selector: 'po-loading-icon',
        template: "<div class=\"po-loading-icon\" [class.po-loading-icon-neutral-color]=\"neutralColor\">\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-1\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-2\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-3\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-4\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-5\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-6\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-7\"></span>\n  <span class=\"po-loading-icon-bar po-loading-icon-bar-8\"></span>\n</div>\n"
    })
], PoLoadingIconComponent);
export { PoLoadingIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbG9hZGluZy9wby1sb2FkaW5nLWljb24vcG8tbG9hZGluZy1pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQ7Ozs7Ozs7R0FPRztBQUtILElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0lBR2pDOzs7Ozs7OztPQVFHO0lBQ3VCLElBQUksWUFBWSxDQUFDLEtBQWM7UUFDdkQsSUFBSSxDQUFDLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7Q0FDRixDQUFBO0FBUDJCO0lBQXpCLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQzs7OzBEQUV4QjtBQWRVLHNCQUFzQjtJQUpsQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLG9wQkFBNkM7S0FDOUMsQ0FBQztHQUNXLHNCQUFzQixDQW1CbEM7U0FuQlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgZXhpYmUgdW0gw61jb25lIGRlIGNhcnJlZ2FtZW50byBkZSBjb250ZcO6ZG8uIEEgY29yIHBhZHLDo28gcGFyYSBlbGUgw6kgYSBwcmltw6FyaWEgY29uZm9ybWUgbyB0ZW1hIHV0aWxpemFkby5cbiAqIMOJIHBvc3PDrXZlbCBhbHRlcsOhLWxhIHBhcmEgdW0gdG9tIGNpbnphIGNvbmZvcm1lIGEgbmVjZXNzaWRhZGUuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWxvYWRpbmctaWNvbicsXG4gIHRlbXBsYXRlVXJsOiAncG8tbG9hZGluZy1pY29uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0xvYWRpbmdJY29uQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfbmV1dHJhbENvbG9yOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluacOnw6NvIHBhcmEgY29yIG5ldXRyYSAoY2luemEpIHBhcmEgbyDDrWNvbmUgZGUgY2FycmVnYW1lbnRvLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtbmV1dHJhbC1jb2xvcicpIHNldCBuZXV0cmFsQ29sb3IodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9uZXV0cmFsQ29sb3IgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBuZXV0cmFsQ29sb3IoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25ldXRyYWxDb2xvcjtcbiAgfVxufVxuIl19