import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que renderiza cada item do po-breadcrumb.
 */
let PoBreadcrumbItemComponent = class PoBreadcrumbItemComponent {
    constructor() {
        // Especifica se item Ã© o link ativo.
        this.itemActive = false;
    }
};
__decorate([
    Input('p-action'),
    __metadata("design:type", Function)
], PoBreadcrumbItemComponent.prototype, "action", void 0);
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoBreadcrumbItemComponent.prototype, "label", void 0);
__decorate([
    Input('p-link'),
    __metadata("design:type", String)
], PoBreadcrumbItemComponent.prototype, "link", void 0);
__decorate([
    Input('p-item-active'),
    __metadata("design:type", Boolean)
], PoBreadcrumbItemComponent.prototype, "itemActive", void 0);
PoBreadcrumbItemComponent = __decorate([
    Component({
        selector: 'po-breadcrumb-item',
        template: "<li\n  *ngIf=\"!itemActive\"\n  [class.po-breadcrumb-item]=\"link || action\"\n  [class.po-breadcrumb-item-unclickable]=\"!link && !action\"\n>\n  <a *ngIf=\"link\" [routerLink]=\"link\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n\n  <a *ngIf=\"!link && action\" (click)=\"action(label)\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n\n  <a *ngIf=\"!link && !action\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n</li>\n\n<li *ngIf=\"itemActive\" class=\"po-breadcrumb-item-unclickable\">\n  <label class=\"po-breadcrumb-label\">{{ label }}</label>\n</li>\n"
    })
], PoBreadcrumbItemComponent);
export { PoBreadcrumbItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYnJlYWRjcnVtYi9wby1icmVhZGNydW1iLWl0ZW0vcG8tYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQ7Ozs7OztHQU1HO0FBS0gsSUFBYSx5QkFBeUIsR0FBdEMsTUFBYSx5QkFBeUI7SUFBdEM7UUFVRSxxQ0FBcUM7UUFDYixlQUFVLEdBQVksS0FBSyxDQUFDO0lBQ3RELENBQUM7Q0FBQSxDQUFBO0FBVm9CO0lBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7OEJBQVMsUUFBUTt5REFBQztBQUdsQjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzt3REFBZTtBQUdmO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O3VEQUFjO0FBR047SUFBdkIsS0FBSyxDQUFDLGVBQWUsQ0FBQzs7NkRBQTZCO0FBWHpDLHlCQUF5QjtJQUpyQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsb0JBQW9CO1FBQzlCLHl4QkFBa0Q7S0FDbkQsQ0FBQztHQUNXLHlCQUF5QixDQVlyQztTQVpZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSByZW5kZXJpemEgY2FkYSBpdGVtIGRvIHBvLWJyZWFkY3J1bWIuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWJyZWFkY3J1bWItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvQnJlYWRjcnVtYkl0ZW1Db21wb25lbnQge1xuICAvLyBBw6fDo28gcXVlIHNlcsOhIGV4ZWN1dGFkYSBhbyBjbGljYXIgc29icmUgbyBpdGVtLlxuICBASW5wdXQoJ3AtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcblxuICAvLyBMYWJlbCBkbyBpdGVtLlxuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8vIExpbmsgZG8gaXRlbS5cbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBzdHJpbmc7XG5cbiAgLy8gRXNwZWNpZmljYSBzZSBpdGVtIMOpIG8gbGluayBhdGl2by5cbiAgQElucHV0KCdwLWl0ZW0tYWN0aXZlJykgaXRlbUFjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xufVxuIl19