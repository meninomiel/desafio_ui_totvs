import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { PoTagBaseComponent } from './po-tag-base.component';
import { PoTagIcon } from './enums/po-tag-icon.enum';
import { PoTagType } from './enums/po-tag-type.enum';
const poTagTypeDefault = 'po-tag-' + PoTagType.Info;
/**
 * @docsExtends PoTagBaseComponent
 *
 * @example
 *
 * <example name="po-tag-basic" title="PO Tag Basic">
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.html"> </file>
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-labs" title="PO Tag Labs">
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.html"> </file>
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-bank-account" title="PO Tag - Bank Account">
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.html"> </file>
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts"> </file>
 * </example>
 */
let PoTagComponent = class PoTagComponent extends PoTagBaseComponent {
    ngOnInit() {
        this.isClickable = this.click.observers.length > 0;
    }
    get iconFromType() {
        switch (this.type) {
            case PoTagType.Danger:
                return PoTagIcon.Danger;
            case PoTagType.Info:
                return PoTagIcon.Info;
            case PoTagType.Success:
                return PoTagIcon.Success;
            case PoTagType.Warning:
                return PoTagIcon.Warning;
        }
    }
    get iconTypeString() {
        return typeof this.icon === 'string';
    }
    get tagColor() {
        if (this.type) {
            return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;
        }
        if (this.color) {
            return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;
        }
        return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;
    }
    get tagOrientation() {
        return this.orientation === this.poTagOrientation.Horizontal;
    }
    onClick() {
        const submittedTagItem = { value: this.value, type: this.type };
        this.click.emit(submittedTagItem);
    }
    onKeyPressed(event) {
        event.preventDefault();
        event.stopPropagation();
        this.onClick();
    }
};
PoTagComponent = __decorate([
    Component({
        selector: 'po-tag',
        template: "<div class=\"po-tag-container\" [class.po-tag-container-horizontal]=\"tagOrientation\">\n  <div *ngIf=\"label\" class=\"po-tag-title po-text-nowrap\">\n    <span class=\"po-tag-label\">{{ tagOrientation ? label + ':' : label }}</span>\n  </div>\n\n  <div class=\"po-tag-sub-container\">\n    <div\n      class=\"po-tag\"\n      [class.po-clickable]=\"isClickable\"\n      [class.po-tag-inverse]=\"inverse\"\n      [ngClass]=\"tagColor\"\n      tabindex=\"0\"\n      (click)=\"onClick()\"\n      (keydown.enter)=\"onKeyPressed($event)\"\n      (keydown.space)=\"$event.preventDefault()\"\n      (keyup.space)=\"onKeyPressed($event)\"\n    >\n      <span *ngIf=\"icon\" class=\"po-icon\" [ngClass]=\"!type && iconTypeString ? icon : iconFromType\"></span>\n      <span class=\"po-tag-value\">{{ value }}</span>\n    </div>\n  </div>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoTagComponent);
export { PoTagComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFnL3BvLXRhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFM0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXJELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxNQUFNLGdCQUFnQixHQUFHLFNBQVMsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO0FBRXBEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBTUgsSUFBYSxjQUFjLEdBQTNCLE1BQWEsY0FBZSxTQUFRLGtCQUFrQjtJQUdwRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDZCxRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyxTQUFTLENBQUMsTUFBTTtnQkFDbkIsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDO1lBRTFCLEtBQUssU0FBUyxDQUFDLElBQUk7Z0JBQ2pCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQztZQUV4QixLQUFLLFNBQVMsQ0FBQyxPQUFPO2dCQUNwQixPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFFM0IsS0FBSyxTQUFTLENBQUMsT0FBTztnQkFDcEIsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDO1NBQzVCO0lBQ0gsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQzdFO1FBRUQsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDcEU7UUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsZ0JBQWdCLFVBQVUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7SUFDekUsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQztJQUMvRCxDQUFDO0lBRUQsT0FBTztRQUNMLE1BQU0sZ0JBQWdCLEdBQWMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzNFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFLO1FBQ2hCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7Q0FDRixDQUFBO0FBckRZLGNBQWM7SUFMMUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFFBQVE7UUFDbEIsbzFCQUFzQztRQUN0QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBQ1csY0FBYyxDQXFEMUI7U0FyRFksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1RhZ0Jhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXRhZy1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1RhZ0ljb24gfSBmcm9tICcuL2VudW1zL3BvLXRhZy1pY29uLmVudW0nO1xuaW1wb3J0IHsgUG9UYWdJdGVtIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXRhZy1pdGVtLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1RhZ1R5cGUgfSBmcm9tICcuL2VudW1zL3BvLXRhZy10eXBlLmVudW0nO1xuXG5jb25zdCBwb1RhZ1R5cGVEZWZhdWx0ID0gJ3BvLXRhZy0nICsgUG9UYWdUeXBlLkluZm87XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvVGFnQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRhZy1iYXNpY1wiIHRpdGxlPVwiUE8gVGFnIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFzaWMvc2FtcGxlLXBvLXRhZy1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFzaWMvc2FtcGxlLXBvLXRhZy1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby10YWctbGFic1wiIHRpdGxlPVwiUE8gVGFnIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1sYWJzL3NhbXBsZS1wby10YWctbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctbGFicy9zYW1wbGUtcG8tdGFnLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdGFnLWJhbmstYWNjb3VudFwiIHRpdGxlPVwiUE8gVGFnIC0gQmFuayBBY2NvdW50XCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFuay1hY2NvdW50L3NhbXBsZS1wby10YWctYmFuay1hY2NvdW50LmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1iYW5rLWFjY291bnQvc2FtcGxlLXBvLXRhZy1iYW5rLWFjY291bnQuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFnJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhZy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFnQ29tcG9uZW50IGV4dGVuZHMgUG9UYWdCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaXNDbGlja2FibGU6IGJvb2xlYW47XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pc0NsaWNrYWJsZSA9IHRoaXMuY2xpY2sub2JzZXJ2ZXJzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBnZXQgaWNvbkZyb21UeXBlKCkge1xuICAgIHN3aXRjaCAodGhpcy50eXBlKSB7XG4gICAgICBjYXNlIFBvVGFnVHlwZS5EYW5nZXI6XG4gICAgICAgIHJldHVybiBQb1RhZ0ljb24uRGFuZ2VyO1xuXG4gICAgICBjYXNlIFBvVGFnVHlwZS5JbmZvOlxuICAgICAgICByZXR1cm4gUG9UYWdJY29uLkluZm87XG5cbiAgICAgIGNhc2UgUG9UYWdUeXBlLlN1Y2Nlc3M6XG4gICAgICAgIHJldHVybiBQb1RhZ0ljb24uU3VjY2VzcztcblxuICAgICAgY2FzZSBQb1RhZ1R5cGUuV2FybmluZzpcbiAgICAgICAgcmV0dXJuIFBvVGFnSWNvbi5XYXJuaW5nO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpY29uVHlwZVN0cmluZygpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMuaWNvbiA9PT0gJ3N0cmluZyc7XG4gIH1cblxuICBnZXQgdGFnQ29sb3IoKSB7XG4gICAgaWYgKHRoaXMudHlwZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGBwby10YWctJHt0aGlzLnR5cGV9LWludmVyc2VgIDogYHBvLXRhZy0ke3RoaXMudHlwZX1gO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbG9yKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbnZlcnNlID8gYHBvLXRleHQtJHt0aGlzLmNvbG9yfWAgOiBgcG8tJHt0aGlzLmNvbG9yfWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGAke3BvVGFnVHlwZURlZmF1bHR9LWludmVyc2VgIDogcG9UYWdUeXBlRGVmYXVsdDtcbiAgfVxuXG4gIGdldCB0YWdPcmllbnRhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5vcmllbnRhdGlvbiA9PT0gdGhpcy5wb1RhZ09yaWVudGF0aW9uLkhvcml6b250YWw7XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIGNvbnN0IHN1Ym1pdHRlZFRhZ0l0ZW06IFBvVGFnSXRlbSA9IHsgdmFsdWU6IHRoaXMudmFsdWUsIHR5cGU6IHRoaXMudHlwZSB9O1xuICAgIHRoaXMuY2xpY2suZW1pdChzdWJtaXR0ZWRUYWdJdGVtKTtcbiAgfVxuXG4gIG9uS2V5UHJlc3NlZChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5vbkNsaWNrKCk7XG4gIH1cbn1cbiJdfQ==