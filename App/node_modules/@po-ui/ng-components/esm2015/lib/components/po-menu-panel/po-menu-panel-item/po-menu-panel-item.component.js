import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que implementa cada item do po-menu-panel.
 */
let PoMenuPanelItemComponent = class PoMenuPanelItemComponent {
    constructor(menuItemsService) {
        this.menuItemsService = menuItemsService;
    }
    ngOnDestroy() {
        this.itemsSubscription.unsubscribe();
    }
    ngOnInit() {
        // subscribe to menu component messages
        this.subscribeMenuClickedFromParent();
    }
    clickMenuItem(event) {
        if (!(event.ctrlKey || event.metaKey)) {
            event.preventDefault();
            // Emmit to parent
            this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);
        }
    }
    activateMenu(menu) {
        this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;
    }
    processMenuItem(menu) {
        if (this.menuItemInternal.type === 'internalLink') {
            this.activateMenu(menu.active);
        }
    }
    subscribeMenuClickedFromParent() {
        this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {
            this.processMenuItem(menu);
        });
    }
};
PoMenuPanelItemComponent.ctorParameters = () => [
    { type: PoMenuPanelItemsService }
];
__decorate([
    Input('p-menu-item-internal'),
    __metadata("design:type", Object)
], PoMenuPanelItemComponent.prototype, "menuItemInternal", void 0);
PoMenuPanelItemComponent = __decorate([
    Component({
        selector: 'po-menu-panel-item',
        template: "<!-- menu com link interno -->\n<a *ngIf=\"menuItemInternal.type === 'internalLink'\" [routerLink]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu com link externo -->\n<a *ngIf=\"menuItemInternal.type === 'externalLink'\" [href]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu sem link -->\n<a *ngIf=\"menuItemInternal.type === 'noLink'\" href=\"javascript:;\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<ng-template #menuItemTemplate>\n  <div\n    class=\"po-menu-panel-item\"\n    p-tooltip-position=\"right\"\n    [class.po-menu-panel-item-selected]=\"menuItemInternal.isSelected\"\n    [p-tooltip]=\"menuItemInternal.label\"\n    (click)=\"clickMenuItem($event)\"\n  >\n    <span class=\"po-icon {{ menuItemInternal.icon }}\"></span>\n  </div>\n</ng-template>\n"
    }),
    __metadata("design:paramtypes", [PoMenuPanelItemsService])
], PoMenuPanelItemComponent);
export { PoMenuPanelItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWl0ZW0vcG8tbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBRWxGOzs7Ozs7R0FNRztBQUtILElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXdCO0lBS25DLFlBQW9CLGdCQUF5QztRQUF6QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXlCO0lBQUcsQ0FBQztJQUVqRSxXQUFXO1FBQ1QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxRQUFRO1FBQ04sdUNBQXVDO1FBQ3ZDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxhQUFhLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNyQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFFdkIsa0JBQWtCO1lBQ2xCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztTQUN0RTtJQUNILENBQUM7SUFFTyxZQUFZLENBQUMsSUFBNkI7UUFDaEQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDMUUsQ0FBQztJQUVPLGVBQWUsQ0FBQyxJQUFJO1FBQzFCLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksS0FBSyxjQUFjLEVBQUU7WUFDakQsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRU8sOEJBQThCO1FBQ3BDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDN0YsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRixDQUFBOztZQW5DdUMsdUJBQXVCOztBQUY5QjtJQUE5QixLQUFLLENBQUMsc0JBQXNCLENBQUM7O2tFQUEyQztBQUg5RCx3QkFBd0I7SUFKcEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG9CQUFvQjtRQUM5Qiw2N0JBQWtEO0tBQ25ELENBQUM7cUNBTXNDLHVCQUF1QjtHQUxsRCx3QkFBd0IsQ0F3Q3BDO1NBeENZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCB9IGZyb20gJy4vcG8tbWVudS1wYW5lbC1pdGVtLWludGVybmFsLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb01lbnVQYW5lbEl0ZW1zU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3BvLW1lbnUtcGFuZWwtaXRlbXMuc2VydmljZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgaW1wbGVtZW50YSBjYWRhIGl0ZW0gZG8gcG8tbWVudS1wYW5lbC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbWVudS1wYW5lbC1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW1lbnUtcGFuZWwtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9NZW51UGFuZWxJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xuICBpdGVtc1N1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIEBJbnB1dCgncC1tZW51LWl0ZW0taW50ZXJuYWwnKSBtZW51SXRlbUludGVybmFsOiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1lbnVJdGVtc1NlcnZpY2U6IFBvTWVudVBhbmVsSXRlbXNTZXJ2aWNlKSB7fVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaXRlbXNTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIHN1YnNjcmliZSB0byBtZW51IGNvbXBvbmVudCBtZXNzYWdlc1xuICAgIHRoaXMuc3Vic2NyaWJlTWVudUNsaWNrZWRGcm9tUGFyZW50KCk7XG4gIH1cblxuICBjbGlja01lbnVJdGVtKGV2ZW50KSB7XG4gICAgaWYgKCEoZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5KSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgLy8gRW1taXQgdG8gcGFyZW50XG4gICAgICB0aGlzLm1lbnVJdGVtc1NlcnZpY2Uuc2VuZFRvUGFyZW50TWVudUNsaWNrZWQodGhpcy5tZW51SXRlbUludGVybmFsKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFjdGl2YXRlTWVudShtZW51OiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCkge1xuICAgIHRoaXMubWVudUl0ZW1JbnRlcm5hbC5pc1NlbGVjdGVkID0gdGhpcy5tZW51SXRlbUludGVybmFsLmlkID09PSBtZW51LmlkO1xuICB9XG5cbiAgcHJpdmF0ZSBwcm9jZXNzTWVudUl0ZW0obWVudSkge1xuICAgIGlmICh0aGlzLm1lbnVJdGVtSW50ZXJuYWwudHlwZSA9PT0gJ2ludGVybmFsTGluaycpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVNZW51KG1lbnUuYWN0aXZlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZU1lbnVDbGlja2VkRnJvbVBhcmVudCgpIHtcbiAgICB0aGlzLml0ZW1zU3Vic2NyaXB0aW9uID0gdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnJlY2VpdmVGcm9tUGFyZW50TWVudUNsaWNrZWQoKS5zdWJzY3JpYmUobWVudSA9PiB7XG4gICAgICB0aGlzLnByb2Nlc3NNZW51SXRlbShtZW51KTtcbiAgICB9KTtcbiAgfVxufVxuIl19