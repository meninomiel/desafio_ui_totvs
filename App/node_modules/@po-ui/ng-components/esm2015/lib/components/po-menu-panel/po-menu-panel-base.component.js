import { __decorate, __metadata } from "tslib";
import { Input, Directive } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { isExternalLink } from '../../utils/util';
/**
 * @description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
let PoMenuPanelBaseComponent = class PoMenuPanelBaseComponent {
    /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
    set menus(menus) {
        this._menus = Array.isArray(menus) ? menus : [];
        this.setMenuExtraProperties(this._menus);
        this.validateMenus(this._menus);
    }
    get menus() {
        return this._menus;
    }
    setMenuExtraProperties(menus) {
        menus.forEach(menuItem => this.setMenuItemProperties(menuItem));
    }
    setMenuItemProperties(menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    }
    setMenuType(menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
    validateMenu(menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    }
    validateMenus(menus) {
        menus.forEach(menu => this.validateMenu(menu));
    }
};
__decorate([
    Input('p-menus'),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], PoMenuPanelBaseComponent.prototype, "menus", null);
PoMenuPanelBaseComponent = __decorate([
    Directive()
], PoMenuPanelBaseComponent);
export { PoMenuPanelBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbWVudS1wYW5lbC9wby1tZW51LXBhbmVsLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLbEQ7Ozs7Ozs7O0dBUUc7QUFFSCxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF3QjtJQUduQyw0SEFBNEg7SUFDMUcsSUFBSSxLQUFLLENBQUMsS0FBNkI7UUFDdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUVoRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVPLHNCQUFzQixDQUFDLEtBQTZCO1FBQzFELEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQTBCLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVPLHFCQUFxQixDQUFDLFFBQWlDO1FBQzdELFFBQVEsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNwQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVPLFdBQVcsQ0FBQyxRQUF5QjtRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQyxPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFFTyxZQUFZLENBQUMsUUFBeUI7UUFDNUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzREFBc0QsQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztJQUVPLGFBQWEsQ0FBQyxLQUFLO1FBQ3pCLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBQztDQUNGLENBQUE7QUE3Q21CO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OEJBQWtCLEtBQUs7cUNBQUwsS0FBSztxREFLdkM7QUFUVSx3QkFBd0I7SUFEcEMsU0FBUyxFQUFFO0dBQ0Msd0JBQXdCLENBaURwQztTQWpEWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tICd1dWlkJztcbmltcG9ydCB7IGlzRXh0ZXJuYWxMaW5rIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbSB9IGZyb20gJy4vcG8tbWVudS1wYW5lbC1pdGVtL3BvLW1lbnUtcGFuZWwtaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RlIMOpIHVtIGNvbXBvbmVudGUgZGUgbWVudSBsYXRlcmFsIGNvbXBvc3RvIGFwZW5hcyBwb3Igw61jb25lcyBlIGNvbSB1bSBuw612ZWwsIHV0aWxpemFkbyBwYXJhIG5hdmVnYcOnw6NvXG4gKiBlbSBww6FnaW5hcyBpbnRlcm5hcywgZXh0ZXJuYXMgZGEgYXBsaWNhw6fDo28gb3UgYWNpb25hIHVtYSBhw6fDo28uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1tZW51LXBhbmVsYCByZWNlYmUgdW1hIGxpc3RhIGRlIG9iamV0b3MgZG8gdGlwbyBgTWVudVBhbmVsSXRlbWAgY29tIGFzIGluZm9ybWHDp8O1ZXMgZG9zXG4gKiBpdGVucyBkZSBtZW51IGNvbW8gdGV4dG9zLCBsaW5rcyBwYXJhIHJlZGlyZWNpb25hbWVudG8sIGHDp8O1ZXMgZSDDrWNvbmVzLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb01lbnVQYW5lbEJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF9tZW51cztcblxuICAvKiogTGlzdGEgZG9zIGl0ZW5zIGRvIGBwby1tZW51LXBhbmVsYC4gU2UgbyB2YWxvciBlc3RpdmVyIGluZGVmaW5pZG8gb3UgaW52w6FsaWRvLCBzZXLDoSBpbmljaWFsaXphZG8gY29tbyB1bSBhcnJheSB2YXppby4gKi9cbiAgQElucHV0KCdwLW1lbnVzJykgc2V0IG1lbnVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgdGhpcy5fbWVudXMgPSBBcnJheS5pc0FycmF5KG1lbnVzKSA/IG1lbnVzIDogW107XG5cbiAgICB0aGlzLnNldE1lbnVFeHRyYVByb3BlcnRpZXModGhpcy5fbWVudXMpO1xuICAgIHRoaXMudmFsaWRhdGVNZW51cyh0aGlzLl9tZW51cyk7XG4gIH1cblxuICBnZXQgbWVudXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lbnVzO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRNZW51RXh0cmFQcm9wZXJ0aWVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgbWVudXMuZm9yRWFjaChtZW51SXRlbSA9PiB0aGlzLnNldE1lbnVJdGVtUHJvcGVydGllcyg8UG9NZW51UGFuZWxJdGVtSW50ZXJuYWw+bWVudUl0ZW0pKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudUl0ZW1Qcm9wZXJ0aWVzKG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCkge1xuICAgIG1lbnVJdGVtLmlkID0gbWVudUl0ZW0uaWQgfHwgdXVpZCgpO1xuICAgIG1lbnVJdGVtLnR5cGUgPSB0aGlzLnNldE1lbnVUeXBlKG1lbnVJdGVtKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudVR5cGUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSk6IHN0cmluZyB7XG4gICAgaWYgKCFtZW51SXRlbS5saW5rKSB7XG4gICAgICByZXR1cm4gJ25vTGluayc7XG4gICAgfVxuXG4gICAgaWYgKGlzRXh0ZXJuYWxMaW5rKG1lbnVJdGVtLmxpbmspKSB7XG4gICAgICByZXR1cm4gJ2V4dGVybmFsTGluayc7XG4gICAgfVxuXG4gICAgcmV0dXJuICdpbnRlcm5hbExpbmsnO1xuICB9XG5cbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSkge1xuICAgIGlmICghbWVudUl0ZW0ubGFiZWwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBQb01lbnVQYW5lbEl0ZW0ubGFiZWwgbsOjbyBwb2RlIHNlciB2YXppby4nKTtcbiAgICB9XG5cbiAgICBpZiAoIW1lbnVJdGVtLmljb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBQb01lbnVQYW5lbEl0ZW0uaWNvbiBuw6NvIHBvZGUgc2VyIHZhemlvLicpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVNZW51cyhtZW51cyk6IHZvaWQge1xuICAgIG1lbnVzLmZvckVhY2gobWVudSA9PiB0aGlzLnZhbGlkYXRlTWVudShtZW51KSk7XG4gIH1cbn1cbiJdfQ==