import { __decorate, __metadata } from "tslib";
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { isExternalLink } from '../../../../utils/util';
let PoNavbarItemComponent = class PoNavbarItemComponent {
    constructor() {
        this.click = new EventEmitter();
    }
    get type() {
        return isExternalLink(this.link) ? 'externalLink' : 'internalLink';
    }
    itemClick(label, link) {
        if (this.action) {
            this.action({ label, link });
        }
        this.click.emit();
    }
};
__decorate([
    Input('p-action'),
    __metadata("design:type", Function)
], PoNavbarItemComponent.prototype, "action", void 0);
__decorate([
    Input('p-clickable'),
    __metadata("design:type", Boolean)
], PoNavbarItemComponent.prototype, "clickable", void 0);
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoNavbarItemComponent.prototype, "label", void 0);
__decorate([
    Input('p-link'),
    __metadata("design:type", String)
], PoNavbarItemComponent.prototype, "link", void 0);
__decorate([
    Output('p-click'),
    __metadata("design:type", EventEmitter)
], PoNavbarItemComponent.prototype, "click", void 0);
PoNavbarItemComponent = __decorate([
    Component({
        selector: 'po-navbar-item',
        template: "<ng-container [ngSwitch]=\"type\">\n  <a\n    *ngSwitchCase=\"'externalLink'\"\n    class=\"po-navbar-item-link\"\n    [class.po-clickable]=\"clickable\"\n    [href]=\"link\"\n    target=\"_blank\"\n    (click)=\"itemClick()\"\n  >\n    {{ label }}\n  </a>\n\n  <a\n    *ngSwitchCase=\"'internalLink'\"\n    class=\"po-navbar-item-link\"\n    [class.po-clickable]=\"clickable\"\n    [routerLink]=\"link\"\n    (click)=\"itemClick(label, link)\"\n  >\n    {{ label }}\n  </a>\n</ng-container>\n"
    })
], PoNavbarItemComponent);
export { PoNavbarItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1uYXZiYXIvcG8tbmF2YmFyLWl0ZW1zL3BvLW5hdmJhci1pdGVtL3BvLW5hdmJhci1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUl2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFNeEQsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7SUFBbEM7UUFTcUIsVUFBSyxHQUErQixJQUFJLFlBQVksRUFBZ0IsQ0FBQztJQWExRixDQUFDO0lBWEMsSUFBSSxJQUFJO1FBQ04sT0FBTyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztJQUNyRSxDQUFDO0lBRUQsU0FBUyxDQUFDLEtBQWMsRUFBRSxJQUFhO1FBQ3JDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUM5QjtRQUVELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQztDQUNGLENBQUE7QUFyQm9CO0lBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7OEJBQVMsUUFBUTtxREFBQztBQUVkO0lBQXJCLEtBQUssQ0FBQyxhQUFhLENBQUM7O3dEQUFxQjtBQUV4QjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOztvREFBZTtBQUVmO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O21EQUFlO0FBRVo7SUFBbEIsTUFBTSxDQUFDLFNBQVMsQ0FBQzs4QkFBUSxZQUFZO29EQUFrRDtBQVQ3RSxxQkFBcUI7SUFKakMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGdCQUFnQjtRQUMxQix5ZkFBOEM7S0FDL0MsQ0FBQztHQUNXLHFCQUFxQixDQXNCakM7U0F0QlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9OYXZiYXJJdGVtIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9wby1uYXZiYXItaXRlbS5pbnRlcmZhY2UnO1xuXG5pbXBvcnQgeyBpc0V4dGVybmFsTGluayB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1uYXZiYXItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1uYXZiYXItaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9OYXZiYXJJdGVtQ29tcG9uZW50IHtcbiAgQElucHV0KCdwLWFjdGlvbicpIGFjdGlvbjogRnVuY3Rpb247XG5cbiAgQElucHV0KCdwLWNsaWNrYWJsZScpIGNsaWNrYWJsZT86IGJvb2xlYW47XG5cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoJ3AtbGluaycpIGxpbms/OiBzdHJpbmc7XG5cbiAgQE91dHB1dCgncC1jbGljaycpIGNsaWNrOiBFdmVudEVtaXR0ZXI8UG9OYXZiYXJJdGVtPiA9IG5ldyBFdmVudEVtaXR0ZXI8UG9OYXZiYXJJdGVtPigpO1xuXG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiBpc0V4dGVybmFsTGluayh0aGlzLmxpbmspID8gJ2V4dGVybmFsTGluaycgOiAnaW50ZXJuYWxMaW5rJztcbiAgfVxuXG4gIGl0ZW1DbGljayhsYWJlbD86IHN0cmluZywgbGluaz86IHN0cmluZykge1xuICAgIGlmICh0aGlzLmFjdGlvbikge1xuICAgICAgdGhpcy5hY3Rpb24oeyBsYWJlbCwgbGluayB9KTtcbiAgICB9XG5cbiAgICB0aGlzLmNsaWNrLmVtaXQoKTtcbiAgfVxufVxuIl19