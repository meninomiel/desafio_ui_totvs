import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';
let PoNavbarActionComponent = class PoNavbarActionComponent {
    constructor(viewContainerRef, router) {
        this.router = router;
        this.parentRef = viewContainerRef['_hostView'][8];
    }
    click() {
        if (this.action) {
            callFunction(this.action, this.parentRef || this);
            return;
        }
        if (this.link) {
            return this.openUrl(this.link);
        }
    }
    openUrl(url) {
        if (isExternalLink(url)) {
            return openExternalLink(url);
        }
        if (url) {
            return this.router.navigate([url]);
        }
    }
};
PoNavbarActionComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Router }
];
__decorate([
    Input('p-action'),
    __metadata("design:type", Function)
], PoNavbarActionComponent.prototype, "action", void 0);
__decorate([
    Input('p-icon'),
    __metadata("design:type", String)
], PoNavbarActionComponent.prototype, "icon", void 0);
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoNavbarActionComponent.prototype, "label", void 0);
__decorate([
    Input('p-link'),
    __metadata("design:type", String)
], PoNavbarActionComponent.prototype, "link", void 0);
__decorate([
    Input('p-tooltip-text'),
    __metadata("design:type", String)
], PoNavbarActionComponent.prototype, "tooltip", void 0);
PoNavbarActionComponent = __decorate([
    Component({
        selector: 'po-navbar-action',
        template: "<div tabindex=\"0\" class=\"po-navbar-action-content po-clickable\" (click)=\"click()\">\n  <span class=\"po-icon {{ icon }}\" [p-tooltip]=\"tooltip\"> </span>\n</div>\n"
    }),
    __metadata("design:paramtypes", [ViewContainerRef, Router])
], PoNavbarActionComponent);
export { PoNavbarActionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLW5hdmJhci9wby1uYXZiYXItYWN0aW9ucy9wby1uYXZiYXItYWN0aW9uL3BvLW5hdmJhci1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekMsT0FBTyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU14RixJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtJQWFsQyxZQUFZLGdCQUFrQyxFQUFVLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ3BFLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxDQUFDO1lBQ2xELE9BQU87U0FDUjtRQUVELElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRU8sT0FBTyxDQUFDLEdBQVc7UUFDekIsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDdkIsT0FBTyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUM5QjtRQUVELElBQUksR0FBRyxFQUFFO1lBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDO0NBQ0YsQ0FBQTs7WUF4QitCLGdCQUFnQjtZQUFrQixNQUFNOztBQVZuRDtJQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDOzhCQUFVLFFBQVE7dURBQUM7QUFFcEI7SUFBaEIsS0FBSyxDQUFDLFFBQVEsQ0FBQzs7cURBQWM7QUFFWjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOztzREFBZTtBQUVmO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O3FEQUFlO0FBRU47SUFBeEIsS0FBSyxDQUFDLGdCQUFnQixDQUFDOzt3REFBa0I7QUFYL0IsdUJBQXVCO0lBSm5DLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxrQkFBa0I7UUFDNUIscUxBQWdEO0tBQ2pELENBQUM7cUNBYzhCLGdCQUFnQixFQUFrQixNQUFNO0dBYjNELHVCQUF1QixDQXFDbkM7U0FyQ1ksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgY2FsbEZ1bmN0aW9uLCBpc0V4dGVybmFsTGluaywgb3BlbkV4dGVybmFsTGluayB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1uYXZiYXItYWN0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW5hdmJhci1hY3Rpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvTmF2YmFyQWN0aW9uQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBwYXJlbnRSZWY6IGFueTtcblxuICBASW5wdXQoJ3AtYWN0aW9uJykgYWN0aW9uPzogRnVuY3Rpb247XG5cbiAgQElucHV0KCdwLWljb24nKSBpY29uOiBzdHJpbmc7XG5cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoJ3AtbGluaycpIGxpbms/OiBzdHJpbmc7XG5cbiAgQElucHV0KCdwLXRvb2x0aXAtdGV4dCcpIHRvb2x0aXA/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZiwgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikge1xuICAgIHRoaXMucGFyZW50UmVmID0gdmlld0NvbnRhaW5lclJlZlsnX2hvc3RWaWV3J11bOF07XG4gIH1cblxuICBjbGljaygpIHtcbiAgICBpZiAodGhpcy5hY3Rpb24pIHtcbiAgICAgIGNhbGxGdW5jdGlvbih0aGlzLmFjdGlvbiwgdGhpcy5wYXJlbnRSZWYgfHwgdGhpcyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubGluaykge1xuICAgICAgcmV0dXJuIHRoaXMub3BlblVybCh0aGlzLmxpbmspO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgb3BlblVybCh1cmw6IHN0cmluZykge1xuICAgIGlmIChpc0V4dGVybmFsTGluayh1cmwpKSB7XG4gICAgICByZXR1cm4gb3BlbkV4dGVybmFsTGluayh1cmwpO1xuICAgIH1cblxuICAgIGlmICh1cmwpIHtcbiAgICAgIHJldHVybiB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdXJsXSk7XG4gICAgfVxuICB9XG59XG4iXX0=