import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';
let PoGridHeadComponent = class PoGridHeadComponent {
    constructor(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.align = 'left';
        this.boolean = false;
        this.position = '';
        this.tabIndex = -1;
    }
    set width(value) {
        this._width = value;
    }
    get width() {
        return this._width ? `${this._width}px` : '100%';
    }
};
PoGridHeadComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
__decorate([
    Input('p-align'),
    __metadata("design:type", String)
], PoGridHeadComponent.prototype, "align", void 0);
__decorate([
    Input('p-freeze'),
    __metadata("design:type", Boolean)
], PoGridHeadComponent.prototype, "boolean", void 0);
__decorate([
    Input('p-position'),
    __metadata("design:type", String)
], PoGridHeadComponent.prototype, "position", void 0);
__decorate([
    Input('p-tab-index'),
    __metadata("design:type", Number)
], PoGridHeadComponent.prototype, "tabIndex", void 0);
__decorate([
    Input('p-width'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoGridHeadComponent.prototype, "width", null);
__decorate([
    Input('p-title'),
    __metadata("design:type", String)
], PoGridHeadComponent.prototype, "title", void 0);
PoGridHeadComponent = __decorate([
    Component({
        selector: 'po-grid-head',
        template: "<div>\n  <div [id]=\"position\" class=\"po-grid-head-content po-grid-head-{{ align }}\" tabindex=\"{{ title ? 0 : -1 }}\">\n    <span>{{ title || '&nbsp;' }}</span>\n  </div>\n</div>\n"
    }),
    __metadata("design:paramtypes", [ChangeDetectorRef])
], PoGridHeadComponent);
export { PoGridHeadComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZ3JpZC9wby1ncmlkLWhlYWQvcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU0zRixJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQW9COUIsWUFBb0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFqQnRDLFVBQUssR0FBWSxNQUFNLENBQUM7UUFFdkIsWUFBTyxHQUFhLEtBQUssQ0FBQztRQUV4QixhQUFRLEdBQVksRUFBRSxDQUFDO1FBRXRCLGFBQVEsR0FBWSxDQUFDLENBQUMsQ0FBQztJQVdjLENBQUM7SUFUMUMsSUFBSSxLQUFLLENBQUMsS0FBc0I7UUFDaEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUNELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNuRCxDQUFDO0NBS0YsQ0FBQTs7WUFEd0MsaUJBQWlCOztBQWpCdEM7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7a0RBQXlCO0FBRXZCO0lBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7O29EQUEyQjtBQUV4QjtJQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOztxREFBd0I7QUFFdEI7SUFBckIsS0FBSyxDQUFDLGFBQWEsQ0FBQzs7cURBQXdCO0FBRTNCO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OztnREFFaEI7QUFLaUI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7a0RBQWdCO0FBbEJ0QixtQkFBbUI7SUFKL0IsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGNBQWM7UUFDeEIsb01BQTRDO0tBQzdDLENBQUM7cUNBcUJ1QyxpQkFBaUI7R0FwQjdDLG1CQUFtQixDQXFCL0I7U0FyQlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1ncmlkLWhlYWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tZ3JpZC1oZWFkLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0dyaWRIZWFkQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfd2lkdGg6IHN0cmluZyB8IG51bWJlcjtcblxuICBASW5wdXQoJ3AtYWxpZ24nKSBhbGlnbj86IHN0cmluZyA9ICdsZWZ0JztcblxuICBASW5wdXQoJ3AtZnJlZXplJykgYm9vbGVhbj86IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoJ3AtcG9zaXRpb24nKSBwb3NpdGlvbj86IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgncC10YWItaW5kZXgnKSB0YWJJbmRleD86IG51bWJlciA9IC0xO1xuXG4gIEBJbnB1dCgncC13aWR0aCcpIHNldCB3aWR0aCh2YWx1ZTogc3RyaW5nIHwgbnVtYmVyKSB7XG4gICAgdGhpcy5fd2lkdGggPSB2YWx1ZTtcbiAgfVxuICBnZXQgd2lkdGgoKTogc3RyaW5nIHwgbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fd2lkdGggPyBgJHt0aGlzLl93aWR0aH1weGAgOiAnMTAwJSc7XG4gIH1cblxuICBASW5wdXQoJ3AtdGl0bGUnKSB0aXRsZT86IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge31cbn1cbiJdfQ==