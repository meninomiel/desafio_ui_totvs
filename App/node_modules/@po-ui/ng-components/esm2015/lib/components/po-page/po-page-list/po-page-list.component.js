import { __decorate, __metadata } from "tslib";
import { AfterContentInit, Component, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewChild, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
import { PoPageListBaseComponent } from './po-page-list-base.component';
/**
 * @docsExtends PoPageListBaseComponent
 *
 * @example
 *
 * <example name="po-page-list-basic" title="PO Page List Basic">
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.html"> </file>
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-labs" title="PO Page List Labs">
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.html"> </file>
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-hiring-processes" title="PO Page List - Hiring Processes">
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts"> </file>
 * </example>
 */
let PoPageListComponent = class PoPageListComponent extends PoPageListBaseComponent {
    /* istanbul ignore next */
    constructor(viewRef, languageService, renderer, router, changeDetector) {
        super(languageService);
        this.renderer = renderer;
        this.router = router;
        this.changeDetector = changeDetector;
        this.limitPrimaryActions = 3;
        this.isRecalculate = true;
        this.maxWidthMobile = 480;
        this.callFunction = callFunction;
        this.parentRef = viewRef['_hostView'][8];
        this.initializeListeners();
    }
    ngOnInit() {
        this.advancedSearch = this.initializeFixedLiterals();
    }
    ngAfterContentInit() {
        this.setIsMobile();
        this.setDropdownActions();
    }
    ngOnChanges(changes) {
        this.setDropdownActions();
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    actionIsDisabled(action) {
        return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;
    }
    callAction(item) {
        if (item.url) {
            isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);
        }
        else if (item.action) {
            callFunction(item.action, this.parentRef);
        }
    }
    hasPageHeader() {
        return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));
    }
    onResize(event) {
        const width = event.target.innerWidth;
        if (width < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
            this.setDropdownActions();
        }
        else {
            this.isMobile = false;
            this.limitPrimaryActions = 3;
            this.setDropdownActions();
        }
    }
    setIsMobile() {
        if (window.innerWidth < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
        }
    }
    setDropdownActions() {
        if (this.actions.length > this.limitPrimaryActions) {
            this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);
        }
    }
    callActionFilter(field) {
        this.callFunction(this.filter[field], this.parentRef);
        this.changeDetector.detectChanges();
    }
    onkeypress(key) {
        if (key === 13) {
            this.callActionFilter('action');
        }
    }
    changeModel(newModel) {
        this.parentRef[this.filter.ngModel] = newModel;
    }
    // Recebe evento change do disclaimer e recalcula tela
    onChangeDisclaimerGroup(disclaimers) {
        if ((disclaimers && disclaimers.length && this.isRecalculate) ||
            (disclaimers.length === 0 && !this.isRecalculate)) {
            this.poPageContent.recalculateHeaderSize();
            this.isRecalculate = !this.isRecalculate;
        }
        if (this.disclaimerGroup && this.disclaimerGroup.change) {
            this.disclaimerGroup.change(disclaimers);
        }
    }
    initializeFixedLiterals() {
        const literal = {
            pt: {
                advancedSearch: 'Busca avançada'
            },
            en: {
                advancedSearch: 'Advanced search'
            },
            es: {
                advancedSearch: 'Búsqueda avanzada'
            },
            ru: {
                advancedSearch: 'полный поиск'
            }
        };
        return literal[this.language].advancedSearch;
    }
    initializeListeners() {
        this.resizeListener = this.renderer.listen('window', 'resize', (event) => {
            this.onResize(event);
        });
    }
    removeListeners() {
        this.resizeListener();
    }
};
PoPageListComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: PoLanguageService },
    { type: Renderer2 },
    { type: Router },
    { type: ChangeDetectorRef }
];
__decorate([
    ViewChild(PoPageContentComponent, { static: true }),
    __metadata("design:type", PoPageContentComponent)
], PoPageListComponent.prototype, "poPageContent", void 0);
PoPageListComponent = __decorate([
    Component({
        selector: 'po-page-list',
        template: "<po-page>\n  <!-- HEADER -->\n  <po-page-header\n    *ngIf=\"hasPageHeader()\"\n    [class.po-page-list-header-padding]=\"filter && !actions.length\"\n    [p-breadcrumb]=\"breadcrumb\"\n    [p-title]=\"title\"\n  >\n    <!-- OPERATIONS -->\n    <div class=\"po-page-list-operations\">\n      <div class=\"po-page-list-actions\" [class.po-page-list-actions-padding]=\"filter\">\n        <po-button\n          *ngIf=\"actions[0]\"\n          p-type=\"primary\"\n          [p-disabled]=\"actionIsDisabled(actions[0])\"\n          [p-icon]=\"actions[0].icon\"\n          [p-label]=\"actions[0].label\"\n          (p-click)=\"callAction(actions[0])\"\n        >\n        </po-button>\n\n        <po-button\n          *ngIf=\"actions[1] && (actions.length === 2 || !isMobile)\"\n          [p-disabled]=\"actionIsDisabled(actions[1])\"\n          [p-label]=\"actions[1].label\"\n          (p-click)=\"callAction(actions[1])\"\n        >\n        </po-button>\n\n        <po-button\n          *ngIf=\"actions.length == 3 && actions[2] && !isMobile\"\n          [p-disabled]=\"actionIsDisabled(actions[2])\"\n          [p-label]=\"actions[2].label\"\n          (p-click)=\"callAction(actions[2])\"\n        >\n        </po-button>\n\n        <po-dropdown\n          *ngIf=\"actions.length > limitPrimaryActions\"\n          [p-actions]=\"dropdownActions\"\n          [p-label]=\"literals.otherActions\"\n        >\n        </po-dropdown>\n      </div>\n\n      <!-- FILTER -->\n      <div class=\"po-page-list-filter-wrapper\" *ngIf=\"filter\">\n        <div class=\"po-field-container-content po-page-filter-content\">\n          <div class=\"po-field-icon-container-right\">\n            <span class=\"po-icon po-icon-search po-field-icon\" (click)=\"callActionFilter('action')\"> </span>\n          </div>\n\n          <input\n            class=\"po-input po-input-icon-right\"\n            name=\"model\"\n            type=\"text\"\n            [ngModel]=\"parentRef[filter.ngModel]\"\n            [placeholder]=\"filter.placeholder || ''\"\n            (keypress)=\"onkeypress($event.keyCode)\"\n            (ngModelChange)=\"changeModel($event)\"\n          />\n        </div>\n\n        <div class=\"po-page-list-filter-search\" *ngIf=\"filter.advancedAction\">\n          <span\n            class=\"po-page-list-filter-search-link\"\n            tabindex=\"0\"\n            (click)=\"callActionFilter('advancedAction')\"\n            (keydown.enter)=\"callActionFilter('advancedAction')\"\n          >\n            {{ advancedSearch }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- DISCLAIMER -->\n    <po-disclaimer-group\n      *ngIf=\"!!disclaimerGroup\"\n      [class.po-page-list-disclaimer-group]=\"!!disclaimerGroup?.disclaimers?.length\"\n      [p-disclaimers]=\"disclaimerGroup?.disclaimers\"\n      [p-hide-remove-all]=\"disclaimerGroup?.hideRemoveAll\"\n      [p-title]=\"disclaimerGroup?.title\"\n      (p-change)=\"onChangeDisclaimerGroup($event)\"\n    >\n    </po-disclaimer-group>\n  </po-page-header>\n\n  <!-- CONTENT -->\n  <po-page-content>\n    <ng-content></ng-content>\n  </po-page-content>\n</po-page>\n"
    }),
    __metadata("design:paramtypes", [ViewContainerRef,
        PoLanguageService,
        Renderer2,
        Router,
        ChangeDetectorRef])
], PoPageListComponent);
export { PoPageListComponent };
//# sourceMappingURL=data:application/json;base64,