import { __decorate, __metadata } from "tslib";
import { Input, ViewChild, Directive } from '@angular/core';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
/**
 * @description
 *
 * O componente `po-page-default` é utilizado como o container principal para as telas sem um template definido.
 */
let PoPageDefaultBaseComponent = class PoPageDefaultBaseComponent {
    constructor() {
        this._actions = [];
    }
    /**
     * @optional
     *
     * @description
     *
     * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.
     */
    set actions(actions) {
        this._actions = Array.isArray(actions) ? actions : [];
        this.setDropdownActions();
    }
    get actions() {
        return this._actions;
    }
    /** Título da página. */
    set title(title) {
        this._title = title;
        setTimeout(() => this.poPageContent.recalculateHeaderSize());
    }
    get title() {
        return this._title;
    }
};
__decorate([
    ViewChild(PoPageContentComponent, { static: true }),
    __metadata("design:type", PoPageContentComponent)
], PoPageDefaultBaseComponent.prototype, "poPageContent", void 0);
__decorate([
    Input('p-actions'),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], PoPageDefaultBaseComponent.prototype, "actions", null);
__decorate([
    Input('p-breadcrumb'),
    __metadata("design:type", Object)
], PoPageDefaultBaseComponent.prototype, "breadcrumb", void 0);
__decorate([
    Input('p-title'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoPageDefaultBaseComponent.prototype, "title", null);
PoPageDefaultBaseComponent = __decorate([
    Directive()
], PoPageDefaultBaseComponent);
export { PoPageDefaultBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1kZWZhdWx0LWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlL3BvLXBhZ2UtZGVmYXVsdC9wby1wYWdlLWRlZmF1bHQtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUk1RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUV0Rjs7OztHQUlHO0FBRUgsSUFBc0IsMEJBQTBCLEdBQWhELE1BQXNCLDBCQUEwQjtJQUFoRDtRQUNVLGFBQVEsR0FBeUIsRUFBRSxDQUFDO0lBb0M5QyxDQUFDO0lBL0JDOzs7Ozs7T0FNRztJQUNpQixJQUFJLE9BQU8sQ0FBQyxPQUE0QjtRQUMxRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUtELHdCQUF3QjtJQUNOLElBQUksS0FBSyxDQUFDLEtBQWE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQUlGLENBQUE7QUFqQ3NEO0lBQXBELFNBQVMsQ0FBQyxzQkFBc0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFBZ0Isc0JBQXNCO2lFQUFDO0FBU3ZFO0lBQW5CLEtBQUssQ0FBQyxXQUFXLENBQUM7OEJBQXNCLEtBQUs7cUNBQUwsS0FBSzt5REFHN0M7QUFPc0I7SUFBdEIsS0FBSyxDQUFDLGNBQWMsQ0FBQzs7OERBQTJCO0FBRy9CO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7Ozt1REFHaEI7QUE3Qm1CLDBCQUEwQjtJQUQvQyxTQUFTLEVBQUU7R0FDVSwwQkFBMEIsQ0FxQy9DO1NBckNxQiwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgVmlld0NoaWxkLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9CcmVhZGNydW1iIH0gZnJvbSAnLi4vLi4vcG8tYnJlYWRjcnVtYi9wby1icmVhZGNydW1iLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VBY3Rpb24gfSBmcm9tICcuLi9wby1wYWdlLWFjdGlvbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QYWdlQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL3BvLXBhZ2UtY29udGVudC9wby1wYWdlLWNvbnRlbnQuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLXBhZ2UtZGVmYXVsdGAgw6kgdXRpbGl6YWRvIGNvbW8gbyBjb250YWluZXIgcHJpbmNpcGFsIHBhcmEgYXMgdGVsYXMgc2VtIHVtIHRlbXBsYXRlIGRlZmluaWRvLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb1BhZ2VEZWZhdWx0QmFzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX2FjdGlvbnM/OiBBcnJheTxQb1BhZ2VBY3Rpb24+ID0gW107XG4gIHByaXZhdGUgX3RpdGxlOiBzdHJpbmc7XG5cbiAgQFZpZXdDaGlsZChQb1BhZ2VDb250ZW50Q29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBwb1BhZ2VDb250ZW50OiBQb1BhZ2VDb250ZW50Q29tcG9uZW50O1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE5lc3RhIHByb3ByaWVkYWRlIGRldmUgc2VyIGRlZmluaWRvIHVtIGFycmF5IGRlIG9iamV0b3MgcXVlIGltcGxlbWVudGFtIGEgaW50ZXJmYWNlIGBQb1BhZ2VBY3Rpb25gLlxuICAgKi9cbiAgQElucHV0KCdwLWFjdGlvbnMnKSBzZXQgYWN0aW9ucyhhY3Rpb25zOiBBcnJheTxQb1BhZ2VBY3Rpb24+KSB7XG4gICAgdGhpcy5fYWN0aW9ucyA9IEFycmF5LmlzQXJyYXkoYWN0aW9ucykgPyBhY3Rpb25zIDogW107XG4gICAgdGhpcy5zZXREcm9wZG93bkFjdGlvbnMoKTtcbiAgfVxuXG4gIGdldCBhY3Rpb25zKCk6IEFycmF5PFBvUGFnZUFjdGlvbj4ge1xuICAgIHJldHVybiB0aGlzLl9hY3Rpb25zO1xuICB9XG5cbiAgLyoqIE9iamV0byBjb20gcHJvcHJpZWRhZGVzIGRvIGJyZWFkY3J1bWIuICovXG4gIEBJbnB1dCgncC1icmVhZGNydW1iJykgYnJlYWRjcnVtYj86IFBvQnJlYWRjcnVtYjtcblxuICAvKiogVMOtdHVsbyBkYSBww6FnaW5hLiAqL1xuICBASW5wdXQoJ3AtdGl0bGUnKSBzZXQgdGl0bGUodGl0bGU6IHN0cmluZykge1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLnBvUGFnZUNvbnRlbnQucmVjYWxjdWxhdGVIZWFkZXJTaXplKCkpO1xuICB9XG5cbiAgZ2V0IHRpdGxlKCkge1xuICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgfVxuXG4gIC8vIFNldGEgYSBsaXN0YSBkZSBhw6fDtWVzIG5vIGRyb3Bkb3duLlxuICBhYnN0cmFjdCBzZXREcm9wZG93bkFjdGlvbnMoKTtcbn1cbiJdfQ==