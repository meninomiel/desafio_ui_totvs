import { __decorate, __metadata } from "tslib";
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que apresenta o campo de pesquisa no po-menu.
 */
let PoMenuFilterComponent = class PoMenuFilterComponent {
    constructor() {
        // Variável necessária para o po-clean identificar que deve ser criado.
        this.clean = true;
        this.filter = new EventEmitter();
    }
    filterItems(search) {
        this.filter.emit(search);
    }
};
__decorate([
    Input('p-loading'),
    __metadata("design:type", Boolean)
], PoMenuFilterComponent.prototype, "loading", void 0);
__decorate([
    ViewChild('inputFilter', { read: ElementRef, static: true }),
    __metadata("design:type", ElementRef)
], PoMenuFilterComponent.prototype, "inputFilterElement", void 0);
__decorate([
    Output('p-filter'),
    __metadata("design:type", Object)
], PoMenuFilterComponent.prototype, "filter", void 0);
PoMenuFilterComponent = __decorate([
    Component({
        selector: 'po-menu-filter',
        template: "<div class=\"po-menu-filter-container\">\n  <input\n    #inputFilter\n    type=\"text\"\n    class=\"po-menu-filter\"\n    placeholder=\"Pesquisar\"\n    (keyup)=\"filterItems(inputFilter.value)\"\n  />\n\n  <div class=\"po-menu-filter-search-icon-container\">\n    <span *ngIf=\"!loading\" class=\"po-icon po-menu-filter-icon po-icon-search\"></span>\n    <po-loading-icon *ngIf=\"loading\"></po-loading-icon>\n  </div>\n  <div class=\"po-menu-filter-close-icon-container\">\n    <po-clean [p-element-ref]=\"inputFilterElement\" (p-change-event)=\"filterItems(inputFilter.value)\"></po-clean>\n  </div>\n</div>\n"
    })
], PoMenuFilterComponent);
export { PoMenuFilterComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1tZW51L3BvLW1lbnUtZmlsdGVyL3BvLW1lbnUtZmlsdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlGOzs7Ozs7R0FNRztBQUtILElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0lBQWxDO1FBQ0UsdUVBQXVFO1FBQzlELFVBQUssR0FBRyxJQUFJLENBQUM7UUFPRixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUtsRCxDQUFDO0lBSEMsV0FBVyxDQUFDLE1BQWM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUNGLENBQUE7QUFWcUI7SUFBbkIsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7c0RBQWtCO0FBR3lCO0lBQTdELFNBQVMsQ0FBQyxhQUFhLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFBcUIsVUFBVTtpRUFBQztBQUV6RTtJQUFuQixNQUFNLENBQUMsVUFBVSxDQUFDOztxREFBNkI7QUFUckMscUJBQXFCO0lBSmpDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsaW5CQUE4QztLQUMvQyxDQUFDO0dBQ1cscUJBQXFCLENBY2pDO1NBZFkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIGFwcmVzZW50YSBvIGNhbXBvIGRlIHBlc3F1aXNhIG5vIHBvLW1lbnUuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLW1lbnUtZmlsdGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW1lbnUtZmlsdGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb01lbnVGaWx0ZXJDb21wb25lbnQge1xuICAvLyBWYXJpw6F2ZWwgbmVjZXNzw6FyaWEgcGFyYSBvIHBvLWNsZWFuIGlkZW50aWZpY2FyIHF1ZSBkZXZlIHNlciBjcmlhZG8uXG4gIHJlYWRvbmx5IGNsZWFuID0gdHJ1ZTtcblxuICBASW5wdXQoJ3AtbG9hZGluZycpIGxvYWRpbmc6IGJvb2xlYW47XG5cbiAgLy8gdXRpbGl6YWRvIHBhcmEgcmVwYXNzYXIgYW8gcG8tY2xlYW5cbiAgQFZpZXdDaGlsZCgnaW5wdXRGaWx0ZXInLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBpbnB1dEZpbHRlckVsZW1lbnQ6IEVsZW1lbnRSZWY7XG5cbiAgQE91dHB1dCgncC1maWx0ZXInKSBmaWx0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZmlsdGVySXRlbXMoc2VhcmNoOiBzdHJpbmcpIHtcbiAgICB0aGlzLmZpbHRlci5lbWl0KHNlYXJjaCk7XG4gIH1cbn1cbiJdfQ==