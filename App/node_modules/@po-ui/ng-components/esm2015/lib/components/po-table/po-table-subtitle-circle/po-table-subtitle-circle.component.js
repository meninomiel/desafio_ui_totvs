import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para a criação da representação da legenda, em formato de círculo.
 */
let PoTableSubtitleCircleComponent = class PoTableSubtitleCircleComponent {
    constructor(poColorPaletteService) {
        this.poColorPaletteService = poColorPaletteService;
        /** Esconde a tooltip. */
        this.hideTitle = false;
    }
    /** Objeto com os dados da legenda. */
    set subtitle(subtitle) {
        if (subtitle) {
            subtitle.color = this.poColorPaletteService.getColor(subtitle);
        }
        this._subtitle = subtitle;
    }
    get subtitle() {
        return this._subtitle;
    }
};
PoTableSubtitleCircleComponent.ctorParameters = () => [
    { type: PoColorPaletteService }
];
__decorate([
    Input('p-subtitle'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoTableSubtitleCircleComponent.prototype, "subtitle", null);
__decorate([
    Input('p-hide-title'),
    __metadata("design:type", Boolean)
], PoTableSubtitleCircleComponent.prototype, "hideTitle", void 0);
PoTableSubtitleCircleComponent = __decorate([
    Component({
        selector: 'po-table-subtitle-circle',
        template: "<span [title]=\"hideTitle ? '' : subtitle?.label\" class=\"po-table-subtitle-circle po-{{ subtitle?.color }}\">\n  {{ subtitle?.content }}\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    __metadata("design:paramtypes", [PoColorPaletteService])
], PoTableSubtitleCircleComponent);
export { PoTableSubtitleCircleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc3VidGl0bGUtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtc3VidGl0bGUtY2lyY2xlL3BvLXRhYmxlLXN1YnRpdGxlLWNpcmNsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBR3RHOzs7Ozs7R0FNRztBQU1ILElBQWEsOEJBQThCLEdBQTNDLE1BQWEsOEJBQThCO0lBa0J6QyxZQUFvQixxQkFBNEM7UUFBNUMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUpoRSx5QkFBeUI7UUFFekIsY0FBUyxHQUFZLEtBQUssQ0FBQztJQUV3QyxDQUFDO0lBZnBFLHNDQUFzQztJQUNqQixJQUFJLFFBQVEsQ0FBQyxRQUErQjtRQUMvRCxJQUFJLFFBQVEsRUFBRTtZQUNaLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNoRTtRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztDQU9GLENBQUE7O1lBRDRDLHFCQUFxQjs7QUFkM0M7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7OzhEQUtuQjtBQU9EO0lBREMsS0FBSyxDQUFDLGNBQWMsQ0FBQzs7aUVBQ0s7QUFoQmhCLDhCQUE4QjtJQUwxQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsMEJBQTBCO1FBQ3BDLGlLQUF3RDtRQUN4RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO3FDQW1CMkMscUJBQXFCO0dBbEJyRCw4QkFBOEIsQ0FtQjFDO1NBbkJZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQ29sb3JQYWxldHRlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tY29sb3ItcGFsZXR0ZS9wby1jb2xvci1wYWxldHRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9UYWJsZVN1YnRpdGxlQ29sdW1uIH0gZnJvbSAnLi8uLi9wby10YWJsZS1zdWJ0aXRsZS1mb290ZXIvcG8tdGFibGUtc3VidGl0bGUtY29sdW1uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGEgY3JpYcOnw6NvIGRhIHJlcHJlc2VudGHDp8OjbyBkYSBsZWdlbmRhLCBlbSBmb3JtYXRvIGRlIGPDrXJjdWxvLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1zdWJ0aXRsZS1jaXJjbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtc3VidGl0bGUtY2lyY2xlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZVN1YnRpdGxlQ2lyY2xlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfc3VidGl0bGU6IFBvVGFibGVTdWJ0aXRsZUNvbHVtbjtcblxuICAvKiogT2JqZXRvIGNvbSBvcyBkYWRvcyBkYSBsZWdlbmRhLiAqL1xuICBASW5wdXQoJ3Atc3VidGl0bGUnKSBzZXQgc3VidGl0bGUoc3VidGl0bGU6IFBvVGFibGVTdWJ0aXRsZUNvbHVtbikge1xuICAgIGlmIChzdWJ0aXRsZSkge1xuICAgICAgc3VidGl0bGUuY29sb3IgPSB0aGlzLnBvQ29sb3JQYWxldHRlU2VydmljZS5nZXRDb2xvcihzdWJ0aXRsZSk7XG4gICAgfVxuICAgIHRoaXMuX3N1YnRpdGxlID0gc3VidGl0bGU7XG4gIH1cbiAgZ2V0IHN1YnRpdGxlKCk6IFBvVGFibGVTdWJ0aXRsZUNvbHVtbiB7XG4gICAgcmV0dXJuIHRoaXMuX3N1YnRpdGxlO1xuICB9XG5cbiAgLyoqIEVzY29uZGUgYSB0b29sdGlwLiAqL1xuICBASW5wdXQoJ3AtaGlkZS10aXRsZScpXG4gIGhpZGVUaXRsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcG9Db2xvclBhbGV0dGVTZXJ2aWNlOiBQb0NvbG9yUGFsZXR0ZVNlcnZpY2UpIHt9XG59XG4iXX0=