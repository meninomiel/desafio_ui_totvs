import { __decorate, __metadata } from "tslib";
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir ícones nas colunas.
 */
let PoTableColumnIconComponent = class PoTableColumnIconComponent {
    constructor() {
        this._icons = [];
    }
    /** Lista de colunas com ícones. */
    set icons(icons) {
        this._icons = this.convertToColumnIcon(icons);
    }
    get icons() {
        return this._icons;
    }
    click(columnIcon, event) {
        const isAbleAction = !this.isDisabled(columnIcon);
        if (isAbleAction) {
            if (columnIcon.action) {
                columnIcon.action(this.row, columnIcon);
            }
            else if (this.column.action) {
                this.column.action(this.row, columnIcon);
            }
            event.stopPropagation();
        }
    }
    getColor(column) {
        const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;
        if (color) {
            return `po-text-${color}`;
        }
    }
    getIcon(column) {
        return column.icon || column.value;
    }
    isClickable(columnIcon) {
        return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));
    }
    isDisabled(column) {
        return column.disabled ? column.disabled(this.row) : false;
    }
    trackByFunction(index) {
        return index;
    }
    convertToColumnIcon(rowIcons) {
        if (Array.isArray(rowIcons)) {
            return rowIcons.map(rowIcon => (typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon));
        }
        if (typeof rowIcons === 'string') {
            return [{ value: rowIcons }];
        }
        return [];
    }
};
__decorate([
    Input('p-column'),
    __metadata("design:type", Object)
], PoTableColumnIconComponent.prototype, "column", void 0);
__decorate([
    Input('p-icons'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoTableColumnIconComponent.prototype, "icons", null);
__decorate([
    Input('p-row'),
    __metadata("design:type", Object)
], PoTableColumnIconComponent.prototype, "row", void 0);
PoTableColumnIconComponent = __decorate([
    Component({
        selector: 'po-table-column-icon',
        template: "<po-table-icon\n  *ngFor=\"let column of icons; trackBy: trackByFunction\"\n  [p-clickable]=\"isClickable(column)\"\n  [p-color]=\"getColor(column)\"\n  [p-disabled]=\"isDisabled(column)\"\n  [p-icon]=\"getIcon(column)\"\n  [p-icon-tooltip]=\"column.tooltip\"\n  (p-click)=\"click(column, $event)\"\n>\n</po-table-icon>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoTableColumnIconComponent);
export { PoTableColumnIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1jb2x1bW4taWNvbi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSzFFOzs7Ozs7R0FNRztBQU1ILElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQTBCO0lBQXZDO1FBQ1UsV0FBTSxHQUE2QixFQUFFLENBQUM7SUFpRWhELENBQUM7SUE1REMsbUNBQW1DO0lBQ2pCLElBQUksS0FBSyxDQUFDLEtBQXdEO1FBQ2xGLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUtELEtBQUssQ0FBQyxVQUE2QixFQUFFLEtBQUs7UUFDeEMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRWxELElBQUksWUFBWSxFQUFFO1lBQ2hCLElBQUksVUFBVSxDQUFDLE1BQU0sRUFBRTtnQkFDckIsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO2FBQ3pDO2lCQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7Z0JBQzdCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7YUFDMUM7WUFDRCxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQXlCO1FBQ2hDLE1BQU0sS0FBSyxHQUFHLE9BQU8sTUFBTSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUVqRyxJQUFJLEtBQUssRUFBRTtZQUNULE9BQU8sV0FBVyxLQUFLLEVBQUUsQ0FBQztTQUMzQjtJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsTUFBeUI7UUFDL0IsT0FBTyxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVcsQ0FBQyxVQUE2QjtRQUN2QyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBeUI7UUFDbEMsT0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQzdELENBQUM7SUFFRCxlQUFlLENBQUMsS0FBSztRQUNuQixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTyxtQkFBbUIsQ0FBQyxRQUEyRDtRQUNyRixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0IsT0FBYSxRQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLE9BQU8sS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ3JHO1FBRUQsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDaEMsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7U0FDOUI7UUFFRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7Q0FDRixDQUFBO0FBOURvQjtJQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDOzswREFBdUI7QUFHdkI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7O3VEQUVoQjtBQU9lO0lBQWYsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7dURBQVU7QUFoQmQsMEJBQTBCO0lBTHRDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMsNlVBQW9EO1FBQ3BELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7R0FDVywwQkFBMEIsQ0FrRXRDO1NBbEVZLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVGFibGVDb2x1bW4gfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXRhYmxlLWNvbHVtbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9UYWJsZUNvbHVtbkljb24gfSBmcm9tICcuL3BvLXRhYmxlLWNvbHVtbi1pY29uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIGV4aWJpciDDrWNvbmVzIG5hcyBjb2x1bmFzLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1jb2x1bW4taWNvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVDb2x1bW5JY29uQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfaWNvbnM6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiA9IFtdO1xuXG4gIC8qKiBEZWZpbmnDp8OjbyBkYSBjb2x1bmEgcXVlIHV0aWxpemEgb3MgaWNvbmVzLiAqL1xuICBASW5wdXQoJ3AtY29sdW1uJykgY29sdW1uOiBQb1RhYmxlQ29sdW1uO1xuXG4gIC8qKiBMaXN0YSBkZSBjb2x1bmFzIGNvbSDDrWNvbmVzLiAqL1xuICBASW5wdXQoJ3AtaWNvbnMnKSBzZXQgaWNvbnMoaWNvbnM6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiB8IEFycmF5PHN0cmluZz4gfCBzdHJpbmcpIHtcbiAgICB0aGlzLl9pY29ucyA9IHRoaXMuY29udmVydFRvQ29sdW1uSWNvbihpY29ucyk7XG4gIH1cblxuICBnZXQgaWNvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ljb25zO1xuICB9XG5cbiAgLyoqIERhZG9zIGRhIGxpbmhhIGRhIHRhYmVsYS4gKi9cbiAgQElucHV0KCdwLXJvdycpIHJvdzogYW55O1xuXG4gIGNsaWNrKGNvbHVtbkljb246IFBvVGFibGVDb2x1bW5JY29uLCBldmVudCk6IHZvaWQge1xuICAgIGNvbnN0IGlzQWJsZUFjdGlvbiA9ICF0aGlzLmlzRGlzYWJsZWQoY29sdW1uSWNvbik7XG5cbiAgICBpZiAoaXNBYmxlQWN0aW9uKSB7XG4gICAgICBpZiAoY29sdW1uSWNvbi5hY3Rpb24pIHtcbiAgICAgICAgY29sdW1uSWNvbi5hY3Rpb24odGhpcy5yb3csIGNvbHVtbkljb24pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtbi5hY3Rpb24pIHtcbiAgICAgICAgdGhpcy5jb2x1bW4uYWN0aW9uKHRoaXMucm93LCBjb2x1bW5JY29uKTtcbiAgICAgIH1cbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIGdldENvbG9yKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvbG9yID0gdHlwZW9mIGNvbHVtbi5jb2xvciA9PT0gJ2Z1bmN0aW9uJyA/IGNvbHVtbi5jb2xvcih0aGlzLnJvdywgY29sdW1uKSA6IGNvbHVtbi5jb2xvcjtcblxuICAgIGlmIChjb2xvcikge1xuICAgICAgcmV0dXJuIGBwby10ZXh0LSR7Y29sb3J9YDtcbiAgICB9XG4gIH1cblxuICBnZXRJY29uKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pIHtcbiAgICByZXR1cm4gY29sdW1uLmljb24gfHwgY29sdW1uLnZhbHVlO1xuICB9XG5cbiAgaXNDbGlja2FibGUoY29sdW1uSWNvbjogUG9UYWJsZUNvbHVtbkljb24pOiBib29sZWFuIHtcbiAgICByZXR1cm4gISEoIXRoaXMuaXNEaXNhYmxlZChjb2x1bW5JY29uKSAmJiAoY29sdW1uSWNvbi5hY3Rpb24gfHwgdGhpcy5jb2x1bW4uYWN0aW9uKSk7XG4gIH1cblxuICBpc0Rpc2FibGVkKGNvbHVtbjogUG9UYWJsZUNvbHVtbkljb24pOiBib29sZWFuIHtcbiAgICByZXR1cm4gY29sdW1uLmRpc2FibGVkID8gY29sdW1uLmRpc2FibGVkKHRoaXMucm93KSA6IGZhbHNlO1xuICB9XG5cbiAgdHJhY2tCeUZ1bmN0aW9uKGluZGV4KSB7XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG5cbiAgcHJpdmF0ZSBjb252ZXJ0VG9Db2x1bW5JY29uKHJvd0ljb25zOiBBcnJheTxQb1RhYmxlQ29sdW1uSWNvbj4gfCBBcnJheTxzdHJpbmc+IHwgc3RyaW5nKTogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShyb3dJY29ucykpIHtcbiAgICAgIHJldHVybiAoPGFueT5yb3dJY29ucykubWFwKHJvd0ljb24gPT4gKHR5cGVvZiByb3dJY29uID09PSAnc3RyaW5nJyA/IHsgdmFsdWU6IHJvd0ljb24gfSA6IHJvd0ljb24pKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJvd0ljb25zID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIFt7IHZhbHVlOiByb3dJY29ucyB9XTtcbiAgICB9XG5cbiAgICByZXR1cm4gW107XG4gIH1cbn1cbiJdfQ==