import { __decorate, __metadata } from "tslib";
import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';
let PoUploadDragDropAreaOverlayComponent = class PoUploadDragDropAreaOverlayComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.areaElement = new EventEmitter();
    }
    ngAfterViewInit() {
        if (this.target) {
            this.setPosition(this.target);
        }
        this.areaElement.emit(this.DragDropAreaFixed.nativeElement);
    }
    setPosition(targetElement) {
        const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();
        const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];
        clientRectKeys.forEach(clientRectKey => {
            const clientRectValue = boundingClientRect[clientRectKey];
            this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);
        });
    }
};
PoUploadDragDropAreaOverlayComponent.ctorParameters = () => [
    { type: Renderer2 }
];
__decorate([
    ViewChild('DragDropAreaFixed', { read: ElementRef, static: true }),
    __metadata("design:type", ElementRef)
], PoUploadDragDropAreaOverlayComponent.prototype, "DragDropAreaFixed", void 0);
__decorate([
    Input('p-directory-compatible'),
    __metadata("design:type", Boolean)
], PoUploadDragDropAreaOverlayComponent.prototype, "directoryCompatible", void 0);
__decorate([
    Input('p-disabled'),
    __metadata("design:type", Boolean)
], PoUploadDragDropAreaOverlayComponent.prototype, "disabled", void 0);
__decorate([
    Input('p-literals'),
    __metadata("design:type", Object)
], PoUploadDragDropAreaOverlayComponent.prototype, "literals", void 0);
__decorate([
    Input('p-target'),
    __metadata("design:type", ElementRef)
], PoUploadDragDropAreaOverlayComponent.prototype, "target", void 0);
__decorate([
    Output('p-area-element'),
    __metadata("design:type", EventEmitter)
], PoUploadDragDropAreaOverlayComponent.prototype, "areaElement", void 0);
PoUploadDragDropAreaOverlayComponent = __decorate([
    Component({
        selector: 'po-upload-drag-drop-area-overlay',
        template: "<div class=\"po-overlay-fixed\">\n  <po-upload-drag-drop-area\n    #DragDropAreaFixed\n    class=\"po-upload-drag-drop-area-overlay\"\n    [p-directory-compatible]=\"directoryCompatible\"\n    [p-disabled]=\"disabled\"\n    [p-literals]=\"literals\"\n    [p-overlay]=\"true\"\n  >\n  </po-upload-drag-drop-area>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    __metadata("design:paramtypes", [Renderer2])
], PoUploadDragDropAreaOverlayComponent);
export { PoUploadDragDropAreaOverlayComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLW92ZXJsYXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby11cGxvYWQvcG8tdXBsb2FkLWRyYWctZHJvcC9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheS9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxhQUFhLEVBQ2IsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQVN2QixJQUFhLG9DQUFvQyxHQUFqRCxNQUFhLG9DQUFvQztJQWEvQyxZQUFvQixRQUFtQjtRQUFuQixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBRmIsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUV6QyxDQUFDO0lBRTNDLGVBQWU7UUFDYixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRU8sV0FBVyxDQUFDLGFBQXlCO1FBQzNDLE1BQU0sa0JBQWtCLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQy9FLE1BQU0sY0FBYyxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUU3RSxjQUFjLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ3JDLE1BQU0sZUFBZSxHQUFHLGtCQUFrQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRTFELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsYUFBYSxFQUFFLEdBQUcsZUFBZSxJQUFJLENBQUMsQ0FBQztRQUN0RyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRixDQUFBOztZQW5CK0IsU0FBUzs7QUFaNkI7SUFBbkUsU0FBUyxDQUFDLG1CQUFtQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7OEJBQW9CLFVBQVU7K0VBQUM7QUFFakU7SUFBaEMsS0FBSyxDQUFDLHdCQUF3QixDQUFDOztpRkFBOEI7QUFFekM7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7c0VBQW1CO0FBRWxCO0lBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7O3NFQUE0QjtBQUU3QjtJQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDOzhCQUFTLFVBQVU7b0VBQUM7QUFFWjtJQUF6QixNQUFNLENBQUMsZ0JBQWdCLENBQUM7OEJBQWMsWUFBWTt5RUFBZ0M7QUFYeEUsb0NBQW9DO0lBTGhELFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxrQ0FBa0M7UUFDNUMsNlVBQThEO1FBQzlELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7cUNBYzhCLFNBQVM7R0FiNUIsb0NBQW9DLENBZ0NoRDtTQWhDWSxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIFJlbmRlcmVyMixcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1VwbG9hZExpdGVyYWxzIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9wby11cGxvYWQtbGl0ZXJhbHMuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLW92ZXJsYXknLFxuICB0ZW1wbGF0ZVVybDogJ3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5LmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9VcGxvYWREcmFnRHJvcEFyZWFPdmVybGF5Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ0RyYWdEcm9wQXJlYUZpeGVkJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgRHJhZ0Ryb3BBcmVhRml4ZWQ6IEVsZW1lbnRSZWY7XG5cbiAgQElucHV0KCdwLWRpcmVjdG9yeS1jb21wYXRpYmxlJykgZGlyZWN0b3J5Q29tcGF0aWJsZTogYm9vbGVhbjtcblxuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFsczogUG9VcGxvYWRMaXRlcmFscztcblxuICBASW5wdXQoJ3AtdGFyZ2V0JykgdGFyZ2V0OiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoJ3AtYXJlYS1lbGVtZW50JykgYXJlYUVsZW1lbnQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy50YXJnZXQpIHtcbiAgICAgIHRoaXMuc2V0UG9zaXRpb24odGhpcy50YXJnZXQpO1xuICAgIH1cbiAgICB0aGlzLmFyZWFFbGVtZW50LmVtaXQodGhpcy5EcmFnRHJvcEFyZWFGaXhlZC5uYXRpdmVFbGVtZW50KTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0UG9zaXRpb24odGFyZ2V0RWxlbWVudDogRWxlbWVudFJlZikge1xuICAgIGNvbnN0IGJvdW5kaW5nQ2xpZW50UmVjdCA9IHRhcmdldEVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBjbGllbnRSZWN0S2V5cyA9IFsnYm90dG9tJywgJ2xlZnQnLCAnaGVpZ2h0JywgJ3JpZ2h0JywgJ3RvcCcsICd3aWR0aCddO1xuXG4gICAgY2xpZW50UmVjdEtleXMuZm9yRWFjaChjbGllbnRSZWN0S2V5ID0+IHtcbiAgICAgIGNvbnN0IGNsaWVudFJlY3RWYWx1ZSA9IGJvdW5kaW5nQ2xpZW50UmVjdFtjbGllbnRSZWN0S2V5XTtcblxuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLkRyYWdEcm9wQXJlYUZpeGVkLm5hdGl2ZUVsZW1lbnQsIGNsaWVudFJlY3RLZXksIGAke2NsaWVudFJlY3RWYWx1ZX1weGApO1xuICAgIH0pO1xuICB9XG59XG4iXX0=