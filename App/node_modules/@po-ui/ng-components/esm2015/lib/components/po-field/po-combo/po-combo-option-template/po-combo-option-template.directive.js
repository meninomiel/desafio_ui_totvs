import { __decorate, __metadata } from "tslib";
import { Directive, TemplateRef } from '@angular/core';
/**
 * @usedBy PoComboComponent
 *
 * @description
 *
 * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista de opções do componente.
 *
 * > Quando utilizada em dispositivos *mobile* será exibido o componente nativo.
 *
 * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`
 * dentro da *tag* `po-combo`.
 *
 * Para obter a referência do item atual utilize `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.
 *
 * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-combo
 *   name="combo"
 *   [(ngModel)]="combo"
 *   [p-options]="options">
 *     <ng-template p-combo-option-template let-option>
 *       <option-template [option]="option"></option-template>
 *     </ng-template>
 * </po-combo>
 * ...
 * ```
 *
 * ```
 * ...
 * <po-combo
 *   name="combo"
 *   [(ngModel)]="combo"
 *   [p-options]="options">
 *     <div *p-combo-option-template="let option">
 *       <option-template [option]="option"></option-template>
 *     </div>
 * </po-combo>
 * ...
 *
 * ```
 * Para o caso de personalização de opções com agrupamentos, deve-se seguir a mesma orientação acima. Porém, cabe ao desenvolvedor
 * a responsabilidade de estilização dos elementos da lista, tais como título e links dos grupos. Abaixo há um exemplo de aplicação:
 *
 * ```
 * ...
 * <ng-template p-combo-option-template let-option>
 *   <ng-container *ngIf="option.options; then optionsGroupTitle; else optionsGroupList"></ng-container>
 *   <ng-template #optionsGroupTitle>
 *     <p class="po-combo-item-title" [innerHtml]="option.label"></p>
 *   </ng-template>
 *   <ng-template #optionsGroupList>
 *     <div class="po-combo-item">
 *       <div class="po-row">
 *         <po-avatar class="po-md-1" p-size="sm"></po-avatar>
 *         <div class="po-md-11" [innerHtml]="option.label"></div>
 *       </div>
 *     </div>
 *   </ng-template>
 * </ng-template>
 * ...
 *
 * ```
 */
let PoComboOptionTemplateDirective = class PoComboOptionTemplateDirective {
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
};
PoComboOptionTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
PoComboOptionTemplateDirective = __decorate([
    Directive({
        selector: '[p-combo-option-template]'
    }),
    __metadata("design:paramtypes", [TemplateRef])
], PoComboOptionTemplateDirective);
export { PoComboOptionTemplateDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29tYm8tb3B0aW9uLXRlbXBsYXRlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tY29tYm8vcG8tY29tYm8tb3B0aW9uLXRlbXBsYXRlL3BvLWNvbWJvLW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBZ0VHO0FBSUgsSUFBYSw4QkFBOEIsR0FBM0MsTUFBYSw4QkFBOEI7SUFDekMsc0VBQXNFO0lBQ3RFLFlBQW1CLFdBQTZCO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUFHLENBQUM7Q0FDckQsQ0FBQTs7WUFEaUMsV0FBVzs7QUFGaEMsOEJBQThCO0lBSDFDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwyQkFBMkI7S0FDdEMsQ0FBQztxQ0FHZ0MsV0FBVztHQUZoQyw4QkFBOEIsQ0FHMUM7U0FIWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQHVzZWRCeSBQb0NvbWJvQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0YSBkaXJldGl2YSBwZXJtaXRlIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkb3MgaXRlbnMgZXhpYmlkb3MgbmEgbGlzdGEgZGUgb3DDp8O1ZXMgZG8gY29tcG9uZW50ZS5cbiAqXG4gKiA+IFF1YW5kbyB1dGlsaXphZGEgZW0gZGlzcG9zaXRpdm9zICptb2JpbGUqIHNlcsOhIGV4aWJpZG8gbyBjb21wb25lbnRlIG5hdGl2by5cbiAqXG4gKiBQYXJhIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkZSBjYWRhIGl0ZW0gZGEgbGlzdGEgZGV2ZS1zZSB1dGlsaXphciBhIGRpcmV0aXZhIGBwLWNvbWJvLW9wdGlvbi10ZW1wbGF0ZWAgY29tIGBuZy10ZW1wbGF0ZWBcbiAqIGRlbnRybyBkYSAqdGFnKiBgcG8tY29tYm9gLlxuICpcbiAqIFBhcmEgb2J0ZXIgYSByZWZlcsOqbmNpYSBkbyBpdGVtIGF0dWFsIHV0aWxpemUgYGxldC1vcHRpb25gLCBjb20gaXNzbyB2b2PDqiB0ZXLDoSBhY2Vzc28gYW9zIHZhbG9yZXMgZSBwb2RlcsOhIHBlcnNvbmFsaXphciBzdWEgZXhpYmnDp8Ojby5cbiAqXG4gKiBFc3RhIGRpcmV0aXZhIGNvbXDDtWUtc2UgZGUgZG9pcyBtZWlvcyBwYXJhIHVzbywgZGUgZm9ybWEgZXhwbMOtY2l0YSB0YWwgY29tbyBlbSAqc3ludGF4IHN1Z2FyKi4gVmVqYSBhIHNlZ3VpciBhbWJvcywgcmVzcGVjdGl2YW1lbnRlOlxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tY29tYm9cbiAqICAgbmFtZT1cImNvbWJvXCJcbiAqICAgWyhuZ01vZGVsKV09XCJjb21ib1wiXG4gKiAgIFtwLW9wdGlvbnNdPVwib3B0aW9uc1wiPlxuICogICAgIDxuZy10ZW1wbGF0ZSBwLWNvbWJvLW9wdGlvbi10ZW1wbGF0ZSBsZXQtb3B0aW9uPlxuICogICAgICAgPG9wdGlvbi10ZW1wbGF0ZSBbb3B0aW9uXT1cIm9wdGlvblwiPjwvb3B0aW9uLXRlbXBsYXRlPlxuICogICAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L3BvLWNvbWJvPlxuICogLi4uXG4gKiBgYGBcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPHBvLWNvbWJvXG4gKiAgIG5hbWU9XCJjb21ib1wiXG4gKiAgIFsobmdNb2RlbCldPVwiY29tYm9cIlxuICogICBbcC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cbiAqICAgICA8ZGl2ICpwLWNvbWJvLW9wdGlvbi10ZW1wbGF0ZT1cImxldCBvcHRpb25cIj5cbiAqICAgICAgIDxvcHRpb24tdGVtcGxhdGUgW29wdGlvbl09XCJvcHRpb25cIj48L29wdGlvbi10ZW1wbGF0ZT5cbiAqICAgICA8L2Rpdj5cbiAqIDwvcG8tY29tYm8+XG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqIFBhcmEgbyBjYXNvIGRlIHBlcnNvbmFsaXphw6fDo28gZGUgb3DDp8O1ZXMgY29tIGFncnVwYW1lbnRvcywgZGV2ZS1zZSBzZWd1aXIgYSBtZXNtYSBvcmllbnRhw6fDo28gYWNpbWEuIFBvcsOpbSwgY2FiZSBhbyBkZXNlbnZvbHZlZG9yXG4gKiBhIHJlc3BvbnNhYmlsaWRhZGUgZGUgZXN0aWxpemHDp8OjbyBkb3MgZWxlbWVudG9zIGRhIGxpc3RhLCB0YWlzIGNvbW8gdMOtdHVsbyBlIGxpbmtzIGRvcyBncnVwb3MuIEFiYWl4byBow6EgdW0gZXhlbXBsbyBkZSBhcGxpY2HDp8OjbzpcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPG5nLXRlbXBsYXRlIHAtY29tYm8tb3B0aW9uLXRlbXBsYXRlIGxldC1vcHRpb24+XG4gKiAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJvcHRpb24ub3B0aW9uczsgdGhlbiBvcHRpb25zR3JvdXBUaXRsZTsgZWxzZSBvcHRpb25zR3JvdXBMaXN0XCI+PC9uZy1jb250YWluZXI+XG4gKiAgIDxuZy10ZW1wbGF0ZSAjb3B0aW9uc0dyb3VwVGl0bGU+XG4gKiAgICAgPHAgY2xhc3M9XCJwby1jb21iby1pdGVtLXRpdGxlXCIgW2lubmVySHRtbF09XCJvcHRpb24ubGFiZWxcIj48L3A+XG4gKiAgIDwvbmctdGVtcGxhdGU+XG4gKiAgIDxuZy10ZW1wbGF0ZSAjb3B0aW9uc0dyb3VwTGlzdD5cbiAqICAgICA8ZGl2IGNsYXNzPVwicG8tY29tYm8taXRlbVwiPlxuICogICAgICAgPGRpdiBjbGFzcz1cInBvLXJvd1wiPlxuICogICAgICAgICA8cG8tYXZhdGFyIGNsYXNzPVwicG8tbWQtMVwiIHAtc2l6ZT1cInNtXCI+PC9wby1hdmF0YXI+XG4gKiAgICAgICAgIDxkaXYgY2xhc3M9XCJwby1tZC0xMVwiIFtpbm5lckh0bWxdPVwib3B0aW9uLmxhYmVsXCI+PC9kaXY+XG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9uZy10ZW1wbGF0ZT5cbiAqIDwvbmctdGVtcGxhdGU+XG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3AtY29tYm8tb3B0aW9uLXRlbXBsYXRlXSdcbn0pXG5leHBvcnQgY2xhc3MgUG9Db21ib09wdGlvblRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgLy8gTmVjZXNzw6FyaW8gbWFudGVyIHRlbXBsYXRlUmVmIHBhcmEgbyBmdW5jaW9uYW1lbnRvIGRvIHJvdyB0ZW1wbGF0ZS5cbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuIl19