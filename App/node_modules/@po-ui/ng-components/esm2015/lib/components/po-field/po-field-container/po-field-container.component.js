import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * Componente de uso interno, responsável por atribuir uma label para o campo
 */
let PoFieldContainerComponent = class PoFieldContainerComponent {
    constructor() {
        this._optional = false;
    }
    /** Indica se o campo será opcional. */
    set optional(value) {
        this._optional = convertToBoolean(value);
    }
    get optional() {
        return this._optional;
    }
    getOptionalText() {
        const browserLanguage = getShortBrowserLanguage();
        const optional = {
            pt: '(Opcional)',
            en: '(Optional)',
            es: '(Opcional)'
        };
        return optional[browserLanguage];
    }
};
__decorate([
    Input('p-label'),
    __metadata("design:type", String)
], PoFieldContainerComponent.prototype, "label", void 0);
__decorate([
    Input('p-help'),
    __metadata("design:type", String)
], PoFieldContainerComponent.prototype, "help", void 0);
__decorate([
    Input('p-optional'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], PoFieldContainerComponent.prototype, "optional", null);
PoFieldContainerComponent = __decorate([
    Component({
        selector: 'po-field-container',
        template: "<div class=\"po-field-container\">\n  <div class=\"po-field-container-title\">\n    <span class=\"po-field-title\">{{ label }}</span>\n    <span class=\"po-field-optional\" *ngIf=\"optional && (label || help)\">{{ getOptionalText() }}</span>\n  </div>\n\n  <div class=\"po-field-help\" *ngIf=\"help\">{{ help }}</div>\n\n  <ng-content></ng-content>\n</div>\n"
    })
], PoFieldContainerComponent);
export { PoFieldContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tZmllbGQtY29udGFpbmVyL3BvLWZpZWxkLWNvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWhGOzs7O0dBSUc7QUFLSCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUF5QjtJQUF0QztRQUNVLGNBQVMsR0FBWSxLQUFLLENBQUM7SUE0QnJDLENBQUM7SUFwQkMsdUNBQXVDO0lBQ2xCLElBQUksUUFBUSxDQUFDLEtBQWM7UUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxlQUFlO1FBQ2IsTUFBTSxlQUFlLEdBQUcsdUJBQXVCLEVBQUUsQ0FBQztRQUVsRCxNQUFNLFFBQVEsR0FBRztZQUNmLEVBQUUsRUFBRSxZQUFZO1lBQ2hCLEVBQUUsRUFBRSxZQUFZO1lBQ2hCLEVBQUUsRUFBRSxZQUFZO1NBQ2pCLENBQUM7UUFFRixPQUFPLFFBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0YsQ0FBQTtBQXpCbUI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7d0RBQWdCO0FBR2hCO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O3VEQUFjO0FBR1Q7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7O3lEQUVuQjtBQVpVLHlCQUF5QjtJQUpyQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsb0JBQW9CO1FBQzlCLGtYQUFrRDtLQUNuRCxDQUFDO0dBQ1cseUJBQXlCLENBNkJyQztTQTdCWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4sIGdldFNob3J0QnJvd3Nlckxhbmd1YWdlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQ29tcG9uZW50ZSBkZSB1c28gaW50ZXJubywgcmVzcG9uc8OhdmVsIHBvciBhdHJpYnVpciB1bWEgbGFiZWwgcGFyYSBvIGNhbXBvXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWZpZWxkLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1maWVsZC1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvRmllbGRDb250YWluZXJDb21wb25lbnQge1xuICBwcml2YXRlIF9vcHRpb25hbDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBMYWJlbCBkbyBjYW1wby4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqIFRleHRvIGRlIGFwb2lvIGRvIGNhbXBvLiAqL1xuICBASW5wdXQoJ3AtaGVscCcpIGhlbHA6IHN0cmluZztcblxuICAvKiogSW5kaWNhIHNlIG8gY2FtcG8gc2Vyw6Egb3BjaW9uYWwuICovXG4gIEBJbnB1dCgncC1vcHRpb25hbCcpIHNldCBvcHRpb25hbCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX29wdGlvbmFsID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgb3B0aW9uYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29wdGlvbmFsO1xuICB9XG5cbiAgZ2V0T3B0aW9uYWxUZXh0KCkge1xuICAgIGNvbnN0IGJyb3dzZXJMYW5ndWFnZSA9IGdldFNob3J0QnJvd3Nlckxhbmd1YWdlKCk7XG5cbiAgICBjb25zdCBvcHRpb25hbCA9IHtcbiAgICAgIHB0OiAnKE9wY2lvbmFsKScsXG4gICAgICBlbjogJyhPcHRpb25hbCknLFxuICAgICAgZXM6ICcoT3BjaW9uYWwpJ1xuICAgIH07XG5cbiAgICByZXR1cm4gb3B0aW9uYWxbYnJvd3Nlckxhbmd1YWdlXTtcbiAgfVxufVxuIl19