var PoNumberComponent_1;
import { __decorate, __metadata } from "tslib";
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { Component, ElementRef, forwardRef, Input } from '@angular/core';
import { minFailed, maxFailed } from '../validators';
import { PoNumberBaseComponent } from './po-number-base.component';
/**
 * @docsExtends PoInputBaseComponent
 *
 * @description
 *
 * po-number é um input específico para receber apenas números.
 * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,
 * respectivamente.
 *
 * @example
 *
 * <example name="po-number-basic" title="PO Number Basic">
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.html"> </file>
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-labs" title="PO Number Labs">
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.html"> </file>
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-calculate" title="PO Number - Calculate">
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.html"> </file>
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.ts"> </file>
 * </example>
 */
let PoNumberComponent = PoNumberComponent_1 = class PoNumberComponent extends PoNumberBaseComponent {
    /* istanbul ignore next */
    constructor(el) {
        super(el);
        /**
         * @optional
         *
         * @description
         *
         * Intervalo.
         *
         * @default 1
         */
        this.step = '1';
    }
    set setMin(min) {
        const parsedInt = parseInt(min, 10);
        this.min = !isNaN(parsedInt) ? parsedInt : undefined;
        this.validateModel();
    }
    set setMax(max) {
        const parsedInt = parseInt(max, 10);
        this.max = !isNaN(parsedInt) ? parsedInt : undefined;
        this.validateModel();
    }
    extraValidation(abstractControl) {
        if (minFailed(this.min, abstractControl.value)) {
            return {
                min: {
                    valid: false
                }
            };
        }
        if (maxFailed(this.max, abstractControl.value)) {
            return {
                max: {
                    valid: false
                }
            };
        }
        return null;
    }
};
PoNumberComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input('p-min'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoNumberComponent.prototype, "setMin", null);
__decorate([
    Input('p-max'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoNumberComponent.prototype, "setMax", null);
__decorate([
    Input('p-step'),
    __metadata("design:type", String)
], PoNumberComponent.prototype, "step", void 0);
PoNumberComponent = PoNumberComponent_1 = __decorate([
    Component({
        selector: 'po-number',
        template: "<po-field-container [p-help]=\"help\" [p-label]=\"label\" [p-optional]=\"!required && optional\">\n  <div class=\"po-field-container-content\">\n    <input\n      #inp\n      class=\"po-input\"\n      type=\"number\"\n      [attr.max]=\"max\"\n      [attr.min]=\"min\"\n      [attr.name]=\"name\"\n      [attr.step]=\"step\"\n      [autocomplete]=\"autocomplete\"\n      [class.po-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      (blur)=\"eventOnBlur($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\"\n    />\n\n    <div class=\"po-field-icon-container-right\">\n      <po-clean [p-default-value]=\"null\" [p-element-ref]=\"inputEl\" (p-change-event)=\"clear($event)\"> </po-clean>\n    </div>\n  </div>\n\n  <po-field-container-bottom [p-error-pattern]=\"getErrorPattern()\"> </po-field-container-bottom>\n</po-field-container>\n",
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => PoNumberComponent_1),
                multi: true
            },
            {
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => PoNumberComponent_1),
                multi: true
            }
        ]
    }),
    __metadata("design:paramtypes", [ElementRef])
], PoNumberComponent);
export { PoNumberComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tbnVtYmVyL3BvLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQW1CLGlCQUFpQixFQUFFLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFbkU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F5Qkc7QUFpQkgsSUFBYSxpQkFBaUIseUJBQTlCLE1BQWEsaUJBQWtCLFNBQVEscUJBQXFCO0lBNEIxRCwwQkFBMEI7SUFDMUIsWUFBWSxFQUFjO1FBQ3hCLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQWJaOzs7Ozs7OztXQVFHO1FBQ2MsU0FBSSxHQUFZLEdBQUcsQ0FBQztJQUtyQyxDQUFDO0lBNUJlLElBQUksTUFBTSxDQUFDLEdBQVc7UUFDcEMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNyRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUllLElBQUksTUFBTSxDQUFDLEdBQVc7UUFDcEMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNyRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQWtCRCxlQUFlLENBQUMsZUFBZ0M7UUFDOUMsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDOUMsT0FBTztnQkFDTCxHQUFHLEVBQUU7b0JBQ0gsS0FBSyxFQUFFLEtBQUs7aUJBQ2I7YUFDRixDQUFDO1NBQ0g7UUFFRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QyxPQUFPO2dCQUNMLEdBQUcsRUFBRTtvQkFDSCxLQUFLLEVBQUUsS0FBSztpQkFDYjthQUNGLENBQUM7U0FDSDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUE7O1lBdkJpQixVQUFVOztBQTFCVjtJQUFmLEtBQUssQ0FBQyxPQUFPLENBQUM7OzsrQ0FJZDtBQUllO0lBQWYsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7OytDQUlkO0FBV2dCO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OytDQUFxQjtBQTFCMUIsaUJBQWlCO0lBaEI3QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsV0FBVztRQUNyQiw4Z0NBQXlDO1FBQ3pDLFNBQVMsRUFBRTtZQUNUO2dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsbUJBQWlCLENBQUM7Z0JBQ2hELEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRDtnQkFDRSxPQUFPLEVBQUUsYUFBYTtnQkFDdEIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBaUIsQ0FBQztnQkFDaEQsS0FBSyxFQUFFLElBQUk7YUFDWjtTQUNGO0tBQ0YsQ0FBQztxQ0E4QmdCLFVBQVU7R0E3QmYsaUJBQWlCLENBb0Q3QjtTQXBEWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTFVFX0FDQ0VTU09SLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBtaW5GYWlsZWQsIG1heEZhaWxlZCB9IGZyb20gJy4uL3ZhbGlkYXRvcnMnO1xuXG5pbXBvcnQgeyBQb051bWJlckJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLW51bWJlci1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvSW5wdXRCYXNlQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogcG8tbnVtYmVyIMOpIHVtIGlucHV0IGVzcGVjw61maWNvIHBhcmEgcmVjZWJlciBhcGVuYXMgbsO6bWVyb3MuXG4gKiDDiSBwb3Nzw612ZWwgY29uZmlndXJhciB1bSB2YWxvciBtw61uaW1vLCBtw6F4aW1vIGUgdW0gc3RlcCBjb20gcC1taW4sIHAtbWF4IGUgcC1zdGVwLFxuICogcmVzcGVjdGl2YW1lbnRlLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW51bWJlci1iYXNpY1wiIHRpdGxlPVwiUE8gTnVtYmVyIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItYmFzaWMvc2FtcGxlLXBvLW51bWJlci1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItYmFzaWMvc2FtcGxlLXBvLW51bWJlci1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1udW1iZXItbGFic1wiIHRpdGxlPVwiUE8gTnVtYmVyIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1sYWJzL3NhbXBsZS1wby1udW1iZXItbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItbGFicy9zYW1wbGUtcG8tbnVtYmVyLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbnVtYmVyLWNhbGN1bGF0ZVwiIHRpdGxlPVwiUE8gTnVtYmVyIC0gQ2FsY3VsYXRlXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1udW1iZXItY2FsY3VsYXRlL3NhbXBsZS1wby1udW1iZXItY2FsY3VsYXRlLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUvc2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbnVtYmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW51bWJlci5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUG9OdW1iZXJDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb051bWJlckNvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQb051bWJlckNvbXBvbmVudCBleHRlbmRzIFBvTnVtYmVyQmFzZUNvbXBvbmVudCB7XG4gIC8qKiBWYWxvciBtw61uaW1vLiAqL1xuICBtaW4/OiBudW1iZXI7XG4gIEBJbnB1dCgncC1taW4nKSBzZXQgc2V0TWluKG1pbjogc3RyaW5nKSB7XG4gICAgY29uc3QgcGFyc2VkSW50ID0gcGFyc2VJbnQobWluLCAxMCk7XG4gICAgdGhpcy5taW4gPSAhaXNOYU4ocGFyc2VkSW50KSA/IHBhcnNlZEludCA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLnZhbGlkYXRlTW9kZWwoKTtcbiAgfVxuXG4gIC8qKiBWYWxvciBtw6F4aW1vLiAqL1xuICBtYXg/OiBudW1iZXI7XG4gIEBJbnB1dCgncC1tYXgnKSBzZXQgc2V0TWF4KG1heDogc3RyaW5nKSB7XG4gICAgY29uc3QgcGFyc2VkSW50ID0gcGFyc2VJbnQobWF4LCAxMCk7XG4gICAgdGhpcy5tYXggPSAhaXNOYU4ocGFyc2VkSW50KSA/IHBhcnNlZEludCA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLnZhbGlkYXRlTW9kZWwoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEludGVydmFsby5cbiAgICpcbiAgICogQGRlZmF1bHQgMVxuICAgKi9cbiAgQElucHV0KCdwLXN0ZXAnKSBzdGVwPzogc3RyaW5nID0gJzEnO1xuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgc3VwZXIoZWwpO1xuICB9XG5cbiAgZXh0cmFWYWxpZGF0aW9uKGFic3RyYWN0Q29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnkgfSB7XG4gICAgaWYgKG1pbkZhaWxlZCh0aGlzLm1pbiwgYWJzdHJhY3RDb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWluOiB7XG4gICAgICAgICAgdmFsaWQ6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKG1heEZhaWxlZCh0aGlzLm1heCwgYWJzdHJhY3RDb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF4OiB7XG4gICAgICAgICAgdmFsaWQ6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cbiJdfQ==