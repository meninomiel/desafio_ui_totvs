{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion-base.component.ts","ng://@po-ui/ng-components/lib/components/po-accordion/services/po-accordion.service.ts","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion-item/po-accordion-item.component.ts","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion.component.ts","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion-item-body/po-accordion-item-body.component.ts","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion-item-header/po-accordion-item-header.component.ts","ng://@po-ui/ng-components/lib/components/po-accordion/po-accordion.module.ts","ng://@po-ui/ng-components/lib/components/po-avatar/po-avatar-base.component.ts","ng://@po-ui/ng-components/lib/components/po-avatar/po-avatar.component.ts","ng://@po-ui/ng-components/lib/components/po-avatar/po-avatar.module.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb-base.component.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb.component.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb-dropdown/po-breadcrumb-dropdown.component.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.service.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.component.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb-item/po-breadcrumb-item.component.ts","ng://@po-ui/ng-components/lib/components/po-breadcrumb/po-breadcrumb.module.ts","ng://@po-ui/ng-components/lib/utils/util.ts","ng://@po-ui/ng-components/lib/services/po-language/po-language.service.ts","ng://@po-ui/ng-components/lib/components/po-button-group/po-button-group-toggle.enum.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading-overlay/po-loading-overlay-base.component.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading-icon/po-loading-icon.component.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading-base.component.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading.component.ts","ng://@po-ui/ng-components/lib/services/po-language/po-language.module.ts","ng://@po-ui/ng-components/lib/components/po-loading/po-loading.module.ts","ng://@po-ui/ng-components/lib/components/po-button/po-button-base.component.ts","ng://@po-ui/ng-components/lib/components/po-button/po-button.component.ts","ng://@po-ui/ng-components/lib/components/po-button/po-button.module.ts","ng://@po-ui/ng-components/lib/services/po-control-position/po-control-position.constants.ts","ng://@po-ui/ng-components/lib/directives/po-tooltip/po-tooltip-base.directive.ts","ng://@po-ui/ng-components/lib/services/po-control-position/po-control-position.service.ts","ng://@po-ui/ng-components/lib/directives/po-tooltip/po-tooltip-control-position.service.ts","ng://@po-ui/ng-components/lib/directives/po-tooltip/po-tooltip.directive.ts","ng://@po-ui/ng-components/lib/directives/po-tooltip/po-tooltip.module.ts","ng://@po-ui/ng-components/lib/components/po-button-group/po-button-group-base.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/enums/po-chart-type.enum.ts","ng://@po-ui/ng-components/lib/components/po-button-group/po-button-group.component.ts","ng://@po-ui/ng-components/lib/components/po-button-group/po-button-group.module.ts","ng://@po-ui/ng-components/lib/components/po-calendar/services/po-calendar.lang.service.ts","ng://@po-ui/ng-components/lib/services/po-date/po-date.service.ts","ng://@po-ui/ng-components/lib/services/po-date/po-date.module.ts","ng://@po-ui/ng-components/lib/components/po-calendar/po-calendar-base.component.ts","ng://@po-ui/ng-components/lib/components/po-calendar/services/po-calendar.service.ts","ng://@po-ui/ng-components/lib/components/po-calendar/po-calendar.component.ts","ng://@po-ui/ng-components/lib/components/po-calendar/po-calendar.module.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-base.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-colors.constant.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.constant.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-dynamic-type.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-donut/po-chart-donut.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-types/po-chart-pie/po-chart-pie.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart-legend/po-chart-legend.component.ts","ng://@po-ui/ng-components/lib/components/po-chart/po-chart.module.ts","ng://@po-ui/ng-components/lib/components/po-container/po-container-base.component.ts","ng://@po-ui/ng-components/lib/components/po-container/po-container.component.ts","ng://@po-ui/ng-components/lib/components/po-container/po-container.module.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer/po-disclaimer-base.component.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer/po-disclaimer.component.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer/po-disclaimer.module.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer-group/po-disclaimer-group-base.component.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer-group/po-disclaimer-group.component.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer-group/po-disclaimer-remove/po-disclaimer-remove.component.ts","ng://@po-ui/ng-components/lib/components/po-disclaimer-group/po-disclaimer-group.module.ts","ng://@po-ui/ng-components/lib/components/po-divider/po-divider-base.component.ts","ng://@po-ui/ng-components/lib/components/po-divider/po-divider.component.ts","ng://@po-ui/ng-components/lib/components/po-divider/po-divider.module.ts","ng://@po-ui/ng-components/lib/components/po-popup/po-popup-base.component.ts","ng://@po-ui/ng-components/lib/components/po-popup/po-popup.component.ts","ng://@po-ui/ng-components/lib/components/po-popup/po-popup.module.ts","ng://@po-ui/ng-components/lib/components/po-dropdown/po-dropdown-base.component.ts","ng://@po-ui/ng-components/lib/components/po-dropdown/po-dropdown.component.ts","ng://@po-ui/ng-components/lib/components/po-dropdown/po-dropdown.module.ts","ng://@po-ui/ng-components/lib/components/po-field/po-field-container/po-field-container-bottom/po-field-container-bottom.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-field-container/po-field-container.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-field-container/po-field-container.module.ts","ng://@po-ui/ng-components/lib/decorators/utils-decorators.ts","ng://@po-ui/ng-components/lib/decorators/input-boolean/input-boolean.decorator.ts","ng://@po-ui/ng-components/lib/components/po-field/validators.ts","ng://@po-ui/ng-components/lib/components/po-field/po-checkbox-group/po-checkbox-group-base.component.ts","ng://@po-ui/ng-components/lib/components/po-progress/enums/po-progress-status.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-checkbox-group/po-checkbox-group.module.ts","ng://@po-ui/ng-components/lib/components/po-modal/po-modal-base.component.ts","ng://@po-ui/ng-components/lib/components/po-modal/po-modal-service.ts","ng://@po-ui/ng-components/lib/components/po-modal/po-modal.component.ts","ng://@po-ui/ng-components/lib/components/po-modal/po-modal.module.ts","ng://@po-ui/ng-components/lib/components/po-progress/po-progress-bar/po-progress-bar.component.ts","ng://@po-ui/ng-components/lib/components/po-progress/po-progress-base.component.ts","ng://@po-ui/ng-components/lib/enums/po-color-palette.enum.ts","ng://@po-ui/ng-components/lib/components/po-progress/po-progress.component.ts","ng://@po-ui/ng-components/lib/components/po-progress/po-progress.module.ts","ng://@po-ui/ng-components/lib/services/po-dialog/po-dialog.enum.ts","ng://@po-ui/ng-components/lib/services/po-color-palette/po-color-palette.service.ts","ng://@po-ui/ng-components/lib/services/po-color-palette/po-color-palette.module.ts","ng://@po-ui/ng-components/lib/services/po-component-injector/po-component-injector.service.ts","ng://@po-ui/ng-components/lib/services/po-component-injector/po-component-injector.module.ts","ng://@po-ui/ng-components/lib/services/po-control-position/po-control-position.module.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-toaster/po-toaster-orientation.enum.ts","ng://@po-ui/ng-components/lib/services/po-dialog/po-dialog.component.ts","ng://@po-ui/ng-components/lib/services/po-dialog/po-dialog-base.service.ts","ng://@po-ui/ng-components/lib/services/po-dialog/po-dialog.service.ts","ng://@po-ui/ng-components/lib/services/po-dialog/po-dialog.module.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n-base.pipe.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n.pipe.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-toaster/po-toaster-type.enum.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-toaster/po-toaster-base.component.ts","ng://@po-ui/ng-components/lib/components/po-table/enums/po-table-column-sort-type.enum.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-toaster/po-toaster.component.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-notification.module.ts","ng://@po-ui/ng-components/lib/services/services.module.ts","ng://@po-ui/ng-components/lib/components/po-popover/po-popover-base.component.ts","ng://@po-ui/ng-components/lib/components/po-popover/po-popover.component.ts","ng://@po-ui/ng-components/lib/components/po-popover/po-popover.module.ts","ng://@po-ui/ng-components/lib/pipes/po-time/po-time.pipe.ts","ng://@po-ui/ng-components/lib/pipes/po-time/po-time.module.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-column-icon/po-table-column-icon.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-column-label/po-table-column-label.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-column-link/po-table-column-link.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-column-manager/po-table-column-manager.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-base.component.ts","ng://@po-ui/ng-components/lib/enums/po-key-code.enum.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-row-template/po-table-row-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-detail/po-table-detail.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-icon/po-table-icon.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-show-subtitle/po-table-show-subtitle.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-subtitle-circle/po-table-subtitle-circle.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table-subtitle-footer/po-table-subtitle-footer.component.ts","ng://@po-ui/ng-components/lib/components/po-table/po-table.module.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/po-calendar/po-calendar.lang.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/po-calendar/po-calendar.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/po-calendar/po-calendar.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-clean/po-clean-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-clean/po-clean.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-combo/po-combo-filter-mode.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-checkbox/po-checkbox-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-checkbox/po-checkbox.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-combo/po-combo-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/enums/po-datepicker-iso-format.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-combo/po-combo-filter.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-combo/po-combo-option-template/po-combo-option-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-field/po-combo/po-combo.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-input/po-mask.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/po-datepicker-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect-filter-mode.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker/po-datepicker.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker-range/po-datepicker-range-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-datepicker-range/po-datepicker-range.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-input/po-input-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-decimal/po-decimal.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-input-generic/po-input-generic.ts","ng://@po-ui/ng-components/lib/components/po-field/po-email/po-email.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-login/po-login.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/services/po-lookup-filter.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/po-lookup-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/services/po-lookup-modal.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-lookup/po-lookup.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect-search/po-multiselect-search.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/enums/po-rich-text-modal-type.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-multiselect/po-multiselect-item/po-multiselect-item.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text-body/po-rich-text-body.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text-literals.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-status.enum.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-notification-base.service.ts","ng://@po-ui/ng-components/lib/services/po-notification/po-notification.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-file.ts","ng://@po-ui/ng-components/lib/components/po-field/po-switch/po-switch-label-position.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-base.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload.service.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text-modal/po-rich-text-modal.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-input/po-input.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-number/po-number-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-number/po-number.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-password/po-password.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-radio-group/po-radio-group-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-radio-group/po-radio-group.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-select/po-select-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-select/po-select-option-template/po-select-option-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-field/po-select/po-select.component.ts","ng://@po-ui/ng-components/lib/components/po-info/po-info-orietation.enum.ts","ng://@po-ui/ng-components/lib/components/po-field/po-switch/po-switch-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-switch/po-switch.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-textarea/po-textarea-base.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-textarea/po-textarea.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.directive.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-url/po-url.component.ts","ng://@po-ui/ng-components/lib/components/po-field/po-field.module.ts","ng://@po-ui/ng-components/lib/components/po-info/po-info-base.component.ts","ng://@po-ui/ng-components/lib/components/po-tag/enums/po-tag-orientation.enum.ts","ng://@po-ui/ng-components/lib/components/po-tag/enums/po-tag-type.enum.ts","ng://@po-ui/ng-components/lib/components/po-info/po-info.component.ts","ng://@po-ui/ng-components/lib/components/po-info/po-info.module.ts","ng://@po-ui/ng-components/lib/components/po-tag/po-tag-base.component.ts","ng://@po-ui/ng-components/lib/components/po-tag/enums/po-tag-icon.enum.ts","ng://@po-ui/ng-components/lib/components/po-tag/po-tag.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-field-type.enum.ts","ng://@po-ui/ng-components/lib/components/po-tag/po-tag.module.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-base.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-operation/po-dynamic-form-operation.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic.util.ts","ng://@po-ui/ng-components/lib/components/po-stepper/enums/po-stepper-status.enum.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields-base.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.service.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view-base.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts","ng://@po-ui/ng-components/lib/components/po-dynamic/po-dynamic.module.ts","ng://@po-ui/ng-components/lib/components/po-grid/po-grid-cell-action/po-grid-cell-action.component.ts","ng://@po-ui/ng-components/lib/components/po-grid/po-grid-cell/po-grid-cell.component.ts","ng://@po-ui/ng-components/lib/components/po-grid/po-grid.component.ts","ng://@po-ui/ng-components/lib/components/po-grid/po-grid-head/po-grid-head.component.ts","ng://@po-ui/ng-components/lib/components/po-grid/po-grid.module.ts","ng://@po-ui/ng-components/lib/components/po-list-view/po-list-view-base.component.ts","ng://@po-ui/ng-components/lib/components/po-list-view/po-list-view-content-template/po-list-view-content-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-list-view/po-list-view-detail-template/po-list-view-detail-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-list-view/po-list-view.component.ts","ng://@po-ui/ng-components/lib/components/po-list-view/po-list-view.module.ts","ng://@po-ui/ng-components/lib/components/po-badge/po-badge-base.component.ts","ng://@po-ui/ng-components/lib/components/po-badge/po-badge.component.ts","ng://@po-ui/ng-components/lib/components/po-badge/po-badge.module.ts","ng://@po-ui/ng-components/lib/components/po-menu/services/po-menu.service.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu-base.component.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu-header-template/po-menu-header-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-menu/services/po-menu-items.service.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu.component.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu-filter/po-menu-filter.component.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu-item/po-menu-item.component.ts","ng://@po-ui/ng-components/lib/components/po-menu/po-menu.module.ts","ng://@po-ui/ng-components/lib/components/po-menu-panel/po-menu-panel-base.component.ts","ng://@po-ui/ng-components/lib/components/po-menu-panel/services/po-menu-panel-items.service.ts","ng://@po-ui/ng-components/lib/components/po-menu-panel/po-menu-panel.component.ts","ng://@po-ui/ng-components/lib/components/po-menu-panel/po-menu-panel-item/po-menu-panel-item.component.ts","ng://@po-ui/ng-components/lib/components/po-menu-panel/po-menu-panel.module.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-actions/po-navbar-action/po-navbar-action.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-actions/po-navbar-action-popup/po-navbar-action-popup.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.module.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-base.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-items/po-navbar-item/po-navbar-item.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-items/po-navbar-items.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-items/po-navbar-items.module.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-logo/po-navbar-logo.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.module.ts","ng://@po-ui/ng-components/lib/components/po-navbar/po-navbar.module.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-content/po-page-content-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-content/po-page-content.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-default/po-page-default-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-default/po-page-default.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-detail/po-page-detail-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-detail/po-page-detail.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-edit/po-page-edit-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-edit/po-page-edit.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-header/po-page-header-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-header/po-page-header.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-list/po-page-list-base.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page-list/po-page-list.component.ts","ng://@po-ui/ng-components/lib/components/po-page/po-page.module.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide-circles/po-slide-circles.component.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide-base.component.ts","ng://@po-ui/ng-components/lib/components/po-slide/directives/po-slide-content-template.directive.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide-item/po-slide-item.component.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide.component.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide-control/po-slide-control.component.ts","ng://@po-ui/ng-components/lib/components/po-slide/po-slide.module.ts","ng://@po-ui/ng-components/lib/components/po-stepper/enums/po-stepper-orientation.enum.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-step/po-step.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper-circle/po-stepper-circle.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper-base.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper-label/po-stepper-label.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper-step/po-stepper-step.component.ts","ng://@po-ui/ng-components/lib/components/po-stepper/po-stepper.module.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tab-button/po-tab-button.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tab/po-tab-base.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tab/po-tab.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tab-dropdown/po-tab-dropdown.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tabs-base.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tabs.component.ts","ng://@po-ui/ng-components/lib/components/po-tabs/po-tabs.module.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar-actions/po-toolbar-actions.component.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar-base.component.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar.component.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar-notification/po-toolbar-notification.component.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar-profile/po-toolbar-profile.component.ts","ng://@po-ui/ng-components/lib/components/po-toolbar/po-toolbar.module.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/po-tree-view-base.component.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/services/po-tree-view.service.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/po-tree-view.component.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/po-tree-view-item/po-tree-view-item.component.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/po-tree-view-item-header/po-tree-view-item-header.component.ts","ng://@po-ui/ng-components/lib/components/po-tree-view/po-tree-view.module.ts","ng://@po-ui/ng-components/lib/components/po-widget/po-widget-base.component.ts","ng://@po-ui/ng-components/lib/components/po-widget/po-widget.component.ts","ng://@po-ui/ng-components/lib/components/po-widget/po-widget.module.ts","ng://@po-ui/ng-components/lib/components/components.module.ts","ng://@po-ui/ng-components/lib/directives/directives.module.ts","ng://@po-ui/ng-components/lib/guards/guards.module.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail-literals.interface.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail.component.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-interceptor/po-http-interceptor-base.service.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-interceptor/po-http-interceptor.service.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-interceptor/po-http-interceptor.module.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-request/po-http-request-control-service.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-request/po-http-request-interceptor.service.ts","ng://@po-ui/ng-components/lib/interceptors/po-http-request/po-http-request.module.ts","ng://@po-ui/ng-components/lib/interceptors/interceptors.module.ts","ng://@po-ui/ng-components/lib/pipes/pipes.module.ts","ng://@po-ui/ng-components/lib/po.module.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n-config-injection-token.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n-base.service.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n.service.ts","ng://@po-ui/ng-components/lib/services/po-i18n/po-i18n.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","__spread","concat","PoAccordionService","subjectChild","Subject","receiveFromChildAccordionClicked","asObservable","sendToParentAccordionItemClicked","accordionItem","Injectable","PoAccordionItemComponent","accordionService","collapse","expanded","expand","Input","ViewChild","TemplateRef","static","Component","selector","template","PoAccordionComponent","_this","_super","receiveFromChildAccordionSubscription","ngOnDestroy","accordionServiceSubscription","unsubscribe","headerToggle","event","poAccordionItem","toggle","subscribe","expandedActiveAccordionItem","ContentChildren","QueryList","providers","PoAccordionBaseComponent","PoAccordionItemBodyComponent","animations","trigger","transition","style","height","animate","PoAccordionItemHeaderComponent","EventEmitter","onClick","emit","Output","changeDetection","ChangeDetectionStrategy","OnPush","PoAccordionModule","NgModule","imports","CommonModule","declarations","exports","PO_AVATAR_SIZES","PoAvatarBaseComponent","_size","includes","Directive","PoAvatarComponent","ngOnInit","src","undefined","onError","PoAvatarModule","PoBreadcrumbBaseComponent","itemsView","_items","items","PoBreadcrumbComponent","differs","element","renderer","showDropdown","showDropdownToggle","_breadcrumbItemsLenght","calculatedElement","hiddenWithoutResize","initialized","wasClickedonDropdown","checkClickOutElement","dropdownIcon","removeClickoutListener","differ","find","ngAfterViewInit","initializeResizeListener","ngDoCheck","breadcrumbElement","nativeElement","offsetWidth","initBreadcrumbSize","debounceResize","checkChangeOnItems","removeResizeListener","toggleDropdown","initializeClickoutListener","contains","diff","calcBreadcrumbItemsWidth","calcBreadcrumb","breadcrumbFavorite","getBreadcrumbFavoriteWidth","getBreadcrumbWidth","enableBreadcrumbResponsive","disableBreadcrumbResponsive","favoriteService","querySelector","breadcrumbItem","querySelectorAll","from","map","breadcrumb","reduce","a","slice","dropdownItems","reverse","clearTimeout","timeoutResize","setTimeout","clickoutListener","listen","resizeListener","IterableDiffers","ElementRef","Renderer2","read","PoBreadcrumbDropdownComponent","PoBreadcrumbFavoriteService","http","_url","_bodyParams","configService","url","params","item","isFavorite","link","sendStatusFavorite","status","bodyParams","post","getFavorite","get","responseType","HttpClient","PoBreadcrumbFavoriteComponent","service","favorite","paramsService","itemActive","getStatusFavorite","getSubscription","setSubscription","toggleFavoriteAction","setStatusFavorite","PoBreadcrumbItemComponent","Function","PoBreadcrumbModule","RouterModule","poLocales","browserLanguage","getShortBrowserLanguage","formatBytes","bytes","decimals","Math","floor","log","parseFloat","pow","toFixed","getBrowserLanguage","language","navigator","shortLanguage","getShortLanguage","toLowerCase","substring","isLanguage","RegExp","test","convertToBoolean","val","trim","convertToInt","valueDefault","validNumber","parseInt","validDefaultValue","isTypeof","object","type","callFunction","fn","context","param","convertIsoToDate","start","end","date","day","month","year","setYearFrom0To100","Date","milliseconds","parse","timezone","getTimezoneOffset","convertDateToISOExtended","time","getMonth","getDate","formatYear","getFullYear","dateString","toString","isIEOrEdge","userAgent","window","isIE","isFirefox","isMobile","match","isKeyCodeEnter","keyCode","which","setFullYear","removeDuplicatedOptions","list","findIndex","splice","out_i_1","removeUndefinedAndNullOptions","validValue","isExternalLink","startsWith","openExternalLink","open","getFormattedLink","formattedLink","replace","sortValues","leftSide","rightSide","ascending","left","right","validateDateRange","dateStart","dateEnd","uuid","hex4","random","capitalizeFirstLetter","text","charAt","toUpperCase","convertNumberToDecimal","number","decimalsPlace","floatValue","isNaN","_a","validateObjectType","isArray","PoButtonGroupToggle","PoLanguageService","localStorage","getItem","setItem","getLanguage","languageDefault","getLanguageDefault","setLanguage","setLanguageDefault","providedIn","poLoadingOverlayLiteralsDefault","en","loading","es","pt","ru","PoLoadingOverlayBaseComponent","languageService","_screenLock","getTextDefault","screenLock","_text","PoLoadingOverlayComponent","changeDetector","ChangeDetectorRef","PoLoadingIconComponent","_neutralColor","PoLoadingBaseComponent","PoLoadingComponent","PoLanguageModule","PoLoadingModule","PO_BUTTON_TYPES","PoButtonBaseComponent","_disabled","_loading","_small","_type","click","PoButtonComponent","focus","disabled","buttonElement","PoButtonModule","PO_CONTROL_POSITIONS","PoTooltipBaseDirective","_tooltip","_tooltipPosition","tooltip","position","poControlPositionSidesDefault","PoControlPositionService","differenceDiagonalToWidthArrow","isSetElementWidth","offsetArrow","adjustPosition","elementPosition","customPositions","adjustCustomPosition","adjustDefaultPosition","getArrowDirection","arrowDirection","setElements","elementOffset","targetElement","isCornerAligned","positionLength","sidesCount","overflowAllSides","nextPosition","mainPositions","getMainPositions","mainPositionLength","mainSidesCount","mainPosition","getMainPosition","overflowMain","verifySubPositions","setAlignedElementPosition","setElementPosition","getMainPositionsByCustomPositions","customPositionsLength","getOverflows","sizesAndPositions","getSizesAndPositions","innerWidth","top","bottom","innerHeight","scrollY","scrollX","getBoundingClientRect","positions","index","nextIndex","overflows","setAlignedArrowDirection","setAlignedBottomPositions","displacement","setElementWidth","width","setAlignedTopPositions","setArrowDirection","setBottomPositions","setTopPositions","setRightPositions","setLeftPositions","clientWidth","align","PoTooltipControlPositionService","PoTooltipDirective","elementRef","poControlPosition","tooltipOffset","initScrollEventListenerFunction","onMouseEnter","tooltipContent","showTooltip","createTooltip","removeArrow","tooltipPosition","addArrow","lastTooltipText","onMouseLeave","hideTooltip","addClass","divArrow","addScrollEventListener","addEventListener","eventListenerFunction","createElement","divContent","textContent","createText","appendChild","isHidden","removeScrollEventListener","removeClass","removeEventListener","updateTextContent","removeChild","HostListener","PoTooltipModule","PoChartType","PoButtonGroupBaseComponent","_toggle","buttons","values","checkSelecteds","onButtonClick","buttonClicked","buttonIndex","Single","forEach","button","selected","Multiple","toggleMode","None","deselectAllButtons","filter","PoButtonGroupComponent","viewRef","parentRef","ViewContainerRef","PoButtonGroupModule","PoCalendarLangService","months","shortWeekDays","monthLabel","yearLabel","getMonthLabel","getMonthsArray","arrMonths","getWeekDays","getWeekDaysArray","arrWeekDays","getYearLabel","PoDateService","dateRegex","isoRegex","minDate","maxDate","getDateFromIso","miliseconds","convertDateToISO","fullYear","isoDate","getDateForDateRange","isMinDate","lastHour","splitDate","validDate","bind","isValidIso","isDateRangeValid","dateA","dateB","dateASplitted","split","dateBSplitted","stringDate","sortDate","validateDate","PoDateTimeModule","bootstrap","poCalendarLocales","PoCalendarBaseComponent","poDate","poCalendarLangService","dayVisible","displayMonths","displayWeekDays","monthVisible","yearVisible","onTouched","propagateChange","today","change","_locale","locale","initializeLanguage","_maxDate","_minDate","displayMonth","displayMonthNumber","PoCalendarService","monthDates","dayFormatter","weekFormatter","Error","weeks","week","weekStartDate","getTime","setDate","monthDays","startDate","getDay","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","PoCalendarComponent","multi","NG_VALIDATORS","poCalendarService","init","getBackgroundColor","displayValue","propertyValue","getDayBackgroundColor","getDayColor","getDayForegroundColor","getForegroundColor","onNextMonth","updateDisplay","displayYear","onPreviousMonth","onSelectDate","dateIso","onSelectMonth","selectDay","onSelectYear","lastDisplay","selectMonth","currentYear","registerOnChange","registerOnTouched","func","registerOnValidatorChange","validatorChange","selectYear","updateYear","validateModel","model","validate","writeValue","writeDate","updateDate","addAllYearsInDecade","displayDecade","equalsDate","date1","date2","getDecadeArray","updateDecade","getColorForDate","local","getColorForDateRange","getColorForToday","selectDateFromDate","selectDateFromIso","currentMonthNumber","displayStartDecade","displayFinalDecade","calendarArray","displayDays","writeDateIso","PoCalendarModule","poChartTypeDefault","Pie","PoChartBaseComponent","poChartType","seriesClick","seriesHover","_height","setDefaultHeight","intValue","rebuildComponent","_series","chartSeries","transformObjectToArrayObject","onSeriesClick","onSeriesHover","Gauge","serie","keys","PoChartColors","PoSeriesTextBlack","poChartAngleStepInterval","PI","poChartAnimationDurationTime","poChartGaugeStartAngle","poChartStartAngle","PoChartDynamicTypeComponent","innerRadius","onSerieClick","onSerieHover","series","calculateSVGContainerDimensions","chartWrapperElement","chartHeaderElement","chartLegendElement","svgContainerHeightCalc","Padding","svgHeight","centerX","calculateTotalValue","totalValue","previousValue","PoChartCircular","el","ngZone","chartItemStartAngle","windowResizeEmitter","chartItemsEndAngleList","svgPathElementsList","svgTextElementsList","getSeriesWithValue","removeWindowResizeListener","removeWindowScrollListener","animationRunning","chartInitSetup","setEventListeners","removeTooltip","tooltipElement","drawPath","path","chartItemEndAngle","largeArc","sinAlpha","sin","cosAlpha","cos","sinBeta","cosBeta","startX","startY","endX","endY","startInnerX","startInnerY","endInnerX","endInnerY","halfGaugeCoordinates","join","pathCoordinates","setAttribute","isChartGaugeType","newSeries","color","colors","animationSetup","drawPathInit","appendGaugeBackgroundPathElement","svgPathsWrapper","svgPath","svgElement","calculateAngleRadians","calculateEndAngle","calculateCurrentEndAngle","angleCurrentPosition","endAngle","calculateSVGDimensions","chartWrapper","chartHeader","chartLegend","setInnerRadius","changeTooltipPosition","classList","tooltipPositions","setTooltipPositions","setStyle","createSVGElements","checkingIfScrollsWithPoPage","poPageContent","document","getElementsByClassName","createPath","setElementAttributes","createPaths","isSerieValueEqualZero","svgG","svgText","fontSize","getFontSize","textColor","getTextColor","getPercentValue","createTexts","Donut","viewBoxHeight","preserveAspectRatio","svgContainer","runOutsideAngular","drawSeries","currentSerieIndex","isFinishedDrawingCurrentSeries","setTextProperties","requestAnimationFrame","emitEventOnEnter","floatPercentValue","String","getTooltipValue","onMouseClick","serieOnClick","category","chartElementCategory","chartElementValue","serieOnEnter","chartElementDescription","getAttributeNS","chartBody","tooltipText","onWindowResize","windowResizeListener","windowScrollListener","serieWidth","startAngle","getClientRects","centerAngle","textBox","getBBox","halfTextWidth","halfTextHeight","radius","xCoordinate","yCoordinate","clientX","clientY","offsetHeight","description","tooltipValue","PoChartDonutComponent","NgZone","PoChartGaugeTextContentComponent","_gaugeWidth","checkTextDescriptionSize","_serie","serieValueConverted","convertValueInPercentFormat","subtractionArea","gaugeWidth","max-width","descriptionElement","isEllipsisActive","detectChanges","scrollWidth","PoChartGaugeComponent","componentFactoryResolver","getGaugeSerie","drawBasePath","createComponent","factory","resolveComponentFactory","instance","svgContainerRef","getGaugeBaseWidth","resizeListenerSubscription","checkGaugeValueLimits","basePath","ComponentFactoryResolver","PoChartPieComponent","PoChartComponent","mappings","onResize","getSeriesColor","dynamicComponentSetting","checkingForSerieChanges","componentRef","destroy","chartLegendHeight","componentType","getComponentType","chartContainer","setChartProperties","setResizeListenerSubscribe","setClickSubscribe","setHoverSubscribe","typeName","colorsLength","seriesLength","quantityDuplicates","PoChartLegendComponent","PoChartModule","PoContainerBaseComponent","_noBorder","_noPadding","_noShadow","PoContainerComponent","PoContainerModule","PO_DISCLAIMER_TYPES","PoDisclaimerBaseComponent","_hideClose","showDisclaimer","closeAction","close","property","getLabel","PoDisclaimerComponent","onKeyPress","PoDisclaimerModule","poDisclaimerGroupLiteralsDefault","removeAll","PoDisclaimerGroupBaseComponent","_disclaimers","_hideRemoveAll","previousDisclaimers","literals","disclaimers","checkDisclaimers","checkChanges","closeItem","disclaimer","emitChange","itemIndex","emitChangeDisclaimers","isRemoveAll","hideRemoveAll","hideClose","removeAllItems","removeItems","disclaimersAreChanged","currentValues","some","PoDisclaimerGroupComponent","PoDisclaimerRemoveComponent","removeAllAction","removeAction","PoDisclaimerGroupModule","PoDividerBaseComponent","PoDividerComponent","PoDividerModule","PoPopupBaseComponent","_hideArrow","_isCornerAlign","_position","showPopup","_actions","_customPositions","_target","PoPopupComponent","viewContainerRef","router","onScroll","removeListeners","onActionClick","popupAction","actionNoDisabled","returnBooleanValue","action","openUrl","oldTarget","validateInitialContent","clickedOutDisabledItem","elementContains","parentElement","clickedOutHeaderTemplate","popupHeaderTemplate","popupRef","clickedOutTarget","closePopupOnClickout","className","hasContentToShow","clientHeight","initializeListeners","navigate","setPosition","isCornerAlign","Router","PoPopupModule","schemas","PoDropdownBaseComponent","icon","PoDropdownComponent","hideDropdown","onKeyDown","dropdownRef","checkClickArea","wasClickedOnDropdown","PoDropdownModule","PoFieldContainerBottomComponent","errorPattern","PoFieldContainerComponent","_optional","getOptionalText","PoFieldContainerModule","changeValueByCallback","decoratorProperties","decoratorName","callback","originalDescriptor","privatePropertyName","propertyName","privatePropName","console","warn","configurable","writable","createPrivateProperty","getter","set","setter","InputBoolean","requiredFailed","required","valid","maxlengpoailed","maxlength","validMaxlength","Number","minlengpoailed","minlength","validMinlength","PoProgressStatus","PoCheckboxGroupBaseComponent","checkedOptions","checkedOptionsList","mdColumns","_columns","_indeterminate","_required","autoFocus","ngModelChange","columns","getGridSystemColumns","checkIndeterminate","indeterminate","_options","setCheckboxGroupOptionsView","options","changeValue","checkOption","checkOptionModel","optionsModel","generateCheckOptions","abstractControl","isInvalidIndeterminate","checkColumnsRange","maxColumns","optionChecked","option","gridSystemColumns","every","optionFind","optionsList","checkboxGroupOptionsView","id","PoCheckboxGroupComponent","ngAfterViewChecked","checkboxLabels","checkboxLabel","preventDefault","trackByFn","ViewChildren","PoCheckboxGroupComponent_1","PoCheckboxGroupModule","FormsModule","PoModalBaseComponent","clickOut","onXClosed","xClosed","validPrimaryAction","primaryAction","PoModalService","PoModalComponent","poModalService","focusableElements","modalActive","removeEventListeners","sourceElement","closeModalOnEscapeKey","stopPropagation","getPrimaryActionButtonType","danger","getSecondaryActionButtonType","secondaryAction","onClickOut","modalContent","activeElement","handleFocus","initFocus","focusFunction","firstElement","setFirstElement","PoModalModule","PoProgressBarComponent","PoColorPaletteEnum","PoProgressBaseComponent","_value","Default","cancel","retry","integerValue","isProgressRangeValue","PoProgressComponent","observers","Success","info","infoIcon","isAllowCancel","isAllowRetry","emitCancellation","emitRetry","PoProgressModule","PoDialogType","PoColorPaletteService","getColor","getColorFromType","Color07","Color11","Color08","Color01","PoColorPaletteModule","PoComponentInjectorService","componentResolver","applicationRef","injector","createComponentInApplication","component","attachView","hostView","domElem","rootNodes","destroyComponentInApplication","detachView","ApplicationRef","Injector","PoComponentInjectorModule","PoControlPositionModule","PoToasterOrientation","poDialogAlertLiteralsDefault","ok","poDialogConfirmLiteralsDefault","confirm","PoDialogComponent","closeSubscription","poModal","configDialog","primaryLabel","secondaryLabel","dialogOptions","dialogType","title","message","setDialogLiterals","Confirm","literalsConfirm","Alert","literalsAlert","alertLiterals","confirmLiterals","PoDialogBaseService","confirmOptions","openDialog","alert","alertOptions","PoDialogService","poComponentInjector","changeDetectorRef","PoDialogModule","PoI18nBasePipe","transform","args","args_1","args_1_1","arg","PoI18nPipe","Pipe","name","PoToasterType","orientation","Bottom","PoTableColumnSortType","PoToasterComponent","elementeRef","margin","observableOnClose","showToaster","toasterPosition","changePosition","display","Top","toaster","configToaster","poToaster","actionLabel","toasterType","Information","Warning","getShowToaster","getIcon","getToasterPosition","getToasterType","poToasterAction","PoToasterBaseComponent","PoNotificationModule","PoServicesModule","PO_POPOVER_TRIGGERS","PoPopoverBaseComponent","_trigger","PoPopoverComponent","initEventListenerFunction","setElementsControlPosition","setRendererListenInit","setPopoverPosition","setOpacity","popoverElement","opacity","mouseEnterListener","mouseLeaveListener","togglePopup","hidden","PoPopoverModule","PoTimePipe","format","amountOfF","lastIndexOf","addDotMiliseconds","formatMiliseconds","getFormatMiliseconds","formatValue","hour","minutes","seconds","PoTimeModule","PoTableColumnIconComponent","_icons","icons","convertToColumnIcon","columnIcon","isDisabled","row","column","isClickable","trackByFunction","rowIcons","rowIcon","PoTableColumnLabelComponent","poColorPaletteService","PoTableColumnLinkComponent","poTableColumnManagerLiteralsDefault","columnsManager","restoreDefault","PoTableColumnManagerComponent","_maxColumns","columnsOptions","visibleColumns","defaultColumns","visibleColumnsChange","updateColumnsOptions","ngOnChanges","changes","firstChange","onChangeColumns","onChangeVisibleColumns","checkedColumns","disableColumnsOptions","visibleTableColumns","getVisibleTableColumns","restore","isDisableColumn","getColumnTitleLabel","getVisibleColumns","visible","popover","mapTableColumnsToCheckboxOptions","currentValue","_b","PoKeyCodeEnum","poTableContainer","poTableLiteralsDefault","noColumns","noData","noVisibleColumn","loadingData","loadMoreData","seeCompleteSubtitle","completeSubtitle","PoTableBaseComponent","_hideDetail","_hideTextOverflow","hasMainColumns","mainColumns","selectAll","sortedColumn","subtitleColumns","allSelected","allUnselected","collapsed","showMore","sortBy","unselected","hasItems","hasColumns","getDefaultColumns","setColumnLink","calculateWidthHeaders","_container","hideTextOverflow","hideDetail","_literals","selectable","checkbox","actions","_selectable","sort","showMoreDisabled","striped","hideSelectAll","singleSelect","columnMasterDetail","typesValid","col","Ascending","Descending","calculateHeightTableContainer","rowIndex","setShowDetail","getSelectedRows","$selected","getUnselectedRows","selectAllRows","emitSelectAllEvents","selectRow","emitSelectEvents","configAfterSelectRow","selectDetailRow","getClassColor","getColumnColor","toggleDetail","$showDetail","emitExpandEvents","toggleRowAction","toggleShowAction","$showAction","sortColumn","sortArray","sortType","onShowMore","rows","unselectOtherRows","isEverySelected","columnColor","getColumnMasterDetail","getMainColumns","validColumns","getSubtitleColumns","setMainColumns","setColumnMasterDetail","setSubtitleColumns","allColumnsWidthPixels","verifyWidthColumnsPixels","rowIdentifier","isShowDetail","PoTableRowTemplateDirective","templateRef","PoTableComponent","decimalPipe","tableOpacity","visibleElement","clickListener","_columnManagerTarget","columnManager","masterDetail","detail","hideSelect","visibleActions","hasVisibleSubtitleColumns","hasRowTemplate","tableRowTemplate","checkChangesItems","verifyCalculateHeightTableContainer","tableWrapperElement","checkDisabled","containsMasterDetail","nameColumnDetail","executeTableAction","tableAction","validateTableAction","formatNumber","getBooleanLabel","rowValue","columnBoolean","boolean","trueLabel","falseLabel","getColumnIcons","mergeCustomIcons","findCustomIcon","getColumnLabel","columnLabel","labels","labelItem","getSubtitleColumn","subtitleColumn","subtitles","subtitleItem","isShowMasterDetail","isShowRowTemplate","poTableRowTemplateShow","onClickLink","onVisibleColumnsChange","tooltipMouseEnter","innerText","checkingIfColumnHasTooltip","tooltipMouseLeave","targetRef","popupTarget","poPopupComponent","trackBy","heightTableContainer","getHeightTableFooter","setTableOpacity","headersTable","header","divHeader","changesItems","customIcon","tableFooterElement","customIcons","mergedIcons","columnValue","foundCustomIcon","verifyChangeHeightInFooter","footerHeight","DecimalPipe","ContentChild","PoTableDetailComponent","isSelectable","_detail","returnPoTableDetailObject","formatNumberDetail","onSelectRow","PoTableIconComponent","iconTooltip","clickable","allowTooltip","PoTableShowSubtitleComponent","PoTableSubtitleCircleComponent","hideTitle","_subtitle","subtitle","PoTableSubtitleFooterComponent","isVisible","getContainerSize","toggleShowCompleteSubtitle","getItemsSize","containerSize","itemsSize","showSubtitle","PoTableModule","wordMonth","wordYear","lang","getWordMonth","getWordYear","getArrayMonths","getWeedDays","getArrayWeekDays","firstWeekDay","displayWeedDays","overlayInvisible","selectedDateChange","submit","_dateEnd","_selectedDate","selectedDate","_dateStart","getArrayDecade","onPrevMonth","setMobileVisualization","PoCleanBaseComponent","defaultValue","changeEvent","clear","setInputValue","showIcon","getInputValue","hasCleanAttr","isReadonly","parentComponent","clean","readonly","PoCleanComponent","inputRef","PoComboFilterMode","PoCheckboxBaseComponent","checkboxValue","changeModelValue","PoCheckboxComponent","space","PoCheckboxComponent_1","PoDatepickerIsoFormat","poComboLiteralsDefault","PoComboBaseComponent","_changeOnEnter","_debounceTime","_disabledInitFilter","_fieldLabel","_fieldValue","_filterMinlength","_filterMode","_sort","cacheStaticOptions","comboOptionsList","cacheOptions","firstInWriteValue","isFirstFilter","isFiltering","previousSearchValue","visibleOptions","placeholder","parsedValue","filterService","fieldValue","fieldLabel","parseValue","isInteger","selectedValue","changeOnEnter","comboListDefinitions","filterMode","endsWith","_filterParams","filterParams","updateComboList","onInitService","setService","initInputObservable","defaultService","configProperties","compareMethod","search","getOptionFromValue","isEqual","getOptionFromLabel","updateSelectedValue","isUpdateModel","isWriteValue","optionLabel","updateInternalVariables","optionValue","updateModel","callModelChange","onModelChange","inputValue","searchForLabel","optionsGroupTitle_1","newOptions_1","addedOptionsGroupTitle_1","isOptionGroupList","selectedView","copyOptions","newOptions","selectedOption","getNextOption","optionFound","found","optionsList_1","optionsList_1_1","getIndexSelectedView","compareObjects","obj1","obj2","JSON","stringify","verifyValidOption","updateSelectedValueWithOldOption","isInputValueDiffSelectedLabel","getObjectByValue","onModelTouched","configAfterSetFilterService","unsubscribeKeyupObservable","keyupSubscribe","listingComboOptions","compareOptions","optionA","optionB","labelA","labelB","hasDuplicatedOption","currentOption","accumulatedGroupOptions","comboOptions","verifiedComboOptionsList","verifyComboOptions","sortOptions","verifyComboOptionsGroup","validateValue","verifyingOptionsGroup","accumulatedOptions","verifyIfHasLabel","verifiedComboOptionsGroupList","fromWriteValue","oldOption","PoComboFilterService","getFilteredData","filterParamsValidated","pipe","response","parseToArrayComboOption","parseToComboOption","PoComboOptionTemplateDirective","PoComboComponent","controlPosition","sanitized","_isServerSearching","comboIcon","comboOpen","isProcessingGetObjectByValue","scrollTop","shouldMarkLetters","adjustContainerPosition","setContainerPosition","debounceTime","filterSubscription","inputElement","tab","controlComboVisibility","arrowUp","arrowDown","selectPreviousOption","selectNextOption","esc","enter","onKeyUp","useDefaultOptionsService","keyupObservable","fromEvent","isValidCharacterToSearch","currentTarget","distinctUntilChanged","tap","filterMinlength","controlApplyFilter","applyFilter","isServerSearching","setOptionsByApplyFilter","updateOptionByFilteredValue","onOptionClick","currentViewValue","nextOption","visibleOption","toggleComboVisibility","disabledInitFilter","applyFilterInFirstClick","toOpen","scrollTo","selectedItem","offsetTop","setScrollTop","wasClickedOnToggle","iconElement","contentElement","getLabelFormatted","sanitizedLabel","sanitizeTagHTML","labelInput","labelLowerCase","openTagBold","indexOfLabelInput","lastIndexOfLabelInput","safeHtml","bypassSecurityTrustHtml","searchOnEnter","eventResizeListener","containerElement","DomSanitizer","PoComboComponent_1","PoMask","mask","formatModel","initialPosition","finalPosition","pattern","getRegexFromMask","valueToInput","valueToModel","keyup","$event","controlFormatting","resetPositions","setPositionNotShiftKey","setSelectionRange","shiftKey","setPositions","keydown","ctrlKey","metaKey","isKeyValid","revertPositions","getPosition","checkMaskBefore","clearRangeSelection","checkMaskAfter","isBackspace","selectionStart","selectionEnd","blur","tempPosition","valueProcessed","maskTmp","arrMasks","contMasks","hasOptionalNumber","replaceOptionalNumber","formattingEnds","guide","listValidKeys","contGuide","removeFormattingValue","charValue","isFixedCharacterGuide","isKeyValidMask","testRegex","getFixedCharacterGuide","isKeyCodeValid","keyMask","replaceMask","regex","char","PoMultiselectFilterMode","PoDatepickerBaseComponent","_format","_noAutocomplete","_placeholder","firstStart","isExtendedISO","onChangeModel","onTouchedModel","onblur","onchange","objMask","buildMask","refreshValue","_isoFormat","Extended","getDateFromString","formatToDate","dateFormatted","controlModel","callOnChange","convertDateToISODate","PoDatepickerComponent","noAutocomplete","setDialogPickerStyleDisplay","inputEl","togglePicker","calendar","closeCalendar","setCalendarPosition","dateSelected","verifyMobile","controlChangeEmitter","wasClickedOnPicker","dialogPicker","iconDatepicker","hasOverlayClass","hasAttrCalendar","onKeyup","onKeydown","hasInvalidClass","getErrorPattern","valueBeforeChange","eventOnBlur","newDate","eventOnClick","isValidDateIso","isValidExtendedIso","isoFormat","dateTemp","dateModelFormatted","timeoutChange","hasAttribute","PoDatepickerComponent_1","poDatepickerRangeLiteralsDefault","invalidFormat","startDateGreaterThanEndDate","PoDatepickerRangeBaseComponent","poDateService","errorMessage","_clean","_readonly","dateRange","isDateRangeInputFormatValid","isStartDateRangeInputValid","onChange","_endDate","convertPatternDateFormat","endDate","updateScreenByModel","_startDate","control","requiredDateRangeFailed","dateRangeObjectFailed","dateRangeFormatFailed","dateRangeFailed","resetDateRangeInputValidation","isDateRangeObject","dateFormatFailed","isDateRangeInputValid","PoDatepickerRangeComponent","poDatepickerRangeElement","startDateInputValue","endDateInputValue","endDateInput","startDateInput","getKeyCode","getTargetElement","srcElement","isValidKey","poMaskObject","onBlur","removeFocusFromDatePickerRangeField","onFocus","applyFocusOnDatePickerRangeField","isSetFocusOnBackspace","setFocusOnBackspace","isStartDateTargetEvent","startDateInputName","setFocus","updateModelByScreen","isStartDateValid","isDateValid","endDateFormated","formatModelToScreen","startDateFormated","dateRangeField","add","formatDate","formatScreenToModel","getDateRangeFormatValidation","setDateRangeInputValidation","isValid","dateRangeModel","getValidatedModel","isEqualBeforeValue","endDateInputName","remove","PoDatepickerRangeComponent_1","inputName","setFocusOnArrowLeft","setFocusOnArrowRight","setFocusOnStartDateCompleted","setFocusAndPosition","selectionRange","focusOnElement","isCursorAtStartOfInput","inputLength","isCursorAtEndOfInput","isLastKeyPressed","isNewDateCompleted","endDateFormatted","startDateFormatted","isDateRangeInputUncompleted","isDirtyDateRangeInput","dateFormatValidation","providers$1","PoInputBaseComponent","passedWriteValue","maskFormatModel","changeModel","onChangePropagate","_maxlength","_minlength","controlChangeModelEmitter","callUpdateModelWithTimeout","modelLastUpdate","getScreenValue","reg","patternFailed","validatePatternOnWriteValue","extraValidation","writeValueModel","PoDecimalComponent","_decimalsLength","_thousandMaxlength","decimalSeparator","fireChange","isKeyboardAndroid","minusSign","oldDotsLength","thousandSeparator","thousand","decimal","decimalsLength","isValueBetweenAllowed","isGreaterThanTotalLengthLimit","thousandMaxlength","verifyAutoFocus","setPaddingInput","hasLetters","isValidNumber","keyValue","fromCharCode","validKey","containsMoreThanOneComma","setViewValue","valueWithoutThousandSeparator","formatValueWithoutThousandSeparator","formatToViewValue","onInput","modelValue","viewValue","onInputKeyboardAndroid","addZeroBefore","formatMask","setCursorInput","formatToModelValue","setPositionValue","paddingRight","formatedViewValue","containsComma","foundComma","elementValue","formattedValue","replaceCommaToDot","formatedNumber","numberValue","valueBeforeDot","valueAfterDot","getValueBeforeSeparator","getValueAfterSeparator","separator","hasLessDot","dots","dotsLength","hasMoreDot","hasMinusSignInvalidPosition","keyIsMinusSign","isInvalidKey","charCode","isInvalidNumber","verifyInsertComma","verifyThousandLength","verifyValueAfterComma","verifyInsertMinusSign","validateCursorPositionBeforeSeparator","verifyDecimalLengthIsZeroAndKeyPressedIsComma","decimalsMaxLength","isKeyDecimalSeparator","isPositionAfterDecimalSeparator","positionCursor","indexComma","isSelectionStartDifferentSelectionEnd","maxAllowed","setInitialSelectionRange","replaceAt","substr","originalValue","valueBeforeSeparator","valueBeforeSeparatorOriginal","indexMinusSign","positionMinusSign","occurancesMinusSign","valueAfterSeparator","PoDecimalComponent_1","PoInputGeneric","afterViewInit","eventOnInput","validMaxLength","eventOnFocus","validateClassesForPattern","verifyPattern","screenValue","PoEmailComponent","listener","providers$2","PoLoginComponent","providers$3","PoLookupFilterService","httpClient","getFilteredItems","filteredItemsParams","restFilteredItemsParams","validatedFilterParams","validateParams","setUrl","PoLookupBaseComponent","oldValue","_filterService","initializeColumn","keysDescription","selectValue","valueSelected","searchById","getFormattedLabel","cleanModel","cleanViewValue","selectModel","poLookupLiteralsDefault","modalPrimaryActionLabel","modalSecondaryActionLabel","modalPlaceholder","modalTitle","modalTableNoColumns","modalTableNoData","modalTableLoadingData","modalTableLoadMoreData","PoLookupModalBaseComponent","hasNext","isLoading","page","pageSize","searchValue","setTableLiterals","_title","searchSubscription","showMoreSubscription","initializeData","data","showMoreEvent","filteredParams","getFilteredParams","order","getOrderParam","tableLiterals","PoLookupModalComponent","keyUpObservable","containerHeight","tableHeight","initializeEventInput","setTableHeight","inputSearchEl","validateEnterPressed","openModal","PoLookupModalService","selectValueEvent","PoLookupComponent","poLookupFilterService","poLookupModalService","modalSubscription","openLookup","isAllowedOpenModal","fieldFormat","setInputValueWipoieldFormat","getViewValue","searchEvent","objectSelected","isEmpty","fieldFormated","providers$4","PoMultiselectSearchComponent","placeholderSearch","PoMultiselectDropdownComponent","show","hideSearch","selectedValues","changeSearch","closeDropdown","isSelectedItem","clickItem","check","updateSelectedValues","searchElement","checked","indexSelectedValues","callChangeSearch","controlVisibility","PoRichTextModalType","poMultiselectLiteralsDefault","PoMultiselectBaseComponent","_hideSearch","selectedOptions","visibleOptionsDropdown","visibleDisclaimers","updateVisibleItems","validAndSortOptions","updateList","setUndefinedLabels","getValuesFromOptions","eventChange","lastLengthModel","getLabelByValue","changeItems","updateSelectedOptions","searchByLabel","PoMultiselectComponent","disclaimerOffset","dropdownOpen","isCalculateVisibleItems","inputWidth","getInputWidth","getDisclaimersWidth","calculateVisibleItems","disclaimersWidth","disclaimersVisible","sum","controlDropdownVisibility","toggleDropdownVisibility","openDropdown","scrollToSelectedOptions","dropdown","setVisibleOptionsDropdown","getPlaceholder","closeDisclaimer","dropdownElement","disclaimerContainerElement","clickOutListener","setPositionDropdown","container","providers$5","PoMultiselectItemComponent","itemClicked","poRichTextBodyCommands","PoRichTextBodyComponent","commands","selectedLink","shortcutCommand","onAnchorClick","elementLink","nodeName","href","attributes","bodyElement","designMode","updateValueWithModelValue","executeCommand","command","linkCommand","urlLink","urlLinkText","handleCommandLink","execCommand","linkEditing","isLinkEditing","emitSelectionCommands","keyK","toggleCursorOnLink","removeBrElement","onPaste","addClickListenerOnAnchorElements","update","hexColor","queryCommandState","rgbColor","queryCommandValue","rgbToHex","isCursorPositionedInALink","linkElement","getTextSelection","textSelection","getSelection","focusNode","anchorNode","parentNode","node","tagName","insertHtmlLinkElement","linkValue","makeLinkTag","getRangeAt","elementlinkText","createTextNode","deleteContents","insertNode","isLink","verifyCursorPositionInFirefoxIEEdge","isParentNodeAnchor","childNodes","rgb","sep","selection","isCtrl","isCommand","isOnCtrlLink","innerHTML","insertAdjacentHTML","nodeLink","fragmentDocument","cloneContents","firstElementChild","PoRichTextBaseComponent","invalid","PoRichTextComponent","validateClassesForRequired","addKeyListeners","onChangeValue","updateValue","providers$6","poRichTextLiteralsDefault","bold","italic","underline","center","justify","unorderedList","insertLink","linkTextLabel","linkUrlTextHelper","linkUrlTextPlaceholder","editLink","insert","insertImage","urlImage","PoUploadStatus","PoNotificationBaseService","stackTop","stackBottom","defaultDuration","success","notification","createToaster","buildToaster","warning","information","setDefaultDuration","duration","destroyToaster","PoNotificationService","stack","count","PoSwitchLabelPosition","PoUploadFile","file","displayName","getFileSize","size","extension","getExtension","rawFile","uid","generateUUID","s4","kbSize","ceil","PoUploadBaseService","formField","requests","upload","files","tOnUpload","uploadCallback","successCallback","errorCallback","filesLength","uploadEvent","formData","FormData","fileName","append","sendFile","request","getRequest","HttpEventType","UploadProgress","addRequest","percentDone","round","loaded","total","HttpResponse","err","req","HttpRequest","reportProgress","stopRequestByFile","requestObj","removeRequest","PoUploadService","poUploadLiteralsDefault","folders","selectFile","selectFiles","selectFolder","deleteFile","tryAgain","startSending","dragFilesHere","dragFoldersHere","selectFilesOnComputer","selectFolderOnComputer","dropFilesHere","dropFoldersHere","invalidDropArea","invalidFileType","invalidAmount","invalidSize","numberOfFilesAllowed","allowedFormats","allowedFileSizeRange","maxFileSizeAllowed","minFileSizeAllowed","errorOccurred","sentWithSuccess","PoUploadBaseComponent","uploadService","_dragDrop","extensionNotAllowed","quantityNotAllowed","sizeNotAllowed","autoUpload","onUpload","onSuccess","_directory","canHandleDirectory","setDirectoryAttribute","_hideRestrictionsInfo","_hideSelectButton","_hideSendButton","_fileRestrictions","restrictions","initRestrictions","setAllowedExtensions","_formField","getUploadService","currentFiles","_isMultiple","comparedValue","parseFiles","isExceededFileLimit","currentFilesLength","isMultiple","fileRestrictions","maxFiles","poUploadFiles","checkRestrictions","insertFileInFiles","sendFeedback","allowedExtensions","minFileSize","maxFileSize","isAccept","isAllowedExtension","isAcceptSize","existsFileSameName","currentFile","newFile","updateExistsFileInFiles","isAllowed","ext","_allowedExtensions","fileIndex","Uploaded","PoUploadDragDropAreaComponent","selectFilesLinkElement","PoUploadDragDropComponent","_dragDropHeight","isDragOver","fileChange","dragDropHeight","dragDropAreaComponent","onAreaElement","areaElement","onDragLeave","onDragOver","onFileChange","PoUploadComponent","i18nPipe","infoByUploadStatus","Uploading","percent","progressStatusByFileStatus","calledByCleanInputValue","dragDrop","hideSendButton","hasFileNotUploaded","hasAnyFileUploading","stopUpload","removeFile","cleanInputValue","uploadButton","displayDragDrop","poUploadDragDropComponent","isAllowCancelEvent","updateFiles","onFileChangeDragDrop","inputFile","setPipeArguments","allowedExtensionsFormatted","sendFiles","uploadFiles","removeAttribute","stopUploadHandler","filesFiltered","uploadingHandler","eventResponse","responseHandler","eventError","literalAttributes","literalArguments","pipeArguments","modelFiles","mapCleanUploadFiles","progressFile","PoUploadComponent_1","uploadRestrictions","PoRichTextModalComponent","modalCancelAction","modal","retrieveCursorPosition","cleanUpFields","modalConfirmAction","insertElementRef","modalLinkConfirmAction","linkConfirmAction","toEditLink","toInsertLink","modalType","uploadModel","modalImageForm","convertToBase64","isUploadValid","uploadImage","reader","FileReader","readAsDataURL","onload","onerror","emitCommand","Image","formModelValidate","modalLinkForm","isUrlValid","saveCursorPosition","Link","prepareModalForLink","isSelectedLink","checkIfIsEmpty","formReset","markAsPristine","markAsUntouched","updateValueAndValidity","saveSelectionText","setLinkEditableForModal","restoreSelection","savedSelection","removeAllRanges","addRange","savedCursorPosition","focusOffset","getAttribute","urlLinkTextValue","NgForm","PoRichTextToolbarComponent","alignButtons","emitAlignCommand","formatButtons","listButtons","linkButtons","mediaButtons","toggleDisableButtons","removeButtonFocus","setColorInColorPicker","changeTextColor","setButtonsStates","obj","shortcutTrigger","btn","toolbarElement","colorPickerInput","state","PoInputComponent","PoInputComponent_1","PoNumberBaseComponent","valueMaxlength","substringValue","isEndWithDot","PoNumberComponent","min","parsedInt","max","maxFailed","PoNumberComponent_1","PoPasswordComponent","_hidePasswordPeek","visiblePassword","showPassword","PoPasswordComponent_1","PoRadioGroupBaseComponent","changedValue","getElementByValue","PoRadioGroupComponent","eventClick","radioLabels","radioLabel","isArrowKey","PoRadioGroupComponent_1","PoSelectBaseComponent","readyToValidation","onUpdateOptions","onValidatorChange","PoSelectOptionTemplateDirective","PoSelectComponent","selectIcon","disableDefaultEventAndToggleButton","altKey","toggleButton","selectElement","hideDropDown","markForCheck","onSelectChange","findOptionValue","setScrollPosition","scrollValue","heightScrollValue","getSelectItemHeight","scrollPosition","query","selectButtonElement","selectItem","contentList","ulDropdpwn","PoSelectComponent_1","PoInfoOrientation","PoSwitchBaseComponent","switchValue","labelOn","labelOff","labelPosition","Right","PoSwitchComponent","switchContainer","getLabelPosition","Left","getSwitchPosition","PoSwitchComponent_1","PoTextareaBaseComponent","_rows","PoTextareaComponent","PoTextareaComponent_1","PoUploadDragDropDirective","dragLeave","dragOver","timeout","onDrop","getFilesFromDataTransferItems","directoryCompatible","getOnlyDirectories","dataTransfer","getOnlyFiles","getFilesFromEntry","entry","isFile","readFile","isDirectory","readDirectory","dataTransferItems","entries","dataTransferItems_1","dataTransferItems_1_1","webkitGetAsEntry","entries_1","entries_1_1","newFiles","_c","fileList","dirReader","createReader","readDirectoryEntries","readEntries","entries_2","entries_2_1","itemFiles","invalidFiles","invalidDropAreaArg","HTMLElement","PoUploadDragDropAreaOverlayComponent","DragDropAreaFixed","boundingClientRect","clientRectKey","clientRectValue","PoUploadFileRestrictionsComponent","formatAllowedExtensions","_maxFileSize","_minFileSize","setLiterals","PoUrlComponent","PoUrlComponent_1","PoFieldModule","HttpClientModule","PoTagOrientation","PoTagType","poInfoOrientationDefault","Vertical","PoInfoBaseComponent","_orientation","poInfoOrientation","_labelSize","PoInfoComponent","PoInfoModule","PoTagIcon","poTagColors","poTagOrientationDefault","PoTagBaseComponent","poTagOrientation","_color","_icon","_inverse","PoDynamicFieldType","poTagTypeDefault","Info","PoTagComponent","Danger","inverse","Horizontal","submittedTagItem","onKeyPressed","PoTagModule","PoDynamicFormBaseComponent","_groupForm","formOutput","PoDynamicFormOperation","execute","of","setFormDefaultIfEmpty","validateFields","fields","PoDynamicFormLoadService","createAndUpdateFieldsForm","loadedFields","updatedFields","field","updatedField","executeLoad","load","loadedFormdData","PoDynamicFormValidationService","sendFieldChange","setFieldDefaultIfEmpty","sendFormChange","updateFieldsForm","validatedFields","validatedField","PoDynamicFormComponent","loadService","validationService","_form","emitForm","loadDataOnInitialize","fieldsComponent","validateForm","previousFocusElement","disableForm","sendFormSubscription","applyFormValidation","applyFormUpdatesOnLoad","dynamicFormData","updateModelOnLoad","setFocusOnFieldByProperty","updateModelWithValidation","disabledForm","groupForm","form","onLoadSubscription","loadedFormData","getGridColumnsClasses","smColumns","lgColumns","xlColumns","gridColumns","isVisibleField","PoStepperStatus","PoDynamicFormFieldsBaseComponent","titleCasePipe","visibleFields","fieldsChange","formValidate","_fields","compareTo","getVisibleFields","existsProperty","printError","createField","convertOptions","getComponentControl","hasFocus","componentClass","gridSmColumns","gridMdColumns","gridLgColumns","gridXlColumns","toLocaleLowerCase","isNumberType","isCurrencyType","isSelect","isRadioGroup","isCheckboxGroup","isMultiselect","Boolean","DateTime","Time","isCombo","isLookup","isTextarea","isPassword","optionsService","optionsMulti","Currency","searchService","secret","TitleCasePipe","PoDynamicFormFieldsComponent","foundComponent","components","onChangeField","visibleField","getField","changedField","changedFieldIndex","validateField","triggerValidationOnForm","applyFieldValidation","updateFields","fieldIndex","previousDisabled","toPromise","viewProviders","ControlContainer","PoDynamicViewService","onLoad","PoDynamicViewBaseComponent","currencyPipe","datePipe","timePipe","dynamicViewService","_showAllValue","getConfiguredFields","newFields","getMergedFields","mergedFields","getValueFields","valueField","transformValue","classesGridColumns","cssClass","transformedValue","CurrencyPipe","DatePipe","PoDynamicViewComponent","showAllValue","updateValuesAndFieldsOnLoad","getValuesAndFieldsFromLoad","valueAndFieldsFromLoad","setFieldOnLoad","fieldOnLoad","setFieldsOnLoad","setValueOnLoad","newValue","PoDynamicModule","PoGridCellActionComponent","onKeyDownContent","PoGridCellComponent","edit","editValue","freeze","tabIndex","valueChange","_width","onEditCell","dblclick","onBlurInput","onKeyDownInput","PoGridComponent","elRef","lastCell","lastRow","lastColumn","currencyCell","currencyRow","currencyColumn","logger","widporeeze","widthActions","rowActions","cssWidth","widthTableWrapper","tableWrapper","freezeColumns","prev","current","actionsColumns","cancelRow","x","isEmptyRow","removeRow","currencyObj","selectCell","beforeRemove","tableKeydown","direction","prow","pcol","saveRow","insertRow","tableClick","prop","beforeSave","requireds","beforeInsert","nextCell","PoGridHeadComponent","PoGridModule","poListViewLiteralsDefault","hideDetails","showDetails","PoListViewBaseComponent","showHeader","titleAction","_hideSelectAll","showMainHeader","_select","select","_showMoreDisabled","onClickAction","listViewAction","cleanItem","deleteInternalAttrs","runTitleAction","listItem","itemWithPublicProperties","selectAllListItems","selectListItem","checkIfItemsAreSelected","itemCopy","PoListViewContentTemplateDirective","PoListViewDetailTemplateDirective","PoListViewComponent","listViewContentTemplate","listViewDetailTemplate","ngAfterContentInit","initShowDetail","checkItemsChange","checkTitleType","propertyLink","getItemTitle","hasContentTemplate","propertyTitle","hasDetailTemplate","showDetail","overflow-y","PoListViewModule","PO_BADGE_COLORS","PoBadgeBaseComponent","setBadgeValue","validRangeValue","badgeValue","PoBadgeComponent","PoBadgeModule","PoMenuService","poMenuLiteralsDefault","itemNotFound","PoMenuBaseComponent","menuService","_collapsed","_filter","_maxLevel","_menus","validateCollapseClass","menus","filteredItems","_service","_params","_logo","_shortLogo","setMenuExtraProperties","allowIcons","allowCollapseMenu","menuItem","_level","shortLabel","removeBadgeAlert","setMenuItemProperties","subItems","processSubItems","setMenuType","validateMenus","menu","validateMenu","menuItems","previousItem","maxLevel","setMenuBadgeAlert","subItem","parent","child","childHasSubItems","childHasBadgeAlert","childHasBadge","badge","PoMenuHeaderTemplateDirective","PoMenuItemsService","subjectParent","sendToParentMenuClicked","receiveFromChildMenuClicked","sendToChildMenuClicked","receiveFromParentMenuClicked","PoMenuComponent","menuItemsService","filterLoading","mobileOpened","filteringItems","menuInitialized","menuPrevious","activeMenuItem","groupedMenuItem","isCollapsed","collapsedMobile","enableCollapseButton","menuCurrent","updateMenu","itemSubscription","routeSubscription","subscribeToMenuItem","subscribeToRoute","urlRouter","checkingRouterChildrenFragments","checkActiveMenuByUrl","activateMenuByUrl","urlPath","linkActive","activateMenuItem","validateToggleMenu","debounceFilter","timeoutFilter","filterProcess","clickMenuItem","events","NavigationEnd","NavigationCancel","toggleMenuMobile","createResizeListener","activateCollapseSubMenuItem","clearGroupMenuIfFirstLevel","isActiveItemMenuSubMenu","openParentMenu","active","grouped","activatedByRoute","areSubMenus","childrenPrimary","parseUrl","root","children","segments","it","executeMenuAction","groupMenuItem","convertToMenuItemFiltered","menuItemFiltered","toggleResize","filterItems","trimFilter","filterOnService","filterLocalItems","findItems","showNoData","catch","menuItemsFiltered","findParent","getParent","findRootParent","getRootParent","getActiveMenuParent","toggleMenuCollapse","isRootMenuEqualGroupedMenu","childMenu","toggleGroupedMenuItem","wrapper","PoMenuFilterComponent","PoMenuItemComponent","_isSelected","_isSubItem","maxHeight","_badgeValue","isSelectedSubItem","isSelected","isSubItem","_subItems","subitems","isOpened","calcMenuSubItemsMaxHeight","processMenuItem","level","accordionAnimation","menuActive","menuOpened","hasSubItemOpened","getMinimumHeight","activateMenu","menuSubItems","minimumHeight","hasSubItem","groupedMenu","isMenuOpened","PoMenuModule","PoMenuPanelBaseComponent","PoMenuPanelItemsService","PoMenuPanelComponent","location","rounterEvent","Location","PoMenuPanelItemComponent","itemsSubscription","subscribeMenuClickedFromParent","menuItemInternal","PoMenuPanelModule","PoNavbarActionComponent","PoNavbarActionPopupComponent","getLastIconAction","iconActions","PoNavbarActionsComponent","_iconActions","PoNavbarActionsModule","poNavbarLiteralsDefault","navbarLinks","PoNavbarBaseComponent","_shadow","validateMenuLogo","PoNavbarItemComponent","itemClick","PoNavbarItemsComponent","checkActiveItemByUrl","checkRouterChildrenFragments","PoNavbarComponent","builder","showItemsNavigation","offset","onMediaQueryChange","changed","changeNavbarMenuItems","matches","displayItemsNavigation","disableRight","initNavbarMenu","mediaQuery","removeListener","navigateItems","navigateLeft","navigateRight","allNavbarItemsWidth","navbarItems","allNavbarItems","previous","animation","buildTransitionAnimation","player","navbarItemsContainer","play","build","keyframes","isCollapsedMedia","calculateLeftNavigation","calculatedOffset","navbarItem","navbarItemOffset","offsetLeft","navbarItemWidth","navbarItemsWidth","calculateRightNavigation","itemBreakPoint","setOffsetToZero","matchMedia","addListener","navbarItemsElement","maxAllowedOffset","validateMaxOffset","logo","AnimationBuilder","PoNavbarItemsModule","PoNavbarLogoComponent","PoNavbarItemNavigationComponent","PoNavbarItemNavigationIconComponent","PoNavbarItemNavigationModule","PoNavbarModule","PoPageComponent","PoPageBaseComponent","PoPageContentComponent","contentOpacity","overflowY","recalculateHeaderSize","pageHeaderElement","setHeightContent","poPageHeader","newHeight","PoPageContentBaseComponent","PoPageDefaultBaseComponent","setDropdownActions","PoPageDefaultComponent","limitPrimaryActions","maxWidthMobile","setIsMobile","actionIsDisabled","callAction","hasPageHeader","dropdownActions","poPageDetailLiteralsDefault","back","PoPageDetailBaseComponent","PoPageDetailComponent","hasAnyAction","hasEvent","hasEditFn","hasEditOrRemoveFn","poPageEditLiteralsDefault","save","saveNew","PoPageEditBaseComponent","PoPageEditComponent","isPrimaryAction","getType","isCancelPrimaryAction","isSaveNewPrimaryAction","hasSaveAction","PoPageHeaderBaseComponent","_breadcrumb","PoPageHeaderComponent","poPageListLiteralsDefault","otherActions","PoPageListBaseComponent","_disclaimerGroup","PoPageListComponent","isRecalculate","advancedSearch","initializeFixedLiterals","callActionFilter","onkeypress","newModel","ngModel","onChangeDisclaimerGroup","disclaimerGroup","PoPageModule","PoSlideCirclesComponent","PoSlideBaseComponent","_interval","startInterval","cancelInterval","_slides","setSlideItems","startSlide","PoSlideContentTemplateDirective","PoSlideItemComponent","setLinkType","PoSlideComponent","isLoaded","currentSlideIndex","slideItems","slide","itemsElements","slideContentTemplate","slideItemWidth","slides","setSlideItemWidth","goToItem","hasElements","hasSlides","setSlideHeight","interval","nextControl","previousControl","setHeight","createArrayForTemplate","createArrayFromSlides","image","isImageSlide","poSlideDefaultHeight","imageHeight","first","itemElement","clearInterval","setInterval","PoSlideControlComponent","PoSlideModule","PoStepperOrientation","PoStepComponent","_status","Disabled","setDisplayOnActiveOrError","Active","PoStepperCircleComponent","Done","isLargeStep","poStepperOrientationDefault","PoStepperBaseComponent","_sequential","_step","_steps","onChangeStep","steps","sequential","PoStepperComponent","usePoSteps","poSteps","activeFirstStep","controlStepsStatus","getPoSteps","isDisabledStep","isErrorStep","changeStep","firstStep","getStepsAndIndex","currentActiveStep","stepIndex","nextStep","previousIndex","previousStep","allowNextStep","take","nextStepAllowed","isDifferentStep","currentStepIndex","onStepActive","previousActiveStep","stepChild","setPreviousStepAsDone","hasStepActive","poStep","nextStepIndex","isAllowNextStep$","isBeforeStep","canActiveNextStep","Observable","isCanActiveNextStep","getStepperStatusByCanActive","catchError","throwError","setStepAsActive","setNextStepAsDefault","setFinalSteppersAsDisabled","toArray","currentStep","PoStepperLabelComponent","poStepLiteralsDefault","PoStepperStepComponent","_stepIcons","_stepSize","activated","_label","circleContent","stepIcons","stepSize","isVerticalOrientation","halfStepSize","getStatusClass","onEnter","PoStepperModule","PoTabButtonComponent","changeState","_active","emitActivated","_hide","setDisplayOnHide","hide","PoTabBaseComponent","setDisplayOnActive","PoTabComponent","PoTabDropdownComponent","tabs","getContainerClass","small","togglePopover","PoTabsBaseComponent","PoTabsComponent","maxNumberOfTabs","isMobileDevice","visibleTabs","_tab","closePopover","tabDropdown","isVisibleTab","visibleTabIndex","visibleTab","onTabActive","previousActiveTab","tabChild","deactivateTab","onTabChangeState","activeDistinctTab","selectedTab","_i","activeFirstTab","PoTabsModule","PoToolbarActionsComponent","_actionsIcon","PoToolbarBaseComponent","showNotification","_notificationNumber","profile","profileActions","PoToolbarComponent","titleService","setTitle","newTitle","Title","PoToolbarNotificationComponent","PoToolbarProfileComponent","avatar","PoToolbarModule","PoTreeViewBaseComponent","getItemsByMaxLevel","emitExpanded","treeViewItem","emitSelected","updateItemsOnSelect","addChildItemInParent","childItem","parentItem","addItem","expandParentItem","selectItemBySubItems","selectAllItems","everyItemSelected","itemsLength","lengthCheckedItems","newItems","currentItem","getItemsWithParentSelected","PoTreeViewService","expandedEvent","selectedEvent","emitExpandedEvent","emitSelectedEvent","onExpand","onSelect","PoTreeViewComponent","treeViewService","PoTreeViewItemComponent","visibility","PoTreeViewItemHeaderComponent","PoTreeViewModule","PoWidgetBaseComponent","_primary","onDisabled","setting","_background","_help","_primaryLabel","PoWidgetComponent","hasTitleHelpOrSetting","help","openHelp","runPrimaryAction","runSecondaryAction","bodyHeight","hasSettingOrHelp","noShadow","settingOutput","PoWidgetModule","PoComponentsModule","PoDirectivesModule","PoGuardsModule","poHttpInterceptorDetailLiteralsDefault","closeButton","details","PoHttpInterceptorDetailComponent","closed","filterByValidDetails","formatTitle","formatDetailItemTitle","code","typeColor","typeValue","addValidDetail","newDetails","getValidDetailProperties","detailedMessage","PoHttpInterceptorBaseService","componentInjector","notificationTypes","httpInterceptorDetailComponent","intercept","cloneRequest","clone","hasParameters","cloneRequestWithoutParameters","handle","processResponse","processErrorResponse","hasNoMessageParam","_messages","messages","errorResponse","hasNoErrorParam","headers","delete","createModal","responseMessage","destroyModal","hasMessage","hasMessageProperties","noErrorParam","noMessageParam","has","typeNotification","notificationAction","generateNotificationAction","generateDetailModal","notificationLabel","helpUrl","generateUrlHelpFunction","PoHttpInterceptorService","PoHttpInterceptorModule","HTTP_INTERCEPTORS","useClass","PoHttpRequesControltService","controlHttpRequest","getControlHttpRequest","send","PoHttpRequestInterceptorService","loadingOverlayComponent","pendingRequests","overlayRequests","requestClone","requestCloneWithoutHeaderParam","setCountPendingRequests","setCountOverlayRequests","getCountPendingRequests","buildLoading","destroyLoading","headersParams","isRequestClone","headerParam","isIncrement","hasCountPendingRequestHeaderParam","PoHttpRequestModule","PoInterceptorsModule","PoPipesModule","PoModule","I18N_CONFIG","InjectionToken","PoI18nBaseService","config","varI18n","useCache","servicesContext","setConfig","reload","contextDefault","setVarI18n","getLiterals","observer","getLiteralsFromContextService","getLiteralsFromContextConstant","translations","languageAlternative","languageSearch","mergeObject","searchInVarI18n","countObject","getLiteralsLocalStorageAndCache","translationTemp","searchInLocalStorage","updateVarI18n","getHttpService","updateLocalStorage","completeFaultLiterals","complete","literal","translation","content","contexts","_d","contextContent","_e","e_3","_f","languageContent","objPermanent","Inject","PoI18nService","returnPoI18nService","PoI18nModule","ngModule","PoI18nModule_1","useValue","APP_INITIALIZER","useFactory","initializeLanguageDefault","deps","default"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGzB,SAASI,EAAOP,EAAGQ,GACtB,IAAIT,EAAI,GACR,IAAK,IAAIV,KAAKW,EAAOf,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,IAAMmB,EAAEC,QAAQpB,GAAK,IAC9EU,EAAEV,GAAKW,EAAEX,IACb,GAAS,MAALW,GAAqD,mBAAjCf,OAAOyB,sBACtB,CAAA,IAAIT,EAAI,EAAb,IAAgBZ,EAAIJ,OAAOyB,sBAAsBV,GAAIC,EAAIZ,EAAEe,OAAQH,IAC3DO,EAAEC,QAAQpB,EAAEY,IAAM,GAAKhB,OAAOU,UAAUgB,qBAAqBN,KAAKL,EAAGX,EAAEY,MACvEF,EAAEV,EAAEY,IAAMD,EAAEX,EAAEY,KAE1B,OAAOF,EAGJ,SAASa,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HjC,EAAvHkC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO/B,OAAOkC,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIf,EAAIY,EAAWT,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAI8B,EAAWZ,MAAIiB,GAAKD,EAAI,EAAIlC,EAAEmC,GAAKD,EAAI,EAAIlC,EAAE+B,EAAQC,EAAKG,GAAKnC,EAAE+B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKjC,OAAOqC,eAAeR,EAAQC,EAAKG,GAAIA,EAGzD,SAASK,EAAQC,EAAYC,GAChC,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAG7G,SAASE,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAO/B,GAAK6B,EAAO7B,IACpF,SAASkC,EAASH,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAO/B,GAAK6B,EAAO7B,IACvF,SAASgC,EAAKG,GAJlB,IAAeJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAU5B,MAAMyB,EAASC,GAAc,KAAKS,WAI/D,SAASK,EAAYf,EAASgB,GACjC,IAAsGC,EAAGC,EAAGlD,EAAGmD,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPtD,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOuD,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAET,KAAMe,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOnE,OAAUyD,EACvJ,SAASM,EAAKtD,GAAK,OAAO,SAAU2D,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMlD,EAAY,EAAR+D,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAOlD,EAAIkD,EAAU,SAAMlD,EAAEM,KAAK4C,GAAI,GAAKA,EAAER,SAAW1C,EAAIA,EAAEM,KAAK4C,EAAGa,EAAG,KAAKlB,KAAM,OAAO7C,EAE3J,OADIkD,EAAI,EAAGlD,IAAG+D,EAAK,CAAS,EAARA,EAAG,GAAQ/D,EAAEwC,QACzBuB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG/D,EAAI+D,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEb,MAAOuB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAMjE,EAAIoD,EAAEG,MAAMvD,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAV0D,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc/D,GAAM+D,EAAG,GAAK/D,EAAE,IAAM+D,EAAG,GAAK/D,EAAE,IAAM,CAAEoD,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQrD,EAAE,GAAI,CAAEoD,EAAEC,MAAQrD,EAAE,GAAIA,EAAI+D,EAAI,MAC7D,GAAI/D,GAAKoD,EAAEC,MAAQrD,EAAE,GAAI,CAAEoD,EAAEC,MAAQrD,EAAE,GAAIoD,EAAEI,IAAIU,KAAKH,GAAK,MACvD/D,EAAE,IAAIoD,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAK1C,KAAK0B,EAASoB,GAC1B,MAAO3C,GAAKsD,EAAK,CAAC,EAAGtD,GAAIyC,EAAI,EAAI,QAAWD,EAAIjD,EAAI,EACtD,GAAY,EAAR+D,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEvB,MAAOuB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BJ,CAAK,CAACtC,EAAG2D,MA6BtD,SAASK,EAASC,GACrB,IAAInE,EAAsB,mBAAX2D,QAAyBA,OAAOC,SAAUQ,EAAIpE,GAAKmE,EAAEnE,GAAIC,EAAI,EAC5E,GAAImE,EAAG,OAAOA,EAAE/D,KAAK8D,GACrB,GAAIA,GAAyB,iBAAbA,EAAE/D,OAAqB,MAAO,CAC1CqC,KAAM,WAEF,OADI0B,GAAKlE,GAAKkE,EAAE/D,SAAQ+D,OAAI,GACrB,CAAE5B,MAAO4B,GAAKA,EAAElE,KAAM2C,MAAOuB,KAG5C,MAAM,IAAIJ,UAAU/D,EAAI,0BAA4B,mCAGjD,SAASqE,EAAOF,EAAGjE,GACtB,IAAIkE,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UACjD,IAAKQ,EAAG,OAAOD,EACf,IAAmBjD,EAAYV,EAA3BP,EAAImE,EAAE/D,KAAK8D,GAAOG,EAAK,GAC3B,IACI,WAAc,IAANpE,GAAgBA,KAAM,MAAQgB,EAAIjB,EAAEwC,QAAQG,MAAM0B,EAAGL,KAAK/C,EAAEqB,OAExE,MAAOgC,GAAS/D,EAAI,CAAE+D,MAAOA,GACjC,QACQ,IACQrD,IAAMA,EAAE0B,OAASwB,EAAInE,EAAU,SAAImE,EAAE/D,KAAKJ,GAE1D,QAAkB,GAAIO,EAAG,MAAMA,EAAE+D,OAE7B,OAAOD,EAGJ,SAASE,IACZ,IAAK,IAAIF,EAAK,GAAIrE,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CqE,EAAKA,EAAGG,OAAOJ,EAAOlE,UAAUF,KACpC,OAAOqE,QCnHX,0BCbA,SAAAI,IACUjF,KAAAkF,aAAe,IAAIC,EAAAA,QAW7B,OAREF,EAAA/E,UAAAkF,iCAAA,WACE,OAAOpF,KAAKkF,aAAaG,gBAI3BJ,EAAA/E,UAAAoF,iCAAA,SAAiCC,GAC/BvF,KAAKkF,aAAalC,KAAKuC,IAVdN,EAAkB9D,EAAA,CAD9BqE,EAAAA,cACYP,mBCkCX,SAAAQ,EAAoBC,GAAA1F,KAAA0F,iBAAAA,EAmBtB,OAdED,EAAAvF,UAAAyF,SAAA,WACE3F,KAAK4F,UAAW,EAEhB5F,KAAK0F,iBAAiBJ,iCAAiCtF,OAMzDyF,EAAAvF,UAAA2F,OAAA,WACE7F,KAAK4F,UAAW,EAEhB5F,KAAK0F,iBAAiBJ,iCAAiCtF,gDAjBnBiF,KAJpB9D,EAAA,CAAjB2E,EAAAA,MAAM,gEAEmC3E,EAAA,CAAzC4E,EAAAA,UAAUC,EAAAA,YAAa,CAAEC,QAAQ,oBAAqBD,EAAAA,gDAN5CP,EAAwBtE,EAAA,CAJpC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,wFAUsCnB,KAR3BQ,oBCEX,SAAAY,EAAoBX,GAApB,IAAAY,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAZ,iBAAAA,EAElBY,EAAKE,0CAiCT,OAzC0C1G,EAAAuG,EAAAE,GAWxCF,EAAAnG,UAAAuG,YAAA,WACEzG,KAAK0G,6BAA6BC,eAGpCN,EAAAnG,UAAA0G,aAAA,SAAaC,EAAgBC,GAC3BA,EAAgBlB,SAAWiB,EAE3B7G,KAAK+G,OAAOD,IAGNT,EAAAnG,UAAAsG,sCAAR,WAAA,IAAAF,EAAAtG,KACEA,KAAK0G,6BAA+B1G,KAAK0F,iBACtCN,mCACA4B,WAAU,SAAAF,GAAmB,OAAAR,EAAKS,OAAOD,OAGtCT,EAAAnG,UAAA6G,OAAR,SAAeD,GACwBA,EAAgBlB,UAOjD5F,KAAKiH,6BACPjH,KAAKiH,4BAA4BtB,WAGnC3F,KAAKiH,4BAA8BH,GARjC9G,KAAKiH,4BAA8B,+CAzBDhC,KAFK9D,EAAA,CAA1C+F,EAAAA,gBAAgBzB,mBAA4C0B,EAAAA,mDAJlDd,EAAoBlF,EAAA,CALhC+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,spBACAgB,UAAW,CAACnC,4BAQ0BA,KAN3BoB,IAA6BgB,gBCtB1C,SAAAC,IACuBtH,KAAA4F,UAAoB,EAC3C,OADuBzE,EAAA,CAApB2E,EAAAA,MAAM,uEADIwB,EAA4BnG,EAAA,CAVxC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,uKACAmB,WAAY,CACVC,EAAAA,QAAQ,aAAc,CACpBC,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,OAAQ,MAAQC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,OAC9EF,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,OAAQ,MAAQC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,eAIvEL,mBCNb,SAAAO,IACuB7H,KAAA4F,UAAoB,EAIrB5F,KAAA+G,OAAS,IAAIe,EAAAA,aAOnC,OALED,EAAA3H,UAAA6H,QAAA,WACE/H,KAAK4F,UAAY5F,KAAK4F,SAEtB5F,KAAK+G,OAAOiB,KAAKhI,KAAK4F,WATHzE,EAAA,CAApB2E,EAAAA,MAAM,uEAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAEa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEALGJ,EAA8B1G,EAAA,CAL1C+E,EAAAA,UAAU,CACTC,SAAU,2BACVC,SAAA,0UACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BP,mBC0Cb,SAAAQ,KAAgC,OAAnBA,EAAiBlH,EAAA,CAV7BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CACZpC,EACAiB,EACA7B,EACAoC,GAEFa,QAAS,CAACrC,EAAsBZ,MAErB4C,MC/CPM,EAAkB,CAAC,KAAM,KAAM,KAAM,KAAM,mBAajD,SAAAC,IACU5I,KAAA6I,MAAgB,KA8B1B,OANmBrJ,OAAAqC,eAAI+G,EAAA1I,UAAA,OAAI,KAGzB,WACE,OAAOF,KAAK6I,WAJG,SAAS/F,GACxB9C,KAAK6I,MAAQF,EAAgBG,SAAShG,GAASA,EAtCpB,sCAmBb3B,EAAA,CAAf2E,EAAAA,MAAM,4DAkBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAzBI8C,EAAqBzH,EAAA,CADjC4H,EAAAA,aACYH,oBCeb,SAAAI,mDAUA,OAVuClJ,EAAAkJ,EAAAzC,GACrCyC,EAAA9I,UAAA+I,SAAA,WACOjJ,KAAKkJ,MACRlJ,KAAKkJ,SAAMC,IAIfH,EAAA9I,UAAAkJ,QAAA,WACEpJ,KAAKkJ,SAAMC,GARFH,EAAiB7H,EAAA,CAJ7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,wXAEW4C,IAA0BJ,gBCfvC,SAAAS,KAA6B,OAAhBA,EAAclI,EAAA,CAL1BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACO,GACfN,QAAS,CAACM,MAECK,mBCKb,SAAAC,IACEtJ,KAAAuJ,UAAqC,GAC7BvJ,KAAAwJ,OAAkC,GAgG5C,OArBoBhK,OAAAqC,eAAIyH,EAAApJ,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKwJ,YANI,SAAUC,GAC1BzJ,KAAKwJ,OAASC,EACdzJ,KAAKuJ,UAAY,GAAGvE,OAAOyE,oCAdAtI,EAAA,CAA5B2E,EAAAA,MAAM,qFAYW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAgBRwB,EAAA,CAA1B2E,EAAAA,MAAM,iFA7FIwD,EAAyBnI,EAAA,CADrC4H,EAAAA,aACYO,oBC4BX,SAAAI,EAAYC,EAAkCC,EAA4BC,GAA1E,IAAAvD,EACEC,EAAA3F,KAAAZ,OAAOA,YADqCsG,EAAAsD,QAAAA,EAA4BtD,EAAAuD,SAAAA,EAd1EvD,EAAAwD,cAAwB,EACxBxD,EAAAyD,oBAA8B,EAGtBzD,EAAA0D,uBAAiC,EACjC1D,EAAA2D,mBAAoB,EAEpB3D,EAAA4D,qBAAsB,EACtB5D,EAAA6D,aAAc,EA4Cd7D,EAAA8D,qBAAuB,SAACvD,GACCP,EAAK+D,qBAAqBxD,EAAOP,EAAKgE,gBAGnEhE,EAAKwD,cAAe,EACpBxD,EAAKiE,2BAzCPjE,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,QA8I1C,OA/J2CL,EAAA4J,EAAAnD,GAoBzCmD,EAAAxJ,UAAAwK,gBAAA,WACE1K,KAAKmK,aAAc,EAEnBnK,KAAK2K,4BAGPjB,EAAAxJ,UAAA0K,UAAA,WAC0B5K,KAAK6K,kBAAkBC,cAAcC,cAIrC/K,KAAKiK,mBAAqBjK,KAAKmK,aACrDnK,KAAKgL,qBAGHhL,KAAKkK,sBACPlK,KAAKiL,iBACLjL,KAAKkK,qBAAsB,GAG7BlK,KAAKkL,sBAGPxB,EAAAxJ,UAAAuG,YAAA,WACEzG,KAAKuK,yBACLvK,KAAKmL,wBAGPzB,EAAAxJ,UAAAkL,eAAA,WACEpL,KAAK8J,cAAgB9J,KAAK8J,aAC1B9J,KAAKqL,8BAYC3B,EAAAxJ,UAAAmK,qBAAR,SAA6BxD,EAAO+C,GAClC,OAAOA,IAAYA,EAAQkB,cAAcQ,SAASzE,EAAMxF,SAGlDqI,EAAAxJ,UAAAgL,mBAAR,WACMlL,KAAKwK,SACSxK,KAAKwK,OAAOe,KAAKvL,KAAKyJ,SAEpCzJ,KAAKwL,2BACLxL,KAAKiK,mBAAoB,KAKvBP,EAAAxJ,UAAAuL,eAAR,WACE,IAAMC,EAAqB1L,KAAK2L,6BACb3L,KAAK4L,mBAAmBF,IAEzB1L,KAAKgK,uBACrBhK,KAAK6L,6BAEL7L,KAAK8L,+BAIDpC,EAAAxJ,UAAAyL,2BAAR,WACE,OAAO3L,KAAK+L,gBACR/L,KAAK4J,QAAQkB,cAAckB,cAAc,2BAA2BjB,YAAc,GAClF,GAGErB,EAAAxJ,UAAA0L,mBAAR,SAA2BF,GACzB,OAAO1L,KAAK4J,QAAQkB,cAAckB,cAAc,kBAAkBjB,YAAcW,GAG1EhC,EAAAxJ,UAAAsL,yBAAR,WACE,IAAMS,EAAiBjM,KAAK4J,QAAQkB,cAAcoB,iBAChD,wDAGFlM,KAAKgK,uBAAyBrK,MAAMwM,KAAKF,GACtCG,KAAI,SAAAC,GAAc,OAAAA,EAAwB,eAC1CC,QAAO,SAACC,EAAGhN,GAAM,OAAAgN,EAAIhN,IAAG,KAGrBmK,EAAAxJ,UAAA2L,2BAAR,WACE7L,KAAK+J,oBAAqB,EAC1B/J,KAAKuJ,UAAYvJ,KAAKyJ,MAAM+C,OAAO,GACnCxM,KAAKyM,cAAgBzM,KAAKyJ,MAAM+C,MAAM,GAAI,GAAGE,WAGvChD,EAAAxJ,UAAA4L,4BAAR,WACE9L,KAAK+J,oBAAqB,EAC1B/J,KAAKuJ,UAAY,GAAGvE,OAAOhF,KAAKyJ,OAChCzJ,KAAK8J,cAAe,GAGdJ,EAAAxJ,UAAA+K,eAAR,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAClB5M,KAAK4M,cAAgBC,YAAW,WAE5BvG,EAAK2D,oBACJ3D,EAAK4D,qBAC+C,IAArD5D,EAAKuE,kBAAkBC,cAAcC,YAErCzE,EAAK4D,qBAAsB,EAE3B5D,EAAKmF,mBAEN,KAGG/B,EAAAxJ,UAAA8K,mBAAR,WACEhL,KAAKwL,2BACLxL,KAAKyL,iBACLzL,KAAKiK,mBAAoB,GAGnBP,EAAAxJ,UAAAmL,2BAAR,WACErL,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,QAAS/M,KAAKoK,uBAGjEV,EAAAxJ,UAAAyK,yBAAR,WAAA,IAAArE,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,SAAClG,GAC9DP,EAAK2E,qBAIDvB,EAAAxJ,UAAAqK,uBAAR,WACMvK,KAAK8M,kBACP9M,KAAK8M,oBAIDpD,EAAAxJ,UAAAiL,qBAAR,WACEnL,KAAKgN,2DA9IcC,EAAAA,uBAAkCC,EAAAA,kBAA6BC,EAAAA,aAHvBhM,EAAA,CAA5D4E,EAAAA,UAAU,aAAc,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA2BiH,EAAAA,qDAC/B/L,EAAA,CAAhD4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,6BAA4BA,EAAAA,gDAbpDxD,EAAqBvI,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,w+BAiBqB6G,EAAAA,gBAAkCC,EAAAA,WAA6BC,EAAAA,aAfzEzD,IAA8BJ,gBClB3C,SAAA+D,KAGA,OADoBlM,EAAA,CAAjB2E,EAAAA,MAAM,2BAAkBnG,oCAFd0N,EAA6BlM,EAAA,CAJzC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,iLAEWiH,mBCiBX,SAAAC,EAAoBC,GAAAvN,KAAAuN,KAAAA,EAmBtB,OA3BE/N,OAAAqC,eAAIyL,EAAApN,UAAA,MAAG,KAAP,WACE,OAAOF,KAAKwN,sCAGdhO,OAAAqC,eAAIyL,EAAApN,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKyN,6CAKdH,EAAApN,UAAAwN,cAAA,SAAcC,EAAKC,EAAQC,GACzB7N,KAAKwN,KAAOG,EACZ3N,KAAKyN,YAAc,CACjBK,YAAY,EACZH,IAAKE,EAAKE,KACVH,OAAQA,IAIZN,EAAApN,UAAA8N,mBAAA,SAAmBC,GAEjB,OADAjO,KAAKkO,WAAuB,WAAID,EACzBjO,KAAKuN,KAAKY,KAAKnO,KAAK2N,IAAK3N,KAAKkO,aAGvCZ,EAAApN,UAAAkO,YAAA,WACE,OAAOpO,KAAKuN,KAAKc,IAAIrO,KAAK2N,IAAK,CAAEW,aAAc,OAAQV,OAAQ,CAAED,IAAK3N,KAAKkO,WAAgB,iDAjBnEK,EAAAA,cAZfjB,EAA2BnM,EAAA,CADvCqE,EAAAA,oCAa2B+I,EAAAA,cAZfjB,mBCaX,SAAAkB,EAAoBC,GAAAzO,KAAAyO,QAAAA,EAbpBzO,KAAA0O,UAAoB,EA2CtB,OA5BEF,EAAAtO,UAAA+I,SAAA,WACEjJ,KAAKyO,QAAQf,cAAc1N,KAAK+L,gBAAiB/L,KAAK2O,cAAe3O,KAAK4O,YAC1E5O,KAAK6O,qBAGPL,EAAAtO,UAAAuG,YAAA,WACMzG,KAAK8O,iBACP9O,KAAK8O,gBAAgBnI,cAGnB3G,KAAK+O,iBACP/O,KAAK+O,gBAAgBpI,eAIzB6H,EAAAtO,UAAA8O,qBAAA,WACEhP,KAAK0O,SAAW1O,KAAKiP,mBAAkB,GAASjP,KAAKiP,mBAAkB,IAGjET,EAAAtO,UAAA2O,kBAAR,WAAA,IAAAvI,EAAAtG,KACEA,KAAK8O,gBAAkB9O,KAAKyO,QAAQL,cAAcpH,WAAU,SAAA9D,GAAU,OAACoD,EAAKoI,SAAWxL,EAAO4K,eAGxFU,EAAAtO,UAAA+O,kBAAR,SAA0BhB,GAA1B,IAAA3H,EAAAtG,KACEA,KAAK+O,gBAAkB/O,KAAKyO,QACzBT,mBAAmBC,GACnBjH,WAAU,SAAA9D,GAAU,OAACoD,EAAKoI,SAAWxL,EAAO4K,wDA5BpBR,KARAnM,EAAA,CAA5B2E,EAAAA,MAAM,qFAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGoB3E,EAAA,CAA1B2E,EAAAA,MAAM,iFAZI0I,EAA6BrN,EAAA,CALzC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,8bACAgB,UAAW,CAACkG,4BAgBiBA,KAdlBkB,mBCNb,SAAAU,IAW0BlP,KAAA4O,YAAsB,EAChD,OAVqBzN,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBqJ,wCAGThO,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAXIoJ,EAAyB/N,EAAA,CAJrC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,ivBAEW8I,mBCYb,SAAAE,KAAiC,OAApBA,EAAkBjO,EAAA,CAV9BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,cACxB5G,aAAc,CACZiB,EACA2D,EACAmB,EACAU,GAEFxG,QAAS,CAACgB,MAEC0F,MCxBAE,EAAY,CAAC,KAAM,KAAM,KAAM,eAW5BC,IACd,OAAOC,aAcOC,EAAYC,EAAeC,GACzC,QADyC,IAAAA,IAAAA,EAAA,GACpCD,EAAL,CAIA,IAEMxM,EAAS0M,KAAKC,MAAMD,KAAKE,IAAIJ,GAASE,KAAKE,IAF9B,OAKnB,OAFAH,EAAWA,EAAW,EAAI,EAAIA,EAEpBI,YAAYL,EAAQE,KAAKI,IALhB,KAKgC9M,IAAS+M,QAAQN,IAAU,IAJhE,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAIsBzM,aAM1EgN,IAEd,IAAMC,EAAWC,UAAUD,UAAYC,UAAwB,aACzDC,EAAgBC,EAAiBH,GAEvC,OAAOb,EAAUxG,SAASuH,GAAiBF,EA7Cd,cAsDfX,IACd,OAAOc,EAAiBJ,cAaVI,EAAiBH,GAC/B,OAAQA,GArEqB,MAqEQI,cAAcC,UAAU,EAAG,YAGlDC,EAAW3N,GAGzB,OAFsB,IAAI4N,OAAO,yBAA0B,KAEtCC,KAAK7N,YAQZ8N,EAAiBC,GAC/B,MAAmB,iBAARA,EAEM,UADfA,EAAMA,EAAIN,cAAcO,SACS,OAARD,GAAwB,KAARA,EAGxB,iBAARA,EACM,IAARA,IAGAA,WAGKE,EAAajO,EAAYkO,GACvC,IAAMC,EAAcC,SAASpO,EAAO,IAC9BqO,EAAoBD,SAASF,EAAc,IAGjD,OAAOC,GAA+B,IAAhBA,EAAoBA,EAFrBE,GAA2C,IAAtBA,EAA0BA,OAAoBhI,WAK1EiI,EAASC,EAAaC,GACpC,cAAcD,IAAWC,WAUXC,EAAaC,EAASC,EAAcC,GAC9CN,EAASI,EAAI,YACfA,EAAG5Q,KAAK6Q,EAASC,GAEjBD,EAAQD,GAAIE,YAIAC,EAAiB7O,EAAe8O,EAAgBC,GAC9D,GAAI/O,EAAO,CACT,IAUQgP,EAVFC,EAAMb,SAASpO,EAAM0N,UAAU,EAAG,IAAK,IACvCwB,EAAQd,SAASpO,EAAM0N,UAAU,EAAG,GAAI,IACxCyB,EAAOf,SAASpO,EAAM0N,UAAU,EAAG,GAAI,IAC7C,GAAIoB,EAKF,OAFAM,GAFMJ,EAAO,IAAIK,KAAKF,EAAMD,EAAQ,EAAGD,EAAK,EAAG,EAAG,GAE1BE,GAEjBH,EACF,GAAID,EAKT,OAFAK,GAFMJ,EAAO,IAAIK,KAAKF,EAAMD,EAAQ,EAAGD,EAAK,GAAI,GAAI,IAE5BE,GAEjBH,EAEP,IAAMM,EAAeD,KAAKE,MAAMvP,GAC1BwP,EAA4C,KAAjC,IAAIH,MAAOI,oBAC5B,OAAO,IAAIJ,KAAKC,EAAeE,aAkBrBE,EAAyBV,EAAYW,GACnD,GAAIX,EAAM,CACR,IAAMY,EAAWZ,EAAKY,WAAa,EAC7BX,EAAMD,EAAKa,UAAY,GAAK,IAAMb,EAAKa,UAAYb,EAAKa,UACxDX,EAAQU,EAAW,GAAK,IAAMA,EAAWA,EACzCT,EAAOW,GAAWd,EAAKe,eAEvBC,EAAahB,EAAKiB,WAExB,OAAa,OAATN,EACKR,EAAO,IAAMD,EAAQ,IAAMD,EAAMU,EAGtCR,EACA,IACAD,EACA,IACAD,EACA,IACAe,EAAWtC,UAAU,GAAI,IACzBsC,EAAWtC,UAAU,GAAI,IACzB,IACAsC,EAAWtC,UAAU,GAAI,IAI7B,OAAO,cAQKoC,GAAWX,GACzB,OAAIA,GAAQ,IACHA,EAAKc,WAGVd,EAAO,IAAMA,EAAO,IACf,IAAIA,EAGTA,EAAO,GAAKA,EAAO,IACd,KAAKA,EAGVA,GAAQ,GAAKA,EAAO,GACf,MAAMA,OADf,WAKce,KACd,IAAMC,EAAYC,OAAO9C,UAAU6C,UAEnC,MAAO,2BAA2BtC,KAAKsC,YAIzBE,KACd,IAAMF,EAAYC,OAAO9C,UAAU6C,UAEnC,MAAO,kBAAkBtC,KAAKsC,YAIhBG,KAGd,OAFkBF,OAAO9C,UAAU6C,UAElB1C,cAAcvP,QAAQ,YAAc,WAIvCqS,KAGd,OAFkBH,OAAO9C,UAAU6C,UAElBK,MAAM,qEAOTC,GAAe1M,GAC7B,OAAyB,KAAlBA,EAAM2M,SAAkC,KAAhB3M,EAAM4M,eAQvBvB,GAAkBJ,EAAYG,GACxCA,GAAQ,GAAKA,EAAO,KACtBH,EAAK4B,YAAYzB,YAmBL0B,GAAwBC,GACtC,qBAASpT,GACP,GAAU,IAANA,WADGA,EAAC,WAKJoT,EAAKC,WAAU,SAAAxP,GAAM,OAAAA,EAAGvB,QAAU8Q,EAAKpT,GAAGsC,WAAWtC,IACvDoT,EAAKE,OAAOtT,EAAG,GACfA,OAPKA,GAAAA,EAAI,EAAGA,EAAIoT,EAAKjT,OAAQH,MAAxBA,GAAAA,EAACuT,WAYIC,GAA8BJ,GAC5C,IAAK,IAAIpT,EAAI,EAAGA,EAAIoT,EAAKjT,OAAQH,SACT2I,IAAlByK,EAAKpT,GAAGsC,OAAyC,OAAlB8Q,EAAKpT,GAAGsC,QACzC8Q,EAAKE,OAAOtT,EAAG,GACfA,cAKUyT,GAAWnR,GACzB,OAAQA,MAAAA,GAAmD,KAAVA,IAA2B,IAAVA,WAGpDoR,GAAevG,GAC7B,QAAOA,GAAMA,EAAIwG,WAAW,iBAGdC,GAAiBzG,GAC/BuF,OAAOmB,KAAK1G,EAAK,mBAGH2G,GAAiBvG,GAC/B,IAAIwG,EAAgB,GASpB,OAPIxG,IACFwG,EAAgBxG,EAAKyG,QAAQ,UAAW,KAGrCD,EAAcJ,WAAW,OAC5BI,EAAgB,IAAIvP,OAAOuP,IAEtBA,WAUOE,GAAWC,EAAkBC,EAAmBC,QAAA,IAAAA,IAAAA,GAAA,GAC9D,IAAMC,EAAOzD,EAASsD,EAAU,UAAYA,EAASnE,cAAgBmE,EAC/DI,EAAQ1D,EAASuD,EAAW,UAAYA,EAAUpE,cAAgBoE,EAExE,GAAIC,EAAW,CACb,GAAIC,EAAOC,EACT,OAAQ,EACH,GAAID,EAAOC,EAChB,OAAO,OAEJ,IAAkB,IAAdF,EAAqB,CAC9B,GAAIC,EAAOC,EACT,OAAO,EACF,GAAID,EAAOC,EAChB,OAAQ,EAGZ,OAAO,WAGOC,GAAkBjD,EAAYkD,EAAiBC,GAC7D,OAAID,GAAaC,EACRnD,GAAQkD,GAAalD,GAAQmD,EAC3BD,IAAcC,EAChBnD,GAAQkD,KACLA,GAAaC,IAChBnD,GAAQmD,WAMHC,KACd,SAASC,IACP,OAAOvF,KAAKC,MAA4B,OAArB,EAAID,KAAKwF,WACzBrC,SAAS,IACTvC,UAAU,GAGf,OAAO2E,IAASA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAASA,IAASA,aAGhFE,GAAsBC,GACpC,MAAO,GAAGA,EAAKC,OAAO,GAAGC,cAAgBF,EAAK9I,MAAM,YAqHtCiJ,GAAuBC,EAAaC,GAClD,IAEMC,GAFgBF,GAAqB,IAAXA,KAAkBG,MAAMH,GAEtB3F,WAAW2F,QAAUvM,EAEvD,IACE,OAAO4G,WAAW6F,EAAW3F,QAAQ0F,IACrC,MAAAG,GACA,OAAOF,YAsBKG,GAAmBjT,GACjC,OAAOsO,EAAStO,EAAO,YAAcnD,MAAMqW,QAAQlT,GAASA,OAAQqG,ECtgBtE,ICGY8M,iBDUZ,SAAAC,YACE1W,OAAAqC,eAAIqU,EAAAhW,UAAA,kBAAe,KAMnB,WACE,OAAOiW,aAAaC,QArBE,4BAcxB,SAAoBjG,GACdA,GAAYM,EAAWN,IACzBgG,aAAaE,QAhBO,sBAgBoBlG,oCA0B5C+F,EAAAhW,UAAAoW,YAAA,WACE,IAAMnG,EAAWgG,aAAaC,QA1Cd,mBA0CsCpW,KAAKuW,iBAAmBrG,IAE9E,OAAOC,GAAYA,EAASI,eAW9B2F,EAAAhW,UAAAsW,mBAAA,WACE,OAAOxW,KAAKuW,iBAYdL,EAAAhW,UAAAoQ,iBAAA,WACE,IACMD,EAAgBC,EADLtQ,KAAKsW,eAGtB,OAAOhH,EAAUxG,SAASuH,GAAiBA,ED1EhB,MC2F7B6F,EAAAhW,UAAAuW,YAAA,SAAYtG,GACLM,EAAWN,IAIhBgG,aAAaE,QA9FG,iBA8FkBlG,EAASI,gBAiB7C2F,EAAAhW,UAAAwW,mBAAA,SAAmBvG,GACjBnQ,KAAKuW,gBAAkBpG,8FApGd+F,EAAiB/U,EAAA,CAH7BqE,EAAAA,WAAW,CACVmR,WAAY,UAEDT,METAU,GAAkC,CAC7CC,GAA8B,CAC5BC,QAAS,WAEXC,GAA8B,CAC5BD,QAAS,YAEXE,GAA8B,CAC5BF,QAAS,cAEXG,GAA8B,CAC5BH,QAAS,2BAiEX,SAAAI,EAAoBC,GAAAnX,KAAAmX,gBAAAA,EApDZnX,KAAAoX,aAAwB,EAqD9BpX,KAAKsV,KAAOtV,KAAKqX,iBAQrB,OApC0B7X,OAAAqC,eAAIqV,EAAAhX,UAAA,aAAU,KAItC,WACE,OAAOF,KAAKoX,iBALU,SAAeE,GACrCtX,KAAKoX,YAAcxG,EAAiB0G,oCAkBrB9X,OAAAqC,eAAIqV,EAAAhX,UAAA,OAAI,KAIzB,WACE,OAAOF,KAAKuX,WALG,SAASzU,GACxB9C,KAAKuX,MAAQzU,GAAS9C,KAAKqX,kDAWrBH,EAAAhX,UAAAmX,eAAR,WACE,IAAMlH,EAAWnQ,KAAKmX,gBAAgB7G,mBAEtC,OAAOsG,GAAgCzG,GAAU2G,kDAPdZ,MA3Bb/U,EAAA,CAAvB2E,EAAAA,MAAM,2GAmBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FA7CIoR,EAA6B/V,EAAA,CADzC4H,EAAAA,mCAsDsCmN,MArD1BgB,qBCCX,SAAAM,EAAmBC,EAAmCN,GAAtD,IAAA7Q,EACEC,EAAA3F,KAAAZ,KAAMmX,IAAgBnX,YADLsG,EAAAmR,eAAAA,IAGrB,OAJ+C3X,EAAA0X,EAAAjR,4CACVmR,EAAAA,yBAAoCxB,MAD5DsB,EAAyBrW,EAAA,CAJrC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,2MAGmCsR,EAAAA,kBAAoCxB,MAD5DsB,IAAkCN,kBCf/C,SAAAS,KAmBA,OAP4BnY,OAAAqC,eAAI8V,EAAAzX,UAAA,eAAY,KAI1C,WACE,OAAOF,KAAK4X,mBALY,SAAiB9U,GACzC9C,KAAK4X,cAAgBhH,EAAiB9N,oCADd3B,EAAA,CAAzB2E,EAAAA,MAAM,+GAZI6R,EAAsBxW,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,0nBAEWuR,oBCLb,SAAAE,IAImB7X,KAAAsV,KAAgB,aACnC,OADmBnU,EAAA,CAAhB2E,EAAAA,MAAM,8DAJI+R,EAAsB1W,EAAA,CADlC4H,EAAAA,aACY8O,qBCEb,SAAAC,mDAAgE,OAAxBhY,EAAAgY,EAAAvR,GAA3BuR,EAAkB3W,EAAA,CAJ9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,iKAEW0R,IAA2BD,kBCDxC,SAAAE,KAA+B,OAAlBA,EAAgB5W,EAAA,CAH5BmH,EAAAA,SAAS,CACRlB,UAAW,CAAC8O,OAED6B,oBCQb,SAAAC,KAA8B,OAAjBA,EAAe7W,EAAA,CAL3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcuP,IACxBtP,aAAc,CAACqP,GAAoBH,GAAwBH,IAC3D9O,QAAS,CAACoP,GAAoBH,GAAwBH,OAE3CQ,MChBPC,GAAkB,CAAC,UAAW,UAAW,SAAU,sBAkBzD,SAAAC,IACUlY,KAAAmY,WAAsB,EACtBnY,KAAAoY,UAAqB,EACrBpY,KAAAqY,QAAmB,EACnBrY,KAAAsY,MAAiB,UA4FNtY,KAAAuY,MAAQ,IAAIzQ,EAAAA,aACjC,OAvEsBtI,OAAAqC,eAAIqW,EAAAhY,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAKoY,cALM,SAAYtV,GAC9B9C,KAAKoY,SAAWxH,EAAiB9N,oCAuBjBtD,OAAAqC,eAAIqW,EAAAhY,UAAA,QAAK,KAG3B,WACE,OAAOF,KAAKqY,YAJI,SAAUvV,GAC1B9C,KAAKqY,OAAwB,KAAVvV,GAAsB8N,EAAiB9N,oCAqB3CtD,OAAAqC,eAAIqW,EAAAhY,UAAA,OAAI,KAGzB,WACE,OAAOF,KAAKsY,WAJG,SAASxV,GACxB9C,KAAKsY,MAAQL,GAAgBnP,SAAShG,GAASA,EA1FpB,2CAyGRtD,OAAAqC,eAAIqW,EAAAhY,UAAA,WAAQ,KAGjC,WACE,OAAOF,KAAKmY,eAJO,SAAarV,GAChC9C,KAAKmY,UAA2B,KAAVrV,GAAsB8N,EAAiB9N,oCA5E7C3B,EAAA,CAAjB2E,EAAAA,MAAM,gEAaa3E,EAAA,CAAnB2E,EAAAA,MAAM,oGAaU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAWW3E,EAAA,CAAjB2E,EAAAA,MAAM,gGAsBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAgBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAQY3E,EAAA,CAAlB8G,EAAAA,OAAO,gEAhGGiQ,EAAqB/W,EAAA,CADjC4H,EAAAA,aACYmP,qBCMb,SAAAM,mDA6BA,OA7BuC1Y,EAAA0Y,EAAAjS,GAoBrCiS,EAAAtY,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAK2Y,cAAc7N,cAAc2N,SAIrCD,EAAAtY,UAAA6H,QAAA,WACE/H,KAAKuY,MAAMvQ,KAAK,OA1BqB7G,EAAA,CAAtC4E,EAAAA,UAAU,SAAU,CAAEE,QAAQ,oBAAuBiH,EAAAA,iDAD3CsL,EAAiBrX,EAAA,CAL7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,goBACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BoQ,IAA0BN,kBCXvC,SAAAU,KAA6B,OAAhBA,EAAczX,EAAA,CAL1BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcwP,IACxBvP,aAAc,CAAC+P,IACf9P,QAAS,CAAC8P,OAECI,MChBAC,GAAuB,CAClC,QACA,YACA,eACA,MACA,WACA,YACA,OACA,WACA,cACA,SACA,cACA,8BCQF,SAAAC,IACU9Y,KAAA+Y,SAAmB,GACjB/Y,KAAAgZ,iBAA4B,SAiDxC,OA1CsBxZ,OAAAqC,eAAIiX,EAAA5Y,UAAA,UAAO,KAO/B,WACE,OAAOF,KAAK+Y,cARM,SAAYE,GAC1BA,GAAWA,EAAQtY,OA3BA,IA4BrBX,KAAK+Y,SAAWE,EAAQzI,UAAU,EA5Bb,KA8BrBxQ,KAAK+Y,SAAWE,mCAgCSzZ,OAAAqC,eAAIiX,EAAA5Y,UAAA,kBAAe,KAGhD,WACE,OAAOF,KAAKgZ,sBAJe,SAAoBE,GAC/ClZ,KAAKgZ,iBAAmBH,GAAqB/P,SAASoQ,GAAYA,EA9DlC,0CAyBd/X,EAAA,CAAnB2E,EAAAA,MAAM,kGAoCsB3E,EAAA,CAA5B2E,EAAAA,MAAM,mHA7CIgT,EAAsB3X,EAAA,CADlC4H,EAAAA,aACY+P,MCKPK,GAA+C,CACnD,SACA,cACA,eACA,OACA,WACA,cACA,MACA,YACA,WACA,QACA,eACA,2BAIF,SAAAC,IAGUpZ,KAAAqZ,+BAAyC,EAIzCrZ,KAAAsZ,mBAA6B,EAE7BtZ,KAAAuZ,YAAsB,GA8XhC,OAtXEH,EAAAlZ,UAAAsZ,eAAA,SAAe1W,GACb,IAAMoW,EAAWpW,GAAS,SAC1B9C,KAAKyZ,gBAAgBP,GACrBlZ,KAAK0Z,iBAAmB1Z,KAAK0Z,gBAAgB/Y,OACzCX,KAAK2Z,qBAAqBT,GAC1BlZ,KAAK4Z,sBAAsBV,IAMjCE,EAAAlZ,UAAA2Z,kBAAA,WACE,OAAO7Z,KAAK8Z,gBAadV,EAAAlZ,UAAA6Z,YAAA,SACEnQ,EACAoQ,EACAC,EACAP,EACAJ,EACAY,QADA,IAAAZ,IAAAA,GAAA,QACA,IAAAY,IAAAA,GAAA,GAEAla,KAAK4J,QAAUA,aAAmBsD,EAAAA,WAAatD,EAAQkB,cAAgBlB,EACvE5J,KAAKia,cAAgBA,aAAyB/M,EAAAA,WAAa+M,EAAcnP,cAAgBmP,EAEzFja,KAAKga,cAAgBA,EAErBha,KAAK0Z,gBAAkBA,EACvB1Z,KAAKsZ,kBAAoBA,EACzBtZ,KAAKka,gBAAkBA,GAGjBd,EAAAlZ,UAAAyZ,qBAAR,SAA6BT,GAK3B,IAJA,IAAMiB,EAAiBna,KAAK0Z,gBAAgB/Y,OAExCyZ,EAAa,EAEVA,IAAeD,GAChBna,KAAKqa,iBAAiBnB,KACxBA,EAAWlZ,KAAKsa,aAAapB,EAAUlZ,KAAK0Z,iBAC5C1Z,KAAKyZ,gBAAgBP,KAKnBE,EAAAlZ,UAAA0Z,sBAAR,SAA8BV,GAM5B,IALA,IAAMqB,EAAgBva,KAAKwa,mBACrBC,EAAqBF,EAAc5Z,OAErC+Z,EAAiB,EAEdA,IAAmBD,GAAoB,CAC5C,IAAME,EAAe3a,KAAK4a,gBAAgB1B,GAG1C,GAFAlZ,KAAKyZ,gBAAgBP,IAEjBlZ,KAAK6a,aAAaF,GAGf,OAAI3a,KAAKqa,iBAAiBnB,QAC/BlZ,KAAK8a,mBAAmB5B,QAI1B,EAPEA,EAAWlZ,KAAKsa,aAAaK,EAAcJ,KAWzCnB,EAAAlZ,UAAAuZ,gBAAR,SAAwBP,GACtBlZ,KAAKka,gBAAkBla,KAAK+a,0BAA0B7B,GAAYlZ,KAAKgb,mBAAmB9B,IAGpFE,EAAAlZ,UAAA0a,gBAAR,SAAwB1B,GACtB,OAAOA,EAASlY,QAAQ,MAAQ,EAAIkY,EAAS1I,UAAU,EAAG0I,EAASlY,QAAQ,MAAQkY,GAG7EE,EAAAlZ,UAAAsa,iBAAR,WAGE,OAAOxa,KAAK0Z,iBAAmB1Z,KAAK0Z,gBAAgB/Y,OAChDX,KAAKib,kCAAkCjb,KAAK0Z,iBAHnB,CAAC,MAAO,QAAS,SAAU,SAOlDN,EAAAlZ,UAAA+a,kCAAR,SAA0CvB,GAIxC,IAHA,IAAMa,EAAgB,GAChBW,EAAwBxB,EAAgB/Y,OAErCH,EAAI,EAAGA,EAAI0a,EAAuB1a,IAAK,CAC9C,IAAM0Y,EAAWQ,EAAgBlZ,GAE3Bma,EAAe3a,KAAK4a,gBAAgB1B,GAErCqB,EAAczR,SAAS6R,IAC1BJ,EAAc/V,KAAKmW,GAIvB,OAAOJ,GAGDnB,EAAAlZ,UAAAib,aAAR,WACE,IAAMC,EAAoBpb,KAAKqb,uBAE/B,MAAO,CACLvG,MAAOsG,EAAkBxR,QAAQkL,MAAQsG,EAAkBlI,OAAOoI,WAClEC,IAAKH,EAAkBxR,QAAQ2R,KAAO,EACtC1G,KAAMuG,EAAkBxR,QAAQiL,MAAQ,EACxC2G,OAAQJ,EAAkBxR,QAAQ4R,OAASJ,EAAkBlI,OAAOuI,cAIhErC,EAAAlZ,UAAAmb,qBAAR,WACE,MAAO,CACLnI,OAAQ,CACNwI,QAASxI,OAAOwI,QAChBC,QAASzI,OAAOyI,QAChBL,WAAYpI,OAAOoI,WACnBG,YAAavI,OAAOuI,aAEtB7R,QAAS5J,KAAK4J,QAAQgS,wBACtBva,OAAQrB,KAAKia,cAAgBja,KAAKia,cAAc2B,wBAA0B,CAAEL,IAAK,EAAGC,OAAQ,EAAG1G,MAAO,EAAGD,KAAM,KAI3GuE,EAAAlZ,UAAAoa,aAAR,SAAqBpB,EAAkB2C,QAAA,IAAAA,IAAAA,EAAA,IACrC,IAAMC,EAAQD,EAAU7a,QAAQkY,GAC1B6C,EAAYD,EAAQ,EAE1B,OAAIA,GAAS,GAAKC,EAAYF,EAAUlb,OAC/Bkb,EAAUE,GAEVF,EAAU,IAIbzC,EAAAlZ,UAAAma,iBAAR,SAAyBnB,GACvB,IAAM8C,EAAYhc,KAAKmb,eAEvB,OAAQjC,GACN,IAAK,MACH,OAAO8C,EAAUT,KAAOS,EAAUlH,OAASkH,EAAUnH,KACvD,IAAK,YACH,OAAOmH,EAAUT,KAAOS,EAAUlH,MACpC,IAAK,WACH,OAAOkH,EAAUT,KAAOS,EAAUnH,KACpC,IAAK,QACH,OAAOmH,EAAUlH,OAASkH,EAAUT,KAAOS,EAAUR,OACvD,IAAK,YACH,OAAOQ,EAAUlH,OAASkH,EAAUT,IACtC,IAAK,eACH,OAAOS,EAAUlH,OAASkH,EAAUR,OACtC,IAAK,SACH,OAAOQ,EAAUR,QAAUQ,EAAUlH,OAASkH,EAAUnH,KAC1D,IAAK,eACH,OAAOmH,EAAUR,QAAUQ,EAAUlH,MACvC,IAAK,cACH,OAAOkH,EAAUR,QAAUQ,EAAUnH,KACvC,IAAK,OACH,OAAOmH,EAAUnH,MAAQmH,EAAUT,KAAOS,EAAUR,OACtD,IAAK,WACH,OAAOQ,EAAUnH,MAAQmH,EAAUT,IACrC,IAAK,cACH,OAAOS,EAAUnH,MAAQmH,EAAUR,SAIjCpC,EAAAlZ,UAAA2a,aAAR,SAAqB3B,GACnB,IAAM8C,EAAYhc,KAAKmb,eAEvB,OAAQjC,GACN,IAAK,MACH,OAAO8C,EAAUT,IACnB,IAAK,QACH,OAAOS,EAAUlH,MACnB,IAAK,SACH,OAAOkH,EAAUR,OACnB,IAAK,OACH,OAAOQ,EAAUnH,OAIfuE,EAAAlZ,UAAA+b,yBAAR,SAAiCxC,GAC/B,OAAQA,GACN,IAAK,WACH,MAAO,cACT,IAAK,YACH,MAAO,eACT,IAAK,eACH,MAAO,YACT,IAAK,cACH,MAAO,aAILL,EAAAlZ,UAAAgc,0BAAR,SAAkCC,EAAsBf,GACtDpb,KAAK4J,QAAQlC,MAAM6T,IAAMH,EAAkB/Z,OAAOma,OAASxb,KAAKga,cAAgB,KAChFha,KAAK4J,QAAQlC,MAAMmN,KAAOuG,EAAkB/Z,OAAOwT,KAAOsH,EAAe,MAGnE/C,EAAAlZ,UAAA6a,0BAAR,SAAkC7B,GAChClZ,KAAKoc,kBAEL,IAAMhB,EAAyBpb,KAAKqb,uBAEpC,OAAQnC,GACN,IAAK,cACHlZ,KAAKkc,0BAA0B,EAAGd,GAClC,MACF,IAAK,eACHpb,KAAKkc,0BACHd,EAAkBxR,QAAQyS,MAAQjB,EAAkB/Z,OAAOgb,MAC3DjB,GAEF,MACF,IAAK,WACHpb,KAAKsc,uBAAuB,EAAGlB,GAC/B,MACF,IAAK,YACHpb,KAAKsc,uBACHlB,EAAkBxR,QAAQyS,MAAQjB,EAAkB/Z,OAAOgb,MAC3DjB,GAKNpb,KAAK8Z,eAAiB9Z,KAAKic,yBAAyB/C,IAG9CE,EAAAlZ,UAAAoc,uBAAR,SAA+BH,EAAsBf,GACnDpb,KAAK4J,QAAQlC,MAAM6T,IACjBH,EAAkB/Z,OAAOka,IAAMH,EAAkBxR,QAAQjC,OAAS3H,KAAKga,cAAgB,KACzFha,KAAK4J,QAAQlC,MAAMmN,KAAOuG,EAAkB/Z,OAAOwT,KAAOsH,EAAe,MAGnE/C,EAAAlZ,UAAAqc,kBAAR,SAA0B9C,GACxB,OAAQA,GACN,IAAK,MACH,MAAO,SACT,IAAK,WACH,MAAO,eACT,IAAK,YACH,MAAO,cACT,IAAK,QACH,MAAO,OACT,IAAK,YACH,MAAO,cACT,IAAK,eACH,MAAO,WACT,IAAK,SACH,MAAO,MACT,IAAK,eACH,MAAO,WACT,IAAK,cACH,MAAO,YACT,IAAK,OACH,MAAO,QACT,IAAK,cACH,MAAO,YACT,IAAK,WACH,MAAO,iBAILL,EAAAlZ,UAAAsc,mBAAR,SAA2BL,EAAsBf,GAC/Cpb,KAAK4J,QAAQlC,MAAM6T,IAAMH,EAAkB/Z,OAAOma,OAASxb,KAAKga,cAAgB,KAChFha,KAAK4J,QAAQlC,MAAMmN,KAAOuG,EAAkB/Z,OAAOwT,KAAOuG,EAAkB/Z,OAAOgb,MAAQ,EAAIF,EAAe,MAGxG/C,EAAAlZ,UAAA8a,mBAAR,SAA2B9B,GACzBlZ,KAAKoc,kBAEL,IAAMhB,EAAoBpb,KAAKqb,uBAE/B,OAAQnC,GACN,IAAK,MACHlZ,KAAKyc,gBAAgBrB,EAAkBxR,QAAQyS,MAAQ,EAAGjB,GAC1D,MACF,IAAK,WACHpb,KAAKyc,gBACHrB,EAAkBxR,QAAQyS,MAAQrc,KAAKuZ,YAAcvZ,KAAKqZ,+BAC1D+B,GAEF,MACF,IAAK,YACHpb,KAAKyc,gBAAgBzc,KAAKuZ,YAAcvZ,KAAKqZ,+BAAgC+B,GAC7E,MACF,IAAK,QACHpb,KAAK0c,kBAAkBtB,EAAkBxR,QAAQjC,OAAS,EAAGyT,GAC7D,MACF,IAAK,YACHpb,KAAK0c,kBACHtB,EAAkBxR,QAAQjC,OAAS3H,KAAKuZ,YAAcvZ,KAAKqZ,+BAC3D+B,GAEF,MACF,IAAK,eACHpb,KAAK0c,kBAAkB1c,KAAKuZ,YAAa6B,GACzC,MACF,IAAK,SACHpb,KAAKwc,mBAAmBpB,EAAkBxR,QAAQyS,MAAQ,EAAGjB,GAC7D,MACF,IAAK,eACHpb,KAAKwc,mBAAmBxc,KAAKuZ,YAAcvZ,KAAKqZ,+BAAgC+B,GAChF,MACF,IAAK,cACHpb,KAAKwc,mBACHpB,EAAkBxR,QAAQyS,MAAQrc,KAAKuZ,YAAcvZ,KAAKqZ,+BAC1D+B,GAEF,MACF,IAAK,OACHpb,KAAK2c,iBAAiBvB,EAAkBxR,QAAQjC,OAAS,EAAGyT,GAC5D,MACF,IAAK,cACHpb,KAAK2c,iBAAiB3c,KAAKuZ,YAAa6B,GACxC,MACF,IAAK,WACHpb,KAAK2c,iBAAiBvB,EAAkBxR,QAAQjC,OAAS3H,KAAKuZ,YAAa6B,GAI/Epb,KAAK8Z,eAAiB9Z,KAAKuc,kBAAkBrD,IAGvCE,EAAAlZ,UAAAkc,gBAAR,WACMpc,KAAKsZ,mBAAqBtZ,KAAKia,gBACjCja,KAAK4J,QAAQlC,MAAM2U,MAAWrc,KAAKia,cAAc2C,YAAW,OAIxDxD,EAAAlZ,UAAAyc,iBAAR,SAAyBR,EAAsBf,GAC7Cpb,KAAK4J,QAAQlC,MAAM6T,IAAMH,EAAkB/Z,OAAOka,IAAMY,EAAef,EAAkB/Z,OAAOsG,OAAS,EAAI,KAC7G3H,KAAK4J,QAAQlC,MAAMmN,KACjBuG,EAAkB/Z,OAAOwT,KAAOuG,EAAkBxR,QAAQyS,MAAQrc,KAAKga,cAAgB,MAGnFZ,EAAAlZ,UAAAwc,kBAAR,SAA0BP,EAAsBf,GAC9Cpb,KAAK4J,QAAQlC,MAAM6T,IAAMH,EAAkB/Z,OAAOka,IAAMY,EAAef,EAAkB/Z,OAAOsG,OAAS,EAAI,KAC7G3H,KAAK4J,QAAQlC,MAAMmN,KAAOuG,EAAkB/Z,OAAOyT,MAAQ9U,KAAKga,cAAgB,MAG1EZ,EAAAlZ,UAAAuc,gBAAR,SAAwBN,EAAsBf,GAC5Cpb,KAAK4J,QAAQlC,MAAM6T,IACjBH,EAAkB/Z,OAAOka,IAAMH,EAAkBxR,QAAQjC,OAAS3H,KAAKga,cAAgB,KACzFha,KAAK4J,QAAQlC,MAAMmN,KAAOuG,EAAkB/Z,OAAOwT,KAAOuG,EAAkB/Z,OAAOgb,MAAQ,EAAIF,EAAe,MAGxG/C,EAAAlZ,UAAA4a,mBAAR,SAA2B5B,GACrBA,EAASlY,QAAQ,MAAQ,IAC3BkY,EAAWA,EAAS1I,UAAU,EAAG0I,EAASlY,QAAQ,MAClDhB,KAAKyZ,gBAAgBP,IAIvB,IADA,IAAI2D,EAAQ,EACLA,IAAU,GAAG,CAClB,IAAI7c,KAAKqa,iBAAiBnB,GAIxB,OAAO,KAHPA,EAAWlZ,KAAKsa,aAAapB,EAAUC,IACvCnZ,KAAKyZ,gBAAgBP,KAjYhBE,EAAwBjY,EAAA,CADpCqE,EAAAA,cACY4T,qBCrCb,SAAA0D,mDAA+E,OAA1Bhd,EAAAgd,EAAAvW,GAAxCuW,EAA+B3b,EAAA,CAD3CqE,EAAAA,cACYsX,IAAwC1D,mBCqCnD,SAAA2D,EACUC,EACAnT,EACAoT,GAHV,IAAA3W,EAKEC,EAAA3F,KAAAZ,OAAOA,YAJCsG,EAAA0W,WAAAA,EACA1W,EAAAuD,SAAAA,EACAvD,EAAA2W,kBAAAA,EAPF3W,EAAA4W,cAAwB,IAoHlC,OA5HwCpd,EAAAid,EAAAxW,GAoBtCwW,EAAA7c,UAAA+I,SAAA,WACEjJ,KAAKmd,mCAGqBJ,EAAA7c,UAAAkd,aAAA,WAA5B,IAAA9W,EAAAtG,KACE6M,YAAW,WACLvG,EAAK2S,UACP3S,EAAK+W,eAAiB/W,EAAKgX,cAAgBhX,EAAKiX,gBAEhDjX,EAAKkX,YAAYlX,EAAKwT,gBAEtBxT,EAAK2W,kBAAkBzD,eAAelT,EAAKmX,iBAC3CnX,EAAKwT,eAAiBxT,EAAK2W,kBAAkBpD,oBAE7CvT,EAAKoX,SAASpX,EAAKwT,gBAEnBxT,EAAKqX,gBAAkBrX,EAAK2S,aAKN8D,EAAA7c,UAAA0d,aAAA,WAA5B,IAAAtX,EAAAtG,KAGE6M,YAAW,WACTvG,EAAKuX,kBAIDd,EAAA7c,UAAAwd,SAAR,SAAiB5D,GACf9Z,KAAK6J,SAASiU,SAAS9d,KAAK+d,SAAU,YAAYjE,IAG5CiD,EAAA7c,UAAA8d,uBAAR,WACE9K,OAAO+K,iBAAiB,SAAUje,KAAKke,uBAAuB,IAIxDnB,EAAA7c,UAAAqd,cAAR,WACEvd,KAAKqd,eAAiBrd,KAAK6J,SAASsU,cAAc,OAClDne,KAAK6J,SAASiU,SAAS9d,KAAKqd,eAAgB,cAE5Crd,KAAK+d,SAAW/d,KAAK6J,SAASsU,cAAc,OAC5Cne,KAAK6J,SAASiU,SAAS9d,KAAK+d,SAAU,oBAEtC/d,KAAKoe,WAAape,KAAK6J,SAASsU,cAAc,OAC9Cne,KAAK6J,SAASiU,SAAS9d,KAAKoe,WAAY,sBAExCpe,KAAKqe,YAAcre,KAAK6J,SAASyU,WAAWte,KAAKiZ,SAEjDjZ,KAAK6J,SAAS0U,YAAYve,KAAKoe,WAAYpe,KAAKqe,aAChDre,KAAK6J,SAAS0U,YAAYve,KAAKqd,eAAgBrd,KAAK+d,UACpD/d,KAAK6J,SAAS0U,YAAYve,KAAKqd,eAAgBrd,KAAKoe,YACpDpe,KAAK6J,SAAS0U,YAAYve,KAAKgd,WAAWlS,cAAe9K,KAAKqd,gBAE9Drd,KAAKid,kBAAkBlD,YAAY/Z,KAAKqd,eAAgBrd,KAAKkd,cAAeld,KAAKgd,YAEjFhd,KAAKge,0BAGCjB,EAAA7c,UAAAid,gCAAR,WAAA,IAAA7W,EAAAtG,KACEA,KAAKke,sBAAwB,WACtB5X,EAAKkY,UACR3R,YAAW,WACTvG,EAAK2W,kBAAkBzD,eAAelT,EAAKmX,sBAM3CV,EAAA7c,UAAA2d,YAAR,WACM7d,KAAKqd,iBACPrd,KAAK6J,SAASiU,SAAS9d,KAAKqd,eAAgB,gBAC5Crd,KAAKwe,UAAW,EAEhBxe,KAAKye,8BAID1B,EAAA7c,UAAAsd,YAAR,SAAoB1D,GACd9Z,KAAKgd,WAAWlS,cAAckB,cAAc,aAAa8N,IAC3D9Z,KAAK6J,SAAS6U,YAAY1e,KAAK+d,SAAU,YAAYjE,IAIjDiD,EAAA7c,UAAAue,0BAAR,WACEvL,OAAOyL,oBAAoB,SAAU3e,KAAKke,uBAAuB,IAG3DnB,EAAA7c,UAAAod,YAAR,WACEtd,KAAK6J,SAAS6U,YAAY1e,KAAKqd,eAAgB,gBAC/Crd,KAAK4e,oBACL5e,KAAKwe,UAAW,EAEhBxe,KAAKge,0BAGCjB,EAAA7c,UAAA0e,kBAAR,WACM5e,KAAK2d,kBAAoB3d,KAAKiZ,UAChCjZ,KAAK6J,SAASgV,YAAY7e,KAAKoe,WAAYpe,KAAKqe,aAChDre,KAAKqe,YAAcre,KAAK6J,SAASyU,WAAWte,KAAKiZ,SACjDjZ,KAAK6J,SAAS0U,YAAYve,KAAKoe,WAAYpe,KAAKqe,wDA5G9BnR,EAAAA,kBACFC,EAAAA,iBACS2P,MASD3b,EAAA,CAA3B2d,EAAAA,aAAa,kIAiBc3d,EAAA,CAA3B2d,EAAAA,aAAa,kIAzCH/B,EAAkB5b,EAAA,CAJ9B4H,EAAAA,UAAU,CACT5C,SAAU,cACViB,UAAW,CAAC0V,6BAeU5P,EAAAA,WACFC,EAAAA,UACS2P,MAflBC,IAA2BjE,kBCfxC,SAAAiG,KAA8B,OAAjBA,EAAe5d,EAAA,CAL3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACsU,IACfrU,QAAS,CAACqU,OAECgC,OhBRD9I,GAAAA,EAAAA,sBAAAA,EAAAA,oBAAmB,KAE7B,SAAA,WAGAA,GAAA,KAAA,OAGAA,GAAA,OAAA,SiBTF,ICCY+I,iBDqBZ,SAAAC,IACUjf,KAAAqY,QAAmB,EACnBrY,KAAAkf,QAxBqB,OA2BTlf,KAAAmf,QAAoC,GAgE1D,OArDoB3f,OAAAqC,eAAIod,EAAA/e,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKqY,YALI,SAAUvV,GAC1B9C,KAAKqY,OAAwB,KAAVvV,GAAsB8N,EAAiB9N,oCAkBzCtD,OAAAqC,eAAIod,EAAA/e,UAAA,SAAM,KAM7B,WACE,OAAOF,KAAKkf,aAPK,SAAWpc,GAC5B9C,KAAKkf,QAAgB1f,OAAQ4f,OAAOnJ,EAAAA,qBAAqBnN,SAAShG,GAASA,EA1DhD,OA4D3B9C,KAAKqf,eAAerf,KAAKkf,0CAO3BD,EAAA/e,UAAAof,cAAA,SAAcC,EAAkCC,GAC1Cxf,KAAK+G,SAAWkP,EAAAA,oBAAoBwJ,OACtCzf,KAAKmf,QAAQO,SACX,SAACC,EAAQ7D,GAAU,OAAC6D,EAAOC,SAAW9D,IAAU0D,IAAeD,EAAcK,YAEtE5f,KAAK+G,SAAWkP,EAAAA,oBAAoB4J,WAC7CN,EAAcK,UAAYL,EAAcK,WAIpCX,EAAA/e,UAAAmf,eAAR,SAAuBS,GACrB,GAAIA,IAAe7J,EAAAA,oBAAoB8J,KACrC/f,KAAKggB,0BACA,GAAIF,IAAe7J,EAAAA,oBAAoBwJ,OAAQ,CACzBzf,KAAKmf,QAAQc,QAAO,SAAAN,GAAU,OAAAA,EAAOC,YAAUjf,OAAS,GAEjFX,KAAKggB,uBAKHf,EAAA/e,UAAA8f,mBAAR,WACEhgB,KAAKmf,QAAQO,SAAQ,SAAAC,GAAU,OAACA,EAAOC,UAAW,MA9DhCze,EAAA,CAAnB2E,EAAAA,MAAM,6BAAsBnG,sCAWXwB,EAAA,CAAjB2E,EAAAA,MAAM,gGAmBY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAnCImZ,EAA0B9d,EAAA,CADtC4H,EAAAA,aACYkW,qBESX,SAAAiB,EAAYC,GAAZ,IAAA7Z,EACEC,EAAA3F,KAAAZ,OAAOA,YAGPsG,EAAK8Z,UAAYD,EAAmB,UAAE,KAE1C,OAT4CrgB,EAAAogB,EAAA3Z,4CAGrB8Z,EAAAA,oBAHVH,EAAsB/e,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,qmBAKqBia,EAAAA,oBAHVH,IAA+BjB,kBChB5C,SAAAqB,KAAkC,OAArBA,EAAmBnf,EAAA,CAL/BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcoQ,GAAgBmG,IACxCtW,aAAc,CAACyX,IACfxX,QAAS,CAACwX,OAECI,oBCfb,SAAAC,IACUvgB,KAAAmQ,SAAW,KAEXnQ,KAAAwgB,OAAS,CACf,CACExJ,GAAI,UACJH,GAAI,UACJE,GAAI,SAEN,CACEC,GAAI,YACJH,GAAI,WACJE,GAAI,WAEN,CACEC,GAAI,QACJH,GAAI,QACJE,GAAI,SAEN,CACEC,GAAI,QACJH,GAAI,QACJE,GAAI,SAEN,CACEC,GAAI,OACJH,GAAI,MACJE,GAAI,QAEN,CACEC,GAAI,QACJH,GAAI,OACJE,GAAI,SAEN,CACEC,GAAI,QACJH,GAAI,OACJE,GAAI,SAEN,CACEC,GAAI,SACJH,GAAI,SACJE,GAAI,UAEN,CACEC,GAAI,WACJH,GAAI,YACJE,GAAI,aAEN,CACEC,GAAI,UACJH,GAAI,UACJE,GAAI,WAEN,CACEC,GAAI,WACJH,GAAI,WACJE,GAAI,aAEN,CACEC,GAAI,WACJH,GAAI,WACJE,GAAI,cAIA/W,KAAAygB,cAAgB,CACtB,CACEzJ,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,QAIA/W,KAAA0gB,WAAa,CACnB1J,GAAI,MACJH,GAAI,QACJE,GAAI,OAGE/W,KAAA2gB,UAAY,CAClB3J,GAAI,MACJH,GAAI,OACJE,GAAI,OAyCR,OAtCEwJ,EAAArgB,UAAAwS,SAAA,SAASV,GACP,OAAOhS,KAAKwgB,OAAOxO,GAAOhS,KAAKmQ,WAGjCoQ,EAAArgB,UAAA0gB,cAAA,WACE,OAAO5gB,KAAK0gB,WAAW1gB,KAAKmQ,WAG9BoQ,EAAArgB,UAAA2gB,eAAA,WAEE,IADA,IAAMC,EAAYnhB,QACTa,EAAI,EAAGA,EAAIR,KAAKwgB,OAAO7f,OAAQH,IACtCsgB,EAAUtc,KAAKxE,KAAKwgB,OAAOhgB,GAAGR,KAAKmQ,WAErC,OAAO2Q,GAGTP,EAAArgB,UAAA6gB,YAAA,SAAYhP,GACV,OAAO/R,KAAKygB,cAAc1O,GAAK/R,KAAKmQ,WAGtCoQ,EAAArgB,UAAA8gB,iBAAA,WAEE,IADA,IAAMC,EAActhB,QACXa,EAAI,EAAGA,EAAIR,KAAKygB,cAAc9f,OAAQH,IAC7CygB,EAAYzc,KAAKxE,KAAKygB,cAAcjgB,GAAGR,KAAKmQ,WAE9C,OAAO8Q,GAGTV,EAAArgB,UAAAghB,aAAA,WACE,OAAOlhB,KAAK2gB,UAAU3gB,KAAKmQ,WAG7BoQ,EAAArgB,UAAAuW,YAAA,SAAYtG,GACNA,GAAYA,EAASxP,QAAU,IACjCwP,EAAWA,EAASI,cAAc/D,MAAM,EAAG,GAC3CxM,KAAKmQ,SAAwB,OAAbA,GAAkC,OAAbA,GAAkC,OAAbA,EAAoBA,EAAW,OAvJlFoQ,EAAqBpf,EAAA,CADjCqE,EAAAA,cACY+a,oBCSb,SAAAY,IACmBnhB,KAAAohB,UAAY,IAAI1Q,OAC/B,+EAGe1Q,KAAAqhB,SAAW,IAAI3Q,OAC9B,4MA0MJ,OA3LEyQ,EAAAjhB,UAAAyR,iBAAA,SAAiBmB,EAAoBwO,EAAkBC,GACrD,GAAIzO,EAAY,CACR,IAAAgD,EAAA9V,KAAAwhB,eAAA1O,GAAEb,EAAA6D,EAAA7D,KAAMD,EAAA8D,EAAA9D,MAAOD,EAAA+D,EAAA/D,IAErB,GAAIuP,EAAS,CACX,IAAMxP,EAAO,IAAIK,KAAKF,EAAMD,EAAQ,EAAGD,EAAK,EAAG,EAAG,GAElD,OADA/R,KAAKkS,kBAAkBJ,EAAMG,GACtBH,EACF,GAAIyP,EAAS,CACZzP,EAAO,IAAIK,KAAKF,EAAMD,EAAQ,EAAGD,EAAK,GAAI,GAAI,IAEpD,OADA/R,KAAKkS,kBAAkBJ,EAAMG,GACtBH,EAEP,IAAM2P,EAActP,KAAKE,MAAMS,GACzBR,EAA4C,KAAjC,IAAIH,MAAOI,oBAC5B,OAAO,IAAIJ,KAAKsP,EAAcnP,KAUpC6O,EAAAjhB,UAAAwhB,iBAAA,SAAiB5P,GACf,GAAIA,EAAM,CACR,IAAM6P,EAAW7P,EAAKe,cAChBH,EAAWZ,EAAKY,WAAa,EAC7BX,EAAMD,EAAKa,UAAY,GAAK,IAAMb,EAAKa,UAAYb,EAAKa,UACxDX,EAAQU,EAAW,GAAK,IAAMA,EAAWA,EAE/C,OADa1S,KAAK4S,WAAW+O,GACf,IAAM3P,EAAQ,IAAMD,EAElC,OAAO,MASXoP,EAAAjhB,UAAA0S,WAAA,SAAWX,GACT,OAAIA,EAAO,IACFA,EAAKc,WAGVd,EAAO,IAAMA,EAAO,IACf,IAAIA,EAGTA,EAAO,GAAKA,EAAO,IACd,KAAKA,EAGVA,GAAQ,GAAKA,EAAO,GACf,MAAMA,OADf,GAUFkP,EAAAjhB,UAAAshB,eAAA,SAAeI,GACb,IAAM7P,EAAMb,SAAS0Q,EAAQpR,UAAU,EAAG,IAAK,IACzCwB,EAAQd,SAAS0Q,EAAQpR,UAAU,EAAG,GAAI,IAGhD,MAAO,CAAEyB,KAFIf,SAAS0Q,EAAQpR,UAAU,EAAG,GAAI,IAEhCwB,MAAKA,EAAED,IAAGA,IAU3BoP,EAAAjhB,UAAA2hB,oBAAA,SAAoB/P,EAAWgQ,GAC7B,IAAMC,EAAWD,EAAY,CAAC,EAAG,EAAG,GAAK,CAAC,GAAI,GAAI,IAClD,GAAIhQ,aAAgBK,KAAM,CAClB,IAAA2D,EAAA9V,KAAAgiB,UAAAlQ,GAAEG,EAAA6D,EAAA7D,KAAMD,EAAA8D,EAAA9D,MAAOD,EAAA+D,EAAA/D,IACfkQ,EAAS,IAAO9P,KAAI+P,KAAArhB,MAAJsR,KAAIpN,EAAA,MAAA,EAACkN,EAAMD,EAAOD,GAAQgQ,KAEhD,OADA/hB,KAAKkS,kBAAkB+P,EAAWhQ,GAC3BgQ,EACF,GAAIjiB,KAAKmiB,WAAWrQ,GACzB,OAAO9R,KAAK2R,iBAAiBG,EAAMgQ,GAAYA,IASnDX,EAAAjhB,UAAAkiB,iBAAA,SAAiBC,EAAoBC,QAApB,IAAAD,IAAAA,EAAA,SAAoB,IAAAC,IAAAA,EAAA,IAInC,IAHA,IAAMC,EAAgBF,EAAMG,MAAM,KAAKpW,KAAI,SAAAyB,GAAQ,OAAAqD,SAASrD,EAAM,OAC5D4U,EAAgBH,EAAME,MAAM,KAAKpW,KAAI,SAAAyB,GAAQ,OAAAqD,SAASrD,EAAM,OAEzDiO,EAAQ,EAAGA,GAASyG,EAAc5hB,OAAQmb,IAAS,CAC1D,GAAIyG,EAAczG,GAAS2G,EAAc3G,GACvC,OAAO,EACF,GAAIyG,EAAczG,GAAS2G,EAAc3G,GAC9C,OAAO,EAIX,OAAO,GAQTqF,EAAAjhB,UAAAiiB,WAAA,SAAWO,GACT,OAAO1iB,KAAKohB,UAAUzQ,KAAK+R,IAAe1iB,KAAKqhB,SAAS1Q,KAAK+R,IAS/DvB,EAAAjhB,UAAAgS,kBAAA,SAAkBJ,EAAYG,GACxBA,GAAQ,GAAKA,EAAO,KACtBH,EAAK4B,YAAYzB,IAWrBkP,EAAAjhB,UAAAyiB,SAAA,SAASjO,EAAyBC,EAA0BC,GAC1D,OAAOH,GAAWzU,KAAK4iB,aAAalO,GAAW1U,KAAK4iB,aAAajO,GAAYC,IAQ/EuM,EAAAjhB,UAAA8hB,UAAA,SAAUlQ,GAIR,MAAO,CAAEG,KAHIH,EAAKe,cAGHb,MAFDF,EAAKY,WAEGX,IADVD,EAAKa,YAWnBwO,EAAAjhB,UAAA6U,kBAAA,SAAkBjD,EAAYwP,EAAeC,GAC3C,OAAID,GAAWC,EACNzP,GAAQwP,GAAWxP,GAAQyP,EACzBD,IAAYC,EACdzP,GAAQwP,KACLA,GAAWC,IACdzP,GAAQyP,GAYXJ,EAAAjhB,UAAA0iB,aAAR,SAAqB9Q,GACnB,IAAMmQ,EAAYnQ,aAAgBK,KAAOnS,KAAK0hB,iBAAiB5P,GAAQA,EAEvE,OAAO9R,KAAKmiB,WAAWF,GAAaA,OAAY9Y,GA9MvCgY,EAAahgB,EAAA,CADzBqE,EAAAA,cACY2b,oBCCb,SAAA0B,KAA+B,OAAlBA,EAAgB1hB,EAAA,CAJ5BmH,EAAAA,SAAS,CACRlB,UAAW,CAAC+Z,IACZ2B,UAAW,MAEAD,MCRPE,GAAoB,CAAC,KAAM,KAAM,oBAuJrC,SAAAC,EAAmBC,EAA8BC,GAA9BljB,KAAAijB,OAAAA,EAA8BjjB,KAAAkjB,sBAAAA,EA7GjDljB,KAAAmjB,YAAsB,EAMtBnjB,KAAAojB,cAA4BzjB,QAE5BK,KAAAqjB,gBAA8B1jB,QAE9BK,KAAAsjB,cAAwB,EACxBtjB,KAAAujB,aAAuB,EAMbvjB,KAAAwjB,UAAiB,KACjBxjB,KAAAyjB,gBAAuB,KACvBzjB,KAAA0jB,MAAc,IAAIvR,KAwFRnS,KAAA2jB,OAAS,IAAI7b,EAAAA,aAUnC,OAjFqBtI,OAAAqC,eAAImhB,EAAA9iB,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAK4jB,aALK,SAAWC,GAC5B7jB,KAAK4jB,QAAUb,GAAkBja,SAAS+a,GAAUA,EA9ExB,KA+E5B7jB,KAAK8jB,sDA8BctkB,OAAAqC,eAAImhB,EAAA9iB,UAAA,UAAO,KAGhC,WACE,OAAOF,KAAK+jB,cAJO,SAAYxC,GAC/BvhB,KAAK+jB,SAAW/jB,KAAKijB,OAAOpB,oBAAoBN,GAAS,oCA8BtC/hB,OAAAqC,eAAImhB,EAAA9iB,UAAA,UAAO,KAGhC,WACE,OAAOF,KAAKgkB,cAJO,SAAY1C,GAC/BthB,KAAKgkB,SAAWhkB,KAAKijB,OAAOpB,oBAAoBP,GAAS,oCAW3D0B,EAAA9iB,UAAA4jB,mBAAA,WACE9jB,KAAKkjB,sBAAsBzM,YAAYzW,KAAK6jB,QAC5C7jB,KAAKqjB,gBAAkBrjB,KAAKkjB,sBAAsBlC,mBAClDhhB,KAAKojB,cAAgBpjB,KAAKkjB,sBAAsBrC,iBAChD7gB,KAAKikB,aAAejkB,KAAKojB,cAAcpjB,KAAKkkB,8DANnB/C,UAA6CZ,MAzErDpf,EAAA,CAAlB2E,EAAAA,MAAM,gGAgCc3E,EAAA,CAApB2E,EAAAA,MAAM,mGA+Bc3E,EAAA,CAApB2E,EAAAA,MAAM,mGAQa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEAjHG+a,EAAuB7hB,EAAA,CADnC4H,EAAAA,mCAoH4BoY,GAA6CZ,MAnH7DyC,oBCpCb,SAAAmB,KA2CA,OA1CEA,EAAAjkB,UAAAkkB,WAAA,SAAWnS,EAAWD,EAAYqS,EAA0BC,GAC1D,QADgC,IAAAD,IAAAA,EAAA,WAA0B,IAAAC,IAAAA,EAAA,MACrC,iBAAVtS,GAAsBA,EAAQ,GAAKA,EAAQ,GACpD,MAAMuS,MAAM,qCAGd,IAAMC,EAAoB,GACtBC,EAAmB,GACnBjkB,EAAI,EACJsR,EAAO,IAAIK,KAAKF,EAAMD,EAAO,GAE7BC,GAAQ,GAAKA,EAAO,KACtBH,EAAK4B,YAAYzB,GAGnBH,EAAO9R,KAAK0kB,cAAc5S,GAE1B,EAAG,CACD,IAAKtR,EAAI,EAAGA,EAAI,EAAGA,IACjBikB,EAAKjgB,KAAK6f,EAAeA,EAAavS,GAAQA,IAC9CA,EAAO,IAAIK,KAAKL,EAAK6S,YAChBC,QAAQ9S,EAAKa,UAAY,GAEhC6R,EAAMhgB,KAAK8f,EAAgBA,EAAcG,GAAQA,GACjDA,EAAO,SACA3S,EAAKY,YAAcV,GAASF,EAAKe,gBAAkBZ,GAC5D,OAAOuS,GAGTL,EAAAjkB,UAAA2kB,UAAA,SAAU5S,EAAWD,GAInB,OAAOhS,KAAKokB,WAAWnS,EAAMD,GAHR,SAAUF,GAC7B,OAAOA,EAAKY,aAAeV,EAAQF,EAAO,MAK9CqS,EAAAjkB,UAAAwkB,cAAA,SAAc5S,GAEZ,IADA,IAAMgT,EAAY,IAAI3S,KAAKL,EAAK6S,WAxCiB,IAyC1CG,EAAUC,UACfD,EAAUF,QAAQE,EAAUnS,UAAY,GAE1C,OAAOmS,GAzCEX,EAAiBhjB,EAAA,CAD7BqE,EAAAA,cACY2e,MCIP/c,GAAY,CAChB+c,GACA5D,GACA,CACEyE,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAAC,MAC9BC,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAAC,MAC9BC,OAAO,mBA8BT,SAAAD,EACUG,EACRrC,EACAD,GAHF,IAAA3c,EAKEC,EAAA3F,KAAAZ,KAAMijB,EAAQC,IAAsBljB,YAJ5BsG,EAAAif,kBAAAA,IA8OZ,OAhPyCzlB,EAAAslB,EAAA7e,GASvC6e,EAAAllB,UAAA+I,SAAA,WACEjJ,KAAKwlB,QAGPJ,EAAAllB,UAAAulB,mBAAA,SAAmBC,EAAsBC,GACvC,OAAOD,IAAiBC,EAAgB,sCAAwC,8BAGlFP,EAAAllB,UAAA0lB,sBAAA,SAAsB9T,GACpB,OAAO9R,KAAK6lB,YAAY/T,EAAM,eAGhCsT,EAAAllB,UAAA4lB,sBAAA,SAAsBhU,GACpB,OAAO9R,KAAK6lB,YAAY/T,EAAM,eAGhCsT,EAAAllB,UAAA6lB,mBAAA,SAAmBL,EAAsBC,GACvC,OAAOD,IAAiBC,EAAgB,sCAAwC,8BAGlFP,EAAAllB,UAAA0gB,cAAA,WACE,OAAO5gB,KAAKkjB,sBAAsBtC,iBAGpCwE,EAAAllB,UAAAghB,aAAA,WACE,OAAOlhB,KAAKkjB,sBAAsBhC,gBAGpCkE,EAAAllB,UAAA8lB,YAAA,WACEhmB,KAAKkkB,mBAAqB,GACtBlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAalmB,KAAKkkB,mBAAqB,GAC/DlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAc,EAAG,IAG/Cd,EAAAllB,UAAAimB,gBAAA,WACEnmB,KAAKkkB,mBAAqB,EACtBlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAalmB,KAAKkkB,mBAAqB,GAC/DlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAc,EAAG,KAI/Cd,EAAAllB,UAAAkmB,aAAA,SAAatU,GACX9R,KAAK8R,KAAOA,EACZ9R,KAAKqmB,QAAUrmB,KAAKijB,OAAOvB,iBAAiB5P,GACxC9R,KAAKyjB,iBACPzjB,KAAKyjB,gBAAgBzjB,KAAKqmB,SAE5BrmB,KAAK2jB,OAAO3b,KAAKhI,KAAKqmB,UAIxBjB,EAAAllB,UAAAomB,cAAA,SAAcrU,EAAcD,GAC1BhS,KAAKumB,YACLvmB,KAAKimB,cAAchU,EAAMD,IAI3BoT,EAAAllB,UAAAsmB,aAAA,SAAavU,EAAcD,GAEJ,UAArBhS,KAAKymB,YAA0BzmB,KAAK0mB,cAAgB1mB,KAAKumB,YAEzDvmB,KAAK2mB,YAAc1U,EACnBjS,KAAKimB,cAAchU,EAAMD,IAG3BoT,EAAAllB,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKyjB,gBAAkBjS,GAGzB4T,EAAAllB,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKwjB,UAAYsD,GAGnB1B,EAAAllB,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzB4T,EAAAllB,UAAAqmB,UAAA,WACEvmB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,EACnBvjB,KAAKymB,YAAc,OAGrBrB,EAAAllB,UAAAwmB,YAAA,WACE1mB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,EACnBvjB,KAAKymB,YAAc,SAGrBrB,EAAAllB,UAAA+mB,WAAA,WACEjnB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,GAGrB6B,EAAAllB,UAAAgnB,WAAA,SAAWpkB,GACT9C,KAAKimB,cAAcjmB,KAAKkmB,YAAcpjB,EAAO9C,KAAKkkB,qBAGpDkB,EAAAllB,UAAAinB,cAAA,SAAcC,GACRpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAIzBhC,EAAAllB,UAAAmnB,SAAA,SAAS7lB,GACP,OAAO,MAGT4jB,EAAAllB,UAAAonB,WAAA,SAAWxkB,GACLA,EACF9C,KAAKunB,UAAUzkB,IAEf9C,KAAK8R,UAAO3I,EACZnJ,KAAKwnB,WAAWxnB,KAAK0jB,SAIjB0B,EAAAllB,UAAAunB,oBAAR,SAA4BxV,GAC1B,IAAIzR,EACJ,IAAKA,EAAIyR,EAAMzR,EAAIyR,EAAO,GAAIzR,IAC5BR,KAAK0nB,cAAcljB,KAAKhE,IAIpB4kB,EAAAllB,UAAAynB,WAAR,SAAmBC,EAAaC,GAC9B,IACE,OACED,EAAM/U,gBAAkBgV,EAAMhV,eAC9B+U,EAAMlV,aAAemV,EAAMnV,YAC3BkV,EAAMjV,YAAckV,EAAMlV,UAE5B,MAAO7N,GACP,OAAO,IAKHsgB,EAAAllB,UAAA4nB,eAAR,SAAuB7V,GAGrB,GAFAjS,KAAK0nB,cAAgB/nB,QAEjBsS,EAAO,IAAO,EAChB,KAAOA,EAAO,IAAO,GACnBA,IAGJjS,KAAK+nB,aAAa9V,IAGZmT,EAAAllB,UAAA8nB,gBAAR,SAAwBlW,EAAYmW,GAClC,OAAOjoB,KAAKijB,OAAOlO,kBAAkBjD,EAAM9R,KAAKshB,QAASthB,KAAKuhB,SAC1D,mBAAmB0G,EAAK,YACxB,mBAAmBA,EAAK,sBAGtB7C,EAAAllB,UAAAgoB,qBAAR,SAA6BpW,EAAYmW,GACvC,OAAOjoB,KAAKijB,OAAOlO,kBAAkBjD,EAAM9R,KAAKshB,QAASthB,KAAKuhB,SAC1D,mBAAmB0G,EACnB,mBAAmBA,EAAK,aAGtB7C,EAAAllB,UAAAioB,iBAAR,SAAyBrW,EAAYmW,GACnC,OAAOjoB,KAAKijB,OAAOlO,kBAAkBjD,EAAM9R,KAAKshB,QAASthB,KAAKuhB,SAC1D,mBAAmB0G,EAAK,SACxB,mBAAmBA,EAAK,mBAGtB7C,EAAAllB,UAAA2lB,YAAR,SAAoB/T,EAAYmW,GAC9B,OAAIjoB,KAAK2nB,WAAW7V,EAAM9R,KAAK8R,MACtB9R,KAAKgoB,gBAAgBlW,EAAMmW,GACzBjoB,KAAK2nB,WAAW7V,EAAM9R,KAAK0jB,OAC7B1jB,KAAKmoB,iBAAiBrW,EAAMmW,GAE5BjoB,KAAKkoB,qBAAqBpW,EAAMmW,IAInC7C,EAAAllB,UAAAslB,KAAR,WACExlB,KAAK8R,MAAQ9R,KAAKijB,OAAOd,WAAWniB,KAAKijB,OAAOvB,iBAAiB1hB,KAAK8R,OAClE9R,KAAKwnB,WAAWxnB,KAAK8R,MACrB9R,KAAKwnB,WAAWxnB,KAAK0jB,OACzB1jB,KAAK8jB,qBACL9jB,KAAKumB,aAGCnB,EAAAllB,UAAAkoB,mBAAR,SAA2BtW,GACzB9R,KAAK8R,KAAOA,EACZ9R,KAAKomB,aAAapmB,KAAK8R,OAGjBsT,EAAAllB,UAAAmoB,kBAAR,SAA0B3F,GAClB,IAAA5M,EAAA9V,KAAAijB,OAAAzB,eAAAkB,GAAEzQ,EAAA6D,EAAA7D,KAAMD,EAAA8D,EAAA9D,MAAOD,EAAA+D,EAAA/D,IACfD,EAAO,IAAIK,KAAKF,EAAMD,EAAQ,EAAGD,GACvC/R,KAAKijB,OAAO/Q,kBAAkBJ,EAAMG,GACpCjS,KAAK8R,KAAOA,EACZ9R,KAAKomB,aAAapmB,KAAK8R,OAGjBsT,EAAAllB,UAAAsnB,WAAR,SAAmB1V,GACbA,IACF9R,KAAKsoB,mBAAqBxW,EAAKY,WAC/B1S,KAAK2mB,YAAc7U,EAAKe,cACxB7S,KAAKimB,cAAcjmB,KAAK2mB,YAAa3mB,KAAKsoB,sBAItClD,EAAAllB,UAAA6nB,aAAR,SAAqB9V,GACnBjS,KAAKynB,oBAAoBxV,GACzBjS,KAAKuoB,mBAAqBtW,EAC1BjS,KAAKwoB,mBAAqBvW,EAAO,GAG3BmT,EAAAllB,UAAA+lB,cAAR,SAAsBhU,EAAcD,GAClC,IAAMyW,EAAgBzoB,KAAKulB,kBAAkBV,UAAU5S,EAAMD,GAC7DhS,KAAK0oB,YAAc,GAAG1jB,OAAOnE,MAAM,GAAI4nB,GACvCzoB,KAAKkkB,mBAAqBlS,EAC1BhS,KAAKikB,aAAejkB,KAAKojB,cAAcpR,GACvChS,KAAKkmB,YAAcjU,EACnBjS,KAAK8nB,eAAe7V,IAGdmT,EAAAllB,UAAAqnB,UAAR,SAAkBzkB,GAChBA,aAAiBqP,KAAOnS,KAAKooB,mBAAmBtlB,GAAS9C,KAAK2oB,aAAa7lB,GAC3E9C,KAAKwnB,WAAWxnB,KAAK8R,OAGfsT,EAAAllB,UAAAyoB,aAAR,SAAqB7lB,GACnB9C,KAAKijB,OAAOd,WAAWrf,GAAS9C,KAAKqoB,kBAAkBvlB,GAAU9C,KAAK8R,UAAO3I,4CA5OlDgb,UACJ5D,UACfY,MAJCiE,EAAmBjkB,EAAA,CAL/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,myGACAgB,UAASA,4BAIoB+c,GACJ5D,GACfY,MAJCiE,IAA4BpC,kBClCzC,SAAA4F,KAA+B,OAAlBA,EAAgBznB,EAAA,CAN5BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC2c,IACf1c,QAAS,CAAC0c,IACVhe,UAAW,CAACmZ,GAAuB4D,OAExByE,OTVD5J,GAAAA,EAAAA,cAAAA,EAAAA,YAAW,KAIrB,MAAA,QAMAA,GAAA,MAAA,QAKAA,GAAA,IAAA,MUbF,IAEM6J,GAAqB7J,EAAAA,YAAY8J,kBAqBvC,SAAAC,IAGU/oB,KAAAsY,MAAqBuQ,GAKb7oB,KAAAgpB,YAAchK,EAAAA,YA4F9Bhf,KAAAipB,YAAc,IAAInhB,EAAAA,aAYlB9H,KAAAkpB,YAAc,IAAIphB,EAAAA,aAmBpB,OA1GqBtI,OAAAqC,eAAIknB,EAAA7oB,UAAA,SAAM,KAe7B,WACE,OAAOF,KAAKmpB,SAAWnpB,KAAKopB,wBAhBX,SAAWtmB,GAC5B,IACI6E,EADE0hB,EAAWtY,EAAajO,GAI5B6E,EADEyJ,EAAStO,EAAO,UACTumB,GApDU,IAAA,IAoDwCA,EAElDrpB,KAAKopB,mBAGhBppB,KAAKmpB,QAAUxhB,EAEf3H,KAAKspB,oDAiBY9pB,OAAAqC,eAAIknB,EAAA7oB,UAAA,SAAM,KAQ7B,WACE,OAAOF,KAAKupB,aATK,SAAWzmB,GAC5B9C,KAAKupB,QAAUzmB,GAAS,GAExB9C,KAAKwpB,YAAc7pB,MAAMqW,QAAQhW,KAAKupB,WAC9BvpB,KAAKupB,SACTvpB,KAAKypB,6BAA6BzpB,KAAKupB,0CAqB5B/pB,OAAAqC,eAAIknB,EAAA7oB,UAAA,OAAI,KAMzB,WACE,OAAOF,KAAKsY,WAPG,SAASxV,GACxB9C,KAAKsY,MAAc9Y,OAAQ4f,OAAOJ,EAAAA,aAAalW,SAAShG,GAASA,EAAQ+lB,GAEzE7oB,KAAKspB,oDA+BPP,EAAA7oB,UAAAwpB,cAAA,SAAc7iB,GACZ7G,KAAKipB,YAAYjhB,KAAKnB,IAGxBkiB,EAAA7oB,UAAAypB,cAAA,SAAc9iB,GACZ7G,KAAKkpB,YAAYlhB,KAAKnB,IAGhBkiB,EAAA7oB,UAAAkpB,iBAAR,WACE,OAAOppB,KAAKsR,OAAS0N,EAAAA,YAAY4K,MAjJZ,IADI,KAqJnBb,EAAA7oB,UAAAupB,6BAAR,SAAqCI,GACnC,MAAwB,iBAAVA,GAAsBrqB,OAAOsqB,KAAKD,GAAOlpB,OAAS,CAAAP,EAAA,GAAMypB,IAAW,IAtGhE1oB,EAAA,CAAlB2E,EAAAA,MAAM,gGA6BY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAaW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAaU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAoBP3E,EAAA,CADC8G,EAAAA,OAAO,6EAaR9G,EAAA,CADC8G,EAAAA,OAAO,6EA/GY8gB,EAAoB5nB,EAAA,CADzC4H,EAAAA,aACqBggB,MC/BTgB,GAAgB,CAC3B,CAAC,WACD,CAAC,UAAW,WACZ,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,UAAW,WAClC,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACxD,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACnE,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9E,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACzF,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpG,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAKSC,GAAoB,CAAC,UAAW,WCxChCC,GAAsC,EAAVra,KAAKsa,GAAUta,KAAKC,MAAMsa,IAEtDC,IAA0Bxa,KAAKsa,GAE/BG,IAAqBza,KAAKsa,GAAK,gBCO5C,SAAAI,IAaEtqB,KAAAuqB,YAAsB,EACtBvqB,KAAAwqB,aAAmF,IAAIrlB,EAAAA,QACvFnF,KAAAyqB,aAAmF,IAAItlB,EAAAA,QACvFnF,KAAA0qB,OAAqB,GA8BvB,OAjBElrB,OAAAqC,eAAIyoB,EAAApqB,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKsR,OAAS0N,EAAAA,YAAY4K,uCAGnCU,EAAApqB,UAAAyqB,gCAAA,SAAgCC,EAA6BC,EAA4BC,GACvF,IAAMC,EAAyB/qB,KAAK2H,OAASkjB,EAAqBC,EAAqBE,GAEvFhrB,KAAKirB,UAAYF,GAA0B,EAAI,EAAIA,EACnD/qB,KAAKkrB,QAAUN,EAAsB,GAGvCN,EAAApqB,UAAAirB,oBAAA,WACEnrB,KAAKorB,WACHprB,KAAKsR,OAAS0N,EAAAA,YAAY4K,MACtB,IACA5pB,KAAK0qB,OAAOpe,QAAO,SAAC+e,EAAexB,GAAU,OAAAwB,EAAgBxB,EAAM/mB,QAAO,IAnBxC3B,EAAA,CAAzC4E,EAAAA,UAAU,YAAa,CAAEE,QAAQ,oBAAmBiH,EAAAA,6CAER/L,EAAA,CAA5C4E,EAAAA,UAAU,eAAgB,CAAEE,QAAQ,oBAAsBiH,EAAAA,gDA3BvCod,EAA2BnpB,EAAA,CADhD4H,EAAAA,aACqBuhB,qBCgCpB,SAAAgB,EAAsBC,EAAwBC,EAAwB3hB,GAAtE,IAAAvD,EACEC,EAAA3F,KAAAZ,OAAOA,YADasG,EAAAilB,GAAAA,EAAwBjlB,EAAAklB,OAAAA,EAAwBllB,EAAAuD,SAAAA,EApBtEvD,EAAAmlB,oBAAsBpB,GACtB/jB,EAAAolB,oBAAoC,IAAIvmB,EAAAA,QAOhCmB,EAAAqlB,uBAAwC,GACxCrlB,EAAAslB,oBAAqC,GACrCtlB,EAAAulB,oBAAqC,KA+e/C,OA1fqC/rB,EAAAwrB,EAAA/kB,GAanC/G,OAAAqC,eAAIypB,EAAAprB,UAAA,SAAM,KAIV,WACE,OAAOF,KAAKupB,aALd,SAAWzmB,GACT9C,KAAKupB,QAAUvpB,KAAK8rB,mBAAmBhpB,oCAWzCwoB,EAAAprB,UAAAuG,YAAA,WACEzG,KAAK+rB,6BACL/rB,KAAKgsB,6BACLhsB,KAAKisB,kBAAmB,GAG1BX,EAAAprB,UAAA+I,SAAA,WACEjJ,KAAKksB,iBACLlsB,KAAKmsB,qBAGPb,EAAAprB,UAAAksB,cAAA,WACMpsB,KAAKqsB,gBACPrsB,KAAK6J,SAASiU,SAAS9d,KAAKqsB,eAAgB,iBAItCf,EAAAprB,UAAAosB,SAAV,SAAmBC,EAAMd,EAAqBe,GAC5C,IAAMC,EAAWD,EAAoBf,EAAsB7b,KAAKsa,GAE1DwC,EAAW9c,KAAK+c,IAAIlB,GACpBmB,EAAWhd,KAAKid,IAAIpB,GAEpBqB,EAAUld,KAAK+c,IAAIH,GACnBO,EAAUnd,KAAKid,IAAIL,GAEnBQ,EAAShtB,KAAKkrB,QAAU0B,EAAW5sB,KAAKkrB,QACxC+B,EAASjtB,KAAKkrB,QAAUwB,EAAW1sB,KAAKkrB,QAExCgC,EAAOltB,KAAKkrB,QAAU6B,EAAU/sB,KAAKkrB,QACrCiC,EAAOntB,KAAKkrB,QAAU4B,EAAU9sB,KAAKkrB,QAErCkC,EAAcptB,KAAKkrB,QAAU0B,EAAW5sB,KAAKuqB,YAC7C8C,EAAcrtB,KAAKkrB,QAAUwB,EAAW1sB,KAAKuqB,YAE7C+C,EAAYttB,KAAKkrB,QAAU6B,EAAU/sB,KAAKuqB,YAC1CgD,EAAYvtB,KAAKkrB,QAAU4B,EAAU9sB,KAAKuqB,YAE1CiD,EAAuB,CAC3B,IACAR,EACAC,EACA,IACAjtB,KAAKkrB,QACLlrB,KAAKkrB,QACL,EACA,MACAgC,EACAC,EACA,IACA,EACA,EACA,EACA,MACAG,EACAC,EACA,IACAvtB,KAAKuqB,YACLvqB,KAAKuqB,YACL,EACA,MACA6C,EACAC,EACA,IACA,EACA,EACA,EACA,MACAL,EACAC,EACA,KACAQ,KAAK,KAEDC,EAAkB,CACtB,IACAV,EACAC,EACA,IACAjtB,KAAKkrB,QACLlrB,KAAKkrB,QACL,EACAuB,EAAW,MAAQ,MACnBS,EACAC,EACA,IACAG,EACAC,EACA,IACAvtB,KAAKuqB,YACLvqB,KAAKuqB,YACL,EACAkC,EAAW,MAAQ,MACnBW,EACAC,EACA,KACAI,KAAK,KAEP,OAAOlB,EAAKoB,aAAa,IAAK3tB,KAAK4tB,iBAAmBJ,EAAuBE,IAGrEpC,EAAAprB,UAAA4rB,mBAAV,SAA6BpB,GAA7B,IAAApkB,EAAAtG,KACQ6tB,EAAY,GAQlB,OANAnD,EAAOhL,SAAQ,SAACmK,EAAO/N,GACjB+N,EAAM/mB,MAAQ,GAChB+qB,EAAUrpB,KAAIpE,EAAAA,EAAA,GAAMypB,GAAK,CAAEiE,MAAOxnB,EAAKynB,OAAOjS,SAI3C+R,GAGDvC,EAAAprB,UAAA8tB,eAAR,WACEhuB,KAAKwsB,kBAAoBxsB,KAAK2rB,uBAAuB,GACrD3rB,KAAKisB,kBAAmB,EACxBjsB,KAAKiuB,gBAGC3C,EAAAprB,UAAAguB,iCAAR,SAAyCC,GACvC,IAAMC,EAAUpuB,KAAK6J,SAASsU,cAAc,WAAY,OACxDne,KAAK6J,SAAS8jB,aAAaS,EAAS,QAAS,4BAC7CD,EAAgB5P,YAAY6P,GAC5BpuB,KAAK6J,SAAS0U,YAAYve,KAAKquB,WAAYF,IAGrC7C,EAAAprB,UAAAouB,sBAAR,WAAA,IAAAhoB,EAAAtG,KACEA,KAAK0qB,OAAOhL,SACV,SAACmK,EAAO/N,GAAU,OAACxV,EAAKqlB,uBAAuB7P,GAASxV,EAAKioB,kBAAkB1E,EAAM/mB,MAAOwD,EAAK8kB,gBAI7FE,EAAAprB,UAAAsuB,yBAAR,SAAiCC,GAI/B,OAFEzuB,KAAKyrB,oBAAsBgD,EAAuBzuB,KAAKyrB,oBAAsBzrB,KAAKwsB,kBAG3ExsB,KAAKyrB,oBAAsBzrB,KAAKwsB,kBFtLR,KEwLxBxsB,KAAKyrB,oBAAsBgD,GAI9BnD,EAAAprB,UAAAquB,kBAAR,SAA0BzrB,EAAesoB,GACvC,IAAMsD,EAAY5rB,EAAQsoB,GAAyB,EAAVxb,KAAKsa,IAE9C,OAAOlqB,KAAK4tB,iBAAmBc,EAAW,EAAIA,GAGxCpD,EAAAprB,UAAAyuB,uBAAR,WACE3uB,KAAK2qB,gCAAgC3qB,KAAK4uB,aAAc5uB,KAAK6uB,YAAa7uB,KAAK8uB,aAE/E9uB,KAAKuqB,YAAcvqB,KAAK+uB,eAAe/uB,KAAKsR,OAGtCga,EAAAprB,UAAA8uB,sBAAR,SAA8BnoB,GACxB7G,KAAKqsB,gBAAkBrsB,KAAKqsB,eAAe4C,UAAU3jB,SAAS,iBAChEtL,KAAKsd,cAGP,IAAM4R,EAAmBlvB,KAAKmvB,oBAAoBtoB,GAClD7G,KAAK6J,SAASulB,SAASpvB,KAAKqsB,eAAgB,OAAW6C,EAAiBra,KAAI,MAC5E7U,KAAK6J,SAASulB,SAASpvB,KAAKqsB,eAAgB,MAAU6C,EAAiB3T,IAAG,OAGpE+P,EAAAprB,UAAAgsB,eAAR,WACElsB,KAAK2uB,yBACL3uB,KAAKmrB,sBACLnrB,KAAKsuB,wBACLtuB,KAAKqvB,oBACLrvB,KAAKguB,kBAGC1C,EAAAprB,UAAAovB,4BAAR,WACE,IAAMC,EAAgBC,SAASC,uBAAuB,mBAEtD,OAAOF,EAAc5uB,OAAS4uB,EAAc,GAAKrc,QAG3CoY,EAAAprB,UAAAwvB,WAAR,SAAmB7F,EAAkDsE,GACnE,IAAMC,EAAUpuB,KAAK6J,SAASsU,cAAc,WAAY,OAExDne,KAAK6J,SAAS8jB,aAAaS,EAAS,QAAS,gBAC7CpuB,KAAK6J,SAAS8jB,aAAaS,EAAS,OAAQvE,EAAMiE,OAElD9tB,KAAK2vB,qBAAqBvB,EAASvE,GAEnCsE,EAAgB5P,YAAY6P,GAE5BpuB,KAAK6J,SAAS0U,YAAYve,KAAKquB,WAAYF,GAE3CnuB,KAAK4rB,oBAAoBpnB,KAAK4pB,IAGxB9C,EAAAprB,UAAA0vB,YAAR,WAAA,IAAAtpB,EAAAtG,KACQmuB,EAAkBnuB,KAAK6J,SAASsU,cAAc,QAAS,OAEzDne,KAAK4tB,mBACP5tB,KAAKkuB,iCAAiCC,GAElCnuB,KAAK6vB,0BAKX7vB,KAAK0qB,OAAOhL,SAAQ,SAAAmK,GAAS,OAAAvjB,EAAKopB,WAAW7F,EAAOsE,OAG9C7C,EAAAprB,UAAAoe,WAAR,SAAmBuL,GACT,IAAA/mB,EAAA+mB,EAAA/mB,MAEFgtB,EAAO9vB,KAAK6J,SAASsU,cAAc,QAAS,OAC5C4R,EAAU/vB,KAAK6J,SAASsU,cAAc,WAAY,OAElD6R,EAAWhwB,KAAKiwB,cAChBC,EAAYlwB,KAAKmwB,aAAatG,EAAMiE,OAE1CiC,EAAQ1R,YAAcre,KAAKowB,gBAAgBttB,EAAO9C,KAAKorB,YAAc,IAErEprB,KAAK6J,SAAS8jB,aAAaoC,EAAS,QAAS,gBAC7C/vB,KAAK6J,SAAS8jB,aAAaoC,EAAS,OAAQG,GAC5ClwB,KAAK6J,SAAS8jB,aAAaoC,EAAS,YAAaC,GACjDhwB,KAAK6J,SAAS8jB,aAAaoC,EAAS,eAAgB,KAEpD/vB,KAAK2vB,qBAAqBI,EAASlG,GAEnC7pB,KAAK6J,SAAS0U,YAAYuR,EAAMC,GAEhC/vB,KAAK6J,SAAS0U,YAAYve,KAAKquB,WAAYyB,GAC3C9vB,KAAK6rB,oBAAoBrnB,KAAKurB,IAGxBzE,EAAAprB,UAAAmwB,YAAR,WAAA,IAAA/pB,EAAAtG,KACMA,KAAKsR,OAAS0N,EAAAA,YAAYsR,OAC5BtwB,KAAK0qB,OAAOhL,SAAQ,SAAAmK,GAAS,OAAAvjB,EAAKgY,WAAWuL,OAIzCyB,EAAAprB,UAAAmvB,kBAAR,WACE,IAAMkB,EAAgBvwB,KAAK4tB,iBACvB5tB,KAAKkrB,QFpRyB,IEoRflrB,KAAKkrB,QACpBlrB,KAAK4uB,aACH4B,EAAsBxwB,KAAK4tB,iBAAmB,WAAa,WAEjE5tB,KAAKquB,WAAaruB,KAAK6J,SAASsU,cAAc,UAAW,OAEzDne,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,UAAW,OAAOruB,KAAK4uB,aAAY,IAAI2B,GACnFvwB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,sBAA0BmC,EAAmB,SACzFxwB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,QAAS,wBACrDruB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,QAAS,GAAGruB,KAAKkrB,SAC7DlrB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,SAAU,GAAGruB,KAAKirB,WAE9DjrB,KAAKywB,aAAa3lB,cAAcyT,YAAYve,KAAKquB,YAEjDruB,KAAK4vB,cACL5vB,KAAKqwB,eAGC/E,EAAAprB,UAAA+tB,aAAR,WAAA,IAAA3nB,EAAAtG,KACOA,KAAKisB,kBAGRjsB,KAAKwrB,OAAOkF,mBAAkB,WAAM,OAAApqB,EAAKqqB,iBAIrCrF,EAAAprB,UAAAywB,WAAR,SAAmBC,EAA+BnC,QAA/B,IAAAmC,IAAAA,EAAA,QAA+B,IAAAnC,IAAAA,EAAA,GAChD,IAAMoC,EAAiCpC,EAAuBzuB,KAAKwsB,kBAChCoE,IAAsB5wB,KAAK4rB,oBAAoBjrB,SAM9EkwB,GACF7wB,KAAKyrB,oBAAsBzrB,KAAKyrB,oBAAsBzrB,KAAKwsB,kBAC3DoE,IACA5wB,KAAKwsB,kBAAoBxsB,KAAK2rB,uBAAuBiF,GACrDnC,EAAuB,IAEvBA,GAAwBxE,GAExBjqB,KAAKssB,SACHtsB,KAAK4rB,oBAAoBgF,GACzB5wB,KAAKyrB,oBACLzrB,KAAKwuB,yBAAyBC,IAGhCzuB,KAAK8wB,kBACH9wB,KAAK6rB,oBAAoB+E,GACzB5wB,KAAKyrB,oBACLzrB,KAAKwuB,yBAAyBC,KAIlCvb,OAAO6d,sBAAsB/wB,KAAK2wB,WAAWzO,KAAKliB,KAAM4wB,EAAmBnC,MAGrEnD,EAAAprB,UAAA8wB,iBAAR,SAAyBnqB,GACvB7G,KAAKyqB,aAAaznB,KAAK6D,IAGjBykB,EAAAprB,UAAA+vB,YAAR,WAKE,OAJwB,IAEWjwB,KAAK4uB,cAErB3e,QAAQ,GAAE,MAGvBqb,EAAAprB,UAAAkwB,gBAAR,SAAwBttB,EAAesoB,GACrC,IAEM6F,EAAoBxb,GAFJ3S,EAAQsoB,EAAc,IAEmB,GAE/D,OAAO8F,OAAOD,GAAmBzc,QAAQ,IAAK,MAGxC8W,EAAAprB,UAAAiwB,aAAR,SAAqBrC,GACnB,OAAI9D,GAAkBlhB,SAASglB,GA1VT,UACA,WAgWhBxC,EAAAprB,UAAAixB,gBAAR,SAAwBruB,GACtB,OAAI9C,KAAKsR,OAAS0N,EAAAA,YAAY8J,IACrBhmB,EAAMiQ,WAGR/S,KAAKowB,gBAAgBttB,EAAO9C,KAAKorB,YAAc,KAGhDE,EAAAprB,UAAA2vB,sBAAR,WACE,OAAO7vB,KAAK0qB,OAAO/pB,QAAmC,IAAzBX,KAAK0qB,OAAO,GAAG5nB,OAGtCwoB,EAAAprB,UAAAkxB,aAAR,WACE,IAAIC,EAEJ,GAAIrxB,KAAK4tB,iBAAkB,CACzB,IAAM9X,EAAA9V,KAAA0qB,OAAA,GAAE5U,EAAAgY,MACRuD,EADevwB,EAAAgV,EAAA,CAAA,eAGfub,EAAe,CAAEC,SAAUtxB,KAAKuxB,qBAAsBzuB,MAAO9C,KAAKwxB,mBAGpExxB,KAAKwqB,aAAaxnB,KAAKquB,IAGjB/F,EAAAprB,UAAAkd,aAAR,SAAqBvW,GACnB,IAAI4qB,EAEJ,GAAKzxB,KAAK4tB,iBASH,CACL,IAAM9X,EAAA9V,KAAA0qB,OAAA,GAASb,GAAP/T,EAAAgY,MAAOhtB,EAAAgV,EAAA,CAAA,WAEf9V,KAAK0xB,wBAA0B7qB,EAAMxF,OAAOswB,eAAe,KAAM,yBACjEF,EAAe5H,OAZf7pB,KAAKqsB,eAAiBrsB,KAAK4xB,UAAU9mB,cAAckB,cAAc,qBACjEhM,KAAKuxB,qBAAuB1qB,EAAMxF,OAAOswB,eAAe,KAAM,yBAC9D3xB,KAAKwxB,kBAAoB3qB,EAAMxF,OAAOswB,eAAe,KAAM,sBAC3D3xB,KAAK6xB,YAAchrB,EAAMxF,OAAOswB,eAAe,KAAM,qBACrD3xB,KAAKsd,cACLtd,KAAKgvB,sBAAsBnoB,GAE3B4qB,EAAe,CAAEH,SAAUtxB,KAAKuxB,qBAAsBzuB,MAAO9C,KAAKwxB,mBAQpExxB,KAAKgxB,iBAAiBS,IAGhBnG,EAAAprB,UAAA4xB,eAAR,WACE9xB,KAAK2uB,yBACL3uB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,QAAS,GAAGruB,KAAKkrB,SAC7DlrB,KAAK6J,SAAS8jB,aAAa3tB,KAAKquB,WAAY,SAAU,GAAGruB,KAAKirB,WAC9DjrB,KAAK0rB,oBAAoB1oB,QAGnBsoB,EAAAprB,UAAA6rB,2BAAR,WACM/rB,KAAK+xB,sBACP/xB,KAAK+xB,wBAIDzG,EAAAprB,UAAA8rB,2BAAR,WACMhsB,KAAKgyB,sBACPhyB,KAAKgyB,wBAID1G,EAAAprB,UAAAisB,kBAAR,WAAA,IAAA7lB,EAAAtG,KACMwpB,EAA6BxpB,KAAKurB,GAAGzgB,cAAcoB,iBAAiB,kBACxEsd,EAAc7pB,MAAMwM,KAAKqd,IACb9J,SAAQ,SAAAmK,GAClBvjB,EAAKuD,SAASkD,OAAO8c,EAAO,QAASvjB,EAAK8qB,aAAalP,KAAK5b,IAC5DA,EAAKuD,SAASkD,OAAO8c,EAAO,aAAcvjB,EAAK8W,aAAa8E,KAAK5b,IAE5DA,EAAKsnB,mBACRtnB,EAAKuD,SAASkD,OAAO8c,EAAO,YAAavjB,EAAK0oB,sBAAsB9M,KAAK5b,IACzEA,EAAKuD,SAASkD,OAAO8c,EAAO,aAAcvjB,EAAK8lB,cAAclK,KAAK5b,QAItEtG,KAAK+xB,qBAAuB/xB,KAAK6J,SAASkD,OAAOmG,OAAQ,SAAUlT,KAAK8xB,eAAe5P,KAAKliB,OAC5FA,KAAKgyB,qBAAuBhyB,KAAK6J,SAASkD,OACxC/M,KAAKsvB,8BACL,SACAtvB,KAAKosB,cAAclK,KAAKliB,QAIpBsrB,EAAAprB,UAAA6uB,eAAR,SAAuBzd,GACrB,IAAI2gB,EAEJ,OAAQ3gB,GACN,KAAK0N,EAAAA,YAAYsR,MACf2B,EFzc8B,IE2c9B,MAEF,KAAKjT,EAAAA,YAAY4K,MACfqI,EF3c8B,IE4c9B,MAEF,KAAKjT,EAAAA,YAAY8J,IACf,OAAO,EAIX,OAAO9oB,KAAKkrB,QAAUlrB,KAAKkrB,QAAU+G,GAG/B3G,EAAAprB,UAAA4wB,kBAAR,SAA0Bxb,EAAM4c,EAAoBxD,GAElD,GAAI1uB,KAAKsR,OAAS0N,EAAAA,YAAYsR,OAAShb,EAAK6c,iBAAiBxxB,OAAQ,CAEnE,IAAMyxB,GAAeF,EAAaxD,GAAY,EACxC2D,EAAU/c,EAAKgd,UAEfC,EAAgBF,EAAQhW,MAAQ,EAChCmW,EAAiBH,EAAQ1qB,OAAS,EAGlC8qB,EAASzyB,KAAKuqB,aAAevqB,KAAKkrB,QAAUlrB,KAAKuqB,aAAe,EAEhEmI,EAAcD,EAAS7iB,KAAKid,IAAIuF,GAAepyB,KAAKkrB,QAAUqH,EAC9DI,EAAcF,EAAS7iB,KAAK+c,IAAIyF,GAAepyB,KAAKkrB,QAAUsH,EAAiB,EACrFld,EAAKqY,aAAa,IAAK+E,GACvBpd,EAAKqY,aAAa,IAAKgF,GACvBrd,EAAKqY,aAAa,eAAgB,OAI9BrC,EAAAprB,UAAAivB,oBAAR,SAA4BtoB,GAG1B,MAAO,CACLgO,KAAMhO,EAAM+rB,QAAU5yB,KAAKqsB,eAAethB,YAAc,EACxDwQ,IAAK1U,EAAMgsB,QAAU7yB,KAAKqsB,eAAeyG,aAJd,IAQvBxH,EAAAprB,UAAAyvB,qBAAR,SAA6BtB,EAAYxE,GAC/B,IAAA/mB,EAAA+mB,EAAA/mB,MAAOwuB,EAAAzH,EAAAyH,SAAUrY,EAAA4Q,EAAA5Q,QAAS8Z,EAAAlJ,EAAAkJ,YAIlC,GAFA/yB,KAAK6J,SAAS8jB,aAAaU,EAAY,qBAAsB,GAAGvrB,GAE5D9C,KAAK4tB,iBACP5tB,KAAK6J,SAAS8jB,aAAaU,EAAY,2BAA4B0E,OAC9D,CACL,IAAMC,EAAehzB,KAAKmxB,gBAAgBruB,GAE1C9C,KAAK6J,SAAS8jB,aAAaU,EAAY,wBAAyBiD,GAChEtxB,KAAK6J,SAAS8jB,aAAaU,EAAY,oBAAqBpV,GAAcqY,EAAQ,KAAK0B,KAInF1H,EAAAprB,UAAAod,YAAR,WACEtd,KAAK6J,SAAS6U,YAAY1e,KAAKqsB,eAAgB,iBAEnDf,GA1fqChB,mBCXnC,SAAA2I,EAAY1H,EAAgBC,EAAgB3hB,GAA5C,IAAAvD,EACEC,EAAA3F,KAAAZ,KAAMurB,EAAIC,EAAQ3hB,IAAS7J,YAJ7BsG,EAAAmlB,oBAA8BpB,KAMhC,OAP2CvqB,EAAAmzB,EAAA1sB,4CAIzB2G,EAAAA,kBAAoBgmB,EAAAA,cAAkB/lB,EAAAA,aAJ3C8lB,EAAqB9xB,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,+WAMgB8G,EAAAA,WAAoBgmB,EAAAA,OAAkB/lB,EAAAA,aAJ3C8lB,IAA8B3H,kBC2CzC,SAAA6H,EAAoBjrB,GAAAlI,KAAAkI,gBAAAA,EA2CtB,OApE0B1I,OAAAqC,eAAIsxB,EAAAjzB,UAAA,aAAU,KAMtC,WACE,OAAOF,KAAKozB,iBAPU,SAAetwB,GACrC9C,KAAKozB,YAActwB,EAEnB9C,KAAKqzB,4DAOW7zB,OAAAqC,eAAIsxB,EAAAjzB,UAAA,QAAK,KAS3B,WACE,OAAOF,KAAKszB,YAVI,SAAUzJ,GACtBA,GACF7pB,KAAKuzB,oBAAsBvzB,KAAKwzB,4BAA4B3J,EAAM/mB,OAClE9C,KAAKszB,OAAMlzB,EAAA,GAAQypB,IAEnB7pB,KAAKszB,YAASnqB,mCAYlB3J,OAAAqC,eAAIsxB,EAAAjzB,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAK6pB,OAAS7pB,KAAK6pB,MAAMkJ,6CAGlCvzB,OAAAqC,eAAIsxB,EAAAjzB,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAK6pB,OAAS7pB,KAAK6pB,MAAM/mB,OAAS,mCAG3CtD,OAAAqC,eAAIsxB,EAAAjzB,UAAA,sBAAmB,KAAvB,WAEE,IAAMuzB,EJpD4B,IIoDVzzB,KAAK0zB,WAAsC,EAAI,EAGvE,MAAO,CAAEC,YAFgB3zB,KAAK0zB,WAAaD,EAEF,uCAG3CN,EAAAjzB,UAAAwK,gBAAA,WACE1K,KAAKqzB,4BAGCF,EAAAjzB,UAAAmzB,yBAAR,WAAA,IAAA/sB,EAAAtG,KACMA,KAAK4zB,qBAEP/mB,YAAW,WACTvG,EAAK2S,QAAU3S,EAAKutB,sBAEtB7zB,KAAKkI,gBAAgB4rB,kBAIjBX,EAAAjzB,UAAAszB,4BAAR,SAAoC1wB,GAElC,OADqBouB,OAAOzb,GAAuB3S,EAAO,IAAI0R,QAAQ,IAAK,KACrD,KAGhB2e,EAAAjzB,UAAA2zB,iBAAR,WAIE,OAFE7zB,KAAK4zB,mBAAmB9oB,cAAcC,YAAc/K,KAAK4zB,mBAAmB9oB,cAAcipB,YAEnE/zB,KAAK6pB,MAAMkJ,iBAAc5pB,4CAzCfuO,EAAAA,qBAzBbvW,EAAA,CAAvB2E,EAAAA,MAAM,yGAUW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAayC3E,EAAA,CAA/C4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,6BAAkCA,EAAAA,sDA9BzDimB,EAAgChyB,EAAA,CAL5C+E,EAAAA,UAAU,CACTC,SAAU,8BACVC,SAAA,mVACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAkCJsP,EAAAA,qBAhC1Byb,qBCiBX,SAAAa,EACU9rB,EACA+rB,EACR1I,EACAC,EACA3hB,GALF,IAAAvD,EAOEC,EAAA3F,KAAAZ,KAAMurB,EAAIC,EAAQ3hB,IAAS7J,YANnBsG,EAAA4B,gBAAAA,EACA5B,EAAA2tB,yBAAAA,EAjBV3tB,EAAAmlB,oBAA8BrB,GAEpB9jB,EAAAijB,QAAoC,KAsFhD,OAzF2CzpB,EAAAk0B,EAAAztB,GAKzC/G,OAAAqC,eAAImyB,EAAA9zB,UAAA,SAAM,KAIV,WACE,OAAOF,KAAKupB,aALd,SAAWmB,GACT1qB,KAAKupB,QAAUvpB,KAAKk0B,cAAcxJ,oCAoBpCsJ,EAAA9zB,UAAAwK,gBAAA,WACE1K,KAAKm0B,eACLn0B,KAAKo0B,mBAGCJ,EAAA9zB,UAAAk0B,gBAAR,WACE,IAAMC,EAAUr0B,KAAKi0B,yBAAyBK,wBAAwBnB,IAGhEoB,EADev0B,KAAKw0B,gBAAgBJ,gBAAgBC,GAC5BE,SAE9BA,EAAS1K,MAAQ7pB,KAAK0qB,OAAO/pB,QAAUX,KAAK0qB,OAAO,GACnD6J,EAASb,WAAa1zB,KAAKy0B,oBAE3Bz0B,KAAK00B,2BAA2BH,IAG1BP,EAAA9zB,UAAAy0B,sBAAR,SAA8B7xB,GAC5B,OAAIA,GAAS,EACJ,EACEA,GAAS,IACX,IAEAA,GAIHkxB,EAAA9zB,UAAAi0B,aAAR,WACE,IAAMS,EAAW50B,KAAKurB,GAAGzgB,cAAckB,cAAc,6BAErDhM,KAAKssB,SAASsI,EAAU50B,KAAKyrB,oBAAqB,IAG5CuI,EAAA9zB,UAAAu0B,kBAAR,WACE,IAAMG,EAAW50B,KAAKurB,GAAGzgB,cAAckB,cAAc,6BAErD,GAAI4oB,EACF,OAAOA,EAAShZ,wBAAwBS,OAIpC2X,EAAA9zB,UAAAg0B,cAAR,SAAsBxJ,QAAA,IAAAA,IAAAA,EAAA,IACd,IAACb,EAADjlB,EAAA8lB,EAAA,GAAC,GAEP,OAAIb,GAA0B,iBAAVA,EACX,QAEAA,GAAK,CACRiE,MAAO9tB,KAAK+tB,OAAO,GACnBjrB,MAAO9C,KAAK20B,sBAAsB9K,EAAM/mB,UAKvC,IAGDkxB,EAAA9zB,UAAAw0B,2BAAR,SAAmCH,GAAnC,IAAAjuB,EAAAtG,KACEA,KAAK0rB,oBAAoB1kB,WAAU,WACjCutB,EAASb,WAAaptB,EAAKmuB,oBAC3BnuB,EAAK4B,gBAAgB4rB,6DArEEpc,EAAAA,yBACSmd,EAAAA,gCAC9B3nB,EAAAA,kBACIgmB,EAAAA,cACE/lB,EAAAA,aARyDhM,EAAA,CAApE4E,EAAAA,UAAU,eAAgB,CAAEE,QAAQ,EAAMmH,KAAMiT,EAAAA,mCAAqCA,EAAAA,yDAb3E2T,EAAqB7yB,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,+WAmB2BsR,EAAAA,kBACSmd,EAAAA,yBAC9B3nB,EAAAA,WACIgmB,EAAAA,OACE/lB,EAAAA,aArBD6mB,IAA8B1I,mBCRzC,SAAAwJ,EAAYvJ,EAAgBC,EAAgB3hB,GAA5C,IAAAvD,EACEC,EAAA3F,KAAAZ,KAAMurB,EAAIC,EAAQ3hB,IAAS7J,YAJ7BsG,EAAAmlB,oBAA8BpB,KAMhC,OAPyCvqB,EAAAg1B,EAAAvuB,4CAIvB2G,EAAAA,kBAAoBgmB,EAAAA,cAAkB/lB,EAAAA,aAJ3C2nB,EAAmB3zB,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,+WAMgB8G,EAAAA,WAAoBgmB,EAAAA,OAAkB/lB,EAAAA,aAJ3C2nB,IAA4BxJ,mBCiEvC,SAAAyJ,EACStd,EACCwc,EACAtqB,SAHVrD,EAKEC,EAAA3F,KAAAZ,OAAOA,YAJAsG,EAAAmR,eAAAA,EACCnR,EAAA2tB,yBAAAA,EACA3tB,EAAAqD,QAAAA,EA1BFrD,EAAA2D,mBAA6B,EAG7B3D,EAAA6D,aAAuB,EACvB7D,EAAAyrB,qBAAqC,IAAI5sB,EAAAA,QAEzCmB,EAAA0uB,WAAQlf,EAAA,IACbkJ,EAAAA,YAAYsR,OAAQ2C,GACrBnd,EAACkJ,EAAAA,YAAY4K,OAAQoK,GACrBle,EAACkJ,EAAAA,YAAY8J,KAAMgM,MAGrBxuB,EAAAynB,OAAwB,GA0BxBznB,EAAA2uB,SAAW,WAAM,OAAA3uB,EAAKyrB,qBAAqB/uB,QARzCsD,EAAKkE,OAASlE,EAAKqD,QAAQc,KAAK,IAAItK,OAAO,QAmJ/C,OAlLsCL,EAAAi1B,EAAAxuB,GAkCpC/G,OAAAqC,eAAIkzB,EAAA70B,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKsR,OAAS0N,EAAAA,YAAY4K,uCAMnCmL,EAAA70B,UAAAwK,gBAAA,WACE1K,KAAKmK,aAAc,GAGrB4qB,EAAA70B,UAAA0K,UAAA,WAC2B5K,KAAK4uB,aAAa9jB,cAAcC,cAIhC/K,KAAKiK,mBAAqBjK,KAAKmK,cACtDnK,KAAKiK,mBAAoB,EACzBjK,KAAKk1B,iBACLl1B,KAAKm1B,2BAGPn1B,KAAKo1B,2BAGPL,EAAA70B,UAAAuG,YAAA,WACEzG,KAAK+rB,8BAGPgJ,EAAA70B,UAAA+I,SAAA,WACEjJ,KAAKk1B,kBAGPH,EAAA70B,UAAAopB,iBAAA,WACMtpB,KAAKq1B,eACPr1B,KAAKq1B,aAAaC,UAClBt1B,KAAKk1B,iBACLl1B,KAAKm1B,4BAIDJ,EAAA70B,UAAAq1B,kBAAR,SAA0BzG,GACxB,OAAOA,EAAcA,EAAYhkB,cAAcgoB,aAAe,GAGxDiC,EAAA70B,UAAAk1B,wBAAR,WACMp1B,KAAKq1B,cAAgBr1B,KAAKwK,SACPxK,KAAKwK,OAAOe,KAAKvL,KAAKwpB,eAEzCxpB,KAAKk1B,iBACLl1B,KAAKspB,sBAKHyL,EAAA70B,UAAAk0B,gBAAR,WACE,IAAMoB,EAAgBx1B,KAAKy1B,iBAAiBz1B,KAAKsR,MAC3C+iB,EAAUr0B,KAAKi0B,yBAAyBK,wBAAwBkB,GAEtEx1B,KAAKq1B,aAAer1B,KAAK01B,eAAetB,gBAAgBC,GAExD,IAAME,EAAwCv0B,KAAKq1B,aAAad,SAIhE,OAFAv0B,KAAK21B,mBAAmBpB,GAEjBA,GAGDQ,EAAA70B,UAAAi1B,wBAAR,WACE,IAAMZ,EAAWv0B,KAAKo0B,kBAEtBp0B,KAAK41B,2BAA2BrB,GAChCv0B,KAAKyX,eAAeqc,gBACpB9zB,KAAK61B,kBAAkBtB,GACvBv0B,KAAK81B,kBAAkBvB,IAGjBQ,EAAA70B,UAAAu1B,iBAAR,SAAyBM,GACvB,OAAO/1B,KAAKg1B,SAASe,IAGfhB,EAAA70B,UAAAg1B,eAAR,WACE,IAAMc,EAAejM,GAAcppB,OAAS,EAE5C,IAAKX,KAAKwpB,YACR,OAAQxpB,KAAK+tB,OAAShE,GAAciM,GAEtC,GAAIh2B,KAAKsR,OAAS0N,EAAAA,YAAY4K,MAC5B,OAAQ5pB,KAAK+tB,OAAShE,GAAc,GAGtC,IAAMkM,EAAej2B,KAAKwpB,YAAY7oB,OAAS,EAE/C,GAAIs1B,EAAeD,EAAc,CAM/B,IALA,IAAIjI,EAAShE,GAAciM,GAGrBE,EAAqBD,EAAeD,EAEjCx1B,EAAI,EAAGA,GAAK01B,EAAoB11B,IACvCutB,EAASA,EAAO/oB,OAAO+kB,GAAciM,IAGvC,OAAQh2B,KAAK+tB,OAASA,EAGxB,OAAQ/tB,KAAK+tB,OAAShE,GAAckM,IAG9BlB,EAAA70B,UAAA6rB,2BAAR,WACM/rB,KAAKi1B,WACPj1B,KAAKi1B,SAAW,eAIZF,EAAA70B,UAAAy1B,mBAAR,SAA2BpB,GACzBA,EAAS1F,YAAc7uB,KAAK6uB,YAAY/jB,cAAcgoB,aACtDyB,EAASzF,YAAc9uB,KAAKu1B,kBAAkBv1B,KAAK8uB,aACnDyF,EAAS3F,aAAe5uB,KAAK4uB,aAAa9jB,cAAcC,YACxDwpB,EAASxG,OAASpuB,MAAMqW,QAAQhW,KAAK+tB,QAAOhpB,EAAO/E,KAAK+tB,QAAU,GAClEwG,EAAS5sB,OAAS3H,KAAK2H,OACvB4sB,EAASjjB,KAAOtR,KAAKsR,KACrBijB,EAAS7J,OAAS1qB,KAAKwpB,aAAe,IAGhCuL,EAAA70B,UAAA21B,kBAAR,SAA0BtB,GAA1B,IAAAjuB,EAAAtG,KACEu0B,EAAS/J,aAAaxjB,WAAU,SAAAH,GAC9BP,EAAKojB,cAAc7iB,OAIfkuB,EAAA70B,UAAA41B,kBAAR,SAA0BvB,GAA1B,IAAAjuB,EAAAtG,KACEu0B,EAAS9J,aAAazjB,WAAU,SAAAH,GAC9BP,EAAKqjB,cAAc9iB,OAIfkuB,EAAA70B,UAAA01B,2BAAR,SAAmCrB,GAAnC,IAAAjuB,EAAAtG,KACEA,KAAK+xB,qBAAqB/qB,WAAU,WAClCutB,EAAS1F,YAAcvoB,EAAKuoB,YAAY/jB,cAAcgoB,aACtDyB,EAASzF,YAAcxoB,EAAKivB,kBAAkBjvB,EAAKwoB,aACnDyF,EAAS3F,aAAetoB,EAAKsoB,aAAa9jB,cAAcC,yDAtJnC2M,EAAAA,yBACWmd,EAAAA,gCACjB5nB,EAAAA,mBAXnB9L,EAAA,CADC4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMiT,EAAAA,iBAAkBpa,QAAQ,oBAC/Coa,EAAAA,wDAE4Blf,EAAA,CAA3C4E,EAAAA,UAAU,cAAe,CAAEE,QAAQ,oBAAqBiH,EAAAA,+CAET/L,EAAA,CAA/C4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,6BAA2BA,EAAAA,+CAEhB/L,EAAA,CAA5C4E,EAAAA,UAAU,eAAgB,CAAEE,QAAQ,oBAAsBiH,EAAAA,gDAiB3D/L,EAAA,CADC2d,EAAAA,aAAa,yEAtCHiW,EAAgB5zB,EAAA,CAJ5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,mfA2ByBsR,EAAAA,kBACWmd,EAAAA,yBACjB5nB,EAAAA,mBA3BR8nB,IAAyBhM,kBCzCtC,SAAAoN,KAIA,OAHqBh1B,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBnG,qCAERwB,EAAA,CAAlB2E,EAAAA,MAAM,kEAHIqwB,EAAsBh1B,EAAA,CALlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,sVACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9B+tB,oBCoBb,SAAAC,KAA4B,OAAfA,EAAaj1B,EAAA,CAZzBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcuW,IACxBtW,aAAc,CACZssB,GACA9B,GACAe,GACAb,GACA2B,GACAqB,IAEFztB,QAAS,CAACqsB,OAECqB,oBCfb,SAAAC,IAEUr2B,KAAAs2B,WAAsB,EACtBt2B,KAAAu2B,YAAuB,EACvBv2B,KAAAw2B,WAAsB,EAqEhC,OA1DqBh3B,OAAAqC,eAAIw0B,EAAAn2B,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmpB,aALK,SAAWrmB,GAC5B9C,KAAKmpB,QAAUpY,EAAajO,oCAgBRtD,OAAAqC,eAAIw0B,EAAAn2B,UAAA,WAAQ,KAIlC,WACE,OAAOF,KAAKs2B,eALQ,SAAaxzB,GACjC9C,KAAKs2B,UAAY1lB,EAAiB9N,oCAgBbtD,OAAAqC,eAAIw0B,EAAAn2B,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKu2B,gBALS,SAAczzB,GACnC9C,KAAKu2B,WAAa3lB,EAAiB9N,oCAgBftD,OAAAqC,eAAIw0B,EAAAn2B,UAAA,WAAQ,KAIlC,WACE,OAAOF,KAAKw2B,eALQ,SAAa1zB,GACjC9C,KAAKw2B,UAAY5lB,EAAiB9N,oCApDjB3B,EAAA,CAAlB2E,EAAAA,MAAM,gGAiBe3E,EAAA,CAArB2E,EAAAA,MAAM,uGAiBgB3E,EAAA,CAAtB2E,EAAAA,MAAM,yGAiBe3E,EAAA,CAArB2E,EAAAA,MAAM,uGAlEIuwB,EAAwBl1B,EAAA,CADpC4H,EAAAA,aACYstB,qBCeb,SAAAI,mDAAoE,OAA1B32B,EAAA22B,EAAAlwB,GAA7BkwB,EAAoBt1B,EAAA,CAJhC+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,6QAEWqwB,IAA6BJ,kBCd1C,SAAAK,KAAgC,OAAnBA,EAAiBv1B,EAAA,CAL7BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVE,QAAS,CAAC+tB,IACVhuB,aAAc,CAACguB,OAEJC,MCXPC,GAAsB,CAAC,UAAW,wBAcxC,SAAAC,IACU52B,KAAAsY,MAAgB,UAChBtY,KAAA62B,YAAuB,EAE/B72B,KAAA82B,gBAAiB,EAkCS92B,KAAA+2B,YAAkC,IAAIjvB,EAAAA,aA0BlE,OAtCyBtI,OAAAqC,eAAI+0B,EAAA12B,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAK62B,gBALS,SAAc/zB,GACnC9C,KAAK62B,WAA4B,KAAV/zB,GAAsB8N,EAAiB9N,oCAqB/CtD,OAAAqC,eAAI+0B,EAAA12B,UAAA,OAAI,KAIzB,WACE,OAAOF,KAAKsY,WALG,SAAShH,GACxBtR,KAAKsY,MAAQqe,GAAoB7tB,SAASwI,GAAQA,EA9DnB,2CAqEjCslB,EAAA12B,UAAA82B,MAAA,WACEh3B,KAAK82B,gBAAiB,EACtB92B,KAAK+2B,YAAY/uB,KAAK,CAAElF,MAAO9C,KAAK8C,MAAOa,MAAO3D,KAAK2D,MAAOszB,SAAUj3B,KAAKi3B,YAG/EL,EAAA12B,UAAAg3B,SAAA,WACE,OAAOl3B,KAAK2D,MAAQ3D,KAAK2D,MAAQ3D,KAAK8C,OApDtB3B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAUgB3E,EAAA,CAAtB2E,EAAAA,MAAM,yGAYmB3E,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAUvB3G,EAAA,CAAhB2E,EAAAA,MAAM,4FAhDI8wB,EAAyBz1B,EAAA,CADrC4H,EAAAA,aACY6tB,qBCIb,SAAAO,mDAMA,OAN2Cr3B,EAAAq3B,EAAA5wB,GACzC4wB,EAAAj3B,UAAAk3B,WAAA,SAAWvwB,GACL0M,GAAe1M,IACjB7G,KAAKg3B,SAHEG,EAAqBh2B,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,wdAEW+wB,IAA8BP,kBCR3C,SAAAS,KAAiC,OAApBA,EAAkBl2B,EAAA,CAL9BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC0uB,IACfzuB,QAAS,CAACyuB,OAECE,MCNAC,GAAmC,CAC9CzgB,GAAI,CAAE0gB,UAAW,cACjBxgB,GAAI,CAAEwgB,UAAW,kBACjBvgB,GAAI,CAAEugB,UAAW,gCAqFjB,SAAAC,EAAY7tB,GAnEJ3J,KAAAy3B,aAAoC,GACpCz3B,KAAA03B,gBAA0B,EAG1B13B,KAAA23B,oBAA2C,GAE1C33B,KAAA43B,SAAQx3B,EAAAA,EAAA,GACZk3B,GAAgD,IAChDA,GAAiC/nB,MAyDlBvP,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAGnD9H,KAAKwK,OAASb,EAAQc,KAAK,IAAItK,OAAO,MAyF1C,OA7H0BX,OAAAqC,eAAI21B,EAAAt3B,UAAA,cAAW,KAKvC,WACE,OAAOF,KAAKy3B,kBANU,SAAgB30B,GACtC9C,KAAK23B,oBAAmB5yB,EAAO/E,KAAK63B,aACpC73B,KAAKy3B,aAAez3B,KAAK83B,iBAAiBh1B,oCAmB5CtD,OAAAqC,eAAI21B,EAAAt3B,UAAA,gBAAa,KAIjB,WACE,OAAOF,KAAK03B,oBALd,SAAkB50B,GAChB9C,KAAK03B,eAAgC,KAAV50B,GAAsB8N,EAAiB9N,oCAiBpE00B,EAAAt3B,UAAA0K,UAAA,WACE5K,KAAK+3B,gBAGPP,EAAAt3B,UAAA83B,UAAA,SAAUC,EAAiBC,QAAA,IAAAA,IAAAA,GAAA,GACzB,IAAMC,EAAYn4B,KAAK63B,YAAYhkB,WAAU,SAAAvU,GAAK,OAAAA,EAAO,MAAM24B,EAAgB,OAC/Ej4B,KAAK63B,YAAY/jB,OAAOqkB,EAAW,GAE/BD,GACFl4B,KAAKo4B,yBAITZ,EAAAt3B,UAAAm4B,YAAA,WACE,OAAQr4B,KAAKs4B,eAAiBt4B,KAAK63B,YAAY5X,QAAO,SAAAze,GAAK,OAACA,EAAE+2B,aAAW53B,OAAS,GAGpF62B,EAAAt3B,UAAAk3B,WAAA,SAAWvwB,GACL0M,GAAe1M,IACjB7G,KAAKw4B,kBAIThB,EAAAt3B,UAAAs4B,eAAA,WAAA,IAAAlyB,EAAAtG,KACQy4B,EAAc,GAEpBz4B,KAAK63B,YAAYnY,SAAQ,SAAAuY,GAClBA,EAAWM,WACdE,EAAYj0B,KAAKyzB,MAIrBQ,EAAY/Y,SAAQ,SAAAuY,GAAc,OAAA3xB,EAAK0xB,UAAUC,GAAY,MAE7Dj4B,KAAKo4B,yBAGCZ,EAAAt3B,UAAA63B,aAAR,WACM/3B,KAAKwK,SACSxK,KAAKwK,OAAOe,KAAKvL,KAAK63B,cAEvB73B,KAAK04B,sBAAsB14B,KAAK63B,cAC7C73B,KAAKo4B,0BAKHZ,EAAAt3B,UAAA43B,iBAAR,SAAyBD,GACvB,GAAIl4B,MAAMqW,QAAQ6hB,GAAc,CAC9B,IAAK,IAAIr3B,EAAI,EAAGA,EAAIq3B,EAAYl3B,OAAQH,IAAK,CAC3C,IAAMy3B,EAAaJ,EAAYr3B,GAE3By3B,EAAWn1B,OAA8B,IAArBm1B,EAAWn1B,QAAoC,IAArBm1B,EAAWn1B,MAC3Dm1B,EAAgB,IAAI/iB,EAAAA,MAEpB2iB,EAAY/jB,OAAOtT,EAAG,GACtBA,KAIJ,OAAOq3B,EAGT,MAAO,IAGDL,EAAAt3B,UAAAw4B,sBAAR,SAA8Bb,GAA9B,IAAAvxB,EAAAtG,KACQ24B,EAAqCd,EAE3C,OAAIc,EAAch4B,SAAWX,KAAK23B,oBAAoBh3B,QAI/Cg4B,EAAcC,MACnB,SAACX,EAAYnc,GACX,OAAAmc,EAAWn1B,QAAUwD,EAAKqxB,oBAAoB7b,GAAOhZ,OACrDm1B,EAAWhB,WAAa3wB,EAAKqxB,oBAAoB7b,GAAOmb,aAItDO,EAAAt3B,UAAAk4B,sBAAR,WAAA,IAAA9xB,EAAAtG,KACE6M,YAAW,WACTvG,EAAKqd,OAAO3b,KAAK1B,EAAKuxB,gBAExB73B,KAAK23B,oBAAmB5yB,EAAO/E,KAAKy3B,wDAxFjBxqB,EAAAA,mBAnCG9L,EAAA,CAAvB2E,EAAAA,MAAM,iCAAwCnG,8BAAAA,yCAqB/CwB,EAAA,CADC2E,EAAAA,MAAM,kHAUW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAlElB0vB,EAA8Br2B,EAAA,CAD1C4H,EAAAA,mCAqEsBkE,EAAAA,mBApEVuqB,qBCGX,SAAAqB,EAAYlvB,UACVpD,EAAA3F,KAAAZ,KAAM2J,IAAQ3J,KAElB,OAJgDF,EAAA+4B,EAAAtyB,4CACzB0G,EAAAA,mBADV4rB,EAA0B13B,EAAA,CAJtC+E,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAA,gvBAGqB6G,EAAAA,mBADV4rB,IAAmCrB,kBCjBhD,SAAAsB,IAKiC94B,KAAA+4B,gBAAkB,IAAIjxB,EAAAA,aAMvD,OAHEgxB,EAAA54B,UAAA84B,aAAA,WACEh5B,KAAK+4B,gBAAgB/wB,QAPL7G,EAAA,CAAjB2E,EAAAA,MAAM,gEAGwB3E,EAAA,CAA9B8G,EAAAA,OAAO,sFALG6wB,EAA2B33B,EAAA,CAJvC+E,EAAAA,UAAU,CACTC,SAAU,uBACVC,SAAA,8KAEW0yB,oBCKb,SAAAG,KAAsC,OAAzBA,EAAuB93B,EAAA,CALnCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6uB,IACxB5uB,aAAc,CAACowB,GAA4BC,IAC3CpwB,QAAS,CAACmwB,OAECI,oBCTb,SAAAC,KAGA,OADoB/3B,EAAA,CAAjB2E,EAAAA,MAAM,gEAFIozB,EAAsB/3B,EAAA,CADlC4H,EAAAA,aACYmwB,qBCoBb,SAAAC,mDAAgE,OAAxBr5B,EAAAq5B,EAAA5yB,GAA3B4yB,EAAkBh4B,EAAA,CAL9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,sGACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9B+wB,IAA2BD,kBCdxC,SAAAE,KAA8B,OAAjBA,EAAej4B,EAAA,CAL3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC0wB,IACfzwB,QAAS,CAACywB,OAECC,oBCmBb,SAAAC,IAGUr5B,KAAAs5B,YAAsB,EACtBt5B,KAAAu5B,gBAA0B,EAC1Bv5B,KAAAw5B,UAhCqB,cAmC7Bx5B,KAAA8Z,eAAyB,YACzB9Z,KAAAy5B,WAAqB,EA6JvB,OAtJsBj6B,OAAAqC,eAAIw3B,EAAAn5B,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAK05B,cALM,SAAY52B,GAC9B9C,KAAK05B,SAAW/5B,MAAMqW,QAAQlT,GAASA,EAAQ,oCAgB1BtD,OAAAqC,eAAIw3B,EAAAn5B,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKs5B,gBALS,SAAcx2B,GACnC9C,KAAKs5B,WAAa1oB,EAAiB9N,oCAQTtD,OAAAqC,eAAIw3B,EAAAn5B,UAAA,gBAAa,KAI7C,WACE,OAAOF,KAAKu5B,oBALc,SAAkBz2B,GAC5C9C,KAAKu5B,eAAiB3oB,EAAiB9N,oCAmCpBtD,OAAAqC,eAAIw3B,EAAAn5B,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKw5B,eALO,SAAa12B,GAChC9C,KAAKw5B,UAAY3gB,GAAqB/P,SAAShG,GAASA,EA1G7B,+CA0IAtD,OAAAqC,eAAIw3B,EAAAn5B,UAAA,kBAAe,KAIhD,WACE,OAAOF,KAAK25B,sBALe,SAAoB72B,GAC/C9C,KAAK25B,iBAAmBh6B,MAAMqW,QAAQlT,GAASA,EAAQ,oCA4CtCtD,OAAAqC,eAAIw3B,EAAAn5B,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAK45B,aALK,SAAW92B,GAC5B9C,KAAK45B,QAAU92B,aAAiBoK,EAAAA,WAAapK,EAAMgI,cAAgBhI,mCA7IjD3B,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAiBhBwB,EAAA,CAAtB2E,EAAAA,MAAM,yGASqB3E,EAAA,CAA3B2E,EAAAA,MAAM,kHAoCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAiCsB3E,EAAA,CAA5B2E,EAAAA,MAAM,sCAAiDnG,8BAAAA,6CA6CrCwB,EAAA,CAAlB2E,EAAAA,MAAM,gGA5JIuzB,EAAoBl4B,EAAA,CADhC4H,EAAAA,aACYswB,qBCKX,SAAAQ,EACEC,EACQjwB,EACAkwB,EACA9c,EACDxF,GALT,IAAAnR,EAOEC,EAAA3F,KAAAZ,OAAOA,YALCsG,EAAAuD,SAAAA,EACAvD,EAAAyzB,OAAAA,EACAzzB,EAAA2W,kBAAAA,EACD3W,EAAAmR,eAAAA,EAwGDnR,EAAA0zB,SAAW,WACb1zB,EAAKmzB,WACPnzB,EAAK0wB,SAvGP1wB,EAAK8Z,UAAY0Z,EAA4B,UAAE,KAsJnD,OAjKsCh6B,EAAA+5B,EAAAtzB,GAmBpCszB,EAAA35B,UAAA82B,MAAA,WACEh3B,KAAKi6B,kBAELj6B,KAAKy5B,WAAY,GAGnBI,EAAA35B,UAAAg6B,cAAA,SAAcC,GACZ,IAAMC,EAAmBD,IAAgBn6B,KAAKq6B,mBAAmBF,EAAa,YAE9E,OAAIA,GAAeA,EAAYG,QAAUF,GACvCp6B,KAAKg3B,QACEzlB,EAAa4oB,EAAYG,OAAQt6B,KAAKogB,UAAWpgB,KAAK0R,OAASyoB,IAGpEA,GAAeA,EAAYxsB,KAAOysB,GACpCp6B,KAAKg3B,QACEh3B,KAAKu6B,QAAQJ,EAAYxsB,WAFlC,GAWFksB,EAAA35B,UAAAmU,KAAA,SAAK3C,GACH1R,KAAKw6B,UAAYx6B,KAAKqB,OACtBrB,KAAK0R,MAAQA,EACb1R,KAAKy5B,WAAY,EACjBz5B,KAAKyX,eAAeqc,gBACpB9zB,KAAKy6B,0BAGPZ,EAAA35B,UAAAm6B,mBAAA,SAAmBF,EAAkBlD,GACnC,OAAO7lB,EAAS+oB,EAAYlD,GAAW,YACnCkD,EAAYlD,GAAUj3B,KAAK0R,OAASyoB,GACpCA,EAAYlD,IAUlB4C,EAAA35B,UAAA6G,OAAA,SAAO2K,GACL1R,KAAKy5B,WAAaz5B,KAAKw6B,YAAcx6B,KAAKqB,OAASrB,KAAKg3B,QAAUh3B,KAAKqU,KAAK3C,IAGtEmoB,EAAA35B,UAAAw6B,uBAAR,SAA+B7zB,GAK7B,QAHE7G,KAAK26B,gBAAgB9zB,EAAMxF,OAAQ,2BACnCrB,KAAK26B,gBAAgB9zB,EAAMxF,OAAOu5B,cAAe,4BAK7Cf,EAAA35B,UAAA26B,yBAAR,SAAiCh0B,GAC/B,IAAMi0B,EAAsB96B,KAAK+6B,UAAY/6B,KAAK+6B,SAASjwB,cAAckB,cAAc,6BACvF,QAAS8uB,GAAuBA,EAAoBxvB,SAASzE,EAAMxF,UAG7Dw4B,EAAA35B,UAAA86B,iBAAR,SAAyBn0B,GACvB,OAAO7G,KAAKqB,SAAWrB,KAAKqB,OAAOiK,SAASzE,EAAMxF,SAG5Cw4B,EAAA35B,UAAA+6B,qBAAR,SAA6Bp0B,GACvB7G,KAAKg7B,iBAAiBn0B,IAAU7G,KAAK06B,uBAAuB7zB,IAAU7G,KAAK66B,yBAAyBh0B,IACtG7G,KAAKg3B,SAID6C,EAAA35B,UAAAy6B,gBAAR,SAAwB/wB,EAAsBsxB,GAC5C,OAAOtxB,GAAWA,EAAQqlB,UAAU3jB,SAAS4vB,IAGvCrB,EAAA35B,UAAAi7B,iBAAR,WACE,SAAUn7B,KAAK+6B,SAASjwB,gBAAiB9K,KAAK+6B,SAASjwB,cAAcswB,eAG/DvB,EAAA35B,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAC7DzG,EAAK0wB,WAGPh3B,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAK20B,qBAAqBp0B,MAG5BqM,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAS3CH,EAAA35B,UAAAq6B,QAAR,SAAgB5sB,GACd,OAAIuG,GAAevG,GACVyG,GAAiBzG,GAGtBA,EACK3N,KAAK+5B,OAAOuB,SAAS,CAAC3tB,SAD/B,GAKMksB,EAAA35B,UAAA+5B,gBAAR,WACMj6B,KAAK8M,kBACP9M,KAAK8M,mBAGH9M,KAAKgN,gBACPhN,KAAKgN,iBAGPkG,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9CH,EAAA35B,UAAAq7B,YAAR,WACEv7B,KAAKid,kBAAkBlD,YACrB/Z,KAAK+6B,SAASjwB,cACd,EACA9K,KAAKqB,OACLrB,KAAK0Z,iBACL,EACA1Z,KAAKw7B,eAEPx7B,KAAKid,kBAAkBzD,eAAexZ,KAAKkZ,UAC3ClZ,KAAK8Z,eAAiB9Z,KAAKid,kBAAkBpD,qBAGvCggB,EAAA35B,UAAAu6B,uBAAR,WACMz6B,KAAKm7B,oBACPn7B,KAAKu7B,cACLv7B,KAAKq7B,uBAELr7B,KAAKg3B,kDA1JW3W,EAAAA,wBACAlT,EAAAA,iBACFsuB,EAAAA,cACWriB,UACJ1B,EAAAA,qBAPoBvW,EAAA,CAA5C4E,EAAAA,UAAU,WAAY,CAAEqH,KAAMF,EAAAA,6BAAwBA,EAAAA,4CAD5C2sB,EAAgB14B,EAAA,CAL5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,s3BACAgB,UAAW,CAACgS,6BAMQiH,EAAAA,iBACAlT,EAAAA,UACFsuB,EAAAA,OACWriB,GACJ1B,EAAAA,qBARdmiB,IAAyBR,kBCnBtC,SAAAqC,KAA4B,OAAfA,EAAav6B,EAAA,CAPzBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACoxB,IACfnxB,QAAS,CAACmxB,IACVzyB,UAAW,GACXu0B,QAAS,MAEED,oBCsBb,SAAAE,IAEU57B,KAAAmY,WAAqB,EAE7BnY,KAAA67B,KAAe,qBACf77B,KAAAqU,MAAgB,EA8BlB,OA3BsB7U,OAAAqC,eAAI+5B,EAAA17B,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAK05B,cALM,SAAY52B,GAC9B9C,KAAK05B,SAAW/5B,MAAMqW,QAAQlT,GAASA,EAAQ,oCAgB5BtD,OAAAqC,eAAI+5B,EAAA17B,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,oCAlBhB3B,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAiBlBwB,EAAA,CAApB2E,EAAAA,MAAM,sGASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAlCI81B,EAAuBz6B,EAAA,CADnC4H,EAAAA,aACY6yB,qBCAX,SAAAE,EAAoBjyB,GAApB,IAAAvD,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAuD,SAAAA,EAqCZvD,EAAA0zB,SAAW,WACb1zB,EAAK+N,MACP/N,EAAKy1B,kBA8BX,OA5EyCj8B,EAAAg8B,EAAAv1B,GAWvCu1B,EAAA57B,UAAA87B,UAAA,SAAUn1B,GACJ0M,GAAe1M,IACjB7G,KAAKoL,kBAIT0wB,EAAA57B,UAAAkL,eAAA,YACEpL,KAAKi8B,aAAgBj8B,KAAKqU,MAASrU,KAAK0Y,SAAiC1Y,KAAK+7B,eAA3B/7B,KAAK8J,gBAGlDgyB,EAAA57B,UAAAg8B,eAAR,SAAuBr1B,GACrB,OAAO7G,KAAKi8B,aAAej8B,KAAKi8B,YAAYnxB,cAAcQ,SAASzE,EAAMxF,SAGnEy6B,EAAA57B,UAAA67B,aAAR,WACE/7B,KAAK67B,KAAO,qBACZ77B,KAAKi6B,kBACLj6B,KAAK+6B,SAAS/D,QACdh3B,KAAKqU,MAAO,GAGNynB,EAAA57B,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAK61B,qBAAqBt1B,MAG5B7G,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAC7DzG,EAAKy1B,kBAGP7oB,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAS3C8B,EAAA57B,UAAA+5B,gBAAR,WACMj6B,KAAK8M,kBACP9M,KAAK8M,mBAGH9M,KAAKgN,gBACPhN,KAAKgN,iBAGPkG,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9C8B,EAAA57B,UAAA4J,aAAR,WACE9J,KAAK67B,KAAO,mBACZ77B,KAAKq7B,sBACLr7B,KAAK+6B,SAAS1mB,OACdrU,KAAKqU,MAAO,GAGNynB,EAAA57B,UAAAi8B,qBAAR,SAA6Bt1B,GACD7G,KAAKk8B,eAAer1B,IAG5C7G,KAAK+7B,yDAlEqB5uB,EAAAA,aAHgChM,EAAA,CAA7D4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CACpD/L,EAAA,CAAtB4E,EAAAA,UAAU,oEALA+1B,EAAmB36B,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,6lBAS8B+G,EAAAA,aAPnB2uB,IAA4BF,kBCjBzC,SAAAQ,KAA+B,OAAlBA,EAAgBj7B,EAAA,CAL5BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAckzB,IACxBjzB,aAAc,CAACqzB,IACfpzB,QAAS,CAACozB,OAECM,oBCDb,SAAAC,IAK4Br8B,KAAAs8B,aAAwB,GACpD,OAD4Bn7B,EAAA,CAAzB2E,EAAAA,MAAM,+EALIu2B,EAA+Bl7B,EAAA,CAJ3C+E,EAAAA,UAAU,CACTC,SAAU,4BACVC,SAAA,uPAEWi2B,oBCDb,SAAAE,IACUv8B,KAAAw8B,WAAqB,EA4B/B,OAnBuBh9B,OAAAqC,eAAI06B,EAAAr8B,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKw8B,eALO,SAAa15B,GAChC9C,KAAKw8B,UAAY5rB,EAAiB9N,oCAOpCy5B,EAAAr8B,UAAAu8B,gBAAA,WASE,MANiB,CACfzlB,GAAI,aACJH,GAAI,aACJE,GAAI,cALkBvH,MAfRrO,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAVIy2B,EAAyBp7B,EAAA,CAJrC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,8VAEWm2B,oBCGb,SAAAG,KAAqC,OAAxBA,EAAsBv7B,EAAA,CALlCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVE,QAAS,CAAC2zB,GAAiCE,IAC3C9zB,aAAc,CAAC4zB,GAAiCE,OAErCG,eCuBGC,GACdC,EACAC,EACAC,GAEQ,IAAAz7B,EAAAu7B,EAAAv7B,OAAQ41B,EAAA2F,EAAA3F,SAAU8F,EAAAH,EAAAG,mBACpBC,WAuB8B37B,EAAa47B,EAAsBJ,GACvE,IAAMK,EAAkB,OAAOD,EAE3Bz9B,OAAOU,UAAUL,eAAee,KAAKS,EAAQ67B,IAC/CC,QAAQC,KAAK,aAAaF,EAAe,+CAA+CL,EAAa,eAQvG,OALAr9B,OAAOqC,eAAeR,EAAQ67B,EAAiB,CAC7CG,cAAc,EACdC,UAAU,IAGLJ,EAnCqBK,CAAsBl8B,EAAQ41B,EAAU4F,GAEpE,MAAO,CACLxuB,IAAKmvB,GAAOT,EAAoBC,GAChCS,IAAKC,GAAOX,EAAoBD,EAAUE,IAG9C,SAASU,GAAOX,EAAoBD,EAAoBE,GACtD,OAAO,SAAUl6B,GACXi6B,GAAsBA,EAAmBU,KAC3CV,EAAmBU,IAAIvb,KAAKliB,KAA5B+8B,CAAkCD,EAASh6B,IAG7C9C,KAAKg9B,GAAuBF,EAASh6B,IAIzC,SAAS06B,GAAOT,EAAkDG,GAChE,OAAO,WACL,OAAOH,GAAsBA,EAAmB1uB,IAAM0uB,EAAmB1uB,IAAI6T,KAAKliB,KAA5B+8B,GAAsC/8B,KAAKk9B,aClDrFS,KACd,OAAO,SAAUt8B,EAAa41B,EAAkB8F,GAG9C,OAAOJ,GAFiD,CAAEt7B,OAAMA,EAAE41B,SAAQA,EAAE8F,mBAAkBA,GAE5C,eAAgBnsB,aClBtDgtB,GAAeC,EAAmBnlB,EAAmB5V,GACnE,IAAMg7B,EACc,iBAAVh7B,GAAsBA,GACZ,iBAAVA,GAAsBA,GAASA,EAAMnC,QAC3B,iBAAVmC,IAAuBA,GAAmB,IAAVA,IACtB,kBAAVA,GAAuBA,EACjC,OAAO+6B,IAAanlB,IAAaolB,WAGnBC,GAAeC,EAAmBl7B,GAChD,IAAMm7B,EAAiBD,GAA2B,IAAdA,EAC9B/pB,GAAcnR,GAAmB,IAAVA,IAAgBA,EAAMiQ,WACnD,OAAOkrB,GAAkBhqB,GAAcA,EAAWtT,OAASu9B,OAAOF,YAGpDG,GAAeC,EAAmBt7B,GAChD,IAAMu7B,EAAiBD,GAA2B,IAAdA,EAC9BnqB,GAAcnR,GAAmB,IAAVA,IAAgBA,EAAMiQ,WACnD,OAAOsrB,GAAkBpqB,GAAcA,EAAWtT,OAASu9B,OAAOE,GCRpE,ICHYE,iBDoCZ,SAAAC,IAEEv+B,KAAAw+B,eAAsB,GACtBx+B,KAAAy+B,mBAA0B,GAC1Bz+B,KAAA0+B,UArCkD,EAyC1C1+B,KAAA2+B,SAzC0C,EA0C1C3+B,KAAAmY,WAAsB,EACtBnY,KAAA4+B,gBAA2B,EAE3B5+B,KAAA6+B,WAAsB,EAaS7+B,KAAA8+B,WAAqB,EAiInC9+B,KAAA++B,cAAoC,IAAIj3B,EAAAA,aAG7C9H,KAAA2jB,OAA6B,IAAI7b,EAAAA,aA2HvD,OA3OsBtI,OAAAqC,eAAI08B,EAAAr+B,UAAA,UAAO,KAO/B,WACE,OAAOF,KAAK2+B,cARM,SAAY77B,GAC9B,IAAMk8B,EAAUjuB,EAAajO,EA/EmB,GAiFhD9C,KAAK2+B,SAAW3+B,KAAKi/B,qBAAqBD,EAAS,GACnDh/B,KAAK0+B,UAAY1+B,KAAKi/B,qBAAqBD,EAAS,oCAgBjCx/B,OAAAqC,eAAI08B,EAAAr+B,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,GAElC9C,KAAKmnB,cAAcnnB,KAAKk/B,uDAuBA1/B,OAAAqC,eAAI08B,EAAAr+B,UAAA,gBAAa,KAI3C,WACE,OAAOF,KAAK4+B,oBALY,SAAkBO,GAC1Cn/B,KAAK4+B,eAAiBhuB,EAAiBuuB,oCAgCrB3/B,OAAAqC,eAAI08B,EAAAr+B,UAAA,UAAO,KAM/B,WACE,OAAOF,KAAKo/B,cAPM,SAAYt8B,GAC9B9C,KAAKo/B,SAAWz/B,MAAMqW,QAAQlT,GAASA,EAAQ,GAC/C9C,KAAK2T,0BACL3T,KAAKq/B,4BAA4Br/B,KAAKs/B,0CAgBnB9/B,OAAAqC,eAAI08B,EAAAr+B,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,cAAcnnB,KAAKk/B,uDAa1BX,EAAAr+B,UAAAq/B,YAAA,WACE,IAAMz8B,EAAQ9C,KAAKk/B,qBAEfl/B,KAAKyjB,gBACPzjB,KAAKyjB,gBAAgB3gB,GAErB9C,KAAK++B,cAAc/2B,KAAKlF,GAG1B9C,KAAK2jB,OAAO3b,KAAKlF,IAGnBy7B,EAAAr+B,UAAAg/B,mBAAA,WACE,OAAOl/B,KAAKm/B,cAAgBn/B,KAAKw+B,eAAiBx+B,KAAKy+B,oBAGzDF,EAAAr+B,UAAAs/B,YAAA,SAAY18B,GACL9C,KAAKmY,WAAcrV,EAAM4V,WAC5B1Y,KAAKy/B,iBAAiB38B,GACtB9C,KAAKu/B,gBAIThB,EAAAr+B,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKyjB,gBAAkBjS,GAGzB+sB,EAAAr+B,UAAA2mB,kBAAA,SAAkBrV,KAElB+sB,EAAAr+B,UAAAonB,WAAA,SAAWoY,GACLA,GAAgB1/B,KAAKw+B,iBAAmBkB,EAC1C1/B,KAAK2/B,qBAAqBD,IAE1B1/B,KAAKy+B,mBAAqB,GAC1Bz+B,KAAKw+B,eAAiB,KAI1BD,EAAAr+B,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzB+sB,EAAAr+B,UAAAmnB,SAAA,SAASuY,GACP,IACI5/B,KAAKm/B,eAAiBvB,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,QACrF9C,KAAK6/B,yBAEL,MAAO,CACLhC,SAAU,CACRC,OAAO,KAMLS,EAAAr+B,UAAAinB,cAAV,SAAwBC,GAClBpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAIjBmX,EAAAr+B,UAAA4/B,kBAAR,SAA0Bd,EAASe,GAGjC,OAAOf,GAFY,GAEaA,GAAWe,GAGrCxB,EAAAr+B,UAAAu/B,iBAAR,SAAyBO,GACvBhgC,KAAKw+B,eAAewB,EAAcl9B,QAAU9C,KAAKw+B,eAAewB,EAAcl9B,QAEzE9C,KAAKm/B,eAAiBn/B,KAAKy+B,mBAAmB31B,SAASk3B,EAAcl9B,OACxE9C,KAAKy+B,mBAAmB3qB,OAAO9T,KAAKy+B,mBAAmBz9B,QAAQg/B,EAAcl9B,OAAQ,GAC3E9C,KAAKm/B,eACfn/B,KAAKy+B,mBAAmBj6B,KAAKw7B,EAAcl9B,QAIvCy7B,EAAAr+B,UAAAy/B,qBAAR,SAA6BD,GAA7B,IAAAp5B,EAAAtG,KACEA,KAAKw+B,eAAiB,GAElBkB,aAAwB//B,OAC1BK,KAAKy+B,mBAAqBiB,EAE1B1/B,KAAKs/B,QAAQ5f,SAAQ,SAACugB,GACpB35B,EAAKk4B,eAAeyB,EAAOn9B,OAAS48B,EAAa52B,SAASm3B,EAAOn9B,WAGnE9C,KAAKs/B,QAAQ5f,SAAQ,SAACugB,GACpBP,EAAaO,EAAOn9B,YAAwCqG,IAA/Bu2B,EAAaO,EAAOn9B,QAA+B48B,EAAaO,EAAOn9B,OACpGwD,EAAKk4B,eAAiBkB,MAKpBnB,EAAAr+B,UAAA++B,qBAAR,SAA6BD,EAAiBe,GAC5C,IAAMG,EA9RwC,GA8RgBlB,EAE9D,OAAOh/B,KAAK8/B,kBAAkBd,EAASe,GAAcG,EAjSL,GAoS1C3B,EAAAr+B,UAAA2/B,uBAAR,WACE,SAAI7/B,KAAKm/B,eAAiBn/B,KAAK69B,UAAY79B,KAAKw+B,iBACjCh/B,OAAQ4f,OAAOpf,KAAKw+B,gBAAgB2B,OAAM,SAAAr9B,GAAS,OAAU,IAAVA,MAK5Dy7B,EAAAr+B,UAAAyT,wBAAR,WAAA,IAAArN,EAAAtG,KACEA,KAAKs/B,QAAQ5f,SAAQ,SAACugB,EAAQnkB,GACJxV,EAAKg5B,QAAQzrB,WAAU,SAACusB,GAAoB,OAAAA,EAAWt9B,QAAUm9B,EAAOn9B,WAAWgZ,GAEzGxV,EAAKg5B,QAAQxrB,OAAOxN,EAAKg5B,QAAQt+B,QAAQi/B,GAAS,OAKhD1B,EAAAr+B,UAAAm/B,4BAAR,SAAoCgB,GAClCrgC,KAAKsgC,yBAA2BD,EAAYj0B,KAAI,SAAA6zB,GAC9C,OAAA7/B,EAAAA,EAAA,GAAY6/B,GAAM,CAAEM,GAAIrrB,WA5PW/T,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGTx8B,EAAA,CAAd2E,EAAAA,MAAM,4DAiBa3E,EAAA,CAAnB2E,EAAAA,MAAM,kGAoBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAWU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAemB3E,EAAA,CAAzB2E,EAAAA,MAAM,gHASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAec3E,EAAA,CAApB2E,EAAAA,MAAM,uEASa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAmBlBwB,EAAA,CAApB2E,EAAAA,MAAM,sGAWkB3E,EAAA,CAAxB8G,EAAAA,OAAO,iCAAiCH,EAAAA,mDAGrB3G,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CA7JlBy2B,EAA4Bp9B,EAAA,CADxC4H,EAAAA,aACYw1B,qBEaX,SAAAiC,EAAoB/oB,GAApB,IAAAnR,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,UAsDtB,OAzD8C3X,EAAA0gC,EAAAj6B,KAAjCi6B,EAOXA,EAAAtgC,UAAAugC,mBAAA,WACEzgC,KAAKyX,eAAeqc,iBAGtB0M,EAAAtgC,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAqBT+nB,EAAAtgC,UAAAuY,MAAA,WAAA,IAAAnS,EAAAtG,KACE,GAAIA,KAAK0gC,iBAAmB1gC,KAAK0Y,SAAU,CACzC,IAAMioB,EAAgB3gC,KAAK0gC,eAAej2B,MAAK,SAAC/G,EAAGoY,GAAU,OAACxV,EAAKg5B,QAAQxjB,GAAOpD,YAE9EioB,GACFA,EAAc71B,cAAc2N,UAKlC+nB,EAAAtgC,UAAA87B,UAAA,SAAUn1B,EAAsBo5B,GACb,KAEbp5B,EAAM4M,OAFO,KAEe5M,EAAM2M,UACpCxT,KAAKw/B,YAAYS,GAEjBp5B,EAAM+5B,mBAIVJ,EAAAtgC,UAAA2gC,UAAA,SAAU/kB,GACR,OAAOA,4CApD2BpE,EAAAA,qBAFLvW,EAAA,CAA9B2/B,EAAAA,aAAa,iCAAiC35B,EAAAA,iDADpCq5B,EAAwBO,EAAA5/B,EAAA,CAjBpC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,s6CACA8B,gBAAiBC,EAAAA,wBAAwBC,OACzChB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA4b,KAC9B1b,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAA4b,KAC9B1b,OAAO,6BAOyB3N,EAAAA,qBAHzB8oB,IAAiCjC,kBCnC9C,SAAAyC,KAAoC,OAAvBA,EAAqB7/B,EAAA,CALjCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcy4B,EAAAA,YAAavE,IACrCh0B,QAAS,CAAC83B,IACV/3B,aAAc,CAAC+3B,OAEJQ,oBCGb,SAAAE,IACUlhC,KAAA62B,YAAuB,EACvB72B,KAAA6I,MAAiB,KA2CzB7I,KAAAmhC,UAAqB,EAyBrBnhC,KAAAwe,UAAW,EAGJxe,KAAAohC,UAAY,IAAIt5B,EAAAA,aAgCzB,OAzEmBtI,OAAAqC,eAAIq/B,EAAAhhC,UAAA,OAAI,KAKzB,WACE,OAAOF,KAAK6I,WANG,SAAS/F,GAExB9C,KAAK6I,MADS,CAAC,KAAM,KAAM,KAAM,KAAM,QACpB7H,QAAQ8B,IAAU,EAAIA,EAAQ,sCAY7BtD,OAAAqC,eAAIq/B,EAAAhhC,UAAA,cAAW,KAAf,SAAgB4C,GACpC9C,KAAKmhC,SAAqB,KAAVr+B,GAAuB8N,EAAiB9N,oCAcnCtD,OAAAqC,eAAIq/B,EAAAhhC,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAK62B,gBALS,SAAc/zB,GACnC9C,KAAK62B,WAAajmB,EAAiB9N,oCAcrCo+B,EAAAhhC,UAAA82B,MAAA,SAAMqK,QAAA,IAAAA,IAAAA,GAAA,GACJrhC,KAAKwe,UAAW,EACZ6iB,GACFrhC,KAAKohC,UAAUp5B,KAAKq5B,IAKxBH,EAAAhhC,UAAAmU,KAAA,WACErU,KAAKshC,qBAELthC,KAAKwe,UAAW,GAGlB0iB,EAAAhhC,UAAAohC,mBAAA,WAAA,IAAAh7B,EAAAtG,KACOA,KAAKuhC,gBACRvhC,KAAKuhC,cAAgB,CACnBjH,OAAQ,WAAM,OAAAh0B,EAAK0wB,SACnBrzB,MAAO,OAIN3D,KAAKuhC,cAAsB,SAC9BvhC,KAAKuhC,cAAsB,OAAI,WAAM,OAAAj7B,EAAK0wB,UAEvCh3B,KAAKuhC,cAAqB,QAC7BvhC,KAAKuhC,cAAqB,MAAI,OAjGhBpgC,EAAA,CAAjB2E,EAAAA,MAAM,gEAOoB3E,EAAA,CAA1B2E,EAAAA,MAAM,iFAGsB3E,EAAA,CAA5B2E,EAAAA,MAAM,qFAiBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAce3E,EAAA,CAArB2E,EAAAA,MAAM,wGAegB3E,EAAA,CAAtB2E,EAAAA,MAAM,yGA7DIo7B,EAAoB//B,EAAA,CADhC4H,EAAAA,aACYm4B,oBClBb,SAAAM,KAEA,OAFaA,EAAcrgC,EAAA,CAD1BqE,EAAAA,cACYg8B,qBCwCX,SAAAC,EACUC,EACA73B,EACA4N,GAHV,IAAAnR,EAKEC,EAAA3F,KAAAZ,OAAOA,YAJCsG,EAAAo7B,eAAAA,EACAp7B,EAAAuD,SAAAA,EACAvD,EAAAmR,eAAAA,EATFnR,EAAAq7B,kBAAoB,qDACpBr7B,EAAAi6B,GAAarrB,EAAAA,OAgGvB,OAtGsCpV,EAAA2hC,EAAAl7B,GAmBpCk7B,EAAAvhC,UAAA82B,MAAA,SAAMqK,QAAA,IAAAA,IAAAA,GAAA,GACJrhC,KAAK0hC,eAAeE,iBAAcz4B,EAElC5C,EAAArG,UAAM82B,MAAKp2B,KAAAZ,KAACqhC,GAEZrhC,KAAK6hC,uBAED7hC,KAAK8hC,eACP9hC,KAAK8hC,cAAcrpB,SAIvBgpB,EAAAvhC,UAAA6hC,sBAAA,SAAsBl7B,GACf7G,KAAKu4B,YACR1xB,EAAM+5B,iBACN/5B,EAAMm7B,kBACNhiC,KAAKg3B,UAITyK,EAAAvhC,UAAA+hC,2BAAA,WACE,OAAOjiC,KAAKuhC,cAAcW,OAAS,SAAW,WAGhDT,EAAAvhC,UAAAiiC,6BAAA,WACE,OAAOniC,KAAKoiC,iBAAmBpiC,KAAKoiC,gBAAgBF,SAAWliC,KAAKuhC,cAAcW,OAAS,SAAW,WAGxGT,EAAAvhC,UAAAmiC,WAAA,SAAWx7B,GACL7G,KAAKmhC,WAAanhC,KAAKsiC,aAAax3B,cAAcQ,SAASzE,EAAMxF,SACnErB,KAAKg3B,SAITyK,EAAAvhC,UAAAmU,KAAA,WACErU,KAAK8hC,cAAgBtS,SAAS+S,cAE9Bh8B,EAAArG,UAAMmU,KAAIzT,KAAAZ,MAEVA,KAAKwiC,eAGCf,EAAAvhC,UAAAsiC,YAAR,WAAA,IAAAl8B,EAAAtG,KACEA,KAAK0hC,eAAeE,YAAc5hC,KAAKugC,GAEvC1zB,YAAW,WACLvG,EAAKg8B,eACPh8B,EAAKm8B,YACLjT,SAASvR,iBAAiB,QAAS3X,EAAKo8B,eAAe,QAKrDjB,EAAAvhC,UAAAuiC,UAAR,WAAA,IAAAn8B,EAAAtG,MACEA,KAAK0iC,cAAgB,SAAC77B,GACpBP,EAAKo7B,eAAeE,YAAct7B,EAAKo7B,eAAeE,aAAet7B,EAAKi6B,GACrDj6B,EAAKg8B,aAAax3B,cAErBQ,SAASzE,EAAMxF,SAAWiF,EAAKo7B,eAAeE,cAAgBt7B,EAAKi6B,KACnF15B,EAAMm7B,kBACN17B,EAAKq8B,aAAalqB,UAItBzY,KAAK4iC,kBAED5iC,KAAKu4B,WACPv4B,KAAK2iC,aAAalqB,SAGhBzY,KAAKsiC,aAAax3B,cAAcoB,iBAAiBlM,KAAK2hC,mBAAmB,IAAM3hC,KAAKsiC,aAAax3B,eACjF2N,SAIdgpB,EAAAvhC,UAAA2hC,qBAAR,WACErS,SAAS7Q,oBAAoB,QAAS3e,KAAK0iC,eAAe,IAGpDjB,EAAAvhC,UAAA0iC,gBAAR,WACE5iC,KAAK2iC,aACH3iC,KAAKsiC,aAAax3B,cAAckB,cAAchM,KAAK2hC,oBAAsB3hC,KAAKsiC,aAAax3B,wDAxFrE02B,UACNr0B,EAAAA,iBACMuK,EAAAA,qBAbuBvW,EAAA,CAAhD4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,6BAA4BA,EAAAA,gDADpDu0B,EAAgBtgC,EAAA,CAJ5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,mqDAc0Bo7B,GACNr0B,EAAAA,UACMuK,EAAAA,qBAdf+pB,IAAyBP,kBCftC,SAAA2B,KAA4B,OAAfA,EAAa1hC,EAAA,CANzBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcoQ,IACxBnQ,aAAc,CAACg5B,IACf/4B,QAAS,CAAC+4B,IACVr6B,UAAW,CAACo6B,OAEDqB,oBCVb,SAAAC,KAQA,OAHEtjC,OAAAqC,eAAIihC,EAAA5iC,UAAA,aAAU,KAAd,WACE,MAAO,GAAGF,KAAK8C,MAAQ,qCALC3B,EAAA,CAAzB2E,EAAAA,MAAM,iFAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAHIg9B,EAAsB3hC,EAAA,CALlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,6QACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9B06B,OPADxE,GAAAA,EAAAA,mBAAAA,EAAAA,iBAAgB,KAE1B,QAAA,UAGAA,GAAA,MAAA,QAGAA,GAAA,QAAA,UQTF,ICCYyE,iBDUZ,SAAAC,IAEUhjC,KAAAijC,OAAkB,EAqDPjjC,KAAAiO,OAA2BqwB,EAAAA,iBAAiB4E,QA6C3CljC,KAAAmjC,OAA4B,IAAIr7B,EAAAA,aAYjC9H,KAAAojC,MAA2B,IAAIt7B,EAAAA,aAKpD,OApG4BtI,OAAAqC,eAAImhC,EAAA9iC,UAAA,gBAAa,KAI3C,WACE,OAAOF,KAAK4+B,oBALY,SAAkBO,GAC1Cn/B,KAAK4+B,eAAiBhuB,EAAiBuuB,oCA2DvB3/B,OAAAqC,eAAImhC,EAAA9iC,UAAA,QAAK,KAO3B,WACE,OAAOF,KAAKijC,YARI,SAAUngC,GAC1B,IAAMugC,EAAetyB,EAAajO,EAxFX,GAyFjBwgC,EAAuBtjC,KAAKsjC,qBAAqBD,GAEvDrjC,KAAKijC,OAASK,EAAuBD,EA3Fd,mCA4HjBL,EAAA9iC,UAAAojC,qBAAR,SAA6BxgC,GAC3B,OAAOA,GA7HgB,GA6HeA,GA9Hf,KA4BC3B,EAAA,CAAzB2E,EAAAA,MAAM,gHAeU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAWe3E,EAAA,CAArB2E,EAAAA,MAAM,uEAYY3E,EAAA,CAAlB2E,EAAAA,MAAM,kEASU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAaW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAuBa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAoBH,EAAAA,4CAYT3G,EAAA,CAAlB8G,EAAAA,OAAO,2BAAkBH,EAAAA,2CAhHfk7B,EAAuB7hC,EAAA,CADnC4H,EAAAA,aACYi6B,qBEYb,SAAAO,mDAgCA,OAhCyCzjC,EAAAyjC,EAAAh9B,GACvC/G,OAAAqC,eAAI0hC,EAAArjC,UAAA,gBAAa,KAAjB,WACE,QAASF,KAAKmjC,OAAOK,UAAU7iC,QAAUX,KAAKiO,SAAWqwB,EAAAA,iBAAiBmF,yCAG5EjkC,OAAAqC,eAAI0hC,EAAArjC,UAAA,sBAAmB,KAAvB,WACE,SAAUF,KAAK0jC,MAAQ1jC,KAAK2jC,UAAY3jC,KAAK4jC,eAAiB5jC,KAAK6jC,+CAGrErkC,OAAAqC,eAAI0hC,EAAArjC,UAAA,eAAY,KAAhB,WACE,QAASF,KAAKojC,MAAMI,UAAU7iC,QAAUX,KAAKiO,SAAWqwB,EAAAA,iBAAiB/Z,uCAG3E/kB,OAAAqC,eAAI0hC,EAAArjC,UAAA,cAAW,KAAf,WACE,OAAIF,KAAKiO,SAAWqwB,EAAAA,iBAAiBmF,QAC5B,sBAGLzjC,KAAKiO,SAAWqwB,EAAAA,iBAAiB/Z,MAC5B,oBAGF,uDAGTgf,EAAArjC,UAAA4jC,iBAAA,WACE9jC,KAAKmjC,OAAOn7B,KAAKhI,KAAKiO,SAGxBs1B,EAAArjC,UAAA6jC,UAAA,WACE/jC,KAAKojC,MAAMp7B,QA9BFu7B,EAAmBpiC,EAAA,CAL/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,mgCACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9Bm7B,IAA4BP,kBCbzC,SAAAgB,KAA+B,OAAlBA,EAAgB7iC,EAAA,CAL5BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVE,QAAS,CAAC66B,IACV96B,aAAc,CAACq6B,GAAwBS,OAE5BS,OFTb,SAAYjB,GAEVA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAGAA,EAAA,QAAA,WAnCF,CAAYA,KAAAA,GAAkB,SGClBkB,iBCHZ,SAAAC,KAmBA,OAlBEA,EAAAhkC,UAAAikC,SAAA,SAASrhC,GACP,OAAatD,OAAQ4f,OAAO2jB,IAAoBj6B,SAAShG,EAAMgrB,OAC3DhrB,EAAMgrB,MACN9tB,KAAKokC,iBAAiBthC,EAAMwO,MAAQxO,EAAMgrB,QAGxCoW,EAAAhkC,UAAAkkC,iBAAR,SAAyB9yB,GACvB,OAAQA,GACN,IAAK,SACH,OAAOyxB,GAAmBsB,QAC5B,IAAK,UACH,OAAOtB,GAAmBuB,QAC5B,IAAK,UACH,OAAOvB,GAAmBwB,QAC5B,QACE,OAAOxB,GAAmByB,UAhBrBN,EAAqB/iC,EAAA,CADjCqE,EAAAA,cACY0+B,oBCQb,SAAAO,KAAmC,OAAtBA,EAAoBtjC,EAAA,CAJhCmH,EAAAA,SAAS,CACRlB,UAAW,CAAC88B,IACZphB,UAAW,MAEA2hB,oBCPX,SAAAC,EACUC,EACAC,EACAC,GAFA7kC,KAAA2kC,kBAAAA,EACA3kC,KAAA4kC,eAAAA,EACA5kC,KAAA6kC,SAAAA,SAIVH,EAAAxkC,UAAA4kC,6BAAA,SAA6BC,GAC3B,IAAM1P,EAAer1B,KAAK2kC,kBAAkBrQ,wBAAwByQ,GAAW5kC,OAAOH,KAAK6kC,UAC3F7kC,KAAK4kC,eAAeI,WAAW3P,EAAa4P,UAC5C,IAAMC,EAAgB7P,EAAa4P,SAAUE,UAAU,GAEvD,OADA3V,SAASlsB,KAAKib,YAAY2mB,GACnB7P,GAITqP,EAAAxkC,UAAAklC,8BAAA,SAA8B/P,GAC5Br1B,KAAK4kC,eAAeS,WAAWhQ,EAAa4P,UAC5C5P,EAAaC,oDAjBcT,EAAAA,gCACHyQ,EAAAA,sBACNC,EAAAA,mMAJTb,EAA0BvjC,EAAA,CAHtCqE,EAAAA,WAAW,CACVmR,WAAY,gCAIiBke,EAAAA,yBACHyQ,EAAAA,eACNC,EAAAA,YAJTb,oBCMb,SAAAc,KAAwC,OAA3BA,EAAyBrkC,EAAA,CAPrCmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,GACTG,QAAS,GACTtB,UAAW,CAACs9B,IACZ5hB,UAAW,MAEA0iB,oBCCb,SAAAC,KAAsC,OAAzBA,EAAuBtkC,EAAA,CAHnCmH,EAAAA,SAAS,CACRlB,UAAW,CAACgS,OAEDqsB,OLJDxB,GAAAA,EAAAA,eAAAA,EAAAA,aAAY,KAEtBA,GAAA,MAAA,GAAA,QAEAA,GAAAA,GAAA,QAAA,GAAA,cMPUyB,GCQCC,GAA+B,CAC1C9uB,GAA2B,CAAE+uB,GAAI,MACjC7uB,GAA2B,CAAE6uB,GAAI,MACjC5uB,GAA2B,CAAE4uB,GAAI,MACjC3uB,GAA2B,CAAE2uB,GAAI,OAGtBC,GAAiC,CAC5ChvB,GAA6B,CAAEssB,OAAQ,SAAU2C,QAAS,WAC1D/uB,GAA6B,CAAEosB,OAAQ,WAAY2C,QAAS,aAC5D9uB,GAA6B,CAAEmsB,OAAQ,WAAY2C,QAAS,aAC5D7uB,GAA6B,CAAEksB,OAAQ,WAAY2C,QAAS,8BAc9D,SAAAC,IAWE/lC,KAAAuhC,cAA+B,CAAE59B,MAAO,KAAM22B,OAAQ,cA2GxD,OA5FEyL,EAAA7lC,UAAAuG,YAAA,WACEzG,KAAKgmC,kBAAkBr/B,eAGzBo/B,EAAA7lC,UAAA+I,SAAA,WAAA,IAAA3C,EAAAtG,KACEA,KAAKgmC,kBAAoBhmC,KAAKimC,QAAQ7E,UAAUp6B,WAAU,SAAAgwB,GAAS,OAAA1wB,EAAKgvB,cAI1EyQ,EAAA7lC,UAAA82B,MAAA,WACEh3B,KAAKimC,QAAQjP,QACbh3B,KAAKs1B,WAGPyQ,EAAA7lC,UAAAo1B,QAAA,WACMt1B,KAAKq1B,cACPr1B,KAAKq1B,aAAaC,WAKtByQ,EAAA7lC,UAAAgmC,aAAA,SAAaC,EAAe5E,EAAgB6E,EAAiBhE,GAA7D,IAAA97B,EAAAtG,KACEA,KAAKuhC,cAAgB,CACnB59B,MAAOwiC,EACP7L,OAAQ,WACFiH,GACFA,IAEFj7B,EAAK0wB,UAILoP,IACFpmC,KAAKoiC,gBAAkB,CACrBz+B,MAAOyiC,EACP9L,OAAQ,WACF8H,GACFA,IAEF97B,EAAK0wB,YAOb+O,EAAA7lC,UAAAmU,KAAA,SACEgyB,EACAC,EACAjR,GASA,OAPAr1B,KAAKumC,MAAQF,EAAcE,MAC3BvmC,KAAKwmC,QAAUH,EAAcG,QAE7BxmC,KAAKq1B,aAAeA,EAEpBr1B,KAAKymC,kBAAkBJ,EAAeC,GAE9BA,GACN,KAAKrC,EAAAA,aAAayC,QAChB1mC,KAAKkmC,aACHlmC,KAAK2mC,gBAAgBb,QACIO,EAAeP,QACxC9lC,KAAK2mC,gBAAgBxD,OACIkD,EAAelD,QAE1C,MAEF,KAAKc,EAAAA,aAAa2C,MAChB5mC,KAAKkmC,aAAalmC,KAAK6mC,cAAcjB,GAA2BS,EAAeT,IAKnF5lC,KAAKimC,QAAQ5xB,QAGP0xB,EAAA7lC,UAAAumC,kBAAR,SAA0BJ,EAA8DC,GACtF,IAAMQ,EAAgBnB,GAChBoB,EAAkBlB,GAClBjO,EAAWyO,EAAczO,SAE3B0O,IAAerC,EAAAA,aAAa2C,MAC9B5mC,KAAK6mC,cAAazmC,EAAAA,EAAAA,EAAA,GAAQ0mC,EAA6B,IAAMA,EAAcv3B,MAAuBqoB,GAElG53B,KAAK2mC,gBAAevmC,EAAAA,EAAAA,EAAA,GACf2mC,EAA+B,IAC/BA,EAAgBx3B,MAChBqoB,IAhHsCz2B,EAAA,CAA9C4E,EAAAA,UAAU07B,GAAkB,CAAEx7B,QAAQ,oBAAiBw7B,mCAF7CsE,EAAiB5kC,EAAA,CAH7B+E,EAAAA,UAAU,CACTE,SAAA,4IAEW2/B,oBC5Bb,SAAAiB,KAaA,OAXEA,EAAA9mC,UAAA4lC,QAAA,SAAQmB,GACNjnC,KAAKknC,WAAWjD,EAAAA,aAAayC,QAASO,IAIxCD,EAAA9mC,UAAAinC,MAAA,SAAMC,GACJpnC,KAAKknC,WAAWjD,EAAAA,aAAa2C,MAAOQ,IAKxCJ,oBCOE,SAAAK,EAAoBC,GAApB,IAAAhhC,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAghC,oBAAAA,IAStB,OAVqCxnC,EAAAunC,EAAA9gC,GAKnC8gC,EAAAnnC,UAAAgnC,WAAA,SAAWZ,EAA0BD,GACnC,IAAMhR,EAAkCr1B,KAAKsnC,oBAAoBxC,6BAA6BiB,IAC9F1Q,EAAakS,kBAAkBzT,gBAC/BuB,EAAad,SAASlgB,KAAKgyB,EAAeC,EAAYjR,6CAPfqP,MAD9B2C,EAAelmC,EAAA,CAD3BqE,EAAAA,oCAE0Ck/B,MAD9B2C,IAAwBL,kBCjBrC,SAAAQ,KAA6B,OAAhBA,EAAcrmC,EAAA,CAN1BmH,EAAAA,SAAS,CACRG,aAAc,CAACs9B,IACfx9B,QAAS,CAACs6B,IACVn6B,QAAS,CAACq9B,IACV3+B,UAAW,CAACigC,OAEDG,oBCeb,SAAAC,KAgBA,OAfEA,EAAAvnC,UAAAwnC,UAAA,SAAU5kC,EAAe6kC,WACvB,IAAK7kC,EACH,MAAO,GAGH6kC,aAAgBhoC,QACpBgoC,EAAO,CAACA,QAGV,IAAkB,IAAAC,EAAAnjC,EAAAkjC,GAAIE,EAAAD,EAAA5kC,QAAA6kC,EAAA1kC,KAAA0kC,EAAAD,EAAA5kC,OAAE,CAAnB,IAAM8kC,EAAGD,EAAA/kC,MACZA,EAAQA,EAAM0R,QAAQ,aAAcszB,qGAGtC,OAAOhlC,GAEX2kC,oBCzBA,SAAAM,mDAAyE,OAAzCjoC,EAAAioC,EAAAxhC,GAAnBwhC,EAAU5mC,EAAA,CAHtB6mC,EAAAA,KAAK,CACJC,KAAM,YAEKF,IAAmBN,KNbpB/B,GAAAA,EAAAA,uBAAAA,EAAAA,qBAAoB,KAE9BA,GAAA,OAAA,GAAA,SAEAA,GAAAA,GAAA,IAAA,GAAA,UOJUwC,MCMZ,WAWEloC,KAAAmoC,YAAoCzC,EAAAA,qBAAqB0C,SDjB/CF,GAAAA,EAAAA,gBAAAA,EAAAA,cAAa,KAEvBA,GAAA,MAAA,GAAA,QAEAA,GAAAA,GAAA,YAAA,GAAA,cAEAA,GAAAA,GAAA,QAAA,GAAA,UAEAA,GAAAA,GAAA,QAAA,GAAA,cEPUG,kBC6BV,SAAAC,EAAmB7wB,EAA2C8wB,GAA9D,IAAAjiC,EACEC,EAAA3F,KAAAZ,OAAOA,YADUsG,EAAAmR,eAAAA,EAA2CnR,EAAAiiC,YAAAA,EAbtDjiC,EAAAkiC,OAAiB,GAEjBliC,EAAAmiC,kBAAoB,IAAItjC,EAAAA,QAExBmB,EAAAoiC,aAAuB,EAEvBpiC,EAAAqiC,gBAA0B,sBA+FpC,OAzGwC7oC,EAAAwoC,EAAA/hC,GAsBtC+hC,EAAApoC,UAAA0oC,eAAA,SAAe1vB,GACblZ,KAAKuoC,YAAYz9B,cAAcpD,MAAMmhC,QAAU,QAE/C7oC,KAAKwoC,OAAS,EAAI,GAAKtvB,EAAsB,EAAXA,EAE9BlZ,KAAKmoC,cAAgBzC,EAAAA,qBAAqBoD,IAC5C9oC,KAAK+oC,QAAQj+B,cAAcpD,MAAM6T,IAAMvb,KAAKwoC,OAAS,KAErDxoC,KAAK+oC,QAAQj+B,cAAcpD,MAAM8T,OAASxb,KAAKwoC,OAAS,MAK5DF,EAAApoC,UAAA82B,MAAA,WACEh3B,KAAK0oC,aAAc,EACnB1oC,KAAKyoC,kBAAkBzlC,MAAK,IAI9BslC,EAAApoC,UAAA8oC,cAAA,SAAcC,GAkBZ,OAjBAjpC,KAAKsR,KAAO23B,EAAU33B,KACtBtR,KAAKwmC,QAAUyC,EAAUzC,QACzBxmC,KAAKmoC,YAAcc,EAAUd,YAC7BnoC,KAAKkZ,SAAW+vB,EAAU/vB,SAC1BlZ,KAAKs6B,OAAS2O,EAAU3O,OACxBt6B,KAAKkpC,YAAcD,EAAUC,YAAcD,EAAUC,YAAc,SACnElpC,KAAKq1B,aAAe4T,EAAU5T,aAG1Br1B,KAAKmoC,cAAgBzC,EAAAA,qBAAqBoD,MAC5C9oC,KAAK2oC,gBAAkB,kBAIzB3oC,KAAK4oC,eAAe5oC,KAAKkZ,UAGjBlZ,KAAKsR,MACX,KAAK42B,EAAAA,cAAc3jB,MACjBvkB,KAAKmpC,YAAc,mBACnBnpC,KAAK67B,KAAO,gBACZ,MAEF,KAAKqM,EAAAA,cAAckB,YACjBppC,KAAKmpC,YAAc,kBACnBnpC,KAAK67B,KAAO,eACZ,MAEF,KAAKqM,EAAAA,cAAczE,QACjBzjC,KAAKmpC,YAAc,qBACnBnpC,KAAK67B,KAAO,aACZ,MAEF,KAAKqM,EAAAA,cAAcmB,QACjBrpC,KAAKmpC,YAAc,qBACnBnpC,KAAK67B,KAAO,kBAKhB77B,KAAKyX,eAAeqc,iBAGtBwU,EAAApoC,UAAAopC,eAAA,WACE,OAAOtpC,KAAK0oC,aAGdJ,EAAApoC,UAAAqpC,QAAA,WACE,OAAOvpC,KAAK67B,MAGdyM,EAAApoC,UAAAspC,mBAAA,WACE,OAAOxpC,KAAK2oC,iBAGdL,EAAApoC,UAAAupC,eAAA,WACE,OAAOzpC,KAAKmpC,aAIdb,EAAApoC,UAAAwpC,gBAAA,WACE1pC,KAAKs6B,OAAOt6B,gDAtFqB0X,EAAAA,yBAAyCxK,EAAAA,cAFtD/L,EAAA,CAArB4E,EAAAA,UAAU,2BAAoBmH,EAAAA,2CAfpBo7B,EAAkBnnC,EAAA,CAJ9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,maAmBmCsR,EAAAA,kBAAyCxK,EAAAA,cAjBjEo7B,IAA2BqB,kBCNxC,SAAAC,KAAmC,OAAtBA,EAAoBzoC,EAAA,CAPhCmH,EAAAA,SAAS,CACRG,aAAc,CAAC6/B,IACf//B,QAAS,CAACC,EAAAA,cACVE,QAAS,GACTtB,UAAW,GACX0b,UAAW,MAEA8mB,oBCsBb,SAAAC,KAA+B,OAAlBA,EAAgB1oC,EAAA,CAvB5BmH,EAAAA,SAAS,CACRG,aAAc,CAACs/B,IACfx/B,QAAS,CACPk8B,GACAe,GACAC,GACA5iB,GACA2kB,GACAzvB,GACA6xB,IAEFlhC,QAAS,CACP+7B,GACAe,GACAC,GACA5iB,GACA2kB,GACAO,GACA6B,IAEFxiC,UAAW,GACX0b,UAAW,MAEA+mB,MC3BPC,GAAsB,CAAC,QAAS,uBAsBtC,SAAAC,IAEE/pC,KAAAwe,UAAoB,EAEZxe,KAAAs5B,YAAsB,EACtBt5B,KAAAw5B,UA7B0B,QA8B1Bx5B,KAAAgqC,SA7ByB,QAwInC,OAhGyBxqC,OAAAqC,eAAIkoC,EAAA7pC,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKs5B,gBALS,SAAcx2B,GACnC9C,KAAKs5B,WAAa1oB,EAAiB9N,oCAiChBtD,OAAAqC,eAAIkoC,EAAA7pC,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKw5B,eALO,SAAa12B,GAChC9C,KAAKw5B,UAAY3gB,GAAqB/P,SAAShG,GAASA,EA5ExB,yCA6HdtD,OAAAqC,eAAIkoC,EAAA7pC,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAKgqC,cALM,SAAYlnC,GAC9B9C,KAAKgqC,SAAWF,GAAoBhhC,SAAShG,GAASA,EA7HvB,yCAwCV3B,EAAA,CAAtB2E,EAAAA,MAAM,yGAkCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAiCY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBoH,EAAAA,0CAGT/L,EAAA,CAAjB2E,EAAAA,MAAM,gEAca3E,EAAA,CAAnB2E,EAAAA,MAAM,kGArGIikC,EAAsB5oC,EAAA,CADlC4H,EAAAA,aACYghC,qBCUX,SAAAE,EAAoBpgC,EAA6BoT,GAAjD,IAAA3W,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAuD,SAAAA,EAA6BvD,EAAA2W,kBAAAA,EAPjD3W,EAAAwT,eAAiB,SAwHnB,OAzHwCha,EAAAmqC,EAAA1jC,GAYtC0jC,EAAA/pC,UAAAwK,gBAAA,WACE1K,KAAKkqC,4BAELlqC,KAAKmqC,6BAELnqC,KAAKoqC,yBAGPH,EAAA/pC,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGPgQ,EAAA/pC,UAAA82B,MAAA,WACEh3B,KAAKwe,UAAW,GAGlByrB,EAAA/pC,UAAA+K,eAAA,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAClB5M,KAAK4M,cAAgBC,YAAW,WAC9BvG,EAAK+jC,uBACJ,MAGLJ,EAAA/pC,UAAAmU,KAAA,WAAA,IAAA/N,EAAAtG,KACEA,KAAKge,yBAELhe,KAAKwe,UAAW,EAChBxe,KAAKsqC,WAAW,GAEhBz9B,YAAW,WACTvG,EAAK6jC,6BACL7jC,EAAK+jC,qBACL/jC,EAAKgkC,WAAW,OAIpBL,EAAA/pC,UAAAoqC,WAAA,SAAWxnC,GACT9C,KAAKuqC,eAAez/B,cAAcpD,MAAM8iC,QAAU1nC,GAGpDmnC,EAAA/pC,UAAAmqC,mBAAA,WACErqC,KAAKid,kBAAkBzD,eAAexZ,KAAKkZ,UAC3ClZ,KAAK8Z,eAAiB9Z,KAAKid,kBAAkBpD,qBAG/CowB,EAAA/pC,UAAAkqC,sBAAA,WAAA,IAAA9jC,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,SAAClG,GACzDP,EAAKkY,UACRlY,EAAK2E,oBAIY,UAAjBjL,KAAKwH,SACPxH,KAAKyqC,mBAAqBzqC,KAAK6J,SAASkD,OAAO/M,KAAKqB,OAAOyJ,cAAe,cAAc,SAACjE,GACvFP,EAAK+N,UAGPrU,KAAK0qC,mBAAqB1qC,KAAK6J,SAASkD,OAAO/M,KAAKqB,OAAOyJ,cAAe,cAAc,SAACjE,GACvFP,EAAK0wB,YAGPh3B,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAKqkC,YAAY9jC,OAKvBojC,EAAA/pC,UAAAyqC,YAAA,SAAY9jC,GAEP7G,KAAKwe,UACLxe,KAAKuqC,eAAez/B,cAAcQ,SAASzE,EAAMxF,SACjDrB,KAAKqB,OAAOyJ,cAAcQ,SAASzE,EAAMxF,QAGjCrB,KAAKqB,OAAOyJ,cAAcQ,SAASzE,EAAMxF,UAClDrB,KAAKuqC,eAAez/B,cAAc8/B,OAAS5qC,KAAKqU,OAASrU,KAAKg3B,SAF9Dh3B,KAAKg3B,SAMDiT,EAAA/pC,UAAA8d,uBAAR,WACE9K,OAAO+K,iBAAiB,SAAUje,KAAKke,uBAAuB,IAGxD+rB,EAAA/pC,UAAAgqC,0BAAR,WAAA,IAAA5jC,EAAAtG,KACEA,KAAKke,sBAAwB,WAC3B5X,EAAK+jC,uBAIDJ,EAAA/pC,UAAA+5B,gBAAR,WACMj6B,KAAK8M,kBACP9M,KAAK8M,mBAEH9M,KAAKyqC,oBACPzqC,KAAKyqC,qBAEHzqC,KAAK0qC,oBACP1qC,KAAK0qC,qBAGP1qC,KAAKgN,iBAELkG,OAAOyL,oBAAoB,SAAU3e,KAAKke,uBAAuB,IAG3D+rB,EAAA/pC,UAAAiqC,2BAAR,WAEEnqC,KAAKid,kBAAkBlD,YAAY/Z,KAAKuqC,eAAez/B,cADjC,EAC+D9K,KAAKqB,kDA/G9D8L,EAAAA,iBAAsCiM,MAFHjY,EAAA,CAAhE4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAwBiH,EAAAA,kDANtE+8B,EAAkB9oC,EAAA,CAL9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,sTACAgB,UAAW,CAACgS,6BAUkBjM,EAAAA,UAAsCiM,MARzD6wB,IAA2BF,kBCjBxC,SAAAc,KAA8B,OAAjBA,EAAe1pC,EAAA,CAL3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACwhC,IACfvhC,QAAS,CAACuhC,OAECY,oBCAb,SAAAC,KAgDA,OA/CEA,EAAA5qC,UAAAwnC,UAAA,SAAUj1B,EAAcs4B,GAGtB,GAAI35B,EAASqB,EAAM,WAFD,qEAEwB9B,KAAK8B,GAAO,CACpD,IAAMu4B,EAAYD,EAASA,EAAOE,YAAY,KAAOF,EAAO/pC,QAAQ,KAAO,EAAI,EAEzEygB,EAAczhB,KAAKkrC,kBAAkBz4B,EAAKjC,UAAU,EAAG,EAAIw6B,GAAYA,GACvEG,EAA4BnrC,KAAKorC,qBAAqBJ,GAE5D,OAAOhrC,KAAKqrC,YAAY54B,EAAMs4B,EAAQI,EAAmB1pB,GAE3D,OAAO,MAGDqpB,EAAA5qC,UAAAgrC,kBAAR,SAA0BzpB,EAAqBupB,GAI7C,OAHIvpB,GAAeupB,IACjBvpB,EAAc,IAAMA,GAEfA,GAGDqpB,EAAA5qC,UAAAmrC,YAAR,SAAoB54B,EAAcs4B,EAAgBI,EAA2B1pB,GAC3E,GAAIhP,GAAQs4B,EAAQ,CAClB,IAAMO,EAAO74B,EAAKjC,UAAU,EAAG,GACzB+6B,EAAU94B,EAAKjC,UAAU,EAAG,GAC5Bg7B,EAAU/4B,EAAKjC,UAAU,EAAG,GAOlC,OAFAu6B,GADAA,GADAA,GADAA,EAASA,EAAOv2B,QAAQ,KAAM82B,IACd92B,QAAQ,KAAM+2B,IACd/2B,QAAQ,KAAMg3B,IACdh3B,QAAQ,IAAI22B,EAAqB1pB,GAIjD,OAAOhP,GAIHq4B,EAAA5qC,UAAAkrC,qBAAR,SAA6BJ,GAG3B,IAFA,IAAIG,EAA4B,GAEvB3qC,EAAI,EAAGA,EAAIwqC,EAAWxqC,IAC7B2qC,GAAqB,IAGvB,OAAOA,GA9CEL,EAAU3pC,EAAA,CAHtB6mC,EAAAA,KAAK,CACJC,KAAM,aAEK6C,oBCEb,SAAAW,KAA2B,OAAdA,EAAYtqC,EAAA,CAPxBmH,EAAAA,SAAS,CACRG,aAAc,CAACqiC,IACfviC,QAAS,GACTG,QAAS,CAACoiC,IACV1jC,UAAW,GACX0b,UAAW,MAEA2oB,oBCCb,SAAAC,IACU1rC,KAAA2rC,OAAmC,GAiE7C,OA3DoBnsC,OAAAqC,eAAI6pC,EAAAxrC,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAK2rC,YALI,SAAUC,GAC1B5rC,KAAK2rC,OAAS3rC,KAAK6rC,oBAAoBD,oCAUzCF,EAAAxrC,UAAAqY,MAAA,SAAMuzB,EAA+BjlC,IACb7G,KAAK+rC,WAAWD,KAGhCA,EAAWxR,OACbwR,EAAWxR,OAAOt6B,KAAKgsC,IAAKF,GACnB9rC,KAAKisC,OAAO3R,QACrBt6B,KAAKisC,OAAO3R,OAAOt6B,KAAKgsC,IAAKF,GAE/BjlC,EAAMm7B,oBAIV0J,EAAAxrC,UAAAikC,SAAA,SAAS8H,GACP,IAAMne,EAAgC,mBAAjBme,EAAOne,MAAuBme,EAAOne,MAAM9tB,KAAKgsC,IAAKC,GAAUA,EAAOne,MAE3F,GAAIA,EACF,MAAO,WAAWA,GAItB4d,EAAAxrC,UAAAqpC,QAAA,SAAQ0C,GACN,OAAOA,EAAOpQ,MAAQoQ,EAAOnpC,OAG/B4oC,EAAAxrC,UAAAgsC,YAAA,SAAYJ,GACV,QAAW9rC,KAAK+rC,WAAWD,KAAgBA,EAAWxR,SAAUt6B,KAAKisC,OAAO3R,SAG9EoR,EAAAxrC,UAAA6rC,WAAA,SAAWE,GACT,QAAOA,EAAOvzB,UAAWuzB,EAAOvzB,SAAS1Y,KAAKgsC,MAGhDN,EAAAxrC,UAAAisC,gBAAA,SAAgBrwB,GACd,OAAOA,GAGD4vB,EAAAxrC,UAAA2rC,oBAAR,SAA4BO,GAC1B,OAAIzsC,MAAMqW,QAAQo2B,GACHA,EAAUhgC,KAAI,SAAAigC,GAAW,MAAoB,iBAAZA,EAAuB,CAAEvpC,MAAOupC,GAAYA,KAGpE,iBAAbD,EACF,CAAC,CAAEtpC,MAAOspC,IAGZ,IA5DUjrC,EAAA,CAAlB2E,EAAAA,MAAM,kEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FASS3E,EAAA,CAAf2E,EAAAA,MAAM,4DAhBI4lC,EAA0BvqC,EAAA,CALtC+E,EAAAA,UAAU,CACTC,SAAU,uBACVC,SAAA,sTACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BsjC,oBCgBX,SAAAY,EAAoBC,GAAAvsC,KAAAusC,sBAAAA,EACtB,OAZoB/sC,OAAAqC,eAAIyqC,EAAApsC,UAAA,QAAK,KAO3B,WACE,OAAOF,KAAKijC,YARI,SAAUngC,GACtBA,IACFA,EAAMgrB,MAAQ9tB,KAAKusC,sBAAsBpI,SAASrhC,IAGpD9C,KAAKijC,OAASngC,4EAM2BohC,MAXzB/iC,EAAA,CAAjB2E,EAAAA,MAAM,8FAJIwmC,EAA2BnrC,EAAA,CALvC+E,EAAAA,UAAU,CACTC,SAAU,wBACVC,SAAA,iGACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAiBE87B,MAfhCoI,oBCFb,SAAAE,KA0BA,OAfEhtC,OAAAqC,eAAI2qC,EAAAtsC,UAAA,OAAI,KAAR,WACE,OAAIF,KAAK0Y,SACA,WAGL1Y,KAAKs6B,OACA,SAGLpmB,GAAelU,KAAK+N,MACf,eAGF,gDAvBU5M,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBqJ,wCAENhO,EAAA,CAApB2E,EAAAA,MAAM,uEAEU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAES3E,EAAA,CAAf2E,EAAAA,MAAM,4DAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEATI0mC,EAA0BrrC,EAAA,CALtC+E,EAAAA,UAAU,CACTC,SAAU,uBACVC,SAAA,wbACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BokC,MCOAC,GAAsC,CACjD51B,GAAI,CACF61B,eAAgB,kBAChBC,eAAgB,mBAElB51B,GAAI,CACF21B,eAAgB,qBAChBC,eAAgB,yBAElB31B,GAAI,CACF01B,eAAgB,yBAChBC,eAAgB,oBAElB11B,GAAI,CACFy1B,eAAgB,mBAChBC,eAAgB,iCAqClB,SAAAC,EAAoB/iC,GAAA7J,KAAA6J,SAAAA,EA5BZ7J,KAAA6sC,YA1BoC,MA4B5C7sC,KAAA8sC,eAA+C,GAC/C9sC,KAAA43B,SAAQx3B,EAAAA,EAAA,GACHqsC,GAAmD,IACnDA,GAAoCl9B,MAEzCvP,KAAA+sC,eAAgC,GAExB/sC,KAAAgtC,eAAuC,GAG3BhtC,KAAAg/B,QAAgC,GAYhBh/B,KAAAitC,qBAAuB,IAAInlC,EAAAA,aAoIjE,OA9I0BtI,OAAAqC,eAAI+qC,EAAA1sC,UAAA,aAAU,KAItC,WACE,OAAOF,KAAK6sC,iBALU,SAAe/pC,GACrC9C,KAAK6sC,YAAc97B,EAAajO,EAzCU,wCAwD5C8pC,EAAA1sC,UAAA+I,SAAA,WACEjJ,KAAKktC,qBAAqBltC,KAAKg/B,UAGjC4N,EAAA1sC,UAAAitC,YAAA,SAAYC,GACF,IAAApO,EAAAoO,EAAApO,QAASe,EAAAqN,EAAArN,WAAY1+B,EAAA+rC,EAAA/rC,OAEzBA,GAAUA,EAAOgsC,aACnBrtC,KAAKq7B,sBAGH2D,GACFh/B,KAAKstC,gBAAgBtO,GAGnBe,GACF//B,KAAKktC,qBAAqBltC,KAAKg/B,UAInC4N,EAAA1sC,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGP2S,EAAA1sC,UAAAqtC,uBAAA,SAAuBC,GACrBxtC,KAAKytC,sBAAsBztC,KAAK8sC,gBAEhC,IAAMY,EAAsB1tC,KAAK2tC,uBAAuBH,GAExDxtC,KAAKitC,qBAAqBjlC,KAAK0lC,IAGjCd,EAAA1sC,UAAA0tC,QAAA,WACE5tC,KAAKktC,qBAAqBltC,KAAKgtC,iBAIzBJ,EAAA1sC,UAAAutC,sBAAR,SAA8BzO,GAA9B,IAAA14B,EAAAtG,UAA8B,IAAAg/B,IAAAA,EAAA,IAE5BnyB,YAAW,WACTvG,EAAKwmC,eAAiB9N,EAAQ5yB,KAAI,SAAA6/B,GAAU,OAAA7rC,EAAAA,EAAA,GACvC6rC,GAAM,CACTvzB,SAAUpS,EAAKunC,gBAAgB5B,EAAOnpC,gBAKpC8pC,EAAA1sC,UAAA4tC,oBAAR,SAA4B7B,GAC1B,OAAOA,EAAOtoC,OAAS0R,GAAsB42B,EAAOhV,WAI9C2V,EAAA1sC,UAAA6tC,kBAAR,SAA0B/O,GAA1B,IAAA14B,EAAAtG,KACQ+sC,EAAiB,GAQvB,OANA/N,EAAQtf,SAAQ,SAAAusB,IACS,IAAnBA,EAAO+B,SAAqBjB,EAAepsC,OAAS2F,EAAKy5B,YAA8B,WAAhBkM,EAAO36B,MAChFy7B,EAAevoC,KAAKynC,EAAOhV,aAIxB8V,GAIDH,EAAA1sC,UAAAytC,uBAAR,SAA+BZ,GAC7B,OAAO/sC,KAAKg/B,QAAQ5yB,KAAI,SAAA6/B,GAAU,OAAA7rC,EAAAA,EAAA,GAC7B6rC,GAAM,CACT+B,QAASjB,EAAejkC,SAASmjC,EAAOhV,WAA6B,WAAhBgV,EAAO36B,WAIxDs7B,EAAA1sC,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WACzDzG,EAAK2nC,SACP3nC,EAAK2nC,QAAQjX,YAKX4V,EAAA1sC,UAAA2tC,gBAAR,SAAwB5W,GACtB,OAAOj3B,KAAK+sC,eAAepsC,QAAUX,KAAK+/B,aAAc//B,KAAK+sC,eAAejkC,SAASmuB,IAG/E2V,EAAA1sC,UAAAguC,iCAAR,SAAyClP,GAAzC,IAAA14B,EAAAtG,UAAyC,IAAAg/B,IAAAA,EAAA,IACvC,IAAM8N,EAAiB,GAYvB,OAVA9N,EAAQtf,SAAQ,SAAAusB,GACM,WAAhBA,EAAO36B,MACTw7B,EAAetoC,KAAK,CAClB1B,MAAOmpC,EAAOhV,SACdtzB,MAAO2C,EAAKwnC,oBAAoB7B,GAChCvzB,SAAUpS,EAAKunC,gBAAgB5B,EAAOhV,eAKrC6V,GAGDF,EAAA1sC,UAAAotC,gBAAR,SAAwBtO,GACd,IAAAqO,EAAArO,EAAAqO,YAAav3B,EAAAkpB,EAAAmP,aAAAA,OAAA,IAAAr4B,EAAA,GAAAA,EAAmBs4B,EAAApP,EAAA3T,cAAAA,OAAA,IAAA+iB,EAAA,GAAAA,GAGpCf,GAAertC,KAAKgtC,eAAersC,SAAWwtC,EAAaxtC,UAC7DX,KAAKgtC,eAAiBmB,GAIpB9iB,EAAc1qB,SAAWwtC,EAAaxtC,QACxCX,KAAKktC,qBAAqBiB,IAItBvB,EAAA1sC,UAAA+5B,gBAAR,WACMj6B,KAAKgN,gBACPhN,KAAKgN,kBAID4/B,EAAA1sC,UAAAgtC,qBAAR,SAA6BlO,GAC3Bh/B,KAAK+sC,eAAiB/sC,KAAK+tC,kBAAkB/O,GAC7Ch/B,KAAK8sC,eAAiB9sC,KAAKkuC,iCAAiClP,GAE5Dh/B,KAAKutC,uBAAuBvtC,KAAK+sC,0DA9HL5/B,EAAAA,aAhBVhM,EAAA,CAAnB2E,EAAAA,MAAM,6BAAsBnG,sCAELwB,EAAA,CAAvB2E,EAAAA,MAAM,yGAQY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBoH,EAAAA,0CAES/L,EAAA,CAAnC8G,EAAAA,OAAO,gGAEuB9G,EAAA,CAA9B4E,EAAAA,UAAUkkC,oBAA6BA,mCA3B7B2C,EAA6BzrC,EAAA,CAJzC+E,EAAAA,UAAU,CACTC,SAAU,0BACVC,SAAA,oiCA+B8B+G,EAAAA,aA7BnBy/B,OZxCDvE,GAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAE/B,UAAA,YAGAA,GAAA,WAAA,aaOK,ICXKgG,GDWCC,GAAmB,CAAC,SAAU,UAG9BC,GAAyB,CACpC13B,GAAqB,CACnB23B,UAAW,0BACXC,OAAQ,gBACRC,gBAAiB,oBACjBC,YAAa,UACbC,aAAc,iBACdC,oBAAqB,wBACrBC,iBAAkB,oBAClBpC,eAAgB,mBAElB31B,GAAqB,CACnBy3B,UAAW,wBACXC,OAAQ,uBACRC,gBAAiB,wBACjBC,YAAa,iBACbC,aAAc,wBACdC,oBAAqB,yBACrBC,iBAAkB,qBAClBpC,eAAgB,sBAElB11B,GAAqB,CACnBw3B,UAAW,+BACXC,OAAQ,yBACRC,gBAAiB,yBACjBC,YAAa,aACbC,aAAc,2BACdC,oBAAqB,uBACrBC,iBAAkB,mBAClBpC,eAAgB,0BAElBz1B,GAAqB,CACnBu3B,UAAW,0BACXC,OAAQ,oBACRC,gBAAiB,uBACjBC,YAAa,WACbC,aAAc,WACdC,oBAAqB,4BACrBC,iBAAkB,mBAClBpC,eAAgB,mCA+clB,SAAAqC,EAAoB9rB,GAAAjjB,KAAAijB,OAAAA,EAxbZjjB,KAAA05B,SAAkC,GAClC15B,KAAA2+B,SAAiC,GAGjC3+B,KAAAgvC,aAAwB,EACxBhvC,KAAAivC,mBAA8B,EAG9BjvC,KAAAoY,UAAqB,EAK7BpY,KAAAkvC,gBAA0B,EAC1BlvC,KAAAmvC,YAAoC,GACpCnvC,KAAAovC,WAAY,EACZpvC,KAAAqvC,aAAe,CAAEpY,SAAyB,KAAMriB,WAAW,GAC3D5U,KAAAsvC,gBAAwC,GAwVdtvC,KAAAuvC,YAAkC,IAAIznC,EAAAA,aAGpC9H,KAAAwvC,cAAoC,IAAI1nC,EAAAA,aAO7C9H,KAAAyvC,UAAgC,IAAI3nC,EAAAA,aAOrC9H,KAAA4F,SAA+B,IAAIkC,EAAAA,aAGnC9H,KAAA4f,SAA+B,IAAI9X,EAAAA,aAWlC9H,KAAA0vC,SAA6C,IAAI5nC,EAAAA,aAUnD9H,KAAA2vC,OAA2C,IAAI7nC,EAAAA,aAG5C9H,KAAA4vC,WAAiC,IAAI9nC,EAAAA,aAkR/D,OA9oBoBtI,OAAAqC,eAAIktC,EAAA7uC,UAAA,QAAK,KAW3B,WACE,OAAOF,KAAKwJ,YAZI,SAAUC,GAC1BzJ,KAAKwJ,OAAS7J,MAAMqW,QAAQvM,GAASA,EAAQ,GAGxCzJ,KAAK6vC,SAEE7vC,KAAK8vC,aACf9vC,KAAKg/B,QAAUh/B,KAAK+vC,kBAAkBtmC,EAAM,KAF5CzJ,KAAKovC,WAAY,mCAoBD5vC,OAAAqC,eAAIktC,EAAA7uC,UAAA,UAAO,KAa/B,WACE,OAAOF,KAAK2+B,cAdM,SAAYK,GAC9Bh/B,KAAK2+B,SAAWK,GAAW,GAEvBh/B,KAAK2+B,SAASh+B,QAChBX,KAAKgwC,gBACLhwC,KAAKiwC,yBACIjwC,KAAK6vC,WACd7vC,KAAK2+B,SAAW3+B,KAAK+vC,kBAAkB/vC,KAAKyJ,MAAM,KAGpDzJ,KAAKstC,mDAkBe9tC,OAAAqC,eAAIktC,EAAA7uC,UAAA,YAAS,KAInC,WACE,OAAOF,KAAKkwC,gBALQ,SAAcptC,GAClC9C,KAAKkwC,WAAa5B,GAAiBxlC,SAAShG,GAASA,EA/IlB,0CA+JNtD,OAAAqC,eAAIktC,EAAA7uC,UAAA,mBAAgB,KAInD,WACE,OAAOF,KAAKivC,uBALiB,SAAqBkB,GAClDnwC,KAAKivC,kBAAoBr+B,EAAiBu/B,oCAczB3wC,OAAAqC,eAAIktC,EAAA7uC,UAAA,SAAM,KAK7B,WACE,OAAOF,KAAKmpB,aANK,SAAWxhB,GAC5B3H,KAAKmpB,QAAUxhB,EACf3H,KAAKiwC,yDAgBiBzwC,OAAAqC,eAAIktC,EAAA7uC,UAAA,aAAU,KAKtC,WACE,OAAOF,KAAKgvC,iBANU,SAAeoB,GACrCpwC,KAAKgvC,YAA4B,MAAdoB,GAAgD,KAA1BA,EAAWr9B,YAA2BnC,EAAiBw/B,GAChGpwC,KAAKiwC,yDA6CczwC,OAAAqC,eAAIktC,EAAA7uC,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAa9B,GAAuBh/B,UAZ7B,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTmuC,GAAsC,IACtCA,GAAuBh/B,MACvBzM,GAGYyrC,GAAuBh/B,sCAgBxB/P,OAAAqC,eAAIktC,EAAA7uC,UAAA,UAAO,KAK/B,WACE,OAAOF,KAAKoY,cANM,SAAYtB,GAC9B9W,KAAKoY,SAAWxH,EAAiBkG,GACjC9W,KAAKiwC,yDAyBczwC,OAAAqC,eAAIktC,EAAA7uC,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKswC,gBALO,SAAaC,GAChCvwC,KAAKswC,WAAaC,mCAqBA/wC,OAAAqC,eAAIktC,EAAA7uC,UAAA,UAAO,KAK/B,WACE,OAAOF,KAAK05B,cANM,SAAY8W,GAC9BxwC,KAAK05B,SAAW8W,EAChBxwC,KAAKiwC,yDAsBgBzwC,OAAAqC,eAAIktC,EAAA7uC,UAAA,aAAU,KAKrC,WACE,OAAOF,KAAKywC,iBANS,SAAe3tC,GACpC9C,KAAKywC,YAA6B,KAAV3tC,GAAsB8N,EAAiB9N,GAC/D9C,KAAKiwC,yDAkBUzwC,OAAAqC,eAAIktC,EAAA7uC,UAAA,UAAO,KAAX,SAAYwwC,GAC3B1wC,KAAK0wC,KAAgB,KAATA,GAAsB9/B,EAAiB8/B,oCAWtBlxC,OAAAqC,eAAIktC,EAAA7uC,UAAA,sBAAmB,KAAvB,SAAwBywC,GACrD3wC,KAAK2wC,iBAAwC,KAArBA,GAAkC//B,EAAiB+/B,oCAYzDnxC,OAAAqC,eAAIktC,EAAA7uC,UAAA,aAAU,KAAd,SAAe0wC,GACjC5wC,KAAK4wC,QAAsB,KAAZA,GAAyBhgC,EAAiBggC,oCAa/BpxC,OAAAqC,eAAIktC,EAAA7uC,UAAA,mBAAgB,KAApB,SAAqB2wC,GAC/C7wC,KAAK6wC,cAAkC,KAAlBA,GAA+BjgC,EAAiBigC,oCAW7CrxC,OAAAqC,eAAIktC,EAAA7uC,UAAA,kBAAe,KAAnB,SAAoB4C,GAC5C9C,KAAK8wC,aAAyB,KAAVhuC,GAAsB8N,EAAiB9N,oCA+D7DtD,OAAAqC,eAAIktC,EAAA7uC,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKg/B,SAAWh/B,KAAKg/B,QAAQr+B,OAAS,mCAG/CnB,OAAAqC,eAAIktC,EAAA7uC,UAAA,WAAQ,KAAZ,WACE,SAAUF,KAAKyJ,QAASzJ,KAAKyJ,MAAM9I,yCAGrCnB,OAAAqC,eAAIktC,EAAA7uC,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAK+wC,mBAAqB/wC,KAAK+wC,mBAAmB9Z,SAAW,sCAGtEz3B,OAAAqC,eAAIktC,EAAA7uC,UAAA,eAAY,KAAhB,WACE,IAAM8wC,EAAa,CACjB,SACA,SACA,UACA,OACA,OACA,WACA,WACA,WACA,OACA,QACA,QAEF,OAAOhxC,KAAKg/B,QAAQ/e,QAAO,SAAAgxB,GAAO,OAACA,EAAI3/B,MAAQ0/B,EAAWloC,SAASmoC,EAAI3/B,0CAGzE9R,OAAAqC,eAAYktC,EAAA7uC,UAAA,WAAQ,KAApB,WACE,OAAOF,KAAKqvC,aAAaz6B,UAAYyzB,EAAAA,sBAAsB6I,UAAY7I,EAAAA,sBAAsB8I,4CAK/FpC,EAAA7uC,UAAAitC,YAAA,SAAYC,IACNptC,KAAK8wC,cAAgB9wC,KAAK6wC,iBAC5B7wC,KAAKovC,WAAY,EACjBpvC,KAAK6wC,eAAgB,GAGnBzD,EAAQzlC,QACV3H,KAAKoxC,8BAA8BpxC,KAAK2H,SAU5ConC,EAAA7uC,UAAAyF,SAAA,SAAS0rC,GACPrxC,KAAKsxC,cAAcD,GAAU,IAS/BtC,EAAA7uC,UAAA2F,OAAA,SAAOwrC,GACLrxC,KAAKsxC,cAAcD,GAAU,IAM/BtC,EAAA7uC,UAAAqxC,gBAAA,WACE,OAAOvxC,KAAKyJ,MAAMwW,QAAO,SAAApS,GAAQ,OAAAA,EAAK2jC,cAMxCzC,EAAA7uC,UAAAuxC,kBAAA,WACE,OAAOzxC,KAAKyJ,MAAMwW,QAAO,SAAApS,GAAQ,OAACA,EAAK2jC,cAGzCzC,EAAA7uC,UAAAwxC,cAAA,WAAA,IAAAprC,EAAAtG,KACOA,KAAK6wC,gBACR7wC,KAAKovC,WAAapvC,KAAKovC,UAEvBpvC,KAAKyJ,MAAMiW,SAAQ,SAAA7R,GACjBA,EAAK2jC,UAAYlrC,EAAK8oC,aAGxBpvC,KAAK2xC,oBAAoB3xC,KAAKovC,UAAWpvC,KAAKyJ,SAIlDslC,EAAA7uC,UAAA0xC,UAAA,SAAU5F,GACRA,EAAIwF,WAAaxF,EAAIwF,UAErBxxC,KAAK6xC,iBAAiB7F,GAEtBhsC,KAAK8xC,qBAAqB9xC,KAAKyJ,MAAOuiC,IAGxC+C,EAAA7uC,UAAA6xC,gBAAA,SAAgB/F,GACdhsC,KAAK6xC,iBAAiB7F,IAGxB+C,EAAA7uC,UAAA8xC,cAAA,SAAchG,EAAKC,GACjB,OAAOA,EAAOne,MAAQ,WAAW9tB,KAAKiyC,eAAejG,EAAKC,GAAY,IAGxE8C,EAAA7uC,UAAAgyC,aAAA,SAAalG,GACXhsC,KAAKsxC,cAActF,GAAMA,EAAImG,aAC7BnyC,KAAKoyC,iBAAiBpG,IAGxB+C,EAAA7uC,UAAAmyC,gBAAA,SAAgBrG,GACd,IAAMsG,EAAmBtG,EAAIuG,YAE7BvyC,KAAKyJ,MAAMiW,SAAQ,SAAA7R,GACbA,EAAK0kC,cACP1kC,EAAK0kC,aAAc,MAGvBvG,EAAIuG,aAAeD,GAGrBvD,EAAA7uC,UAAAsyC,WAAA,SAAWvG,GACJjsC,KAAK0wC,MAAwB,WAAhBzE,EAAO36B,OAIzBtR,KAAKqvC,aAAaz6B,UAAY5U,KAAKqvC,aAAapY,WAAagV,IAAUjsC,KAAKqvC,aAAaz6B,UAEzF5U,KAAKyyC,UAAUxG,EAAQjsC,KAAKqvC,aAAaz6B,WACzC5U,KAAK2vC,OAAO3nC,KAAK,CAAEikC,OAAMA,EAAE36B,KAAMtR,KAAK0yC,WAEtC1yC,KAAKqvC,aAAapY,SAAWgV,IAG/B8C,EAAA7uC,UAAAyyC,WAAA,WACE,IAAMjC,EAAO1wC,KAAKqvC,aAAapY,SAAW,CAAEgV,OAAQjsC,KAAKqvC,aAAapY,SAAU3lB,KAAMtR,KAAK0yC,eAAavpC,EAExGnJ,KAAK0vC,SAAS1nC,KAAK0oC,IAOX3B,EAAA7uC,UAAA6vC,kBAAV,SAA4BliC,GAG1B,OAFarO,OAAOsqB,KAAKjc,GAGtBoS,QAAO,SAAA3e,GAAO,MAAqB,iBAAduM,EAAKvM,MAC1B8K,KAAI,SAAA9K,GACH,MAAO,CAAEqC,MAAO0R,GAAsB/T,GAAM21B,SAAU31B,OAIpDytC,EAAA7uC,UAAA4xC,qBAAR,SAA6Bc,EAAkB5G,GACzChsC,KAAK8wC,aACP9wC,KAAK6yC,kBAAkBD,EAAM5G,GACnBhsC,KAAK6wC,gBACf7wC,KAAKovC,UAAYpvC,KAAK8yC,gBAAgBF,KAIlC7D,EAAA7uC,UAAAkyC,iBAAR,SAAyBpG,GACvBA,EAAImG,YAAcnyC,KAAK4F,SAASoC,KAAKgkC,GAAOhsC,KAAKyvC,UAAUznC,KAAKgkC,IAG1D+C,EAAA7uC,UAAAyxC,oBAAR,SAA4BvC,EAAoBwD,GAC9CxD,EAAYpvC,KAAKuvC,YAAYvnC,KAAK4qC,GAAQ5yC,KAAKwvC,cAAcxnC,KAAK4qC,IAG5D7D,EAAA7uC,UAAA2xC,iBAAR,SAAyB7F,GACvBA,EAAIwF,UAAYxxC,KAAK4f,SAAS5X,KAAKgkC,GAAOhsC,KAAK4vC,WAAW5nC,KAAKgkC,IAGzD+C,EAAA7uC,UAAA+xC,eAAR,SAAuBjG,EAAKC,GAC1B,IAAM8G,EAAc9G,EAAOne,MAE3B,OAAO1c,EAAS2hC,EAAa,YAAcA,EAAY/G,EAAKC,EAAOhV,UAAY8b,GAIzEhE,EAAA7uC,UAAA8yC,sBAAR,WACE,OAAOhzC,KAAKg/B,QAAQv0B,MAAK,SAAAwmC,GAAO,MAAa,WAAbA,EAAI3/B,SAI9By9B,EAAA7uC,UAAA+yC,eAAR,WACE,OAAOjzC,KAAKkzC,aAAajzB,QAAO,SAAAgxB,GAAO,OAAgB,IAAhBA,EAAIjD,YAIrCe,EAAA7uC,UAAAizC,mBAAR,WACE,OAAOnzC,KAAKg/B,QAAQ/e,QAAO,SAAAgxB,GAAO,MAAa,aAAbA,EAAI3/B,SAGhCy9B,EAAA7uC,UAAA4yC,gBAAR,SAAwBrpC,GAItB,QAAIA,EAAM02B,OAFW,SAAAtyB,GAAQ,OAAAA,EAAK2jC,gBAM9B/nC,EAAMmvB,MAPyB,SAAA/qB,GAAQ,OAAAA,EAAK2jC,WAAgC,OAAnB3jC,EAAK2jC,cAQzD,MAMHzC,EAAA7uC,UAAAotC,gBAAR,WACEttC,KAAKozC,iBACLpzC,KAAKqzC,wBACLrzC,KAAKszC,sBAGCvE,EAAA7uC,UAAA8vC,cAAR,WACEhwC,KAAKg/B,QAAQtf,SAAQ,SAAAusB,GACI,SAAnBA,EAAa,MAAiBA,EAAa,OAC7CA,EAAa,KAAI,YAKf8C,EAAA7uC,UAAAmzC,sBAAR,WACErzC,KAAK+wC,mBAAqB/wC,KAAKgzC,yBAGzBjE,EAAA7uC,UAAAkzC,eAAR,WACEpzC,KAAKmvC,YAAcnvC,KAAKizC,iBAExBjzC,KAAKkvC,iBAAmBlvC,KAAKmvC,YAAYxuC,OAEzCX,KAAKuzC,sBAAwBvzC,KAAKwzC,4BAG5BzE,EAAA7uC,UAAAoxC,cAAR,SAAsBmC,EAA6BC,IACL,iBAAlBD,GAA8BzzC,KAAKyJ,MAAMgqC,GAE1CzzC,KAAKyJ,MAAMgqC,GAAiBA,GAEjDtB,YAAcuB,GAGZ3E,EAAA7uC,UAAAozC,mBAAR,WACEtzC,KAAKsvC,gBAAkBtvC,KAAKmzC,sBAGtBpE,EAAA7uC,UAAAuyC,UAAR,SAAkBxG,EAAuBr3B,GAAzC,IAAAtO,EAAAtG,KACEA,KAAKyJ,MAAMinC,MAAK,SAACh8B,EAAUC,GACzB,MAAoB,SAAhBs3B,EAAO36B,MAAmC,aAAhB26B,EAAO36B,KAC5BhL,EAAK2c,OAAON,SAASjO,EAASu3B,EAAOhV,UAAWtiB,EAAUs3B,EAAOhV,UAAWriB,GAE5EH,GAAWC,EAASu3B,EAAOhV,UAAWtiB,EAAUs3B,EAAOhV,UAAWriB,OAKvEm6B,EAAA7uC,UAAA2yC,kBAAR,SAA0BD,EAAkB5G,GAC1C4G,EAAKlzB,SAAQ,SAAA7R,GACPA,IAASm+B,IACXn+B,EAAK2jC,WAAY,OAKfzC,EAAA7uC,UAAAszC,yBAAR,WACE,QAAOxzC,KAAKkvC,gBAAiBlvC,KAAKmvC,YAAYhP,OAAM,SAAA8L,GAAU,OAAAA,EAAO5vB,OAAS4vB,EAAO5vB,MAAMvT,SAAS,mDA7O1EqY,MA/ZVhgB,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAyBfwB,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCA4BnBwB,EAAA,CAArB2E,EAAAA,MAAM,sGAiBwB3E,EAAA,CAA9B2E,EAAAA,MAAM,wHAeY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAkBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2GA+Cc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAwBa3E,EAAA,CAAnB2E,EAAAA,MAAM,oGA2Bc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAsBa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCAwBlBwB,EAAA,CAAtB2E,EAAAA,MAAM,0GAoBU3E,EAAA,CAAhB2E,EAAAA,MAAM,+FAYwB3E,EAAA,CAA9B2E,EAAAA,MAAM,yHAaa3E,EAAA,CAAnB2E,EAAAA,MAAM,qGAcqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mHAYmB3E,EAAA,CAAzB2E,EAAAA,MAAM,gHAeiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGmB3E,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAGZ3G,EAAA,CAA3B8G,EAAAA,OAAO,oCAAoCH,EAAAA,mDAOrB3G,EAAA,CAAtB8G,EAAAA,OAAO,+BAA2BH,EAAAA,+CAOb3G,EAAA,CAArB8G,EAAAA,OAAO,8BAAyBH,EAAAA,8CAGX3G,EAAA,CAArB8G,EAAAA,OAAO,8BAAyBH,EAAAA,8CAWV3G,EAAA,CAAtB8G,EAAAA,OAAO,+BAA0BH,EAAAA,8CAUb3G,EAAA,CAApB8G,EAAAA,OAAO,6BAAsBH,EAAAA,4CAGN3G,EAAA,CAAvB8G,EAAAA,OAAO,gCAA6BH,EAAAA,gDAtZjBinC,EAAoB5tC,EAAA,CADzC4H,EAAAA,mCA0b6BoY,MAzbR4tB,oBE4BpB,SAAA4E,EAAmBC,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAHI7E,EAAA,CAAnC2E,EAAAA,MAAM,qGAdI6tC,EAA2BxyC,EAAA,CAHvC4H,EAAAA,UAAU,CACT5C,SAAU,kDAmBsBH,EAAAA,eAjBrB2tC,qBCiBX,SAAAE,EACE5wB,EACAtZ,EACAwW,EACAtW,EACQ4N,EACAq8B,EACA/Z,GAPV,IAAAzzB,EASEC,EAAA3F,KAAAZ,KAAMijB,IAAOjjB,YAJLsG,EAAAmR,eAAAA,EACAnR,EAAAwtC,YAAAA,EACAxtC,EAAAyzB,OAAAA,EA1CVzzB,EAAAytC,aAAuB,EAKfztC,EAAA6D,aAAc,EAGd7D,EAAA0tC,gBAAiB,EAsCvB1tC,EAAK8Z,UAAYD,EAAmB,UAAE,GACtC7Z,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,MAItCmG,EAAK2tC,cAAgBpqC,EAASkD,OAAO,WAAY,SAAS,eAE1DzG,EAAK0G,eAAiBnD,EAASkD,OAAO,SAAU,UAAU,SAAClG,GACzDP,EAAK2E,sBAsTX,OAjXsCnL,EAAA+zC,EAAAttC,GAoBF/G,OAAAqC,eAAIgyC,EAAA3zC,UAAA,sBAAmB,KAMzD,WACE,OAAOF,KAAKk0C,0BAPoB,SAAwBpxC,GACxD9C,KAAKk0C,qBAAuBpxC,EAE5B9C,KAAKyX,eAAeqc,iDAwCtBt0B,OAAAqC,eAAIgyC,EAAA3zC,UAAA,cAAW,KAAf,WAOE,OALEF,KAAKmvC,YAAYxuC,QAChBX,KAAKwwC,QAAQ7vC,OAAS,EAAI,EAAI,IAC9BX,KAAKswC,WAAa,EAAI,IACrBtwC,KAAKowC,iBAA0CjnC,IAA5BnJ,KAAK+wC,mBAAuC,EAAJ,IAEzC,mCAGxBvxC,OAAAqC,eAAIgyC,EAAA3zC,UAAA,6BAA0B,KAA9B,WAEE,IAAMi0C,EAAgBn0C,KAAKwwC,QAAQ7vC,OAAS,EAAI,EAEhD,OAAOX,KAAKmvC,YAAYxuC,OAAS,GAAKX,KAAKwwC,QAAQ7vC,OAAS,EAAI,EAAI,IAAMX,KAAKswC,WAAa,EAAI,GAAK6D,mCAGvG30C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,mBAAgB,KAApB,WACE,IAAMk0C,EAAep0C,KAAK+wC,mBAC1B,SAAOqD,IAAgBA,EAAaC,SAASD,EAAaC,OAAOC,4CAGnE90C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,2BAAwB,KAA5B,WACE,OAAQF,KAAKu0C,eAAe5zC,wCAG9BnB,OAAAqC,eAAIgyC,EAAA3zC,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKu0C,gBAAkBv0C,KAAKu0C,eAAe,oCAGpD/0C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK6vC,UAAY7vC,KAAKw0C,2DAG/Bh1C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,wBAAqB,KAAzB,WACE,OACEF,KAAKkvC,gBAAkBlvC,KAAK6vC,WAAa7vC,KAAKowC,eAAiBpwC,KAAK+wC,qBAAsB/wC,KAAKy0C,iDAInGj1C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,iBAAc,KAAlB,WACE,QAASF,KAAK00C,kDAGhBl1C,OAAAqC,eAAIgyC,EAAA3zC,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAKswC,YAActwC,KAAK6vC,UAAY7vC,KAAKkvC,gDAGlD1vC,OAAAqC,eAAIgyC,EAAA3zC,UAAA,kBAAe,KAAnB,WACE,QAASF,KAAKkzC,aAAavyC,wCAG7BnB,OAAAqC,eAAIgyC,EAAA3zC,UAAA,4BAAyB,KAA7B,WACE,OAAOF,KAAKsvC,gBAAgB1W,MAAK,SAAAqT,GAAU,OAAmB,IAAnBA,EAAO+B,4CAGpDxuC,OAAAqC,eAAIgyC,EAAA3zC,UAAA,iBAAc,KAAlB,WACE,OAAsC,IAA/BF,KAAKu0C,eAAe5zC,wCAG7BnB,OAAAqC,eAAIgyC,EAAA3zC,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKwwC,SAAWxwC,KAAKwwC,QAAQvwB,QAAO,SAAAqa,GAAU,OAAmB,IAAnBA,EAAO0T,4CAG9D6F,EAAA3zC,UAAAwK,gBAAA,WACE1K,KAAKmK,aAAc,GAGrB0pC,EAAA3zC,UAAA0K,UAAA,iBACE5K,KAAK20C,oBACL30C,KAAK40C,uCAGuB,QAAxB9+B,EAAA9V,KAAK60C,2BAAmB,IAAA/+B,OAAA,EAAAA,EAAEhL,cAAcC,eAAgB/K,KAAKg0C,gBAAkBh0C,KAAKmK,cACtFnK,KAAKiL,iBACLjL,KAAKg0C,gBAAiB,IAI1BH,EAAA3zC,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGP4Z,EAAA3zC,UAAA40C,cAAA,SAAc9I,EAAKC,GACjB,QAAOA,EAAOvzB,UAAWuzB,EAAOvzB,SAASszB,IAG3C6H,EAAA3zC,UAAA60C,qBAAA,SAAqB/I,GACnB,OAAOA,EAAIhsC,KAAKg1C,mBAAqBhJ,EAAIhsC,KAAKg1C,kBAAkBr0C,QAGlEkzC,EAAA3zC,UAAA+0C,mBAAA,SAAmBjJ,EAAUkJ,GACtBlJ,EAAItzB,UAAa1Y,KAAKm1C,oBAAoBnJ,EAAKkJ,KAClDA,EAAY5a,OAAO15B,KAAKZ,KAAKogB,UAAW4rB,GACxChsC,KAAKqyC,gBAAgBrG,KAIzB6H,EAAA3zC,UAAAk1C,aAAA,SAAatyC,EAAYioC,GACvB,OAAKA,EAIE/qC,KAAK8zC,YAAYpM,UAAU5kC,EAAOioC,GAHhCjoC,GAMX+wC,EAAA3zC,UAAAm1C,gBAAA,SAAgBC,EAAeC,GAC7B,OAAID,IAAyB,IAAbA,GAAmC,IAAbA,GACpCA,EAAW1kC,EAAiB0kC,GAExBC,EAAcC,QACTF,EAAWC,EAAcC,QAAQC,WAAa,MAAQF,EAAcC,QAAQE,YAAc,MAE1FJ,EAAW,MAAQ,OAIvBA,GAGTzB,EAAA3zC,UAAAy1C,eAAA,SAAe3J,EAAUC,GACvB,IAAMG,EAAWJ,EAAIC,EAAOhV,UAE5B,OAAIgV,EAAOL,MACLjsC,MAAMqW,QAAQo2B,GACTpsC,KAAK41C,iBAAiBxJ,EAAUH,EAAOL,OAEvC5rC,KAAK61C,eAAezJ,EAAUH,GAIlCG,GAGTyH,EAAA3zC,UAAA41C,eAAA,SAAe9J,EAAU+J,GACvB,OAAOA,EAAYC,OAAOvrC,MAAK,SAAAwrC,GAAa,OAAAjK,EAAI+J,EAAY9e,YAAcgf,EAAUnzC,UAGtF+wC,EAAA3zC,UAAAg2C,kBAAA,SAAkBlK,EAAUmK,GAC1B,OAAOA,EAAeC,UAAU3rC,MAAK,SAAA4rC,GAAgB,OAAArK,EAAImK,EAAelf,YAAcof,EAAavzC,UAGrG+wC,EAAA3zC,UAAAo2C,mBAAA,SAAmBtK,GACjB,OACGhsC,KAAKowC,YACNpwC,KAAKg1C,kBACLhJ,EAAImG,aACJnyC,KAAK+0C,qBAAqB/I,KACzBhsC,KAAKy0C,gBAIVZ,EAAA3zC,UAAAq2C,kBAAA,SAAkBvK,EAAKlwB,GACrB,OAAI9b,KAAK00C,mBAAoB10C,KAAK00C,iBAAiB8B,wBAC1Cx2C,KAAK00C,iBAAiB8B,uBAAuBxK,EAAKlwB,IAM7D+3B,EAAA3zC,UAAAu2C,YAAA,SAAY5vC,EAAOmlC,EAAKC,GACjBjsC,KAAK80C,cAAc9I,EAAKC,IAC3BplC,EAAMm7B,mBAIV6R,EAAA3zC,UAAAw2C,uBAAA,SAAuB1X,GACrBh/B,KAAKg/B,QAAUA,EAEfh/B,KAAKyX,eAAeqc,iBAGtB+f,EAAA3zC,UAAAy2C,kBAAA,SAAkB9vC,EAAYolC,EAAwBD,GAGpD,GAFAhsC,KAAK6xB,iBAAc1oB,EAEfnJ,KAAKmwC,kBAAoBtpC,EAAMxF,OAAO0J,YAAclE,EAAMxF,OAAO0yB,aAAeltB,EAAMxF,OAAOu1C,UAAU9lC,OACzG,OAAQ9Q,KAAK6xB,YAAchrB,EAAMxF,OAAOu1C,UAGtC3K,GACFjsC,KAAK62C,2BAA2B5K,EAAQD,IAI5C6H,EAAA3zC,UAAA42C,kBAAA,WACE92C,KAAK6xB,iBAAc1oB,GAGrB0qC,EAAA3zC,UAAAyqC,YAAA,SAAYqB,EAAK+K,GACf/2C,KAAKg3C,YAAcD,EACnB/2C,KAAKyX,eAAeqc,gBAEpB9zB,KAAKi3C,iBAAiBlwC,OAAOilC,IAG/B6H,EAAA3zC,UAAAg3C,QAAA,SAAQp7B,GACN,OAAOA,GAGT+3B,EAAA3zC,UAAAi1C,oBAAA,SAAoBnJ,EAAUkJ,GAC5B,MAAoC,mBAAzBA,EAAYx8B,SACdw8B,EAAYx8B,SAAS9X,KAAKZ,KAAKogB,UAAW4rB,GAE1CkJ,EAAYx8B,UAIbm7B,EAAA3zC,UAAAkxC,8BAAV,SAAwCzpC,GACtC,IAAM7E,EAAQiN,WAAWpI,GACzB3H,KAAKm3C,qBAAuBr0C,EAAQA,EAAQ9C,KAAKo3C,4BAAyBjuC,EAC1EnJ,KAAKq3C,gBAAgB,GACrBr3C,KAAKyX,eAAeqc,iBAGZ+f,EAAA3zC,UAAA+vC,sBAAV,WAAA,IAAA3pC,EAAAtG,KACE6M,YAAW,WACLvG,EAAKqB,QACPrB,EAAKgxC,aAAa53B,SAAQ,SAAA63B,GACxB,IAAMC,EAAYD,EAAOzsC,cAAckB,cAAc,gCACjDwrC,IACFA,EAAU9vC,MAAM2U,MAAWk7B,EAAOzsC,cAAcC,YAAW,aAO7D8oC,EAAA3zC,UAAAy0C,kBAAR,WACE,IAAM8C,EAAez3C,KAAKwK,OAAOe,KAAKvL,KAAKyJ,OAEvCguC,GAAgBz3C,KAAKovC,YACvBpvC,KAAKovC,UAAY,MAGfqI,IAAiBz3C,KAAK8vC,YAAc9vC,KAAK6vC,WAC3C7vC,KAAKg/B,QAAUh/B,KAAK+vC,kBAAkB/vC,KAAKyJ,MAAM,MAI7CoqC,EAAA3zC,UAAA22C,2BAAR,SAAmC5K,EAAQD,GACzC,GAAoB,SAAhBC,EAAO36B,MAAmB26B,EAAOhzB,UAAYjZ,KAAK80C,cAAc9I,EAAKC,GACvE,OAAQjsC,KAAK6xB,YAAcoa,EAAOhzB,QAGpC,GAAoB,UAAhBgzB,EAAO36B,KAAkB,CAC3B,IAAMykC,EAAc/1C,KAAK81C,eAAe9J,EAAKC,GAC7C,OAAQjsC,KAAK6xB,YAAckkB,EAAY98B,UAInC46B,EAAA3zC,UAAA+K,eAAR,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAClB5M,KAAK4M,cAAgBC,YAAW,WAC9BvG,EAAK2pC,wBAGL3pC,EAAK+wC,gBAAgB,OAIjBxD,EAAA3zC,UAAA21C,eAAR,SAAuBzJ,EAAUH,GAC/B,IAAMyL,EAAazL,EAAOL,MAAMnhC,MAAK,SAAAoxB,GAAQ,OAAAuQ,IAAavQ,EAAK/4B,SAC/D,OAAO40C,EAAa,CAACA,QAAcvuC,GAG7B0qC,EAAA3zC,UAAAk3C,qBAAR,WACE,OAAOp3C,KAAK23C,mBAAqB33C,KAAK23C,mBAAmB7sC,cAAcgoB,aAAe,GAGhF+gB,EAAA3zC,UAAA01C,iBAAR,SAAyBxJ,EAAyBwL,GAChD,IAAMC,EAAc,GASpB,OAPAzL,EAAS1sB,SAAQ,SAAAo4B,GACf,IAAMC,EAAkBH,EAAYntC,MAClC,SAAAitC,GAAc,OAAAI,IAAgBJ,EAAW7b,MAAQic,IAAgBJ,EAAW50C,SAE9Ei1C,EAAkBF,EAAYrzC,KAAKuzC,GAAmBF,EAAYrzC,KAAKszC,MAGlED,GAGDhE,EAAA3zC,UAAA+5B,gBAAR,WACMj6B,KAAKgN,gBACPhN,KAAKgN,iBAGHhN,KAAKi0C,eACPj0C,KAAKi0C,iBAIDJ,EAAA3zC,UAAAm3C,gBAAR,SAAwBv0C,GACtB9C,KAAK+zC,aAAejxC,GAGd+wC,EAAA3zC,UAAA83C,2BAAR,WACE,OAAOh4C,KAAKi4C,eAAiBj4C,KAAKo3C,wBAG5BvD,EAAA3zC,UAAA00C,oCAAR,WACM50C,KAAK2H,QAAU3H,KAAKg4C,+BACtBh4C,KAAKi4C,aAAej4C,KAAKo3C,uBACzBp3C,KAAKoxC,8BAA8BpxC,KAAK2H,mDArUlCwZ,UACClU,EAAAA,uBACAoT,EAAAA,wBACClT,EAAAA,iBACcuK,EAAAA,yBACHwgC,EAAAA,mBACLzc,EAAAA,UA7B2Ct6B,EAAA,CAA5Dg3C,EAAAA,aAAaxE,GAA6B,CAAE1tC,QAAQ,oBAA0B0tC,4CAE7CxyC,EAAA,CAAjC4E,EAAAA,UAAU,uCAAsDmH,EAAAA,mCAAAA,EAAAA,sDAUb/L,EAAA,CAAnD4E,EAAAA,UAAU,kBAAmB,CAAEqH,KAAMF,EAAAA,4EAClB/L,EAAA,CAAnB4E,EAAAA,UAAU,yBAA2B8zB,4CAEyB14B,EAAA,CAA9D4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,sEACU9E,EAAA,CAA/D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,uEAEG9E,EAAA,CAAzD2/B,EAAAA,aAAa,qBAAsB,CAAE1zB,KAAMF,EAAAA,6BAAkC/F,EAAAA,qDACxBhG,EAAA,CAArD2/B,EAAAA,aAAa,iBAAkB,CAAE1zB,KAAMF,EAAAA,6BAA8B/F,EAAAA,iDACxChG,EAAA,CAA7B2/B,EAAAA,aAAa,gCAA8B35B,EAAAA,+CAtCjC0sC,EAAgB1yC,EAAA,CAL5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,8vZACAgB,UAAW,CAAC+Z,6BA2CFA,GACClU,EAAAA,gBACAoT,EAAAA,iBACClT,EAAAA,UACcuK,EAAAA,kBACHwgC,EAAAA,YACLzc,EAAAA,UA/CPoY,IAAyB9E,kBCtBpC,SAAAqJ,EAAoBtE,GAAA9zC,KAAA8zC,YAAAA,EAPG9zC,KAAAq4C,cAAyB,EAKxBr4C,KAAA4xC,UAAgC,IAAI9pC,EAAAA,aAgD9D,OArEqBtI,OAAAqC,eAAIu2C,EAAAl4C,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKs4C,aALK,SAAWx1C,GAC5B9C,KAAKs4C,QAAUt4C,KAAKu4C,0BAA0Bz1C,oCAwBhDtD,OAAAqC,eAAIu2C,EAAAl4C,UAAA,gBAAa,KAAjB,iBACE,OAAkB,QAAX4V,EAAA9V,KAAKq0C,cAAM,IAAAv+B,OAAA,EAAAA,EAAEkpB,UAAW,oCAGjCx/B,OAAAqC,eAAIu2C,EAAAl4C,UAAA,mBAAgB,KAApB,WACE,OAAQF,KAAKq0C,SAAWr0C,KAAKq0C,OAAmB,YAAoC,WAA9Br0C,KAAKq0C,OAAmB,4CAGhF70C,OAAAqC,eAAIu2C,EAAAl4C,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKq0C,QAAwC,QAA9Br0C,KAAKq0C,OAAmB,4CAGhD+D,EAAAl4C,UAAAs4C,mBAAA,SAAmB11C,EAAYioC,GAC7B,OAAKA,EAIE/qC,KAAK8zC,YAAYpM,UAAU5kC,EAAOioC,GAHhCjoC,GAMXs1C,EAAAl4C,UAAA4tC,oBAAA,SAAoBuG,GAClB,OAAOA,EAAO1wC,OAAS0R,GAAsBg/B,EAAOpd,WAGtDmhB,EAAAl4C,UAAAu4C,YAAA,SAAY5qC,GACVA,EAAK2jC,WAAa3jC,EAAK2jC,UACvBxxC,KAAK4xC,UAAU5pC,KAAK6F,IAGduqC,EAAAl4C,UAAAq4C,0BAAR,SAAkCz1C,GAChC,GAAIA,GAASsO,EAAStO,EAAO,UAAW,CAKtC,GAJIA,EAAMk8B,SACRl8B,EAAMk8B,QAAQtf,SAAQ,SAAAusB,GAAU,OAACA,EAAOhV,SAAWgV,EAAOhV,UAAYgV,EAAOA,UAG3EtsC,MAAMqW,QAAQlT,GAChB,MAAO,CAAEk8B,QAASl8B,GAGpB,GAAIA,EAAMk8B,QACR,OAAOl8B,6CA1CoBo1C,EAAAA,eAvBd/2C,EAAA,CAAlB2E,EAAAA,MAAM,gGAWW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAAkBnG,oCAKFwB,EAAA,CAAtB2E,EAAAA,MAAM,6EAKiB3E,EAAA,CAAvB8G,EAAAA,OAAO,gCAA4BH,EAAAA,+CA3BzBswC,EAAsBj3C,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,kzEA+BiC8xC,EAAAA,eA7BtBE,oBCLb,SAAAM,IAmBqB14C,KAAAuY,MAA2B,IAAIzQ,EAAAA,aAqBpD,OAnBEtI,OAAAqC,eAAY62C,EAAAx4C,UAAA,eAAY,KAAxB,WACE,OAAQF,KAAK0Y,UAAY1Y,KAAK24C,6CAGhCD,EAAAx4C,UAAA6H,QAAA,SAAQlB,GACF7G,KAAK44C,WACP54C,KAAKuY,MAAMvQ,KAAKnB,IAIpB6xC,EAAAx4C,UAAAy2C,kBAAA,WACM32C,KAAK64C,eACP74C,KAAKiZ,QAAUjZ,KAAK24C,cAIxBD,EAAAx4C,UAAA42C,kBAAA,WACE92C,KAAKiZ,aAAU9P,GAlCKhI,EAAA,CAArB2E,EAAAA,MAAM,yEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGkB3E,EAAA,CAAxB2E,EAAAA,MAAM,6EAGY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAkBH,EAAAA,2CAnBf4wC,EAAoBv3C,EAAA,CALhC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,ySACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BswC,oBCCb,SAAAI,KAMA,OAJwB33C,EAAA,CAArB2E,EAAAA,MAAM,+BAA0BnG,wCAGZwB,EAAA,CAApB2E,EAAAA,MAAM,sEALIgzC,EAA4B33C,EAAA,CAJxC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,+kBAEW0yC,oBCoBX,SAAAC,EAAoBxM,GAAAvsC,KAAAusC,sBAAAA,EAFpBvsC,KAAAg5C,WAAqB,EAGvB,OAfuBx5C,OAAAqC,eAAIk3C,EAAA74C,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKi5C,eAPO,SAAaC,GAC5BA,IACFA,EAASprB,MAAQ9tB,KAAKusC,sBAAsBpI,SAAS+U,IAEvDl5C,KAAKi5C,UAAYC,4EAUwBhV,MAdtB/iC,EAAA,CAApB2E,EAAAA,MAAM,oGAYP3E,EAAA,CADC2E,EAAAA,MAAM,0EAfIizC,EAA8B53C,EAAA,CAL1C+E,EAAAA,UAAU,CACTC,SAAU,2BACVC,SAAA,sJACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAoBE87B,MAlBhC6U,oBCWX,SAAAI,EAAoBvvC,EAA4BC,GAA5B7J,KAAA4J,QAAAA,EAA4B5J,KAAA6J,SAAAA,EAqDlD,OAnDEsvC,EAAAj5C,UAAAwK,gBAAA,WACE1K,KAAK2K,2BACL3K,KAAKiL,kBAGPkuC,EAAAj5C,UAAA0K,UAAA,YACO5K,KAAKo5C,WAAap5C,KAAKq5C,mBAAqB,IAC/Cr5C,KAAKs5C,6BACLt5C,KAAKo5C,WAAY,IAIrBD,EAAAj5C,UAAAuG,YAAA,WACEzG,KAAKmL,wBAGCguC,EAAAj5C,UAAA+K,eAAR,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAClB5M,KAAK4M,cAAgBC,YAAW,WAC9BvG,EAAKgzC,iCAIDH,EAAAj5C,UAAAm5C,iBAAR,WACE,OAAOr5C,KAAK4J,QAAQkB,cAAckB,cAAc,uCAAuCjB,aAGjFouC,EAAAj5C,UAAAq5C,aAAR,WACE,IAAM9vC,EAAQzJ,KAAK4J,QAAQkB,cAAcoB,iBAAiB,6BAE1D,OAAOvM,MAAMwM,KAAK1C,GACf2C,KAAI,SAAAyB,GAAQ,OAAAA,EAAkB,eAC9BvB,QAAO,SAACC,EAAGhN,GAAM,OAAAgN,EAAIhN,IAAG,KAGrB45C,EAAAj5C,UAAAyK,yBAAR,WAAA,IAAArE,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,SAAClG,GAC9DP,EAAK2E,qBAIDkuC,EAAAj5C,UAAAiL,qBAAR,WACEnL,KAAKgN,kBAGCmsC,EAAAj5C,UAAAo5C,2BAAR,WACE,IAAME,EAAgBx5C,KAAKq5C,mBACrBI,EAAYz5C,KAAKu5C,eAEvBv5C,KAAK05C,aAAeD,EAAYD,4CAnDLtsC,EAAAA,kBAA6BC,EAAAA,aALrChM,EAAA,CAApB2E,EAAAA,MAAM,sEAGe3E,EAAA,CAArB2E,EAAAA,MAAM,+BAA0BnG,wCAXtBw5C,EAA8Bh4C,EAAA,CAJ1C+E,EAAAA,UAAU,CACTC,SAAU,2BACVC,SAAA,2dAe6B8G,EAAAA,WAA6BC,EAAAA,aAb/CgsC,oBC+Cb,SAAAQ,KAA4B,OAAfA,EAAax4C,EAAA,CA/BzBmH,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAy4B,EAAAA,YACA5xB,EAAAA,aACAuJ,GACAooB,GACAtK,GACA1e,GACA6qB,GACAgI,GACAnP,GACA+P,GACA1sB,IAEFtW,aAAc,CACZorC,GACAnI,GACAY,GACAE,GACAI,GACAwL,GACAM,GACA/E,GACAmF,GACAC,GACAI,IAEFzwC,QAAS,CAACmrC,GAAkBF,IAC5BvsC,UAAW,CAAC8wC,EAAAA,gBAEDyB,oBCyDX,SAAAp5B,IAnHAvgB,KAAAwgB,OAAS,CACP,CACExJ,GAAI,UACJH,GAAI,UACJE,GAAI,SAEN,CACEC,GAAI,YACJH,GAAI,WACJE,GAAI,WAEN,CACEC,GAAI,QACJH,GAAI,QACJE,GAAI,SAEN,CACEC,GAAI,QACJH,GAAI,QACJE,GAAI,SAEN,CACEC,GAAI,OACJH,GAAI,MACJE,GAAI,QAEN,CACEC,GAAI,QACJH,GAAI,OACJE,GAAI,SAEN,CACEC,GAAI,QACJH,GAAI,OACJE,GAAI,SAEN,CACEC,GAAI,SACJH,GAAI,SACJE,GAAI,UAEN,CACEC,GAAI,WACJH,GAAI,YACJE,GAAI,aAEN,CACEC,GAAI,UACJH,GAAI,UACJE,GAAI,WAEN,CACEC,GAAI,WACJH,GAAI,WACJE,GAAI,aAEN,CACEC,GAAI,WACJH,GAAI,WACJE,GAAI,cAIR/W,KAAAygB,cAAgB,CACd,CACEzJ,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,OAEN,CACEC,GAAI,MACJH,GAAI,MACJE,GAAI,QAIR/W,KAAA45C,UAAY,CACV5iC,GAAI,MACJH,GAAI,QACJE,GAAI,OAGN/W,KAAA65C,SAAW,CACT7iC,GAAI,MACJH,GAAI,OACJE,GAAI,OAGN/W,KAAA85C,KAAO,KA0CT,OAtCEv5B,EAAArgB,UAAAuW,YAAA,SAAYqjC,GACNA,GAAQA,EAAKn5C,QAAU,IACzBm5C,EAAOA,EAAKvpC,cAAc/D,MAAM,EAAG,GACnCxM,KAAK85C,KAAgB,OAATA,GAA0B,OAATA,GAA0B,OAATA,EAAgBA,EAAO,OAIzEv5B,EAAArgB,UAAA65C,aAAA,WACE,OAAO/5C,KAAK45C,UAAU55C,KAAK85C,OAG7Bv5B,EAAArgB,UAAA85C,YAAA,WACE,OAAOh6C,KAAK65C,SAAS75C,KAAK85C,OAG5Bv5B,EAAArgB,UAAAwS,SAAA,SAASV,GACP,OAAOhS,KAAKwgB,OAAOxO,GAAOhS,KAAK85C,OAGjCv5B,EAAArgB,UAAA+5C,eAAA,WAEE,IADA,IAAMn5B,EAAYnhB,QACTa,EAAI,EAAGA,EAAIR,KAAKwgB,OAAO7f,OAAQH,IACtCsgB,EAAUtc,KAAKxE,KAAKwgB,OAAOhgB,GAAGR,KAAK85C,OAErC,OAAOh5B,GAGTP,EAAArgB,UAAAg6C,YAAA,SAAYnoC,GACV,OAAO/R,KAAKygB,cAAc1O,GAAK/R,KAAK85C,OAGtCv5B,EAAArgB,UAAAi6C,iBAAA,WAEE,IADA,IAAMl5B,EAActhB,QACXa,EAAI,EAAGA,EAAIR,KAAKygB,cAAc9f,OAAQH,IAC7CygB,EAAYzc,KAAKxE,KAAKygB,cAAcjgB,GAAGR,KAAK85C,OAE9C,OAAO74B,GA1JEV,EAAqBpf,EAAA,CADjCqE,EAAAA,wCACY+a,oBCKX,SAAA4D,IACEnkB,KAAKo6C,aAAe,EAyCxB,OAtCEj2B,EAAAjkB,UAAAwkB,cAAA,SAAc5S,GAEZ,IADA,IAAMgT,EAAY,IAAI3S,KAAKL,EAAK6S,WACzBG,EAAUC,WAAa/kB,KAAKo6C,cACjCt1B,EAAUF,QAAQE,EAAUnS,UAAY,GAE1C,OAAOmS,GAGTX,EAAAjkB,UAAAkkB,WAAA,SAAWnS,EAAWD,EAAYqS,EAA0BC,GAC1D,QADgC,IAAAD,IAAAA,EAAA,WAA0B,IAAAC,IAAAA,EAAA,MACrC,iBAAVtS,GAAsBA,EAAQ,GAAKA,EAAQ,GACpD,MAAMuS,MAAM,qCAGd,IAAMC,EAAoB,GACtBC,EAAmB,GACnBjkB,EAAI,EACJsR,EAAO,IAAIK,KAAKF,EAAMD,EAAO,GACjCE,GAAkBJ,EAAMG,GACxBH,EAAO9R,KAAK0kB,cAAc5S,GAE1B,EAAG,CACD,IAAKtR,EAAI,EAAGA,EAAI,EAAGA,IACjBikB,EAAKjgB,KAAK6f,EAAeA,EAAavS,GAAQA,IAC9CA,EAAO,IAAIK,KAAKL,EAAK6S,YAChBC,QAAQ9S,EAAKa,UAAY,GAEhC6R,EAAMhgB,KAAK8f,EAAgBA,EAAcG,GAAQA,GACjDA,EAAO,SACA3S,EAAKY,YAAcV,GAASF,EAAKe,gBAAkBZ,GAC5D,OAAOuS,GAGTL,EAAAjkB,UAAA2kB,UAAA,SAAU5S,EAAWD,GAInB,OAAOhS,KAAKokB,WAAWnS,EAAMD,GAHR,SAAUF,GAC7B,OAAOA,EAAKY,aAAeV,EAAQF,EAAO,MAzCnCqS,EAAiBhjB,EAAA,CAD7BqE,EAAAA,wCACY2e,MCEPpB,GAAoB,CAAC,KAAM,KAAM,oBAoIrC,SAAAqC,EAAoBG,EAA8CrC,GAA9CljB,KAAAulB,kBAAAA,EAA8CvlB,KAAAkjB,sBAAAA,EA/GlEljB,KAAAmjB,YAAsB,EAMtBnjB,KAAAojB,cAA4BzjB,QAE5BK,KAAAq6C,gBAA8B16C,QAE9BK,KAAAsjB,cAAwB,EACxBtjB,KAAAs6C,kBAA4B,EAC5Bt6C,KAAAguC,SAAmB,EACnBhuC,KAAAujB,aAAuB,EAGfvjB,KAAAqT,SAAgBA,GAEhBrT,KAAA0jB,MAAc,IAAIvR,KA0FOnS,KAAAu6C,mBAAqB,IAAIzyC,EAAAA,aACtC9H,KAAAw6C,OAAS,IAAI1yC,EAAAA,aAkMnC,OAhRuBtI,OAAAqC,eAAIujB,EAAAllB,UAAA,UAAO,KAchC,WACE,OAAOF,KAAKy6C,cAfO,SAAY5pC,GAC/B,GAAIA,GAAOA,aAAesB,KAAM,CAC9B,IAAMF,EAAOpB,EAAIgC,cACXb,EAAQnB,EAAI6B,WACZX,EAAMlB,EAAI8B,UAEVb,EAAO,IAAIK,KAAKF,EAAMD,EAAOD,EAAK,GAAI,GAAI,IAChDG,GAAkBJ,EAAMG,GAExBjS,KAAKy6C,SAAW3oC,OAEhB9R,KAAKy6C,cAAWtxC,mCAmBD3J,OAAAqC,eAAIujB,EAAAllB,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAK4jB,aALK,SAAWC,GAC5B7jB,KAAK4jB,QAAUb,GAAkBja,SAAS+a,GAAUA,EApFxB,KAqF5B7jB,KAAK8jB,sDAamBtkB,OAAAqC,eAAIujB,EAAAllB,UAAA,eAAY,KAG1C,WACE,OAAOF,KAAK06C,mBAJY,SAAiBC,GACzC36C,KAAK06C,cAAgBC,GAAgBA,aAAwBxoC,KAAOwoC,OAAexxC,mCAa9D3J,OAAAqC,eAAIujB,EAAAllB,UAAA,YAAS,KAcpC,WACE,OAAOF,KAAK46C,gBAfS,SAAc/pC,GACnC,GAAIA,GAAOA,aAAesB,KAAM,CAC9B,IAAMF,EAAOpB,EAAIgC,cACXb,EAAQnB,EAAI6B,WACZX,EAAMlB,EAAI8B,UAEVb,EAAO,IAAIK,KAAKF,EAAMD,EAAOD,EAAK,EAAG,EAAG,GAC9CG,GAAkBJ,EAAMG,GAExBjS,KAAK46C,WAAa9oC,OAElB9R,KAAK46C,gBAAazxC,mCAYtBic,EAAAllB,UAAA82B,MAAA,WACEh3B,KAAKs6C,kBAAmB,EACxBt6C,KAAKguC,SAAU,GAIjB5oB,EAAAllB,UAAA26C,eAAA,SAAe5oC,GAGb,GAFAjS,KAAK0nB,cAAgB/nB,QAEjBsS,EAAO,IAAO,EAChB,KAAOA,EAAO,IAAO,GACnBA,IAGJjS,KAAK+nB,aAAa9V,IAGpBmT,EAAAllB,UAAAulB,mBAAA,SAAmBC,EAAsBC,GACvC,OAAOD,IAAiBC,EAAgB,sCAAwC,8BAGlFP,EAAAllB,UAAA0lB,sBAAA,SAAsB9T,GACpB,OAAI9R,KAAK2nB,WAAW7V,EAAM9R,KAAK26C,cACtB,sCACE36C,KAAK2nB,WAAW7V,EAAM9R,KAAK0jB,OAC7B,mCACE5R,EACLiD,GAAkBjD,EAAM9R,KAAKgV,UAAWhV,KAAKiV,SACxC,6BAEA,sCAGF,IAIXmQ,EAAAllB,UAAA4lB,sBAAA,SAAsBhU,GACpB,OAAI9R,KAAK2nB,WAAW7V,EAAM9R,KAAK26C,cACtB,sCACE36C,KAAK2nB,WAAW7V,EAAM9R,KAAK0jB,OAC7B,mCAEH3O,GAAkBjD,EAAM9R,KAAKgV,UAAWhV,KAAKiV,SACxC,6BAEA,uCAKbmQ,EAAAllB,UAAA6lB,mBAAA,SAAmBL,EAAsBC,GACvC,OAAOD,IAAiBC,EAAgB,sCAAwC,8BAGlFP,EAAAllB,UAAA65C,aAAA,WACE,OAAO/5C,KAAKkjB,sBAAsB62B,gBAGpC30B,EAAAllB,UAAA85C,YAAA,WACE,OAAOh6C,KAAKkjB,sBAAsB82B,eAGpC50B,EAAAllB,UAAAslB,KAAA,WACExlB,KAAK26C,aAAe36C,KAAKwnB,WAAWxnB,KAAK26C,cAAgB36C,KAAKwnB,WAAWxnB,KAAK0jB,OAE9E1jB,KAAK8jB,qBAEL9jB,KAAKumB,YAEDvmB,KAAKqT,aACPrT,KAAKs6C,kBAAmB,GAG1Bt6C,KAAKguC,SAAU,GAGjB5oB,EAAAllB,UAAA4jB,mBAAA,WACE9jB,KAAKkjB,sBAAsBzM,YAAYzW,KAAK6jB,QAC5C7jB,KAAKq6C,gBAAkBr6C,KAAKkjB,sBAAsBi3B,mBAClDn6C,KAAKojB,cAAgBpjB,KAAKkjB,sBAAsB+2B,kBAGlD70B,EAAAllB,UAAA8lB,YAAA,WACMhmB,KAAKkkB,mBAAqB,GAC5BlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAalmB,KAAKkkB,mBAAqB,GAE/DlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAc,EAAG,IAI7Cd,EAAAllB,UAAA46C,YAAA,WACM96C,KAAKkkB,mBAAqB,EAC5BlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAalmB,KAAKkkB,mBAAqB,GAE/DlkB,KAAKimB,cAAcjmB,KAAKkmB,YAAc,EAAG,KAK7Cd,EAAAllB,UAAAkmB,aAAA,SAAatU,GACPiD,GAAkBjD,EAAM9R,KAAKgV,UAAWhV,KAAKiV,WAC/CjV,KAAK26C,aAAe7oC,EACpB9R,KAAKu6C,mBAAmBvyC,KAAK8J,GAC7B9R,KAAKw6C,OAAOxyC,KAAK8J,KAKrBsT,EAAAllB,UAAAomB,cAAA,SAAcrU,EAAcD,GAC1BhS,KAAKumB,YACLvmB,KAAKimB,cAAchU,EAAMD,IAI3BoT,EAAAllB,UAAAsmB,aAAA,SAAavU,EAAcD,GAEJ,UAArBhS,KAAKymB,YAA0BzmB,KAAK0mB,cAAgB1mB,KAAKumB,YAEzDvmB,KAAK2mB,YAAc1U,EACnBjS,KAAKimB,cAAchU,EAAMD,IAG3BoT,EAAAllB,UAAAqmB,UAAA,WACEvmB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,EACnBvjB,KAAKymB,YAAc,OAGrBrB,EAAAllB,UAAAwmB,YAAA,WACE1mB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,EACnBvjB,KAAKymB,YAAc,SAGrBrB,EAAAllB,UAAA+mB,WAAA,WACEjnB,KAAKmjB,YAAa,EAClBnjB,KAAKsjB,cAAe,EACpBtjB,KAAKujB,aAAc,GAGrB6B,EAAAllB,UAAA66C,uBAAA,WACE,OAAO/6C,KAAKqT,WAAa,iCAAmC,eAG9D+R,EAAAllB,UAAAgnB,WAAA,SAAWpkB,GACT9C,KAAKimB,cAAcjmB,KAAKkmB,YAAcpjB,EAAO9C,KAAKkkB,qBAG5CkB,EAAAllB,UAAAunB,oBAAR,SAA4BxV,GAC1B,IAAIzR,EACJ,IAAKA,EAAIyR,EAAMzR,EAAIyR,EAAO,GAAIzR,IAC5BR,KAAK0nB,cAAcljB,KAAKhE,IAIpB4kB,EAAAllB,UAAAynB,WAAR,SAAmBC,EAAaC,GAC9B,IACE,OACED,EAAM/U,gBAAkBgV,EAAMhV,eAC9B+U,EAAMlV,aAAemV,EAAMnV,YAC3BkV,EAAMjV,YAAckV,EAAMlV,UAE5B,MAAO7N,GACP,OAAO,IAIHsgB,EAAAllB,UAAAsnB,WAAR,SAAmB1V,GACjB9R,KAAKsoB,mBAAqBxW,EAAKY,WAC/B1S,KAAK2mB,YAAc7U,EAAKe,cACxB7S,KAAKimB,cAAcjmB,KAAK2mB,YAAa3mB,KAAKsoB,qBAGpClD,EAAAllB,UAAA6nB,aAAR,SAAqB9V,GACnBjS,KAAKynB,oBAAoBxV,GACzBjS,KAAKuoB,mBAAqBtW,EAC1BjS,KAAKwoB,mBAAqBvW,EAAO,GAG3BmT,EAAAllB,UAAA+lB,cAAR,SAAsBhU,EAAcD,GAClC,IAAMyW,EAAgBzoB,KAAKulB,kBAAkBV,UAAU5S,EAAMD,GAC7DhS,KAAK0oB,YAAc,GAAG1jB,OAAOnE,MAAM,GAAI4nB,GACvCzoB,KAAKkkB,mBAAqBlS,EAC1BhS,KAAKikB,aAAejkB,KAAKojB,cAAcpR,GACvChS,KAAKkmB,YAAcjU,EACnBjS,KAAK66C,eAAe5oC,6CA9LiBkS,UAAkD5D,MA3FlCpf,EAAA,CAAtD4E,EAAAA,UAAU,OAAQ,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAgBiH,EAAAA,0CACN/L,EAAA,CAAxD4E,EAAAA,UAAU,SAAU,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAkBiH,EAAAA,4CACX/L,EAAA,CAAvD4E,EAAAA,UAAU,QAAS,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CAS5C/L,EAAA,CAApB2E,EAAAA,MAAM,8BAA+BqM,6BAAAA,oCA8BnBhR,EAAA,CAAlB2E,EAAAA,MAAM,gGAemB3E,EAAA,CAAzB2E,EAAAA,MAAM,mCAAkDqM,6BAAAA,yCAclChR,EAAA,CAAtB2E,EAAAA,MAAM,gCAAmCqM,6BAAAA,sCAkBThR,EAAA,CAAhC8G,EAAAA,OAAO,2FACY9G,EAAA,CAAnB8G,EAAAA,OAAO,kEApHGmd,EAAmBjkB,EAAA,CAL/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,+7GACAgB,UAAW,CAAC+c,GAAmB5D,6BAwHQ4D,GAAkD5D,MAtH9E6E,oBCVb,SAAA41B,IAK4Bh7C,KAAAi7C,aAAwB,GAOxBj7C,KAAAk7C,YAAkC,IAAIpzC,EAAAA,aAkClE,OA9BEkzC,EAAA96C,UAAAi7C,MAAA,WACEn7C,KAAKo7C,cAAcp7C,KAAKi7C,cACxBj7C,KAAKk7C,YAAYlzC,KAAKhI,KAAKi7C,eAG7BD,EAAA96C,UAAAm7C,SAAA,WACE,OACEr7C,KAAKi7C,eAAiBj7C,KAAKs7C,iBAAmBt7C,KAAKu7C,iBAAmBv7C,KAAK+rC,eAAiB/rC,KAAKw7C,cAM7FR,EAAA96C,UAAAq7C,aAAR,WACE,OAAOv7C,KAAKy7C,gBAAgBC,OAItBV,EAAA96C,UAAA6rC,WAAR,WACE,OAAO/rC,KAAKy7C,gBAAgB/iC,UAItBsiC,EAAA96C,UAAAs7C,WAAR,WACE,OAAOx7C,KAAKy7C,gBAAgBE,UAtCNx6C,EAAA,CAAvB2E,EAAAA,MAAM,iCAA2BoH,EAAAA,4CAGR/L,EAAA,CAAzB2E,EAAAA,MAAM,+EAOmB3E,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAZpBkzC,EAAoB75C,EAAA,CADzC4H,EAAAA,aACqBiyC,qBCUpB,SAAAY,EAAoBz7B,GAApB,IAAA7Z,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAA6Z,QAAAA,EAElB7Z,EAAKm1C,gBAAkBn1C,EAAK6Z,QAAmB,UAAE,KAcrD,OAjBsCrgB,EAAA87C,EAAAr1C,GAMpCq1C,EAAA17C,UAAAk7C,cAAA,SAAct4C,GACR9C,KAAK67C,UAAY77C,KAAK67C,SAAS/wC,gBACjC9K,KAAK67C,SAAS/wC,cAAchI,MAAQA,IAIxC84C,EAAA17C,UAAAo7C,cAAA,WACE,GAAIt7C,KAAK67C,UAAY77C,KAAK67C,SAAS/wC,cACjC,OAAO9K,KAAK67C,SAAS/wC,cAAchI,gDAbVud,EAAAA,oBADlBu7B,EAAgBz6C,EAAA,CAJ5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,6HAG6Bia,EAAAA,oBADlBu7B,IAAyBZ,KbbtC,SAAY3M,GAEVA,EAAAA,EAAA,UAAA,IAAA,YAGAA,EAAAA,EAAA,QAAA,IAAA,UAGAA,EAAAA,EAAA,UAAA,GAAA,YAGAA,EAAAA,EAAA,OAAA,IAAA,SAGAA,EAAAA,EAAA,MAAA,IAAA,QAGAA,EAAAA,EAAA,IAAA,IAAA,MAGAA,EAAAA,EAAA,KAAA,IAAA,OAGAA,EAAAA,EAAA,KAAA,IAAA,OAGAA,EAAAA,EAAA,MAAA,IAAA,QAGAA,EAAAA,EAAA,IAAA,GAAA,MA7BF,CAAYA,KAAAA,GAAa,ScAbyN,iBCWZ,SAAAC,IAEE/7C,KAAAugC,GAAKrrB,KAGGlV,KAAAmY,WAAsB,EAgBSnY,KAAA8+B,WAAqB,EAuBxC9+B,KAAA2jB,OAA6B,IAAI7b,EAAAA,aA8BvD,OA1CuBtI,OAAAqC,eAAIk6C,EAAA77C,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,oCAapCi5C,EAAA77C,UAAAq/B,YAAA,WACMv/B,KAAKyjB,iBACPzjB,KAAKyjB,gBAAgBzjB,KAAKg8C,eAG5Bh8C,KAAK2jB,OAAO3b,KAAKhI,KAAKg8C,gBAGxBD,EAAA77C,UAAAs/B,YAAA,SAAY18B,GACL9C,KAAK0Y,WACR1Y,KAAKi8C,kBAAkBn5C,GACvB9C,KAAKu/B,gBAITwc,EAAA77C,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKyjB,gBAAkBjS,GAGzBuqC,EAAA77C,UAAA2mB,kBAAA,SAAkBrV,KAElBuqC,EAAA77C,UAAAonB,WAAA,SAAWxkB,GACLA,IAAU9C,KAAKg8C,eACjBh8C,KAAKi8C,iBAAiBn5C,IA7DX3B,EAAA,CAAd2E,EAAAA,MAAM,4DAagC3E,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAWHx8B,EAAA,CAApB2E,EAAAA,MAAM,sGASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CA5CTi0C,EAAuB56C,EAAA,CAD5C4H,EAAAA,aACqBgzC,qBCgCpB,SAAAG,EAAoBzkC,GAApB,IAAAnR,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,UA+CtB,OAlDyC3X,EAAAo8C,EAAA31C,KAA5B21C,EA0BXA,EAAAh8C,UAAAuY,MAAA,WACMzY,KAAK2gC,gBAAkB3gC,KAAK0Y,UAC9B1Y,KAAK2gC,cAAc71B,cAAc2N,SAIrCyjC,EAAAh8C,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAITyjC,EAAAh8C,UAAA87B,UAAA,SAAUn1B,EAAsB/D,GAC1B+D,EAAM4M,QAAU46B,GAAc8N,OAASt1C,EAAM2M,UAAY66B,GAAc8N,QACzEn8C,KAAKw/B,YAAY18B,GAEjB+D,EAAM+5B,mBAIAsb,EAAAh8C,UAAA+7C,iBAAV,SAA2Bn5C,GACzB9C,KAAKg8C,eAAiC,kBAAVl5C,GAAiC,OAAVA,IAAiBA,EACpE9C,KAAKyX,eAAeqc,0DA7Ccpc,EAAAA,qBAFUvW,EAAA,CAA7C4E,EAAAA,UAAU,gBAAiB,CAAEE,QAAQ,oBAAuBiH,EAAAA,iDADlDgvC,EAAmBE,EAAAj7C,EAAA,CAZ/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,6mBACA8B,gBAAiBC,EAAAA,wBAAwBC,OACzChB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAi3B,KAC9B/2B,OAAO,6BAOyB3N,EAAAA,qBAHzBwkC,IAA4BH,KFxC7BD,GAAAA,EAAAA,oBAAAA,EAAAA,kBAAiB,KAE3BA,GAAA,WAAA,GAAA,aAEAA,GAAAA,GAAA,SAAA,GAAA,WAEAA,GAAAA,GAAA,SAAA,GAAA,WGSF,ICbYO,GDiBCC,GAAyB,CACpCzlC,GAAqB,CACnB43B,OAAQ,iBAEV13B,GAAqB,CACnB03B,OAAQ,wBAEVz3B,GAAqB,CACnBy3B,OAAQ,0BAEVx3B,GAAqB,CACnBw3B,OAAQ,oCAsBZ,SAAA8N,IACUv8C,KAAAw8C,gBAA2B,EAC3Bx8C,KAAAy8C,cAAyB,IACzBz8C,KAAAmY,WAAsB,EACtBnY,KAAA08C,qBAAgC,EAChC18C,KAAA28C,YAAuB,QACvB38C,KAAA48C,YAAuB,QACvB58C,KAAA68C,iBAA4B,EAC5B78C,KAAA88C,YAAkChB,EAAAA,kBAAkB3nC,WAGpDnU,KAAAo/B,SAAsD,GACtDp/B,KAAA6+B,WAAsB,EACtB7+B,KAAA+8C,OAAkB,EAEhB/8C,KAAAg9C,mBAA0D,GAC1Dh9C,KAAAi9C,iBAAwD,GAElEj9C,KAAAk9C,aAAoD,GAEpDl9C,KAAAm9C,mBAA6B,EAC7Bn9C,KAAAo9C,eAAyB,EACzBp9C,KAAAq9C,aAAuB,EAIvBr9C,KAAAs9C,oBAA8B,GAK9Bt9C,KAAAu9C,eAAsD,GAefv9C,KAAA8+B,WAAqB,EASpC9+B,KAAAw9C,YAAuB,GA2U3Bx9C,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG5B9H,KAAA++B,cAAoC,IAAIj3B,EAAAA,aA4ZnE,OAnsB4BtI,OAAAqC,eAAI06C,EAAAr8C,UAAA,eAAY,KAM1C,WACE,OAAOF,KAAKy8C,mBAPY,SAAiB35C,GACzC,IAAM26C,EAAcvsC,SAAcpO,EAAO,IAEzC9C,KAAKy8C,eAAiB5mC,MAAM4nC,IAAgBA,EAAc,EAAIA,EAtI3B,qCAsJJj+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,qBAAkB,KAIvD,WACE,OAAOF,KAAK08C,yBALmB,SAAuB55C,GACtD9C,KAAK08C,oBAAsB9rC,EAAiB9N,oCAmBtBtD,OAAAqC,eAAI06C,EAAAr8C,UAAA,aAAU,KAQtC,WACE,OAAOF,KAAK48C,iBATU,SAAe95C,GACrC9C,KAAK48C,YAAc95C,GAzKc,QA2K7BsO,EAASpR,KAAK09C,cAAe,WAAa19C,KAAKyO,UACjDzO,KAAKyO,QAAQkvC,WAAa39C,KAAK48C,8CAoBXp9C,OAAAqC,eAAI06C,EAAAr8C,UAAA,aAAU,KAQtC,WACE,OAAOF,KAAK28C,iBATU,SAAe75C,GACrC9C,KAAK28C,YAAc75C,GAlMc,QAoM7BsO,EAASpR,KAAK09C,cAAe,WAAa19C,KAAKyO,UACjDzO,KAAKyO,QAAQmvC,WAAa59C,KAAK28C,8CAgBNn9C,OAAAqC,eAAI06C,EAAAr8C,UAAA,kBAAe,KAMhD,WACE,OAAOF,KAAK68C,sBAPe,SAAoB/5C,GAC/C,IAAM+6C,EAA8B,iBAAV/6C,EAAqBoO,SAASpO,EAAO,IAAMA,EAErE9C,KAAK68C,iBAAmB3e,OAAO4f,UAAUD,GAAcA,EAAa,mCAejDr+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,cAAcnnB,KAAK+9C,gDAeEv+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,gBAAa,KAI7C,WACE,OAAOF,KAAKw8C,oBALc,SAAkBwB,GAC5Ch+C,KAAKw8C,eAAiB5rC,EAAiBotC,oCAepBx+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,GAElC1Y,KAAKmnB,cAAcnnB,KAAK+9C,gDAmBTv+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,OAAI,KAKzB,WACE,OAAOF,KAAK+8C,WANG,SAASrM,GACxB1wC,KAAK+8C,MAAQnsC,EAAiB8/B,GAC9B1wC,KAAKi+C,wDAmBaz+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,UAAO,KAM/B,WACE,OAAOF,KAAKo/B,cAPM,SAAYE,GAC9Bt/B,KAAKo/B,SAAWz/B,MAAMqW,QAAQspB,GAAWA,EAAU,GAEnDt/B,KAAKi+C,wDAiCiBz+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,aAAU,KAetC,WACE,OAAOF,KAAK88C,iBAhBU,SAAeoB,GAErC,OADAl+C,KAAK88C,YAAcoB,KAAcpC,EAAAA,kBAAoBoC,EAAapC,EAAAA,kBAAkB3nC,WAC5EnU,KAAK88C,YAAY/pC,YACvB,IAAK,aACH/S,KAAK88C,YAAchB,EAAAA,kBAAkB3nC,WACrC,MACF,IAAK,WACHnU,KAAK88C,YAAchB,EAAAA,kBAAkBxwC,SACrC,MACF,IAAK,WACHtL,KAAK88C,YAAchB,EAAAA,kBAAkBqC,2CAkBjB3+C,OAAAqC,eAAI06C,EAAAr8C,UAAA,eAAY,KAI1C,WACE,OAAOF,KAAKo+C,mBALY,SAAiBC,GACzCr+C,KAAKo+C,cAAgBC,GAAiC,IAAjBA,IAAuC,IAAjBA,EAAyBA,OAAel1C,mCAgChF3J,OAAAqC,eAAI06C,EAAAr8C,UAAA,WAAQ,KAYjC,WACE,OAAOF,KAAKqwC,WAAaiM,GAAuB/sC,UAb7B,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTk8C,GAAsC,IACtCA,GAAuB/sC,MACvBzM,GAGYw5C,GAAuB/sC,sCAwB5C/P,OAAAqC,eAAI06C,EAAAr8C,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKo/B,SAASz+B,QAAUX,KAAKo/B,SAAS,GAAGv/B,eAAe,4CAGjE08C,EAAAr8C,UAAA+I,SAAA,WACEjJ,KAAKs+C,mBAGP/B,EAAAr8C,UAAAq+C,cAAA,WACMv+C,KAAK09C,gBACP19C,KAAKw+C,WAAWx+C,KAAK09C,eACrB19C,KAAKy+C,wBAITlC,EAAAr8C,UAAAs+C,WAAA,SAAW/vC,GACLA,IACE2C,EAAS3C,EAAS,UACpBzO,KAAKyO,QAAgCA,GAErCzO,KAAKyO,QAAUzO,KAAK0+C,eACpB1+C,KAAKyO,QAAQkwC,iBAAyBlwC,EAASzO,KAAK49C,WAAY59C,KAAK29C,eAK3EpB,EAAAr8C,UAAA0+C,cAAA,SAAcC,EAAgB5e,EAAsCie,GAClE,OAAQA,GACN,KAAKpC,EAAAA,kBAAkB3nC,WACrB,OAAOnU,KAAKmU,WAAW0qC,EAAQ5e,GACjC,KAAK6b,EAAAA,kBAAkBxwC,SACrB,OAAOtL,KAAKsL,SAASuzC,EAAQ5e,GAC/B,KAAK6b,EAAAA,kBAAkBqC,SACrB,OAAOn+C,KAAKm+C,SAASU,EAAQ5e,KAInCsc,EAAAr8C,UAAAiU,WAAA,SAAW0qC,EAAgB5e,GACzB,OAAOA,EAAOt8B,MAAM4M,cAAc4D,WAAW0qC,EAAOtuC,gBAGtDgsC,EAAAr8C,UAAAoL,SAAA,SAASuzC,EAAgB5e,GACvB,OAAOA,EAAOt8B,MAAM4M,cAAcvP,QAAQ69C,EAAOtuC,gBAAkB,GAGrEgsC,EAAAr8C,UAAAi+C,SAAA,SAASU,EAAgB5e,GACvB,OAAOA,EAAOt8B,MAAM4M,cAAc4tC,SAASU,EAAOtuC,gBAGpDgsC,EAAAr8C,UAAA4+C,mBAAA,SAAmBh8C,EAAYw8B,GAA/B,IAAAh5B,EAAAtG,KACE,OAAOs/B,EAAUA,EAAQ70B,MAAK,SAACw1B,GAAgB,OAAA35B,EAAKy4C,QAAQ9e,EAAOn9B,MAAOA,MAAU,MAGtFy5C,EAAAr8C,UAAA8+C,mBAAA,SAAmBr7C,EAAY27B,GAC7B,OAAIA,EACKA,EAAQ70B,MAAK,SAACw1B,GACnB,OAAOA,EAAOt8B,MAAMoP,WAAWxC,gBAAkB5M,EAAMoP,WAAWxC,iBAG7D,MAIXgsC,EAAAr8C,UAAA++C,oBAAA,SAAoBhf,EAAsCif,EAA+BC,QAA/B,IAAAD,IAAAA,GAAA,QAA+B,IAAAC,IAAAA,GAAA,GACvF,IAAMC,EAAenf,GAAUA,EAAOt8B,OAAU,GAWhD,GATA3D,KAAKq/C,wBAAwBpf,GAGzBjgC,KAAKg+C,eAAiBkB,EACxBl/C,KAAKo7C,cAAcgE,GACTp/C,KAAKg+C,eACfh+C,KAAKo7C,cAAcgE,GAGjBF,EAAe,CACjB,IAAMI,EAAerf,GAAUA,EAAOn9B,YAAUqG,EAEhDnJ,KAAKu/C,YAAYD,EAAaH,KAIlC5C,EAAAr8C,UAAAs/C,gBAAA,SAAgB18C,GAEd,OAAO9C,KAAKy/C,cAAgBz/C,KAAKy/C,cAAc38C,GAAS9C,KAAK++B,cAAc/2B,KAAKlF,IAGlFy5C,EAAAr8C,UAAA6+C,QAAA,SAAQj8C,EAAY48C,GAClB,OAAK58C,GAAmB,IAAVA,IAAgB48C,EACrB58C,EAAMiQ,aAAe2sC,EAAW3sC,aAG1B,OAAVjQ,GAAiC,OAAf48C,QAAmCv2C,IAAVrG,QAAsCqG,IAAfu2C,KACrE58C,EAAQ,GAAGA,GAGNA,IAAU48C,IAGnBnD,EAAAr8C,UAAAy/C,eAAA,SAAed,EAAgBvf,EAA8C4e,GAA7E,IAAA53C,EAAAtG,KACE,GAAI6+C,GAAUvf,GAAWA,EAAQ3+B,OAAQ,CACvC,IAEIi/C,EAFEC,EAAkD,GACpDC,GAAkC,EAGtCxgB,EAAQ5f,SAAQ,SAAAugB,GACd,GAAI,YAAaA,EAEf,OADA6f,GAAyB,EACjBF,EAAoB3f,EAG1BA,EAAOt8B,QAAU2C,EAAKs4C,cAAcC,EAAQ5e,EAAQie,IAAe53C,EAAKmI,WACtEnI,EAAKy5C,oBAAsBD,IAC7BD,EAAWr7C,KAAKo7C,GAChBE,GAAyB,GAG3BD,EAAWr7C,KAAKy7B,OAIpBjgC,KAAKggD,aAAeH,EAAW7/C,KAAK+/C,kBAAoB,EAAI,GAC5D//C,KAAKs+C,gBAAgBuB,QAErB7/C,KAAKs+C,mBAIT/B,EAAAr8C,UAAAo+C,gBAAA,SAAgBhf,GACd,IAAM2gB,EAAc3gB,GAAOv6B,EAAQ/E,KAAKi9C,kBAElCiD,GAAc5gB,GAAWt/B,KAAK+9C,cAAgB,CAAA39C,EAAA,GAAMJ,KAAKmgD,iBAAoBF,EAE/EC,EAAWv/C,SACbX,KAAKu9C,eAAiB2C,GAEjBlgD,KAAKggD,cAAgBhgD,KAAKu9C,eAAe58C,SAC5CX,KAAKggD,aAAeC,EAAYx1C,MAAK,SAAAw1B,GAAU,YAAiB92B,IAAjB82B,EAAOn9B,YAK5Dy5C,EAAAr8C,UAAAkgD,cAAA,SAAct9C,EAAYw8B,EAA8C5yB,gBAAA,IAAAA,IAAAA,GAAA,GACtE,IAAM2zB,EAAc3zB,EAAU4yB,EAAQ9yB,MAAM,GAAGE,UAAY4yB,EAAQ9yB,MAAM,GACrE6zC,EAAc,KACdC,GAAQ,MAEZ,IAAqB,IAAAC,EAAA97C,EAAA47B,GAAWmgB,EAAAD,EAAAv9C,QAAAw9C,EAAAr9C,KAAAq9C,EAAAD,EAAAv9C,OAAE,CAA7B,IAAMi9B,EAAMugB,EAAA19C,MAIf,GAHIm9B,EAAOn9B,QAAUu9C,IACnBA,EAAcpgB,GAEZA,EAAOn9B,OAASw9C,EAClB,OAAOrgB,EAELjgC,KAAK++C,QAAQ9e,EAAOn9B,MAAOA,KAC7Bw9C,GAAQ,qGAIZ,OAAOD,GAGT9D,EAAAr8C,UAAAugD,qBAAA,WACE,IAAK,IAAIjgD,EAAI,EAAGA,EAAIR,KAAKu9C,eAAe58C,OAAQH,IAC9C,GAAIR,KAAK0gD,eAAe1gD,KAAKu9C,eAAe/8C,GAAIR,KAAKggD,cACnD,OAAOx/C,EAGX,OAAO,MAGT+7C,EAAAr8C,UAAAwgD,eAAA,SAAeC,EAAWC,GACxB,OAAOC,KAAKC,UAAUH,KAAUE,KAAKC,UAAUF,IAGjDrE,EAAAr8C,UAAA6gD,kBAAA,WACE,IAAMrB,EAAa1/C,KAAKs7C,gBAElB+E,EAAcrgD,KAAKg/C,mBAAmBU,EAAY1/C,KAAKi9C,kBAE7D,GAAIoD,GAAeA,EAAYv9C,QAAU9C,KAAK+9C,cAI5C,OAHA/9C,KAAKi/C,oBAAoBoB,QAEzBrgD,KAAKs9C,oBAAsB+C,EAAY18C,OAElC,GAAI3D,KAAK+9C,eAAiB/9C,KAAKmgD,gBAAkBngD,KAAKmgD,eAAex8C,QAAU+7C,EAIpF,OAHA1/C,KAAKghD,wCAELhhD,KAAKs9C,oBAAsBt9C,KAAKmgD,eAAex8C,OAE1C,GAAI+7C,IAAeW,EAAa,CACrC,IAAMY,KAAmCjhD,KAAKmgD,gBAAkBngD,KAAKmgD,eAAex8C,QAAU+7C,GAK9F,OAHA1/C,KAAKi/C,oBAAoB,KAAMgC,GAAiCjhD,KAAKg+C,oBAErEh+C,KAAKs9C,oBAAsB,MAM/Bf,EAAAr8C,UAAAonB,WAAA,SAAWxkB,GACT,GAAImR,GAAWnR,KAAW9C,KAAKyO,SAAWzO,KAAKi9C,kBAAoBj9C,KAAKi9C,iBAAiBt8C,OAAQ,CAC/F,IAAMs/B,EAASjgC,KAAK8+C,mBAAmBh8C,EAAO9C,KAAKi9C,kBAGnD,OAFAj9C,KAAKi/C,oBAAoBhf,QACzBjgC,KAAKs+C,kBAKP,GAAIx7C,GAAS9C,KAAKyO,QAChB,OAAOzO,KAAKkhD,iBAAiBp+C,GAE7B9C,KAAKi/C,oBAAoB,MAAM,GAAM,GACrCj/C,KAAKs+C,mBAIT/B,EAAAr8C,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKy/C,cAAgBjuC,GAGvB+qC,EAAAr8C,UAAA2mB,kBAAA,SAAkBrV,GAChBxR,KAAKmhD,eAAiB3vC,GAGxB+qC,EAAAr8C,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzB+qC,EAAAr8C,UAAAmnB,SAAA,SAASuY,GACP,GAAIhC,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,OAC/D,MAAO,CACL+6B,SAAU,CACRC,OAAO,KAMLye,EAAAr8C,UAAAkhD,4BAAV,SAAsC3yC,GAChCA,GACFzO,KAAKi9C,iBAAmB,GACxBj9C,KAAKqhD,6BACLrhD,KAAKu+C,kBAELv+C,KAAKyO,aAAUtF,EACfnJ,KAAKi9C,iBAAmBj9C,KAAKg9C,oBAG/Bh9C,KAAKu9C,eAAiB,GACtBv9C,KAAKo9C,eAAgB,GAGbb,EAAAr8C,UAAAmhD,2BAAV,WACMrhD,KAAKshD,gBACPthD,KAAKshD,eAAe36C,eAId41C,EAAAr8C,UAAAinB,cAAV,SAAwBC,GAClBpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAIjBm1B,EAAAr8C,UAAA+9C,qBAAR,WACEj+C,KAAKi9C,iBAAmBj9C,KAAKs/B,QAAQ3+B,OAAS,EAAIX,KAAKuhD,oBAAoBvhD,KAAKs/B,SAAWt/B,KAAKs/B,QAChGt/B,KAAKg9C,mBAAqBh9C,KAAKi9C,iBAE/Bj9C,KAAKs+C,mBAGC/B,EAAAr8C,UAAAshD,eAAR,SAAuBC,EAAcC,GACnC,IAAMC,EAASF,EAAQ99C,MAAMoP,WAAWxC,cAClCqxC,EAASF,EAAQ/9C,MAAMoP,WAAWxC,cAExC,OAAOoxC,EAASC,GAAU,EAAID,EAASC,EAAS,EAAI,GAG9CrF,EAAAr8C,UAAA2hD,oBAAR,SACEviB,EACAwiB,EACAC,GAEA,OACEziB,EAAQ1G,MAAK,SAAAqH,GAAU,OAAAA,EAAOt8B,QAAUm+C,MACvCC,GAA2BA,EAAwBnpB,MAAK,SAAAqH,GAAU,OAAAA,EAAOt8B,QAAUm+C,MAIhFvF,EAAAr8C,UAAAqhD,oBAAR,SAA4BS,GAC1B,IAAM/E,EAAmB+E,EAAah9C,SAChCi9C,EAA2BjiD,KAAKkiD,mBAAmBjF,GAIzD,OAFAj9C,KAAKmiD,YAAYF,GAEbjiD,KAAK+/C,mBAAqBkC,EAAyBthD,OAAS,EACvDX,KAAKoiD,wBAAwBH,GAG/BA,GAGD1F,EAAAr8C,UAAAiiD,YAAR,SAAoBlF,GAClB,GAAIA,EAAiBt8C,OAAS,GAAKX,KAAK0wC,KACtC,OAAOuM,EAAiBvM,KAAK1wC,KAAKwhD,iBAI9BjF,EAAAr8C,UAAAmiD,cAAR,SAAsBP,EAA6BQ,GACzC,IAAA3+C,EAAAm+C,EAAAn+C,MAAO27B,EAAAwiB,EAAAxiB,QAASx8B,EAAAg/C,EAAAh/C,MAExB,OAAI9C,KAAK+/C,kBAEJ9rC,GAAWtQ,IAAU27B,GAAWA,EAAQ3+B,OAAS,IAAiC,IAA1B2hD,GAAkCruC,GAAWnR,GAInGmR,GAAWnR,KAAWw8B,GAGvBid,EAAAr8C,UAAAgiD,mBAAR,SACEF,EACAM,EACAP,GAHF,IAAAz7C,EAAAtG,KAKE,OAAOgiD,EAAa11C,QAAO,SAACi2C,EAAoBT,GAC9C,OACGx7C,EAAKk8C,iBAAiBV,KACvBx7C,EAAKu7C,oBAAoBU,EAAoBT,EAAcn+C,MAAOo+C,IACjEz7C,EAAK+7C,cAAcP,EAAeQ,IAKrCC,EAAmB/9C,KAAKs9C,GACjBS,GAJEA,IAKR,KAGGhG,EAAAr8C,UAAAkiD,wBAAR,SAAgCnF,GAAhC,IAAA32C,EAAAtG,KACE,OAAOi9C,EAAiB3wC,QAAO,SAACy1C,EAAyBD,GAC/C,IAAAxiB,EAAAwiB,EAAAxiB,QAAS37B,EAAAm+C,EAAAn+C,MACX8+C,EAAgCn8C,EAAK47C,mBAAmB5iB,GAAS,EAAMyiB,GAQ7E,OANIU,EAA8B9hD,OAAS,IACzC2F,EAAK67C,YAAYM,GAEjBV,EAAwBv9C,KAAI3D,MAA5BkhD,EAAuBh9C,EAAA,CAAM,CAAEpB,MAAOA,EAAO27B,SAAS,IAAWmjB,KAG5DV,IACN,KAGGxF,EAAAr8C,UAAAsiD,iBAAR,SAAyBV,GACf,IAAAn+C,EAAAm+C,EAAAn+C,MAAO27B,EAAAwiB,EAAAxiB,QAASx8B,EAAAg/C,EAAAh/C,MAExB,QAAK9C,KAAK+/C,mBAAqBzgB,IAAY37B,IAAYA,IAAUb,IAAY9C,KAAK+/C,mBAAqBzgB,KAIlGwiB,EAAcn+C,QACjBm+C,EAAcn+C,MAAQm+C,EAAch/C,MAAMiQ,aAIrC,IAGDwpC,EAAAr8C,UAAAm/C,wBAAR,SAAgCpf,GAC1BA,GACFjgC,KAAKggD,aAAe/f,EACpBjgC,KAAKmgD,eAAiBlgB,IAEtBjgC,KAAKggD,kBAAe72C,EACpBnJ,KAAKmgD,oBAAiBh3C,IAIlBozC,EAAAr8C,UAAAq/C,YAAR,SAAoBz8C,EAAY4/C,QAAA,IAAAA,IAAAA,GAAA,GAC1B5/C,IAAU9C,KAAK+9C,gBACZ2E,GACH1iD,KAAKw/C,gBAAgB18C,GAGvB9C,KAAK2jB,OAAO3b,KAAKlF,IAGnB9C,KAAK+9C,cAAgBj7C,GAGfy5C,EAAAr8C,UAAA8gD,iCAAR,WACE,IAAM2B,EAAY3iD,KAAK8+C,mBAAmB9+C,KAAK+9C,cAAe/9C,KAAKi9C,kBAEnE,GAAI0F,GAAaA,EAAUh/C,MACzB,OAAO3D,KAAKi/C,oBAAoB0D,IAhvBGxhD,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAyBoB3E,EAAA,CAA1B2E,EAAAA,MAAM,iFAWmB3E,EAAA,CAAzB2E,EAAAA,MAAM,6GAmB0B3E,EAAA,CAAhC2E,EAAAA,MAAM,4HAoBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,yGAwBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,yGAoBsB3E,EAAA,CAA5B2E,EAAAA,MAAM,mHAkBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAkBqB3E,EAAA,CAA3B2E,EAAAA,MAAM,kHAgBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAmBU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8FAqBa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCAuBpBwB,EAAA,CAApB2E,EAAAA,MAAM,uEAaiB3E,EAAA,CAAvB2E,EAAAA,MAAM,yGA4BmB3E,EAAA,CAAzB2E,EAAAA,MAAM,6GAiCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAiBa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGJ3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAAiCH,EAAAA,mDArYrBy0C,EAAoBp7C,EAAA,CADzC4H,EAAAA,aACqBwzC,oBE9BpB,SAAAqG,EAAoBr1C,GAAAvN,KAAAuN,KAAAA,EAPpBvN,KAAA49C,WAAqB,QACrB59C,KAAA29C,WAAqB,QAmDvB,OAjDEn+C,OAAAqC,eAAI+gD,EAAA1iD,UAAA,MAAG,KAAP,WACE,OAAOF,KAAKwN,sCAKdo1C,EAAA1iD,UAAA2iD,gBAAA,SAAgBnxC,EAAY2sC,GAA5B,IAAA/3C,EAAAtG,KACQ8C,EAAQ4O,EAAM5O,MACdggD,EAAwB/sC,GAAmBsoC,GAE3CzwC,EAAMxN,EAAAA,EAAA,GAAQ0iD,GAAqB,CAAE7iC,OAAQnd,IAEnD,OAAO9C,KAAKuN,KACTc,IAAI,GAAGrO,KAAK2N,IAAO,CAAEW,aAAc,OAAQV,OAAQA,IACnDm1C,KAAK32C,EAAAA,KAAI,SAAC42C,GAAyB,OAAA18C,EAAK28C,wBAAwBD,EAASv5C,YAG9Em5C,EAAA1iD,UAAAghD,iBAAA,SAAiBp+C,EAAwBu7C,GAAzC,IAAA/3C,EAAAtG,KACQ8iD,EAAwB/sC,GAAmBsoC,GAEjD,OAAOr+C,KAAKuN,KACTc,IAAOrO,KAAK2N,IAAG,IAAI7K,EAAS,CAAE8K,OAAQk1C,IACtCC,KAAK32C,EAAAA,KAAI,SAAAyB,GAAQ,OAAAvH,EAAK48C,mBAAmBr1C,QAG9C+0C,EAAA1iD,UAAAy+C,iBAAA,SAAiBhxC,EAAaiwC,EAAoBD,GAChD39C,KAAKwN,KAAOG,EACZ3N,KAAK49C,WAAaA,EAClB59C,KAAK29C,WAAaA,GAGZiF,EAAA1iD,UAAA+iD,wBAAR,SAAgCx5C,GAAhC,IAAAnD,EAAAtG,KACE,OAAIyJ,GAASA,EAAM9I,OAAS,EACnB8I,EAAM2C,KAAI,SAAAyB,GACf,OAAOvH,EAAK48C,mBAAmBr1C,MAI5B,IAGD+0C,EAAA1iD,UAAAgjD,mBAAR,SAA2Br1C,GACzB,GAAIA,GAAQA,EAAK7N,KAAK29C,YAIpB,MAAO,CAAEh6C,MAHKkK,EAAK7N,KAAK49C,YAGR96C,MAFF+K,EAAK7N,KAAK29C,uDAxCFpvC,EAAAA,cAVfq0C,EAAoBzhD,EAAA,CADhCqE,EAAAA,oCAW2B+I,EAAAA,cAVfq0C,oBCqDX,SAAAO,EAAmBvP,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAFrBm9C,EAA8BhiD,EAAA,CAH1C4H,EAAAA,UAAU,CACT5C,SAAU,qDAIsBH,EAAAA,eAFrBm9C,qBCoDX,SAAAC,EACSx5C,EACAD,EACA+0C,EACA70C,EACC4N,EACA4rC,EACAC,GAPV,IAAAh9C,EASEC,EAAA3F,KAAAZ,OAAOA,YARAsG,EAAAsD,QAAAA,EACAtD,EAAAqD,QAAAA,EACArD,EAAAo4C,eAAAA,EACAp4C,EAAAuD,SAAAA,EACCvD,EAAAmR,eAAAA,EACAnR,EAAA+8C,gBAAAA,EACA/8C,EAAAg9C,UAAAA,EA9BFh9C,EAAAi9C,oBAA8B,EAEtCj9C,EAAAk9C,UAAoB,qBACpBl9C,EAAAm9C,WAAqB,EAErBn9C,EAAAo9C,8BAAwC,EACxCp9C,EAAAq9C,UAAY,EAEZr9C,EAAAs9C,mBAA6B,EAqfrBt9C,EAAA0zB,SAAW,WACjB1zB,EAAKu9C,2BA5dLv9C,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,cA+gB1C,OAljBsCL,EAAAsjD,EAAA78C,KAAzB68C,EAsCX5jD,OAAAqC,eAAIuhD,EAAAljD,UAAA,oBAAiB,KAerB,WACE,OAAOF,KAAKujD,wBAhBd,SAAsBzgD,GAChBA,GACF9C,KAAKujD,mBAAqBzgD,EAE1B9C,KAAKyX,eAAeqc,gBAEpB9zB,KAAK8jD,uBACL9jD,KAAKq7B,wBAELr7B,KAAKujD,mBAAqBzgD,EAE1B9C,KAAKi6B,oDAQTmpB,EAAAljD,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAIT2qC,EAAAljD,UAAAitC,YAAA,SAAYC,GACNA,EAAQ2W,eACV/jD,KAAKqhD,6BACLrhD,KAAKy+C,uBAGHrR,EAAQsQ,eACV19C,KAAKohD,4BAA4BphD,KAAK09C,gBAI1C0F,EAAAljD,UAAAuG,YAAA,WACEzG,KAAKi6B,kBAEDj6B,KAAKgkD,oBACPhkD,KAAKgkD,mBAAmBr9C,cAGtB3G,KAAK8O,iBACP9O,KAAK8O,gBAAgBnI,eAqBzBy8C,EAAAljD,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKikD,aAAan5C,cAAc2N,SAIpC2qC,EAAAljD,UAAA87B,UAAA,SAAUn1B,GACR,IAAMvF,EAAMuF,EAAM2M,QACZksC,EAAa74C,EAAMxF,OAAOyB,MAGhC,GAAI9C,KAAKyO,SAAWnN,IAAQ+sC,GAAc6V,KAAOxE,EAE/C,OADA1/C,KAAKmkD,wBAAuB,GACrBnkD,KAAKkhD,iBAAiBxB,GAI/B,GAAIp+C,IAAQ+sC,GAAc+V,SAAW9iD,IAAQ+sC,GAAcgW,UAczD,OAbAx9C,EAAM+5B,iBAEF5gC,KAAKyjD,YACHniD,IAAQ+sC,GAAc+V,QACxBpkD,KAAKskD,uBAELtkD,KAAKukD,oBAITvkD,KAAKmkD,wBAAuB,GAC5BnkD,KAAKq9C,cAAcr9C,KAAKg+C,eAAgBh+C,KAAKq9C,iBAC7Cr9C,KAAK4jD,oBAAoB5jD,KAAKg+C,eAAgBh+C,KAAK4jD,mBAKrD,GAAItiD,IAAQ+sC,GAAc6V,KAAO5iD,IAAQ+sC,GAAcmW,IAgBrD,OAfIljD,IAAQ+sC,GAAcmW,KAAOxkD,KAAKyjD,YACpC58C,EAAM+5B,iBACN/5B,EAAMm7B,mBAGRhiC,KAAKmkD,wBAAuB,GAC5BnkD,KAAK+gD,yBAEA/gD,KAAKyO,UAERzO,KAAKggD,aAAehgD,KAAKg+C,gBAAkBh+C,KAAK+9C,mBAAgB50C,EAAYnJ,KAAKggD,aAEjFhgD,KAAKs+C,oBAOT,GAAIh9C,IAAQ+sC,GAAcoW,OAASzkD,KAAKggD,cAAgBhgD,KAAKyjD,UAAW,CACtE,IAAMvE,EAAgBl/C,KAAKggD,aAAal9C,QAAU9C,KAAK+9C,eAAiB2B,IAAe1/C,KAAKggD,aAAar8C,MAQzG,OANA3D,KAAKmkD,wBAAuB,GAE5BnkD,KAAKi/C,oBAAoBj/C,KAAKggD,aAAcd,GAC5Cl/C,KAAKq9C,aAAc,OAEnBr9C,KAAKs+C,kBAIHh9C,IAAQ+sC,GAAcoW,OACxBzkD,KAAKmkD,wBAAuB,IAIhCf,EAAAljD,UAAAwkD,QAAA,SAAQ79C,GACN,IAAMvF,EAAMuF,EAAM2M,SAAW3M,EAAM4M,MAC7BisC,EAAa74C,EAAMxF,OAAOyB,MAIhC,GAFmBxB,IAAQ+sC,GAAc+V,SAAW9iD,IAAQ+sC,GAAcgW,WAAa/iD,IAAQ+sC,GAAcoW,MAE7F,CACd,GAAI/E,EACG1/C,KAAKyO,SAAWzO,KAAKs9C,sBAAwBoC,IAChD1/C,KAAK4jD,mBAAoB,EACzB5jD,KAAKq9C,aAAc,EACnBr9C,KAAK2/C,eAAeD,EAAY1/C,KAAKi9C,iBAAkBj9C,KAAKk+C,iBAEzD,CAGL,IAAMyG,EACJ3kD,KAAKyO,SAAWzO,KAAK+9C,eAAiB/9C,KAAKmgD,eAAex8C,QAAU3D,KAAKs9C,oBAE3Et9C,KAAKi/C,oBAAoB,MAEpBj/C,KAAKyO,QAECk2C,GACT3kD,KAAKs+C,gBAAev5C,EAAK/E,KAAKk9C,eAF9Bl9C,KAAKs+C,kBAKPt+C,KAAKq9C,aAAc,EAIjBr9C,KAAKs9C,sBAAwBoC,IAC/B1/C,KAAKyX,eAAeqc,gBAEpB9zB,KAAKmkD,wBAAuB,IAIhCnkD,KAAKs9C,oBAAsBoC,GAG7B0D,EAAAljD,UAAAu+C,oBAAA,WAAA,IAAAn4C,EAAAtG,KACE,GAAIA,KAAKyO,QAAS,CAChB,IAAMm2C,EAAkBC,EAAAA,UAAU7kD,KAAKikD,aAAan5C,cAAe,SAASi4C,KAC1E9iC,EAAAA,QAAO,SAAClf,GAAW,OAAAuF,EAAKw+C,yBAAyB/jD,EAAEyS,YACnDpH,EAAAA,KAAI,SAACrL,GAAW,OAAAA,EAAEgkD,cAAcjiD,SAChCkiD,EAAAA,uBACAC,EAAAA,KAAI,WACF3+C,EAAKs9C,mBAAoB,KAE3BG,EAAAA,aAAa/jD,KAAK+jD,eAGpB/jD,KAAKshD,eAAiBsD,EAAgB59C,WAAU,SAAAlE,IAC1CA,EAAMnC,QAAU2F,EAAK4+C,kBAAoBpiD,IAC3CwD,EAAK6+C,mBAAmBriD,QAMhCsgD,EAAAljD,UAAAilD,mBAAA,SAAmBriD,GACZ9C,KAAK0jD,8BAAkC1jD,KAAKmgD,gBAAkBr9C,IAAU9C,KAAKmgD,eAAex8C,OAC/F3D,KAAKolD,YAAYtiD,IAIrBsgD,EAAAljD,UAAAklD,YAAA,SAAYtiD,GAAZ,IAAAwD,EAAAtG,KACEA,KAAKmkD,wBAAuB,GAC5BnkD,KAAKqlD,mBAAoB,EAEzB,IAAM3zC,EAAQ,CAAEulB,SAAUj3B,KAAK49C,WAAY96C,MAAKA,GAEhD9C,KAAKgkD,mBAAqBhkD,KAAKyO,QAC5Bo0C,gBAAgBnxC,EAAO1R,KAAKq+C,cAC5Br3C,WAAU,SAAAyC,GAAS,OAAAnD,EAAKg/C,wBAAwBxiD,EAAO2G,OAG5D25C,EAAAljD,UAAAolD,wBAAA,SAAwBxiD,EAAO2G,GAC7BzJ,KAAK4jD,mBAAoB,EACzB5jD,KAAKqlD,mBAAoB,EACzBrlD,KAAKs/B,QAAU71B,EAEfzJ,KAAK2/C,eAAe78C,EAAO2G,EAAOzJ,KAAKk+C,YAEvCl+C,KAAKyX,eAAeqc,gBAEpB9zB,KAAKmkD,wBAAuB,GAExBnkD,KAAKo9C,gBACPp9C,KAAKo9C,eAAiBp9C,KAAKo9C,cAE3Bp9C,KAAKk9C,aAAel9C,KAAKi9C,mBAI7BmG,EAAAljD,UAAAghD,iBAAA,SAAiBp+C,GAAjB,IAAAwD,EAAAtG,KACOA,KAAK+9C,gBACR/9C,KAAK0jD,8BAA+B,EAEpC1jD,KAAK8O,gBAAkB9O,KAAKyO,QACzByyC,iBAAiBp+C,EAAO9C,KAAKq+C,cAC7Br3C,WAAU,SAAA6G,GAAQ,OAAAvH,EAAKi/C,4BAA4B13C,QAI1Du1C,EAAAljD,UAAAqlD,4BAAA,SAA4B13C,GAA5B,IAAAvH,EAAAtG,KACM6N,GACF7N,KAAKs/B,QAAU,CAACzxB,GAChB7N,KAAKwlD,cAAc33C,IAEnB7N,KAAKi/C,oBAAoB,MAG3BpyC,YAAW,WACTvG,EAAKo9C,8BAA+B,IACnC1jD,KAAK+jD,eAGVX,EAAAljD,UAAAokD,qBAAA,WACE,IAAMmB,EAAmBzlD,KAAKggD,cAAgBhgD,KAAKggD,aAAal9C,MAEhE,GAAI2iD,EAAkB,CACpB,IAAMC,EAAa1lD,KAAKogD,cAAcqF,EAAkBzlD,KAAKu9C,gBAAgB,GAE7Ev9C,KAAKi/C,oBAAoByG,EAAYA,GAAcA,EAAW5iD,QAAU2iD,IAAqBzlD,KAAKg+C,oBAC7F,GAAIh+C,KAAKu9C,eAAe58C,OAAQ,CACrC,IAAMglD,EAAgB3lD,KAAKu9C,eAAev9C,KAAKu9C,eAAe58C,OAAS,GAEvEX,KAAKi/C,oBAAoB0G,EAAeA,EAAc7iD,QAAU2iD,IAAqBzlD,KAAKg+C,iBAI9FoF,EAAAljD,UAAAqkD,iBAAA,WACE,IAAMkB,EAAmBzlD,KAAKggD,cAAgBhgD,KAAKggD,aAAal9C,MAEhE,GAAI2iD,EAAkB,CACpB,IAAMC,EAAa1lD,KAAKogD,cAAcqF,EAAkBzlD,KAAKu9C,gBAE7Dv9C,KAAKi/C,oBAAoByG,EAAYA,GAAcA,EAAW5iD,QAAU2iD,IAAqBzlD,KAAKg+C,oBAC7F,GAAIh+C,KAAKu9C,eAAe58C,OAAQ,CACrC,IAAMmb,EAAQ9b,KAAKg+C,cAAgB,EAAI,EAEjC2H,EAAgB3lD,KAAKu9C,eAAezhC,GAE1C9b,KAAKi/C,oBAAoB0G,EAAeA,EAAc7iD,QAAU2iD,IAAqBzlD,KAAKg+C,iBAI9FoF,EAAAljD,UAAA0lD,sBAAA,WACM5lD,KAAK0Y,WAIL1Y,KAAKyO,UAAYzO,KAAK6lD,oBACxB7lD,KAAK8lD,0BAGP9lD,KAAKmkD,wBAAwBnkD,KAAKyjD,aAGpCL,EAAAljD,UAAA4lD,wBAAA,WACM9lD,KAAKo9C,gBAAkBp9C,KAAK+9C,eAC9B/9C,KAAKolD,YAAY,KAIrBhC,EAAAljD,UAAAikD,uBAAA,SAAuB4B,GACrBA,EAAS/lD,KAAKqU,OAASrU,KAAKg3B,SAG9BosB,EAAAljD,UAAAslD,cAAA,SAAcvlB,EAAsCp5B,GAClD,IAAM64C,EAAa1/C,KAAKs7C,gBAClB4D,EACJjf,EAAOn9B,QAAU9C,KAAK+9C,kBAAoB/9C,KAAKggD,cAAgBN,IAAe1/C,KAAKggD,aAAar8C,OAE9FkD,GACFA,EAAMm7B,kBAGRhiC,KAAKi/C,oBAAoBhf,EAAQif,GACjCl/C,KAAKmkD,wBAAuB,GAC5BnkD,KAAKs+C,gBAAgB,CAAAl+C,EAAA,GAAMJ,KAAKggD,gBAEhChgD,KAAKs9C,oBAAsBt9C,KAAKggD,aAAar8C,OAG/Cy/C,EAAAljD,UAAA8lD,SAAA,SAASlqC,GACP,IAAMmqC,EAAejmD,KAAK4J,QAAQkB,cAAcoB,iBAAiB,2BAC3Dy3C,GAAasC,EAAatlD,QAAUmb,GAAS,EAAI,EAAImqC,EAAa,GAAGC,UAAY,GAEvFlmD,KAAKmmD,aAAaxC,IAGpBP,EAAAljD,UAAAo7C,cAAA,WACE,OAAOt7C,KAAKikD,aAAan5C,cAAchI,OAGzCsgD,EAAAljD,UAAAk7C,cAAA,SAAct4C,GACZ9C,KAAKikD,aAAan5C,cAAchI,MAAQA,GAG1CsgD,EAAAljD,UAAAkmD,mBAAA,SAAmBv/C,IAEf7G,KAAKyjD,WACJzjD,KAAKikD,aAAan5C,cAAcQ,SAASzE,EAAMxF,SAC/CrB,KAAKqmD,YAAYv7C,cAAcQ,SAASzE,EAAMxF,SAC7CrB,KAAKsmD,gBAAmBtmD,KAAKsmD,eAAex7C,cAAcQ,SAASzE,EAAMxF,SAYvErB,KAAKyO,SAAYzO,KAAKs7C,iBAAoBt7C,KAAKo9C,eACjDp9C,KAAKolD,YAAY,KAVnBplD,KAAKmkD,wBAAuB,GAE5BnkD,KAAK+gD,oBAGL/gD,KAAKggD,aAAehgD,KAAKg+C,gBAAkBh+C,KAAK+9C,mBAAgB50C,EAAYnJ,KAAKggD,aAEjFhgD,KAAKs+C,oBAQT8E,EAAAljD,UAAAqmD,kBAAA,SAAkB5iD,GAChB,IAAM6iD,EAAiBxmD,KAAKymD,gBAAgB9iD,GACxConC,EAAiByb,EAErB,GACExmD,KAAKq9C,aACJr9C,KAAKyO,SACJzO,KAAKs7C,kBACJt7C,KAAK0gD,eAAe1gD,KAAKk9C,aAAcl9C,KAAKu9C,iBAC7Cv9C,KAAK4jD,kBACP,CACA,IAAM8C,EAAa1mD,KAAKymD,gBAAgBzmD,KAAKs7C,gBAAgBvoC,WAAWxC,eAClEo2C,EAAiBH,EAAej2C,cAEhCq2C,EAAc,yCAOpB,OAAQ5mD,KAAKk+C,YACX,KAAKpC,EAAAA,kBAAkB3nC,WACvB,KAAK2nC,EAAAA,kBAAkBxwC,SACrB,IAAMu7C,EAAoBF,EAAe3lD,QAAQ0lD,GAE7CG,GAAqB,IAMvB9b,EALcyb,EAAeh2C,UAAU,EAAGq2C,GAKnBD,EAHRJ,EAAeh2C,UAAUq2C,EAAmBA,EAAoBH,EAAW/lD,QAd3E,UAeH6lD,EAAeh2C,UAAUq2C,EAAoBH,EAAW/lD,SAKtE,MACF,KAAKm7C,EAAAA,kBAAkBqC,SACrB,IAAM2I,EAAwBH,EAAe1b,YAAYyb,GAErDI,GAAyB,IAI3B/b,EAHcyb,EAAeh2C,UAAU,EAAGs2C,GAGnBF,EAFRJ,EAAeh2C,UAAUs2C,GA1BzB,YAkCvB,OAAO9mD,KAAK+mD,SAAShc,IAGvBqY,EAAAljD,UAAA6mD,SAAA,SAASjkD,GACP,OAAO9C,KAAKsjD,UAAU0D,wBAAwBlkD,IAGhDsgD,EAAAljD,UAAA4kD,yBAAA,SAAyBtxC,GACvB,OACc,IAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GACY,KAAZA,GAIJ4vC,EAAAljD,UAAA+mD,cAAA,SAAcnkD,GACR9C,KAAKyO,UAAYzO,KAAKggD,cAAgBl9C,EAAMnC,QAAUX,KAAKklD,iBAC7DllD,KAAKmlD,mBAAmBriD,IAIpBsgD,EAAAljD,UAAA2jD,wBAAR,WACE7jD,KAAKqjD,gBAAgB7pC,eAniBe,WAsiB9B4pC,EAAAljD,UAAA82B,MAAR,WACEh3B,KAAKyjD,WAAY,EAEjBzjD,KAAKyX,eAAeqc,gBAEpB9zB,KAAKwjD,UAAY,qBAEjBxjD,KAAKi6B,kBAELj6B,KAAKq9C,aAAc,GAGb+F,EAAAljD,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKi6B,kBAELj6B,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAK8/C,mBAAmBv/C,MAG1B7G,KAAKknD,oBAAsBlnD,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAElEF,YAAW,WAAM,OAAAvG,EAAKu9C,4BAA2B,QAGnD3wC,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAO3CopB,EAAAljD,UAAAmU,KAAR,WACErU,KAAKyjD,WAAY,EAEjBzjD,KAAKyX,eAAeqc,gBAEpB9zB,KAAKwjD,UAAY,mBAEjBxjD,KAAKq7B,sBAELr7B,KAAKikD,aAAan5C,cAAc2N,QAChCzY,KAAKgmD,SAAShmD,KAAKygD,wBAEnBzgD,KAAK8jD,wBAGCV,EAAAljD,UAAA+5B,gBAAR,WACMj6B,KAAK8M,kBACP9M,KAAK8M,mBAGH9M,KAAKknD,qBACPlnD,KAAKknD,sBAGPh0C,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9CopB,EAAAljD,UAAAumD,gBAAR,SAAwB3jD,GACtB,YADsB,IAAAA,IAAAA,EAAA,IACfA,EAAM0R,QAAQ,OAAQ,QAAQA,QAAQ,MAAO,SAG9C4uC,EAAAljD,UAAA4jD,qBAAR,WACE9jD,KAAKqjD,gBAAgBtpC,YACnB/Z,KAAKmnD,iBAAiBr8C,cAvmBG,EAymBzB9K,KAAKikD,aACL,CAAC,MAAO,WACR,GAGFjkD,KAAK6jD,2BAGCT,EAAAljD,UAAAimD,aAAR,SAAqBxC,GACf3jD,KAAKsmD,iBACPtmD,KAAKsmD,eAAex7C,cAAc64C,UAAYA,6CAthBhCz2C,EAAAA,kBACAD,EAAAA,uBACO21C,UACNz1C,EAAAA,iBACOuK,EAAAA,yBACC0B,UACNguC,EAAAA,gBAd2CjmD,EAAA,CAA/Dg3C,EAAAA,aAAagL,GAAgC,CAAEl9C,QAAQ,oBAA6Bk9C,+CAEhChiD,EAAA,CAApD4E,EAAAA,UAAU,mBAAoB,CAAEqH,KAAMF,EAAAA,6BAAgCA,EAAAA,oDACpB/L,EAAA,CAAlD4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMF,EAAAA,6BAA8BA,EAAAA,kDACP/L,EAAA,CAA3D4E,EAAAA,UAAU,YAAa,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CACV/L,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAsBiH,EAAAA,gDAtBlEk2C,EAAgBiE,EAAAlmD,EAAA,CAlB5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,s/GACAgB,UAAW,CACTw7C,GACAxpC,GACA,CACE4L,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAkiC,KAC9BhiC,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAkiC,KAC9BhiC,OAAO,6BA6BOnY,EAAAA,WACAD,EAAAA,gBACO21C,GACNz1C,EAAAA,UACOuK,EAAAA,kBACC0B,GACNguC,EAAAA,gBA/BVhE,IAAyB7G,IC7FtC+K,GAAA,WA8BE,SAAAA,EAAYC,EAAcC,GA7B1BxnD,KAAAunD,KAAe,GACfvnD,KAAAwnD,aAAuB,EAEvBxnD,KAAAynD,gBAA0B,EAC1BznD,KAAA0nD,cAAwB,EAExB1nD,KAAA2nD,QAAkB,GAwBhB3nD,KAAKunD,KAAOA,EACZvnD,KAAKwnD,YAAcA,EACnBxnD,KAAK2nD,QAAU3nD,KAAK4nD,iBAAiBL,GAgezC,OAzfE/nD,OAAAqC,eAAIylD,EAAApnD,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK2nD,yCAIdnoD,OAAAqC,eAAIylD,EAAApnD,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAK6nD,8CAEdroD,OAAAqC,eAAIylD,EAAApnD,UAAA,kBAAe,KAAnB,SAAoB4C,GAClB9C,KAAK6nD,aAAe/kD,mCAItBtD,OAAAqC,eAAIylD,EAAApnD,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAK8nD,8CAEdtoD,OAAAqC,eAAIylD,EAAApnD,UAAA,kBAAe,KAAnB,SAAoB4C,GAClB9C,KAAK8nD,aAAehlD,mCAWtBwkD,EAAApnD,UAAA6nD,MAAA,SAAMC,GACJ,GAAIhoD,KAAKunD,KAAM,CACb,IAAMzkD,EAAQklD,EAAO3mD,OAAOyB,MAS5B,OAPuB,KAAnBklD,EAAOx0C,SAAqC,KAAnBw0C,EAAOx0C,UAClCw0C,EAAO3mD,OAAOyB,MAAQ9C,KAAKioD,kBAAkBnlD,GAC7C9C,KAAKkoD,eAAeF,IAGtBA,EAAOpnB,iBAEConB,EAAOx0C,SACb,KAAK,GACCxT,KAAKynD,gBAAkB,GACzBznD,KAAKynD,kBAEPznD,KAAKmoD,uBAAuBH,GAC5BhoD,KAAKooD,kBAAkBJ,GACvB,MAEF,KAAK,GACChoD,KAAKynD,gBAAkB3kD,EAAMiQ,WAAWpS,QAC1CX,KAAKynD,kBAEPznD,KAAKmoD,uBAAuBH,GAC5BhoD,KAAKooD,kBAAkBJ,GACvB,MAEF,KAAK,GACHhoD,KAAK0nD,cAAgB5kD,EAAMiQ,WAAWpS,OAClCqnD,EAAOK,WAGTroD,KAAKynD,gBAAkBznD,KAAK0nD,eAF5B1nD,KAAKsoD,aAAaN,GAKpB,MAEF,KAAK,GACCA,EAAOK,UACTroD,KAAK0nD,cAAgB1nD,KAAKynD,gBAC1BznD,KAAKynD,gBAAkB,EACvBznD,KAAKsoD,aAAaN,KAElBhoD,KAAKynD,gBAAkB,EACvBznD,KAAK0nD,cAAgB,EACrB1nD,KAAKsoD,aAAaN,OAO5BV,EAAApnD,UAAAioD,uBAAA,SAAuBH,GAChBA,EAAOK,WACVroD,KAAK0nD,cAAgB1nD,KAAKynD,kBAI9BH,EAAApnD,UAAAkoD,kBAAA,SAAkBJ,GACZhoD,KAAKynD,gBAAkBznD,KAAK0nD,cAC9BM,EAAO3mD,OAAO+mD,kBAAkBpoD,KAAK0nD,cAAe1nD,KAAKynD,iBAEzDO,EAAO3mD,OAAO+mD,kBAAkBpoD,KAAKynD,gBAAiBznD,KAAK0nD,gBAI/DJ,EAAApnD,UAAAqoD,QAAA,SAAQP,GACN,GAAIhoD,KAAKunD,KAAM,CACb,IAAIzkD,EAAgBklD,EAAO3mD,OAAOyB,MAClC,GAAuB,IAAnBklD,EAAOx0C,QACT,OASF,GANKw0C,EAAOQ,SAAYR,EAAOS,SAC7BT,EAAOpnB,iBAMPonB,EAAOQ,SACNR,EAAOS,SAA8B,KAAnBT,EAAOx0C,SACzBw0C,EAAOx0C,SAAW,IAAMw0C,EAAOx0C,SAAW,IACxB,KAAnBw0C,EAAOx0C,SACY,IAAnBw0C,EAAOx0C,QAEP,OAIF,GAAIxT,KAAK0oD,WAAWV,EAAOx0C,SAMzB,OAL2B,OAAvBxT,KAAK0nD,gBACP1nD,KAAK0nD,cAAgB1nD,KAAKynD,iBAE5BznD,KAAK2oD,gBAAgB3oD,KAAKynD,gBAAiBznD,KAAK0nD,eAExCM,EAAOx0C,SACb,KAAK,EACHxT,KAAK4oD,YAAYZ,GACbhoD,KAAKynD,gBAAkB,IACzBznD,KAAKynD,gBAAkB,EACvBznD,KAAKsoD,aAAaN,IAEhBhoD,KAAKynD,kBAAoBznD,KAAK0nD,eAChC1nD,KAAK6oD,gBAAgBb,GAAS,GACD,IAAzBhoD,KAAKynD,kBACP3kD,EAAQA,EAAM0J,MAAM,EAAGxM,KAAKynD,gBAAkB,GAAK3kD,EAAM0J,MAAMxM,KAAK0nD,eACpE5kD,EAAQ9C,KAAKioD,kBAAkBnlD,GAC/BklD,EAAO3mD,OAAOyB,MAAQA,EACtB9C,KAAK4oC,eAAeof,GAAS,GAC7BhoD,KAAK6oD,gBAAgBb,GAAS,GAC9BhoD,KAAKsoD,aAAaN,GAClBhoD,KAAKkoD,eAAeF,KAGtBhoD,KAAK8oD,oBAAoBhmD,EAAOklD,GAAQ,GAE1ChoD,KAAKsoD,aAAaN,GAClB,MAEF,KAAK,GACHhoD,KAAK4oD,YAAYZ,GACbhoD,KAAKynD,kBAAoBznD,KAAK0nD,eAChC1nD,KAAK+oD,eAAef,EAAQ,GAC5BllD,EAAQA,EAAM0J,MAAM,EAAGxM,KAAKynD,iBAAmB3kD,EAAM0J,MAAMxM,KAAK0nD,cAAgB,GAChF5kD,EAAQ9C,KAAKioD,kBAAkBnlD,GAC/BklD,EAAO3mD,OAAOyB,MAAQA,EACtB9C,KAAKsoD,aAAaN,GAClBhoD,KAAKkoD,eAAeF,IAEpBhoD,KAAK8oD,oBAAoBhmD,EAAOklD,GAAQ,GAE1ChoD,KAAKsoD,aAAaN,GAClB,MAEF,QAEEllD,EAAQA,EAAM0J,MAAM,EAAGxM,KAAKynD,iBAAmBO,EAAO1mD,IAAMwB,EAAM0J,MAAMxM,KAAK0nD,eAC7E5kD,EAAQ9C,KAAKioD,kBAAkBnlD,GAC/BklD,EAAO3mD,OAAOyB,MAAQA,EACtB9C,KAAK4oC,eAAeof,EAAQ,GAC5BhoD,KAAK6oD,gBAAgBb,EAAQ,GAC7BhoD,KAAKsoD,aAAaN,GAClBhoD,KAAKkoD,eAAeF,GACpBhoD,KAAKsoD,aAAaN,MAM5BV,EAAApnD,UAAA4oD,oBAAA,SAAoBhmD,EAAeklD,EAAagB,GAC9ClmD,EAAQA,EAAM0J,MAAM,EAAGxM,KAAKynD,iBAAmB3kD,EAAM0J,MAAMxM,KAAK0nD,eAChE5kD,EAAQ9C,KAAKioD,kBAAkBnlD,GAC/BklD,EAAO3mD,OAAOyB,MAAQA,EAElBkmD,GACFhpD,KAAK6oD,gBAAgBb,GAAS,GAGhChoD,KAAKsoD,aAAaN,GAClBhoD,KAAKkoD,eAAeF,IAItBV,EAAApnD,UAAAqY,MAAA,SAAMyvC,GACJhoD,KAAKynD,gBAAkBO,EAAO3mD,OAAO4nD,eACrCjpD,KAAK0nD,cAAgBM,EAAO3mD,OAAO6nD,cAGrC5B,EAAApnD,UAAAipD,KAAA,SAAKnB,GAEH,GAAIhoD,KAAKunD,KAAM,CAEb,IAAIzkD,EAAQklD,EAAO3mD,OAAOyB,MAC1BA,EAAQ9C,KAAKioD,kBAAkBnlD,GAC/BklD,EAAO3mD,OAAOyB,MAAQA,IAI1BwkD,EAAApnD,UAAAyoD,gBAAA,SAAgBlB,EAAyBC,GACvC,GAAID,EAAkBC,EAAe,CAEnC,IAAI0B,EACJA,EAAe3B,EACfznD,KAAKynD,gBAAkBC,EACvB1nD,KAAK0nD,cAAgB0B,IAKzB9B,EAAApnD,UAAAgoD,eAAA,SAAeF,GACbhoD,KAAKynD,gBAAkBO,EAAO3mD,OAAO4nD,eACrCjpD,KAAK0nD,cAAgB1nD,KAAKynD,iBAI5BH,EAAApnD,UAAAooD,aAAA,SAAaN,GACXA,EAAO3mD,OAAO+mD,kBAAkBpoD,KAAKynD,gBAAiBznD,KAAK0nD,gBAI7DJ,EAAApnD,UAAA0oC,eAAA,SAAeof,EAAallD,GAC1B9C,KAAKynD,gBAAkBznD,KAAKynD,gBAAkB3kD,EAC9C9C,KAAK0nD,cAAgB1nD,KAAK0nD,cAAgB5kD,EAC1C9C,KAAKsoD,aAAaN,IAGpBV,EAAApnD,UAAA0oD,YAAA,SAAYZ,GACVhoD,KAAKynD,gBAAkBO,EAAO3mD,OAAO4nD,eACrCjpD,KAAK0nD,cAAgBM,EAAO3mD,OAAO6nD,aACnClpD,KAAKsoD,aAAaN,IAKpBV,EAAApnD,UAAA+nD,kBAAA,SAAkBnlD,GAEhB,IAAKA,EAGH,OAFA9C,KAAK6nD,aAAe,GACpB7nD,KAAK8nD,aAAe,GACb,GAWT,IATA,IAAIuB,EACAC,EAAUtpD,KAAKunD,KAIbgC,EAAuB,GACzBC,EAAY,EAGTxpD,KAAKypD,kBAAkBH,IAC5BC,EAAS/kD,KAAK8kD,GACdA,EAAUtpD,KAAK0pD,sBAAsBJ,GAUvC,IARAC,EAAS/kD,KAAK8kD,GAGdC,EAAS78C,UAGT1M,KAAK2pD,gBAAiB,GAEd3pD,KAAK2pD,iBAGX3pD,KAAK2pD,gBAAiB,EAGjBJ,EAASC,KAKdH,EAAiBrpD,KAAKqrC,YAAYvoC,EAAOymD,EAASC,IAClDA,IAGF,OAAOH,GAIT/B,EAAApnD,UAAAmrC,YAAA,SAAYvoC,EAAeykD,GAKzB,IAAMqC,GAHNrC,EAAOA,EAAK/yC,QAAQ,MAAO,KAGRA,QAAQxU,KAAK6pD,gBAAiB,KAG7CC,EAAoB,EAGpBT,EAAyB,GAG7BvmD,EAAQ9C,KAAK+pD,sBAAsBjnD,GAGnC,IAAK,IAAItC,EAAI,EAAGA,EAAIsC,EAAMnC,OAAQH,IAAK,CACrC,IAAMwpD,EAAYlnD,EAAMtC,GAIxB,IAAKopD,EAAME,GAAY,CACrB9pD,KAAK2pD,gBAAiB,EACtB,MAIF,KAAO3pD,KAAKiqD,sBAAsBL,EAAME,KAAeF,EAAME,IAC3DT,GAAkBO,EAAME,GACxBA,IAIF,IAAI9pD,KAAKkqD,eAAeF,EAAWzC,EAAKuC,IAKtC,MAJAT,GAAkBW,EAClBF,IAcJ,OAPI9pD,KAAKwnD,aACPxnD,KAAK6nD,aAAewB,EACpBrpD,KAAK8nD,aAAeuB,IAEpBrpD,KAAK6nD,aAAewB,EACpBrpD,KAAK8nD,aAAe9nD,KAAK+pD,sBAAsBV,IAE1CA,GAGT/B,EAAApnD,UAAA2oD,gBAAA,SAAgBb,EAAa9uC,GACvBlZ,KAAKiqD,sBAAsBjC,EAAO3mD,OAAOyB,MAAMiQ,WAAWwC,OAAOvV,KAAKynD,gBAAkB,MAC1FznD,KAAK4oC,eAAeof,EAAQ9uC,GAC5BlZ,KAAK6oD,gBAAgBb,EAAQ9uC,KAKjCouC,EAAApnD,UAAA6oD,eAAA,SAAef,EAAa9uC,GACtBlZ,KAAKiqD,sBAAsBjC,EAAO3mD,OAAOyB,MAAMiQ,WAAWwC,OAAOvV,KAAKynD,oBACxEznD,KAAK4oC,eAAeof,EAAQ9uC,GAC5BlZ,KAAK+oD,eAAef,EAAQ9uC,KAKhCouC,EAAApnD,UAAAwpD,sBAAA,SAAsBnC,GAEpB,IADA,IAAI/mD,EAAI,EACDA,GAAK,GAAG,CACb,GAAI+mD,EAAKvmD,QAAQR,EAAI,MAAQ,EAC3B,OAAO+mD,EAAK/yC,QAAQhU,EAAI,IAAK,IAE/BA,IAEF,OAAO+mD,GAITD,EAAApnD,UAAA+pD,sBAAA,SAAsB3oD,GACpB,OAAOtB,KAAKmqD,UAAU7oD,EAAKtB,KAAKoqD,2BAIlC9C,EAAApnD,UAAAkqD,uBAAA,WACE,MAAO,mBAIT9C,EAAApnD,UAAA2pD,cAAA,WACE,MAAO,gBAITvC,EAAApnD,UAAAwoD,WAAA,SAAWl1C,GACT,OAAOxT,KAAKqqD,eAAe72C,IAK7B8zC,EAAApnD,UAAAmqD,eAAA,SAAe72C,GACb,OACGA,GAAW,IAAMA,GAAW,IAC5BA,GAAW,IAAMA,GAAW,IAC5BA,GAAW,IAAMA,GAAW,KACjB,IAAZA,GACY,IAAZA,GACY,KAAZA,GAKJ8zC,EAAApnD,UAAAgqD,eAAA,SAAe5oD,EAAUgpD,GACvB,OAAOtqD,KAAKmqD,UAAU7oD,EAAKtB,KAAKuqD,YAAYD,KAI9ChD,EAAApnD,UAAAiqD,UAAA,SAAU7oD,EAAUkpD,GAClB,OAAOA,EAAM75C,KAAKrP,IAKpBgmD,EAAApnD,UAAA6pD,sBAAA,SAAsBjnD,GACpB,OAAOA,EAAM0R,QAAQxU,KAAKoqD,yBAA0B,KAItD9C,EAAApnD,UAAAupD,kBAAA,SAAkBlC,GAChB,OAAOA,EAAKj0C,MAAM,UAIpBg0C,EAAApnD,UAAAqqD,YAAA,SAAYE,GACV,IAAID,EAAQ,IACZ,OAAQC,GACN,IAAK,IACHD,EAAQ,MACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,QACR,MACF,IAAK,IACHA,EAAQ,KACR,MACF,IAAK,IACHA,EAAQ,WACR,MACF,IAAK,IACHA,EAAQ,cAGZ,OAAOA,GAGTlD,EAAApnD,UAAA0nD,iBAAA,SAAiBL,GACf,GAAIA,EAAM,CA2BR,OAzBIvnD,KAAKwnD,YACGD,EAAK/yC,QAAQ,MAAO,QACZA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAM,KACdA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAM,OACdA,QAAQ,YAAa,OACrBA,QAAQ,MAAO,OAEvB+yC,EAAK/yC,QAAQ,MAAO,IACZA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,KAAM,IACdA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,KAAM,IACdA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OAInC,OAAO,MAGb8yC,EAjgBA,IJIYjL,GAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAE/B,MAAA,QAGAA,GAAA,SAAA,WKMF,ICbYqO,iBDmTV,SAAAC,IAxPQ3qD,KAAA4qD,QA9CgC,aAkDhC5qD,KAAA6qD,iBAA4B,EAC5B7qD,KAAA8qD,aAAwB,GAGtB9qD,KAAA+qD,YAAa,EACb/qD,KAAAsrC,KAAe,kBACftrC,KAAAgrD,eAAyB,EAEzBhrD,KAAAirD,cAAqB,KACrBjrD,KAAAkrD,eAAsB,KAcOlrD,KAAA8+B,WAAqB,EAqD5D9+B,KAAA0Y,UAAqB,EAQrB1Y,KAAA27C,UAAqB,EAMrB37C,KAAA69B,UAAqB,EAQrB79B,KAAA07C,OAAkB,EAUQ17C,KAAAs8B,aAAwB,GAmIhCt8B,KAAAmrD,OAA6B,IAAIrjD,EAAAA,aAG/B9H,KAAAorD,SAA+B,IAAItjD,EAAAA,aA8HzD,OA3U8BtI,OAAAqC,eAAI8oD,EAAAzqD,UAAA,iBAAc,KAI9C,WACE,OAAOF,KAAK6qD,qBALc,SAAmB/nD,GAC7C9C,KAAK6qD,gBAAkBj6C,EAAiB9N,oCAclBtD,OAAAqC,eAAI8oD,EAAAzqD,UAAA,cAAW,KAIvC,WACE,OAAOF,KAAK8qD,kBALU,SAAgBtN,GACtCx9C,KAAK8qD,aAAe15C,EAASosC,EAAa,UAAYA,EAAc,oCAwBjDh+C,OAAAqC,eAAI8oD,EAAAzqD,UAAA,cAAW,KAAf,SAAgBwY,GACnC1Y,KAAK0Y,SAAwB,KAAbA,GAAyB9H,EAAiB8H,GAE1D1Y,KAAKmnB,cAAc3U,EAAyBxS,KAAK8R,KAAM9R,KAAKsrC,wCAKzC9rC,OAAAqC,eAAI8oD,EAAAzqD,UAAA,cAAW,KAAf,SAAgBy7C,GACnC37C,KAAK27C,SAAwB,KAAbA,GAAyB/qC,EAAiB+qC,oCAKvCn8C,OAAAqC,eAAI8oD,EAAAzqD,UAAA,cAAW,KAAf,SAAgB29B,GACnC79B,KAAK69B,SAAwB,KAAbA,GAAyBjtB,EAAiBitB,GAE1D79B,KAAKmnB,cAAc3U,EAAyBxS,KAAK8R,KAAM9R,KAAKsrC,wCAK5C9rC,OAAAqC,eAAI8oD,EAAAzqD,UAAA,WAAQ,KAAZ,SAAaw7C,GAC7B17C,KAAK07C,MAAkB,KAAVA,GAAsB9qC,EAAiB8qC,oCAiBjCl8C,OAAAqC,eAAI8oD,EAAAzqD,UAAA,UAAO,KAehC,WACE,OAAOF,KAAKgkB,cAhBO,SAAYlhB,GAC/B,GAAIA,aAAiBqP,KAAM,CACzB,IAAMF,EAAOnP,EAAM+P,cAEbf,EAAO,IAAIK,KAAKF,EAAMnP,EAAM4P,WAAY5P,EAAM6P,UAAW,EAAG,EAAG,GACrET,GAAkBJ,EAAMG,GAExBjS,KAAKgkB,SAAWlS,OAEhB9R,KAAKgkB,SAAWrS,EAAiB7O,GAAO,GAAM,GAGhD9C,KAAKmnB,cAAc3U,EAAyBxS,KAAK8R,KAAM9R,KAAKsrC,wCAczC9rC,OAAAqC,eAAI8oD,EAAAzqD,UAAA,UAAO,KAehC,WACE,OAAOF,KAAK+jB,cAhBO,SAAYjhB,GAC/B,GAAIA,aAAiBqP,KAAM,CACzB,IAAMF,EAAOnP,EAAM+P,cAEbf,EAAO,IAAIK,KAAKF,EAAMnP,EAAM4P,WAAY5P,EAAM6P,UAAW,GAAI,GAAI,IACvET,GAAkBJ,EAAMG,GAExBjS,KAAK+jB,SAAWjS,OAEhB9R,KAAK+jB,SAAWpS,EAAiB7O,GAAO,GAAO,GAGjD9C,KAAKmnB,cAAc3U,EAAyBxS,KAAK8R,KAAM9R,KAAKsrC,wCAqB3C9rC,OAAAqC,eAAI8oD,EAAAzqD,UAAA,SAAM,KAc7B,WACE,OAAOF,KAAK4qD,aAfK,SAAW9nD,GAC5B,GAAIA,IACFA,EAAQA,EAAMyN,eACJ+C,MAAM,OAASxQ,EAAMwQ,MAAM,OAASxQ,EAAMwQ,MAAM,QAIxD,OAHAtT,KAAK4qD,QAAU9nD,EACf9C,KAAKqrD,QAAUrrD,KAAKsrD,iBACpBtrD,KAAKurD,aAAavrD,KAAK8R,MAI3B9R,KAAK4qD,QA5OiC,aA6OtC5qD,KAAKqrD,QAAUrrD,KAAKsrD,6CAgBC9rD,OAAAqC,eAAI8oD,EAAAzqD,UAAA,YAAS,KAOpC,WACE,OAAOF,KAAKwrD,gBARS,SAAc1oD,GAC/BtD,OAAO4f,OAAOi9B,EAAAA,uBAAuBvzC,SAAShG,KAChD9C,KAAKwrD,WAAa1oD,EAClB9C,KAAKgrD,cAAgBloD,IAAUu5C,EAAAA,sBAAsBoP,2CAqBtCjsD,OAAAqC,eAAI8oD,EAAAzqD,UAAA,SAAM,KAO7B,WACE,OAAOF,KAAK4jB,SAAWpU,SARN,SAAW1M,GAE1B9C,KAAK4jB,QADH9gB,EACaA,EAAMnC,QAAU,EAAImC,EAAQ,KAE5B0M,qCAmBnBm7C,EAAAzqD,UAAA+I,SAAA,WAEEjJ,KAAKqrD,QAAUrrD,KAAKsrD,aAItBX,EAAAzqD,UAAAwrD,kBAAA,SAAkB54C,GAChB,IAAMf,EAAMb,SAAS4B,EAAWtC,UAAUxQ,KAAK+qC,OAAO/pC,QAAQ,KAAMhB,KAAK+qC,OAAO/pC,QAAQ,KAAO,GAAI,IAC7FgR,EAAQd,SAAS4B,EAAWtC,UAAUxQ,KAAK+qC,OAAO/pC,QAAQ,KAAMhB,KAAK+qC,OAAO/pC,QAAQ,KAAO,GAAI,IAAM,EACrGiR,EAAOf,SAAS4B,EAAWtC,UAAUxQ,KAAK+qC,OAAO/pC,QAAQ,KAAMhB,KAAK+qC,OAAO/pC,QAAQ,KAAO,GAAI,IAE9F8Q,EAAO,IAAIK,KAAKF,EAAMD,EAAOD,GAInC,OAFAG,GAAkBJ,EAAMG,GAEjBH,EAAKe,gBAAkBZ,GAAQH,EAAKY,aAAeV,GAASF,EAAKa,YAAcZ,EAAMD,EAAO,MAIrG64C,EAAAzqD,UAAAyrD,aAAA,SAAa7oD,GACX,IAAI8oD,EAAgB5rD,KAAK+qC,OAMzB,OAFA6gB,GADAA,GADAA,EAAgBA,EAAcp3C,QAAQ,MAAO,IAAM1R,EAAM6P,WAAWnG,OAAO,KAC7CgI,QAAQ,MAAO,KAAO1R,EAAM4P,WAAa,IAAIlG,OAAO,KACpDgI,QAAQ,OAAQ5B,GAAW9P,EAAM+P,iBAMjE83C,EAAAzqD,UAAA2rD,aAAA,SAAa/5C,GACX9R,KAAK8R,KAAOA,EACRA,GAAQ9R,KAAKgrD,cACfhrD,KAAK8rD,aAAat5C,EAAyBxS,KAAK8R,KAAM9R,KAAKsrC,OAClDx5B,IAAS9R,KAAKgrD,cACvBhrD,KAAK8rD,sBpI5M0Bh6C,GACnC,GAAIA,EAAM,CACR,IAAMY,EAAWZ,EAAKY,WAAa,EAC7BX,EAAMD,EAAKa,UAAY,GAAK,IAAMb,EAAKa,UAAYb,EAAKa,UACxDX,EAAQU,EAAW,GAAK,IAAMA,EAAWA,EAG/C,OAFaE,GAAWd,EAAKe,eAEf,IAAMb,EAAQ,IAAMD,EAElC,OAAO,KoImMag6C,CAAqB/rD,KAAK8R,YAEnC3I,IAAT2I,EAAqB9R,KAAK8rD,aAAa,IAAM9rD,KAAK8rD,aAAa,kBAKnEnB,EAAAzqD,UAAA4rD,aAAA,SAAahpD,EAAYsgC,GAAzB,IAAA98B,EAAAtG,UAAyB,IAAAojC,IAAAA,GAAA,GACnBpjC,KAAKirD,cACPjrD,KAAKirD,cAAcnoD,GACVsgC,GACTv2B,YAAW,WAAM,OAAAvG,EAAKwlD,aAAahpD,GAAO,OAM9C6nD,EAAAzqD,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKirD,cAAgBnkC,GAKvB6jC,EAAAzqD,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKkrD,eAAiBpkC,GAGxB6jC,EAAAzqD,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGfm5C,EAAAzqD,UAAAinB,cAAV,SAAwBC,GAClBpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAKfujC,EAAAzqD,UAAAorD,UAAV,WACE,IAAI/D,EAAOvnD,KAAK+qC,OAAOv1B,cAMvB,OAFA+xC,GADAA,GADAA,EAAOA,EAAK/yC,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,QAAS,QAEtB,IAAI8yC,GAAOC,GAAM,IAG1BoD,EAAAzqD,UAAAmnB,SAAA,SAAS7lB,GAKP,OAHAxB,KAAKs8B,aACmB,kBAAtBt8B,KAAKs8B,cAA0D,yBAAtBt8B,KAAKs8B,aAA0Ct8B,KAAKs8B,aAAe,IlE3WvFx5B,EkE6WRtB,EAAEsB,QlE5WH+S,MAAM1D,KAAKE,MAAMvP,KkE6W7B9C,KAAKs8B,aAAet8B,KAAKs8B,cAAgB,gBAElC,CACLxqB,KAAM,CACJgsB,OAAO,KAKTF,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUlX,EAAEsB,OAC1C,CACL+6B,SAAU,CACRC,OAAO,IAKT99B,KAAK8R,OAASiD,GAAkB/U,KAAK8R,KAAM9R,KAAKgkB,SAAUhkB,KAAK+jB,WACjE/jB,KAAKs8B,aAAet8B,KAAKs8B,cAAgB,uBAElC,CACLxqB,KAAM,CACJgsB,OAAO,KAKN,SlEzYgBh7B,GkEkDc3B,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGTx8B,EAAA,CAAd2E,EAAAA,MAAM,4DAWqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mHAeiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GAqBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAIc3E,EAAA,CAApB2E,EAAAA,MAAM,uGAQc3E,EAAA,CAApB2E,EAAAA,MAAM,uGAMc3E,EAAA,CAApB2E,EAAAA,MAAM,uGAQW3E,EAAA,CAAjB2E,EAAAA,MAAM,iGASmB3E,EAAA,CAAzB2E,EAAAA,MAAM,+EASc3E,EAAA,CAApB2E,EAAAA,MAAM,mGA0Bc3E,EAAA,CAApB2E,EAAAA,MAAM,mGAiCY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGA2BgB3E,EAAA,CAAtB2E,EAAAA,MAAM,uGAwBY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAYW3E,EAAA,CAAjB8G,EAAAA,OAAO,0BAAmBH,EAAAA,4CAGP3G,EAAA,CAAnB8G,EAAAA,OAAO,4BAAuBH,EAAAA,8CAvPX6iD,EAAyBxpD,EAAA,CAD9C4H,EAAAA,uCACqB4hD,qBEuCpB,SAAAqB,EAAoB3I,EAAmDx5C,EAAqB0hB,GAA5F,IAAAjlB,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAA+8C,gBAAAA,EAAmD/8C,EAAAuD,SAAAA,EAhCtDvD,EAAA8a,UAAY,IAAI1Q,OAC/B,+EAEepK,EAAA+a,SAAW,IAAI3Q,OAC9B,4MAsTMpK,EAAA0zB,SAAW,WACjB1zB,EAAK+8C,gBAAgB7pC,eA/WS,gBAsF9BlT,EAAKilB,GAAKA,UA0Td,OAlW2CzrB,EAAAksD,EAAAzlD,KAA9BylD,EA4BXxsD,OAAAqC,eAAImqD,EAAA9rD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKisD,eAAiB,MAAQ,sCAcvCD,EAAA9rD,UAAAwK,gBAAA,WACE1K,KAAKksD,4BAA4B,QAC7BlsD,KAAK8+B,WACP9+B,KAAKyY,SAITuzC,EAAA9rD,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAoBP+xB,EAAA9rD,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKmsD,QAAQrhD,cAAc2N,SAI/BuzC,EAAA9rD,UAAAksD,aAAA,WACMpsD,KAAK0Y,UAAY1Y,KAAK27C,WAIrB37C,KAAKqsD,SAASre,SAKjBhuC,KAAKmsD,QAAQrhD,cAAc4N,UAAW,EACtC1Y,KAAKssD,kBALLtsD,KAAKqsD,SAAS7mC,OACdxlB,KAAKusD,sBACLvsD,KAAKq7B,yBAOT2wB,EAAA9rD,UAAAssD,aAAA,WACOxsD,KAAKysD,gBACRzsD,KAAKmsD,QAAQrhD,cAAc2N,QAG7BzY,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAK2rD,aAAa3rD,KAAK8R,MAC1D9R,KAAK6rD,aAAa7rD,KAAK8R,MACvB9R,KAAK0sD,uBACL1sD,KAAKssD,iBAIPN,EAAA9rD,UAAAysD,mBAAA,SAAmB9lD,GACZ7G,KAAK4sD,cAAiB5sD,KAAK6sD,iBAK5B7sD,KAAK4sD,aAAa9hD,cAAcQ,SAASzE,EAAMxF,UAAWrB,KAAK8sD,gBAAgBjmD,EAAMxF,SACtFrB,KAAK6sD,eAAe/hD,cAAcQ,SAASzE,EAAMxF,SACjDrB,KAAK+sD,gBAAgBlmD,EAAMxF,SAE5BrB,KAAKssD,kBAKTN,EAAA9rD,UAAA8sD,QAAA,SAAQhF,GACFhoD,KAAK27C,WAIT37C,KAAKqrD,QAAQtD,MAAMC,GAEfhoD,KAAKqrD,QAAQvD,cAA8C,KAA9B9nD,KAAKqrD,QAAQvD,aACxC9nD,KAAKqrD,QAAQvD,aAAannD,QAAU,IACtCX,KAAK6rD,aAAa7rD,KAAK0rD,kBAAkB1rD,KAAKmsD,QAAQrhD,cAAchI,QACpE9C,KAAK8R,KAAO9R,KAAK0rD,kBAAkB1rD,KAAKmsD,QAAQrhD,cAAchI,SAE9D9C,KAAK8R,UAAO3I,EACZnJ,KAAK6rD,aAAa7rD,KAAK8R,OAGzB9R,KAAK8R,UAAO3I,IAKhB6iD,EAAA9rD,UAAA+sD,UAAA,SAAUjF,GACJhoD,KAAK27C,UAIT37C,KAAKqrD,QAAQ9C,QAAQP,IAGvBgE,EAAA9rD,UAAAgtD,gBAAA,WACE,OACEltD,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,eACzCtL,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,aACJ,KAArCtL,KAAKmsD,QAAQrhD,cAAchI,OAI/BkpD,EAAA9rD,UAAAitD,gBAAA,WACE,MAA6B,KAAtBntD,KAAKs8B,cAAuBt8B,KAAKktD,kBAAoBltD,KAAKs8B,aAAe,IAGlF0vB,EAAA9rD,UAAAi7C,MAAA,WACEn7C,KAAKotD,kBAAoBptD,KAAK2rD,aAAa3rD,KAAK8R,MAChD9R,KAAK8R,UAAO3I,EACZnJ,KAAK6rD,aAAa7rD,KAAK8R,MAEvB9R,KAAK0sD,wBAGPV,EAAA9rD,UAAAmtD,YAAA,SAAYrF,GACV,IAAMl2C,EAAO9R,KAAKmsD,QAAQrhD,cAAchI,MAClCwqD,EAAUx7C,EAAO9R,KAAK0rD,kBAAkB55C,QAAQ3I,EACtDnJ,KAAKqrD,QAAQlC,KAAKnB,GAClBhoD,KAAKmrD,OAAOnjD,OAERhI,KAAKqrD,QAAQvD,aACX9nD,KAAKqrD,QAAQvD,aAAannD,QAAU,IACtCX,KAAK6rD,aAAayB,GAClBttD,KAAK8R,KAAOw7C,IAEZttD,KAAK8R,UAAO3I,EACZnJ,KAAK6rD,aAAa7rD,KAAK8R,QAGzB9R,KAAK8R,UAAO3I,EACZnJ,KAAK8rD,aAAa9rD,KAAK8R,OAGzB9R,KAAK0sD,wBAGPV,EAAA9rD,UAAAqtD,aAAA,SAAavF,GAAb,IAAA1hD,EAAAtG,KACMA,KAAKysD,gBACPzE,EAAO3mD,OAAO8nD,OAGdt8C,YAAW,WAAM,OAAAvG,EAAK8lD,iBAAgB,IAGtCpsD,KAAKqrD,QAAQ9yC,MAAMyvC,IAIvBgE,EAAA9rD,UAAAyrD,aAAA,SAAa7oD,GACX,GAAKA,EAAL,CAIA,IAAI8oD,EAAgB5rD,KAAK+qC,OAMzB,OAFA6gB,GADAA,GADAA,EAAgBA,EAAcp3C,QAAQ,MAAO,IAAM1R,EAAM6P,WAAWnG,OAAO,KAC7CgI,QAAQ,MAAO,KAAO1R,EAAM4P,WAAa,IAAIlG,OAAO,KACpDgI,QAAQ,OAAQ5B,GAAW9P,EAAM+P,kBAKjEm5C,EAAA9rD,UAAAqrD,aAAA,SAAazoD,GACPA,IACF9C,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAK2rD,aAAa7oD,KAKzDkpD,EAAA9rD,UAAAonB,WAAA,SAAWxkB,GACT,GAAI9C,KAAKmsD,SAAWrpD,EAAO,CACzB,GAAIA,aAAiBqP,KAAM,CACzB,IAAMW,EAAahQ,EAAMiQ,WACzB/S,KAAKsrC,KACH,IAAMx4B,EAAWtC,UAAU,GAAI,IAAMsC,EAAWtC,UAAU,GAAI,IAAM,IAAMsC,EAAWtC,UAAU,GAAI,IACrGxQ,KAAK8R,KAAOhP,EACZ9C,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAK2rD,aAAa7oD,QAChD,GAAI9C,KAAKwtD,eAAe1qD,IAAU9C,KAAKytD,mBAAmB3qD,GAAQ,CACnE9C,KAAKytD,mBAAmB3qD,KAC1B9C,KAAKsrC,KAAOxoC,EAAM0N,UAAU,GAAI,UAGXrH,IAAnBnJ,KAAK0tD,YACP1tD,KAAKgrD,cAAgBhrD,KAAKytD,mBAAmB3qD,IAG/C,IAAMiP,EAAMb,SAASpO,EAAM0N,UAAU,EAAG,IAAK,IACvCwB,EAAQd,SAASpO,EAAM0N,UAAU,EAAG,GAAI,IAAM,EAC9CyB,EAAOf,SAASpO,EAAM0N,UAAU,EAAG,GAAI,IAEvCm9C,EAAW,IAAIx7C,KAAKF,EAAMD,EAAOD,GAEvCG,GAAkBy7C,EAAU17C,GAE5BjS,KAAK8R,KAAO67C,EACZ3tD,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAK2rD,aAAagC,QAErD3tD,KAAKmsD,QAAQrhD,cAAchI,MAAQ,GACnC9C,KAAK8R,UAAO3I,EAEdnJ,KAAK6rD,aAAa7rD,KAAK8R,WACd9R,KAAKmsD,UACdnsD,KAAKmsD,QAAQrhD,cAAchI,MAAQ,GACnC9C,KAAK8R,UAAO3I,GAGdnJ,KAAKotD,kBAAoBptD,KAAK2rD,aAAa3rD,KAAK8R,OAGlDk6C,EAAA9rD,UAAAstD,eAAA,SAAe1qD,GACb,OAAO9C,KAAKohB,UAAUzQ,KAAK7N,IAG7BkpD,EAAA9rD,UAAAutD,mBAAA,SAAmB3qD,GACjB,OAAO9C,KAAKqhB,SAAS1Q,KAAK7N,IAG5BkpD,EAAA9rD,UAAA4sD,gBAAA,SAAgBljD,GACd,OAAOA,EAAQqlB,UAAU3jB,SAAS,wBAIpC0gD,EAAA9rD,UAAAusD,aAAA,WACE,OAAOp5C,MAGD24C,EAAA9rD,UAAAosD,cAAR,WACEtsD,KAAKqsD,SAASr1B,QACdh3B,KAAKi6B,kBACLj6B,KAAKksD,4BAA4B,SAG3BF,EAAA9rD,UAAAwsD,qBAAR,WAAA,IAAApmD,EAAAtG,KACQ4tD,EAAqB5tD,KAAK2rD,aAAa3rD,KAAK8R,MAE9C87C,IAAuB5tD,KAAKotD,oBAC9BptD,KAAKotD,kBAAoBQ,EAEzBjhD,aAAa3M,KAAK6tD,eAClB7tD,KAAK6tD,cAAgBhhD,YAAW,WAC9BvG,EAAK8kD,SAASpjD,KAAK4lD,KAClB,OAIC5B,EAAA9rD,UAAA6sD,gBAAR,SAAwBnjD,GAGtB,OACGA,GAAWA,EAAQkkD,aAHD,kBAIlBlkD,EAAQgxB,eAAiBhxB,EAAQgxB,cAAckzB,aAJ7B,kBAQf9B,EAAA9rD,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKi0C,cAAgBj0C,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GAC9DP,EAAKqmD,mBAAmB9lD,MAG1B7G,KAAKknD,oBAAsBlnD,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAClEzG,EAAKgmD,mBAGPp5C,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAO3CgyB,EAAA9rD,UAAA+5B,gBAAR,WACMj6B,KAAKi0C,eACPj0C,KAAKi0C,gBAGHj0C,KAAKknD,qBACPlnD,KAAKknD,sBAGPh0C,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9CgyB,EAAA9rD,UAAAgsD,4BAAR,SAAoCppD,GAClC9C,KAAK4sD,aAAa9hD,cAAcpD,MAAMmhC,QAAU/lC,GAG1CkpD,EAAA9rD,UAAAqsD,oBAAR,WACEvsD,KAAKksD,4BAA4B,SAEjClsD,KAAKqjD,gBAAgBtpC,YACnB/Z,KAAK4sD,aAAa9hD,cAvYQ,EAyY1B9K,KAAKmsD,QACL,CAAC,WAAY,gBACb,GACA,GAGFnsD,KAAKqjD,gBAAgB7pC,eA9YS,yDAoFKJ,UAA4CjM,EAAAA,iBAAeD,EAAAA,cAfvD/L,EAAA,CAAxC4E,EAAAA,UAAU,WAAY,CAAEE,QAAQ,oBAAkBmf,oCACYjkB,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAsBiH,EAAAA,gDACZ/L,EAAA,CAAhE4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAwBiH,EAAAA,kDAC3B/L,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CAO7C/L,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAmFP3E,EAAA,CADC2d,EAAAA,aAAa,QAAS,CAAC,gIAsBxB3d,EAAA,CADC2d,EAAAA,aAAa,UAAW,CAAC,kIA3IfktC,EAAqB+B,EAAA5sD,EAAA,CAjBjC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,q6CACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA4oC,KAC9B1oC,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAA4oC,KAC9B1oC,OAAO,GAETjM,6BAyCmCA,GAA4CjM,EAAAA,UAAeD,EAAAA,cAtCrF8+C,IAA8BrB,ICvD9BqD,GAAmC,CAC9Cn3C,GAA+B,CAC7Bo3C,cAAe,yBACfC,4BAA6B,oCAE/Bn3C,GAA+B,CAC7Bk3C,cAAe,6BACfC,4BAA6B,yCAE/Bl3C,GAA+B,CAC7Bi3C,cAAe,2BACfC,4BAA6B,qCAE/Bj3C,GAA+B,CAC7Bg3C,cAAe,0BACfC,4BAA6B,oDAgT/B,SAAAC,EAAsBC,GAAApuD,KAAAouD,cAAAA,EAjQtBpuD,KAAAquD,aAAuB,GAEfruD,KAAAsuD,QAAmB,EAInBtuD,KAAA6qD,iBAA4B,EAC5B7qD,KAAAuuD,WAAqB,EACrBvuD,KAAA6+B,WAAsB,EAKpB7+B,KAAAwuD,UAA+B,CAAE58C,MAAO,GAAIC,IAAK,IACjD7R,KAAA+qC,OAAc,aACd/qC,KAAAyuD,6BAAuC,EACvCzuD,KAAA0uD,4BAAsC,EAkBT1uD,KAAA8+B,WAAqB,EA6NxC9+B,KAAA2uD,SAA+B,IAAI7mD,EAAAA,aA4IzD,OAxXEtI,OAAAqC,eAAIssD,EAAAjuD,UAAA,wBAAqB,KAAzB,WACE,OAAOF,KAAKyuD,6BAA+BzuD,KAAK0uD,4DAyBhClvD,OAAAqC,eAAIssD,EAAAjuD,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKsuD,YALI,SAAU5S,GAC1B17C,KAAKsuD,OAAS19C,EAAiB8qC,oCAgBZl8C,OAAAqC,eAAIssD,EAAAjuD,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,GAElC9C,KAAKmnB,cAAcnnB,KAAKwuD,4CAcLhvD,OAAAqC,eAAIssD,EAAAjuD,UAAA,UAAO,KAQhC,WACE,OAAOF,KAAK4uD,cATO,SAAY98C,GAC/B9R,KAAK4uD,SAAW5uD,KAAK6uD,yBAAyB/8C,GAC9C9R,KAAKwuD,UAAU38C,IAAM7R,KAAK8uD,QAE1B9uD,KAAK+uD,oBAAoB/uD,KAAKwuD,WAC9BxuD,KAAKu/C,YAAYv/C,KAAKwuD,4CA2DHhvD,OAAAqC,eAAIssD,EAAAjuD,UAAA,WAAQ,KAYjC,WACE,OAAOF,KAAKqwC,WAAa2d,GAAiCz+C,UAbvC,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACT4tD,GAAgD,IAChDA,GAAiCz+C,MACjCzM,GAGYkrD,GAAiCz+C,sCAiB1B/P,OAAAqC,eAAIssD,EAAAjuD,UAAA,iBAAc,KAI9C,WACE,OAAOF,KAAK6qD,qBALc,SAAmB/nD,GAC7C9C,KAAK6qD,gBAAkBj6C,EAAiB9N,oCA+BrBtD,OAAAqC,eAAIssD,EAAAjuD,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKuuD,eAPO,SAAazrD,GAChC9C,KAAKuuD,UAAY39C,EAAiB9N,GAElC9C,KAAKmnB,cAAcnnB,KAAKwuD,4CAgBLhvD,OAAAqC,eAAIssD,EAAAjuD,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,cAAcnnB,KAAKwuD,4CAcHhvD,OAAAqC,eAAIssD,EAAAjuD,UAAA,YAAS,KAQpC,WACE,OAAOF,KAAKgvD,gBATS,SAAcl9C,GACnC9R,KAAKgvD,WAAahvD,KAAK6uD,yBAAyB/8C,GAChD9R,KAAKwuD,UAAU58C,MAAQ5R,KAAK8kB,UAE5B9kB,KAAK+uD,oBAAoB/uD,KAAKwuD,WAC9BxuD,KAAKu/C,YAAYv/C,KAAKwuD,4CAwBxBL,EAAAjuD,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKirD,cAAgBnkC,GAKvBqnC,EAAAjuD,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKkrD,eAAiBpkC,GAGxBqnC,EAAAjuD,UAAA6mB,0BAAA,SAA2BvV,GACzBxR,KAAKgnB,gBAAkBxV,GAGzB28C,EAAAjuD,UAAAmnB,SAAA,SAAS4nC,GACP,IAAMnsD,EAA2BmsD,EAAQnsD,OAAS,GAC5CgiB,EAAYhiB,EAAM8O,MAAQ5R,KAAK6uD,yBAAyB/rD,EAAM8O,OAAS,GACvEk9C,EAAUhsD,EAAM+O,IAAM7R,KAAK6uD,yBAAyB/rD,EAAM+O,KAAO,GAEvE,OAAI7R,KAAKkvD,wBAAwBpqC,EAAWgqC,IAC1C9uD,KAAKquD,aAAe,GAEb,CACLxwB,SAAU,CACRC,OAAO,KAKT99B,KAAKmvD,sBAAsBF,EAAQnsD,QAAU9C,KAAKovD,sBAAsBtqC,EAAWgqC,IACrF9uD,KAAKquD,aAAeruD,KAAK43B,SAASq2B,cAE3B,CACLn8C,KAAM,CACJgsB,OAAO,KAKT99B,KAAKqvD,gBAAgBvqC,EAAWgqC,IAClC9uD,KAAKquD,aAAeruD,KAAK43B,SAASs2B,4BAE3B,CACLp8C,KAAM,CACJgsB,OAAO,KAKN,MAGTqwB,EAAAjuD,UAAAonB,WAAA,SAAWknC,GACTxuD,KAAKsvD,gCAEAd,IAAaxuD,KAAKmvD,sBAAsBX,KAC3CxuD,KAAKwuD,UAAY,CAAE58C,MAAO,GAAIC,IAAK,KAGhC28C,GACHxuD,KAAKmnB,cAAcnnB,KAAKwuD,WAGtBxuD,KAAKmvD,sBAAsBX,IAC7BxuD,KAAKu/C,YAAYiP,GAGfxuD,KAAKuvD,kBAAkBf,KACzBxuD,KAAKwuD,UAAY,CACf58C,MAAO5R,KAAK6uD,yBAAyBL,EAAU58C,OAC/CC,IAAK7R,KAAK6uD,yBAAyBL,EAAU38C,MAG/C7R,KAAKu/C,YAAYv/C,KAAKwuD,YAGxBxuD,KAAK+uD,oBAAoB/uD,KAAKwuD,YAGtBL,EAAAjuD,UAAAsvD,iBAAV,SAA2B1sD,GACzB,OAAOA,IAAU9C,KAAKouD,cAAcjsC,WAAWrf,IAIvCqrD,EAAAjuD,UAAAq/C,YAAV,SAAsBz8C,GACpB,IAAMskB,EAAyB,iBAAVtkB,EAAkB1C,EAAA,GAAQ0C,GAAUA,EAErD9C,KAAKirD,eACPjrD,KAAKirD,cAAc7jC,IAIb+mC,EAAAjuD,UAAAinB,cAAV,SAAwBrkB,GACtB,IAAMskB,EAAKhnB,EAAA,GAAQ0C,GACf9C,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAIjB+mC,EAAAjuD,UAAA2uD,yBAAR,SAAiC/rD,GAC/B,OAAIA,aAAiBqP,KACZnS,KAAKouD,cAAc1sC,iBAAiB5e,GAGtCA,GAGDqrD,EAAAjuD,UAAAmvD,gBAAR,SAAwBvqC,EAAmBgqC,GACzC,OAAQ9uD,KAAKouD,cAAchsC,iBAAiB0sC,EAAShqC,KAAe9kB,KAAK0uD,4BAGnEP,EAAAjuD,UAAAkvD,sBAAR,SAA8BtqC,EAAmBgqC,GAC/C,OAAO9uD,KAAKwvD,iBAAiBV,IAAY9uD,KAAKwvD,iBAAiB1qC,KAAe9kB,KAAKyuD,6BAG7EN,EAAAjuD,UAAAivD,sBAAR,SAA8BrsD,GAC5B,OAAOA,IAAU9C,KAAKuvD,kBAAkBzsD,IAGlCqrD,EAAAjuD,UAAAqvD,kBAAR,SAA0BzsD,GACxB,OAAOA,GAASA,EAAMjD,eAAe,UAAYiD,EAAMjD,eAAe,QAGhEsuD,EAAAjuD,UAAAgvD,wBAAR,SAAgCpqC,EAAmBgqC,GACjD,OACE9uD,KAAKyvD,uBACL7xB,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUoM,IAC7C8Y,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUo2C,6CAvIZ3tC,MA/NEhgB,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAWNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,mGAmBU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAoCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAyBqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mHAqBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAWc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAmBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAiBgB3E,EAAA,CAAtB2E,EAAAA,MAAM,uGAmBa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAuBH,EAAAA,8CAhQXqmD,EAA8BhtD,EAAA,CADnD4H,EAAAA,mCAmQsCoY,MAlQjBgtC,MC1DhB/mD,GAAY,CAChB,CACE4d,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAAuqC,MAC9BrqC,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAAuqC,MAC9BrqC,OAAO,mBAiGT,SAAAqqC,EACUj4C,EACR22C,EACAuB,GAHF,IAAArpD,EAKEC,EAAA3F,KAAAZ,KAAMouD,IAAcpuD,YAJZsG,EAAAmR,eAAAA,EAKRnR,EAAKqpD,yBAA2BA,UA2RpC,OA/VgD7vD,EAAA4vD,EAAAnpD,KAAnCmpD,EAQXlwD,OAAAqC,eAAI6tD,EAAAxvD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKisD,eAAiB,MAAQ,sCAGvCzsD,OAAAqC,eAAI6tD,EAAAxvD,UAAA,gBAAa,KAAjB,WACE,OAAQF,KAAK4vD,qBAAuB5vD,KAAK6vD,qBAAuB7vD,KAAK0Y,WAAa1Y,KAAK27C,0CAGzFn8C,OAAAqC,eAAI6tD,EAAAxvD,UAAA,mBAAgB,KAApB,WACE,MAAO,4CAGTV,OAAAqC,eAAI6tD,EAAAxvD,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAK8vD,aAAahlD,cAAchI,uCAGzCtD,OAAAqC,eAAI6tD,EAAAxvD,UAAA,kBAAe,KAAnB,WACE,MAA6B,KAAtBF,KAAKquD,cAAuBruD,KAAKktD,kBAAoBltD,KAAKquD,aAAe,oCAGlF7uD,OAAAqC,eAAI6tD,EAAAxvD,UAAA,8BAA2B,KAA/B,WACE,OACEF,KAAK6vD,kBAAkBlvD,OA/Ec,IAgFrCX,KAAK4vD,oBAAoBjvD,OAhFY,oCAoFzCnB,OAAAqC,eAAI6tD,EAAAxvD,UAAA,wBAAqB,KAAzB,WACE,OAAOF,KAAK6vD,kBAAkBlvD,OAAS,GAAKX,KAAK4vD,oBAAoBjvD,OAAS,mCAGhFnB,OAAAqC,eAAI6tD,EAAAxvD,UAAA,qBAAkB,KAAtB,WACE,MAAO,8CAGTV,OAAAqC,eAAI6tD,EAAAxvD,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAK+vD,eAAejlD,cAAchI,uCAGpC4sD,EAAAM,WAAP,SAAkBnpD,GAChB,OAAOA,EAAM2M,SAAW3M,EAAM4M,OAGzBi8C,EAAAO,iBAAP,SAAwBppD,GACtB,OAAOA,EAAMxF,QAAUwF,EAAMqpD,YAGxBR,EAAAS,WAAP,SAAkB38C,GAIhB,OAHqBA,GAAW,IAAMA,GAAW,IACtBA,GAAW,IAAMA,GAAW,KAczDk8C,EAAAxvD,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAITi3C,EAAAxvD,UAAA+I,SAAA,WAEEjJ,KAAKowD,aAAepwD,KAAKsrD,aAG3BoE,EAAAxvD,UAAAi7C,MAAA,WACEn7C,KAAKsvD,gCACLtvD,KAAKwuD,UAAY,CAAE58C,MAAO,GAAIC,IAAK,IAEnC7R,KAAK+uD,oBAAoB/uD,KAAKwuD,WAC9BxuD,KAAKu/C,YAAYv/C,KAAKwuD,YAoBxBkB,EAAAxvD,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAK+vD,eAAejlD,cAAc2N,SAItCi3C,EAAAxvD,UAAAmwD,OAAA,WACErwD,KAAKswD,uCAGPZ,EAAAxvD,UAAAqwD,QAAA,WACEvwD,KAAKwwD,oCAGPd,EAAAxvD,UAAA+sD,UAAA,SAAUpmD,GACJ7G,KAAK27C,WAIL37C,KAAKywD,sBAAsB5pD,IAC7BA,EAAM+5B,iBACN5gC,KAAK0wD,uBAEL1wD,KAAKowD,aAAa7H,QAAQ1hD,KAI9B6oD,EAAAxvD,UAAA8sD,QAAA,SAAQnmD,GACN,IAAI7G,KAAK27C,SAAT,CAIA,IAAMgV,EAAyB9pD,EAAMxF,OAAO4mC,OAASjoC,KAAK4wD,mBAE1D5wD,KAAK6wD,SAAShqD,GACd7G,KAAKowD,aAAarI,MAAMlhD,GACxB7G,KAAK8wD,oBAAoBH,KAG3BjB,EAAAxvD,UAAAovD,8BAAA,WACEtvD,KAAK0uD,4BAA6B,EAClC1uD,KAAKyuD,6BAA8B,GAGrCiB,EAAAxvD,UAAA6uD,oBAAA,SAAoB3nC,GAApB,IAAA9gB,EAAAtG,KACQwuD,EAAY,CAAE58C,MAAOwV,EAAMxV,MAAiBC,IAAKuV,EAAMvV,KACvDk/C,EAAmB/wD,KAAKouD,cAAchsC,iBAAiBosC,EAAU38C,IAAK28C,EAAU58C,OAChFo/C,EAAc,SAAAl/C,GAAQ,OAACxL,EAAKkpD,iBAAiB19C,IAASi/C,GAEtDE,EAAkBD,EAAYxC,EAAU38C,KAAO7R,KAAKkxD,oBAAoB1C,EAAU38C,KAAO,GACzFs/C,EAAoBH,EAAYxC,EAAU58C,OAAS5R,KAAKkxD,oBAAoB1C,EAAU58C,OAAS,GAErG5R,KAAK8vD,aAAahlD,cAAchI,MAAQmuD,EACxCjxD,KAAK+vD,eAAejlD,cAAchI,MAAQquD,EAC1CnxD,KAAKyX,eAAeqc,iBAGd47B,EAAAxvD,UAAAswD,iCAAR,WACExwD,KAAKoxD,eAAetmD,cAAcmkB,UAAUoiC,IAAI,sCAI1C3B,EAAAxvD,UAAAorD,UAAR,WACE,IAAI/D,EAAOvnD,KAAK+qC,OAAOv1B,cAMvB,OAFA+xC,GADAA,GADAA,EAAOA,EAAK/yC,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,QAAS,QAEtB,IAAI8yC,GAAOC,GAAM,IAGlBmI,EAAAxvD,UAAAoxD,WAAR,SAAmBvmB,EAAgBh5B,EAAkBC,EAAoBC,QAAtC,IAAAF,IAAAA,EAAA,SAAkB,IAAAC,IAAAA,EAAA,SAAoB,IAAAC,IAAAA,EAAA,IACvE,IAAI25C,EAAgB7gB,EAQpB,OANAh5B,EAAMA,GAAOA,EAAIjJ,SAAS,KAAOiJ,EAAIvF,MAAM,EAAG,GAAKuF,EAInD65C,GADAA,GADAA,EAAgBA,EAAcp3C,QAAQ,MAAO,IAAMzC,GAAKvF,OAAO,KACjCgI,QAAQ,MAAO,IAAMxC,GAAOxF,OAAO,KACnCgI,QAAQ,OAAQ0c,OAAOjf,KAK/Cy9C,EAAAxvD,UAAAqxD,oBAAR,SAA4BzuD,QAAA,IAAAA,IAAAA,EAAA,IACpB,IAAAgT,EAAAlR,EAAA9B,EAAA0f,MAAA,KAAA,GAACzQ,EAAA+D,EAAA,GAAK9D,EAAA8D,EAAA,GAAO7D,EAAA6D,EAAA,GAEnB,OAAOhT,EAAQ9C,KAAKsxD,WAAW,aAAcv/C,EAAKC,EAAOC,GAAQ,IAG3Dy9C,EAAAxvD,UAAAgxD,oBAAR,SAA4BpuD,QAAA,IAAAA,IAAAA,EAAA,IACpB,IAAAgT,EAAAlR,EAAA9B,EAAA0f,MAAA,KAAA,GAACvQ,EAAA6D,EAAA,GAAM9D,EAAA8D,EAAA,GAAO/D,EAAA+D,EAAA,GAEpB,OAAOhT,EAAQ9C,KAAKsxD,WAAWtxD,KAAK+qC,OAAQh5B,EAAKC,EAAOC,GAAQ,IAG1Dy9C,EAAAxvD,UAAAsxD,6BAAR,SACE1sC,EACAgqC,EACA6B,GAIA,OAFA3wD,KAAKyxD,4BAA4B3sC,EAAWgqC,GAErC,CACL4C,QAAS1xD,KAAKyuD,6BAA+BzuD,KAAK0uD,2BAClDiD,eAAgB3xD,KAAK4xD,kBAAkB9sC,EAAWgqC,EAAS6B,KAIvDjB,EAAAxvD,UAAA0xD,kBAAR,SAA0B9sC,EAAmBgqC,EAAiB6B,GAC5D,IAAMgB,EAAiB,CAAE//C,MAAO,GAAIC,IAAK,IAUzC,OARA8/C,EAAe9/C,KACZ8+C,IAA0B3wD,KAAK0uD,4BAAgC1uD,KAAKwvD,iBAAiBV,GAAqB,GAAVA,EAEnG6C,EAAe//C,MACX++C,IAA0B3wD,KAAK0uD,4BAAgC1uD,KAAKwvD,iBAAiB1qC,GAEnF,GADAA,EAGC6sC,GAGDjC,EAAAxvD,UAAAgtD,gBAAR,WACE,OACEltD,KAAK2vD,yBAAyB7kD,cAAcmkB,UAAU3jB,SAAS,eAC/DtL,KAAK2vD,yBAAyB7kD,cAAcmkB,UAAU3jB,SAAS,aAI3DokD,EAAAxvD,UAAA2xD,mBAAR,SAA2B/sC,EAAmBgqC,GAC5C,OAAO9uD,KAAKyuD,6BAA+BK,IAAY9uD,KAAKwuD,UAAU38C,KAAOiT,IAAc9kB,KAAKwuD,UAAU58C,OAGpG89C,EAAAxvD,UAAAuwD,sBAAR,SAA8B5pD,GAC5B,OACEA,EAAMxF,OAAO4mC,OAASjoC,KAAK8xD,kBACwB,IAAnD9xD,KAAK8vD,aAAahlD,cAAcm+C,gBACiB,IAAjDjpD,KAAK8vD,aAAahlD,cAAco+C,cAvSjB,IAwSfriD,EAAM2M,SAIFk8C,EAAAxvD,UAAAowD,oCAAR,WACEtwD,KAAKoxD,eAAetmD,cAAcmkB,UAAU8iC,OAAO,sCAG7CrC,EAAAxvD,UAAAuxD,4BAAR,SAAoC3sC,EAAmBgqC,GACrD9uD,KAAK0uD,2BAA6B1uD,KAAKouD,cAAchsC,iBAAiB0sC,EAAShqC,GAE/E9kB,KAAKyuD,6BAA+BzuD,KAAKwvD,iBAAiB1qC,KAAe9kB,KAAKwvD,iBAAiBV,IAGzFY,EAAAxvD,UAAA2wD,SAAR,SAAiBhqD,GACf,IAAMo9C,EAAe+N,EAA2B/B,iBAAiBppD,GAC3D2M,EAAUw+C,EAA2BhC,WAAWnpD,GAChDorD,EAAYhO,EAAmB,KAErCjkD,KAAKkyD,oBAAoB1+C,EAASy+C,GAClCjyD,KAAKmyD,qBAAqB3+C,EAASy+C,EAAWhO,GAC9CjkD,KAAKoyD,6BAA6B5+C,EAASy+C,IAGrCvC,EAAAxvD,UAAAmyD,oBAAR,SAA4Bn5C,EAAkB+qC,EAA0BqO,GAAxE,IAAAhsD,EAAAtG,KACEA,KAAKuyD,eAAetO,GAEpBp3C,YAAW,WACTo3C,EAAan5C,cAAcs9C,kBAAkBkK,EAAgBA,GAC7DhsD,EAAK8pD,aAAa3I,gBAAkBvuC,EACpC5S,EAAK8pD,aAAa1I,cAAgBxuC,MAI9Bw2C,EAAAxvD,UAAAqyD,eAAR,SAAuBtO,GACrBA,EAAan5C,cAAc2N,SAGrBi3C,EAAAxvD,UAAAgyD,oBAAR,SAA4B1+C,EAAiBy+C,GAC3C,IAAMO,EAA4E,IAAnDxyD,KAAK8vD,aAAahlD,cAAcm+C,eAE/D,GAAIgJ,IAAcjyD,KAAK8xD,kBAAoBU,GAnV1B,KAmVoDh/C,EAA0B,CAC7F,IAAMi/C,EAAczyD,KAAK+vD,eAAejlD,cAAchI,MAAMnC,OAC5DX,KAAKqyD,oBAAoBI,EAAazyD,KAAK+vD,eAAgB0C,KAIvD/C,EAAAxvD,UAAAiyD,qBAAR,SAA6B3+C,EAAiBy+C,EAAmBhO,GAC/D,IAAMyO,EAAuB1yD,KAAK+vD,eAAejlD,cAAcm+C,iBAAmBhF,EAAanhD,MAAMnC,OAEjGsxD,IAAcjyD,KAAK4wD,oBAAsB8B,GA3V3B,KA2VmDl/C,GACnExT,KAAKqyD,oBAAoB,EAAGryD,KAAK8vD,aAAc,IAI3CJ,EAAAxvD,UAAAwwD,oBAAR,WACE,IAAM+B,EAAczyD,KAAK+vD,eAAejlD,cAAchI,MAAMnC,OAE5DX,KAAK+vD,eAAejlD,cAAchI,MAAQ9C,KAAK4vD,oBAAoBpjD,MAAM,GAAI,GAC7ExM,KAAKqyD,oBAAoBI,EAAazyD,KAAK+vD,eAAgB0C,IAGrD/C,EAAAxvD,UAAAkyD,6BAAR,SAAqC5+C,EAAiBy+C,GACpD,IAAMU,EAtWiC,KAsWd3yD,KAAK+vD,eAAejlD,cAAcm+C,eACrD2J,EAvWiC,KAwWrC5yD,KAAK4vD,oBAAoBjvD,QAAiDgyD,EACtExC,EAAa6B,EAA2B7B,WAAW38C,GAErDy+C,IAAcjyD,KAAK4wD,oBAAsBgC,GAAsBzC,GACjEnwD,KAAKqyD,oBAAoB,EAAGryD,KAAK8vD,aAAc,IAI3CJ,EAAAxvD,UAAA4wD,oBAAR,SAA4BH,GAC1B,IAAMkC,EAAmB7yD,KAAKuxD,oBAAoBvxD,KAAK6vD,mBACjDiD,EAAqB9yD,KAAKuxD,oBAAoBvxD,KAAK4vD,qBAEzD,GAAI5vD,KAAK+yD,6BAA+B/yD,KAAKgzD,sBAC3ChzD,KAAKu/C,YAAYv/C,KAAKwuD,eADxB,CAKA,GAAIxuD,KAAK6xD,mBAAmBiB,EAAoBD,GAG9C,OAFA7yD,KAAKsvD,qCACLtvD,KAAKmnB,cAAcnnB,KAAKwuD,WAI1B,IAAMyE,EAAuBjzD,KAAKwxD,6BAChCsB,EACAD,EACAlC,GAGEsC,EAAqBvB,UACvB1xD,KAAKwuD,UAAY,CAAE58C,MAAOkhD,EAAoBjhD,IAAKghD,GACnD7yD,KAAKu/C,YAAYv/C,KAAKwuD,WACtBxuD,KAAK2uD,SAAS3mD,KAAI5H,EAAA,GAAMJ,KAAKwuD,aAG1ByE,EAAqBvB,UACxB1xD,KAAKwuD,UAASpuD,EAAA,GAAQ6yD,EAAqBtB,gBAC3C3xD,KAAKu/C,YAAY0T,EAAqBtB,4DA7RhBj6C,EAAAA,yBACTyJ,UACWjU,EAAAA,cA7DqC/L,EAAA,CAAhE4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAwBiH,EAAAA,kDAClB/L,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAsBiH,EAAAA,gDACZ/L,EAAA,CAAhE4E,EAAAA,UAAU,iBAAkB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAwBiH,EAAAA,kDANtEwiD,EAA0BsC,EAAA7wD,EAAA,CALtC+E,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAA,4nDACAgB,UAAS8rD,4BAiEiBx7C,EAAAA,kBACTyJ,GACWjU,EAAAA,cAjEjBwiD,IAAmCvB,kBCpChD,SAAAgF,IAGUnzD,KAAA6qD,iBAA4B,EAC5B7qD,KAAA8qD,aAAwB,GAEtB9qD,KAAAozD,kBAA4B,EAcCpzD,KAAA8+B,WAAqB,EA8D5D9+B,KAAA0Y,UAAqB,EAQrB1Y,KAAA27C,UAAqB,EAcrB37C,KAAA69B,UAAqB,EAQrB79B,KAAA07C,OAAkB,EA0BQ17C,KAAAs8B,aAAwB,GAyDlDt8B,KAAAunD,KAAgB,GAiBhBvnD,KAAAqzD,iBAA4B,EA2BVrzD,KAAAmpD,KAA2B,IAAIrhD,EAAAA,aAG9B9H,KAAAykD,MAA4B,IAAI38C,EAAAA,aAG/B9H,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG3B9H,KAAAszD,YAAkC,IAAIxrD,EAAAA,aAIhE9H,KAAAuzD,kBAAyB,KACzBvzD,KAAAwjB,UAAiB,KAkInB,OA5U8BhkB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,iBAAc,KAI9C,WACE,OAAOF,KAAK6qD,qBALc,SAAmB/nD,GAC7C9C,KAAK6qD,gBAAkBj6C,EAAiB9N,oCAgBlBtD,OAAAqC,eAAIsxD,EAAAjzD,UAAA,cAAW,KAGvC,WACE,OAAOF,KAAK8qD,kBAJU,SAAgBhoD,GACtC9C,KAAK8qD,aAAehoD,GAAS,oCAcVtD,OAAAqC,eAAIsxD,EAAAjzD,UAAA,cAAW,KAAf,SAAgBwY,GACnC1Y,KAAK0Y,SAAwB,KAAbA,GAAyB9H,EAAiB8H,GAE1D1Y,KAAKmnB,iDAKc3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,cAAW,KAAf,SAAgBy7C,GACnC37C,KAAK27C,SAAwB,KAAbA,GAAyB/qC,EAAiB+qC,oCAavCn8C,OAAAqC,eAAIsxD,EAAAjzD,UAAA,cAAW,KAAf,SAAgB29B,GACnC79B,KAAK69B,SAAwB,KAAbA,GAAyBjtB,EAAiBitB,GAE1D79B,KAAKmnB,iDAKW3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,WAAQ,KAAZ,SAAaw7C,GAC7B17C,KAAK07C,MAAkB,KAAVA,GAAsB9qC,EAAiB8qC,oCAWlCl8C,OAAAqC,eAAIsxD,EAAAjzD,UAAA,aAAU,KAAd,SAAeynD,GACjC3nD,KAAK2nD,QAAUA,EAEf3nD,KAAKmnB,iDAmBe3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,YAAS,KAYnC,WACE,OAAOF,KAAKwzD,gBAbQ,SAAc1wD,GAC7B+S,MAAM3E,SAAcpO,EAAO,KAIpBA,IACV9C,KAAKwzD,gBAAarqD,EAElBnJ,KAAKmnB,kBANLnnB,KAAKwzD,WAAatiD,SAAcpO,EAAO,IAEvC9C,KAAKmnB,kDAmBa3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,YAAS,KAYnC,WACE,OAAOF,KAAKyzD,gBAbQ,SAAc3wD,GAC7B+S,MAAM3E,SAAcpO,EAAO,KAIpBA,IACV9C,KAAKyzD,gBAAatqD,EAElBnJ,KAAKmnB,kBANLnnB,KAAKyzD,WAAaviD,SAAcpO,EAAO,IAEvC9C,KAAKmnB,kDAsBQ3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,UAAO,KAAX,SAAYqnD,GAC3BvnD,KAAKunD,KAAOA,EAGZvnD,KAAKqrD,QAAU,IAAI/D,GAAOtnD,KAAKunD,KAAMvnD,KAAKqzD,iBAE1CrzD,KAAKmnB,iDAWuB3nB,OAAAqC,eAAIsxD,EAAAjzD,UAAA,qBAAkB,KAAtB,SAAuBmzD,GACnDrzD,KAAKqzD,gBAAsC,KAApBA,GAAgCziD,EAAiByiD,GAEpErzD,KAAKqrD,mBAAmB/D,KAC1BtnD,KAAKqrD,QAAQ7D,YAAcxnD,KAAKqzD,gBAEhCrzD,KAAKmnB,kDAsCTgsC,EAAAjzD,UAAA4rD,aAAA,SAAahpD,GACX9C,KAAKu/C,YAAYz8C,GAEjB9C,KAAK0zD,0BAA0B5wD,IAGjCqwD,EAAAjzD,UAAAyzD,2BAAA,SAA2B7wD,GAA3B,IAAAwD,EAAAtG,KACE6M,YAAW,WAAM,OAAAvG,EAAKi5C,YAAYz8C,OAGpCqwD,EAAAjzD,UAAAwzD,0BAAA,SAA0B5wD,GACpB9C,KAAK4zD,kBAAoB9wD,IAC3B9C,KAAKszD,YAAYtrD,KAAKlF,GACtB9C,KAAK4zD,gBAAkB9wD,IAyB3BqwD,EAAAjzD,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKuzD,kBAAoBzsC,GAK3BqsC,EAAAjzD,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKwjB,UAAYsD,GAGnBqsC,EAAAjzD,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzB2hD,EAAAjzD,UAAAq/C,YAAA,SAAYz8C,GAEN9C,KAAKuzD,mBACPvzD,KAAKuzD,kBAAkBzwD,IAI3BqwD,EAAAjzD,UAAAmnB,SAAA,SAAS7lB,GACP,OAAIo8B,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAU1Y,KAAK6zD,kBAC7C,CACLh2B,SAAU,CACRC,OAAO,IAKTC,GAAe/9B,KAAKg+B,UAAWh+B,KAAK6zD,kBAC/B,CACL71B,UAAW,CACTF,OAAO,IAKTK,GAAen+B,KAAKo+B,UAAWp+B,KAAK6zD,kBAC/B,CACLz1B,UAAW,CACTN,OAAO,avEnVa6pB,EAAiB7kD,GAC7C,IAAIgxD,EACJ,IACEA,EAAM,IAAIpjD,OAAOi3C,GACjB,MAAO5mD,GACP,OAAO,EAET,OAAO4mD,GAAW7kD,IAAUgxD,EAAInjD,KAAK7N,GuEiV/BixD,CAAc/zD,KAAK2nD,QAASnmD,EAAEsB,QAChC9C,KAAKg0D,4BAA4BxyD,EAAEsB,OAC5B,CACL6kD,QAAS,CACP7pB,OAAO,KAKN99B,KAAKi0D,gBAAgBzyD,IAI9B2xD,EAAAjzD,UAAAonB,WAAA,SAAWxkB,GACT9C,KAAKk0D,gBAAgBpxD,IAGbqwD,EAAAjzD,UAAAinB,cAAV,WACMnnB,KAAKgnB,iBACPhnB,KAAKgnB,mBAcDmsC,EAAAjzD,UAAA8zD,4BAAR,SAAoClxD,GAApC,IAAAwD,EAAAtG,KACM8C,GAAS9C,KAAKozD,mBAChBvmD,YAAW,WACTvG,EAAKi5C,YAAYz8C,MAGnB9C,KAAKozD,kBAAmB,IAxWWjyD,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAWPx8B,EAAA,CAAhB2E,EAAAA,MAAM,8DAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAWqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mHAiBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GAec3E,EAAA,CAApB2E,EAAAA,MAAM,uGAQc3E,EAAA,CAApB2E,EAAAA,MAAM,uGAcc3E,EAAA,CAApB2E,EAAAA,MAAM,uGAQW3E,EAAA,CAAjB2E,EAAAA,MAAM,iGAYa3E,EAAA,CAAnB2E,EAAAA,MAAM,qGAamB3E,EAAA,CAAzB2E,EAAAA,MAAM,+EASe3E,EAAA,CAArB2E,EAAAA,MAAM,sGAuBe3E,EAAA,CAArB2E,EAAAA,MAAM,sGA0BU3E,EAAA,CAAhB2E,EAAAA,MAAM,+FAiBuB3E,EAAA,CAA7B2E,EAAAA,MAAM,uHAuBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAGW3E,EAAA,CAAjB8G,EAAAA,OAAO,0BAAiBH,EAAAA,0CAGN3G,EAAA,CAAlB8G,EAAAA,OAAO,2BAAmBH,EAAAA,2CAGP3G,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGH3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAxPpBqrD,EAAoBhyD,EAAA,CADzC4H,EAAAA,aACqBoqD,qBCuIpB,SAAAgB,EAAoB5oC,GAApB,IAAAjlB,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAilB,GAAAA,EA3FZjlB,EAAA8tD,gBA9D6B,EA+D7B9tD,EAAA+tD,mBA9DgC,GAgEhC/tD,EAAAguD,iBAA2B,IAC3BhuD,EAAAiuD,YAAsB,EACtBjuD,EAAAkuD,mBAA6B,EAC7BluD,EAAAmuD,UAAoB,IACpBnuD,EAAAouD,cAAgB,KAChBpuD,EAAAquD,kBAA4B,IAG5BruD,EAAAkkD,MAAQ,CACdoK,SAAU,IAAIlkD,OAAO,MAAY,KACjCmkD,QAAS,IAAInkD,OAAO,MAAY,MAgFhCpK,EAAKkuD,oBAAsBpkD,UAAU6C,UAAUK,MAAM,oBAqczD,OAniBwCxT,EAAAq0D,EAAA5tD,KAA3B4tD,EAmBX30D,OAAAqC,eAAIsyD,EAAAj0D,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKisD,eAAiB,MAAQ,sCAkBXzsD,OAAAqC,eAAIsyD,EAAAj0D,UAAA,iBAAc,KAc9C,WACE,OAAOF,KAAKo0D,qBAfc,SAAmBtxD,GAC7C,IAAIgyD,EAAiB/jD,EAAajO,GAElCgyD,EAAiB90D,KAAK+0D,sBAAsBD,EApGb,IAqG3BA,EAvG+B,EA0G/B90D,KAAKg1D,8BAA8BF,EAAgB90D,KAAKi1D,qBAC1Dj1D,KAAKi1D,kBAxGuB,GAwGyBH,GAGvD90D,KAAKo0D,gBAAkBU,mCAqBMt1D,OAAAqC,eAAIsyD,EAAAj0D,UAAA,oBAAiB,KAkBpD,WACE,OAAOF,KAAKq0D,wBAnBiB,SAAsBvxD,GACnD,IAAImyD,EAAoBlkD,EAAajO,GAEjC9C,KAAK80D,eAtI0B,IAsI0BG,IAC3DA,EApI4B,GAoIoBj1D,KAAK80D,gBAGvDG,EAAoBj1D,KAAK+0D,sBAAsBE,EAzIT,IA0IlCA,EA1IkC,GA6IlCj1D,KAAKg1D,8BAA8Bh1D,KAAK80D,eAAgBG,KAC1Dj1D,KAAK80D,eA5IuB,GA4IsBG,GAGpDj1D,KAAKq0D,mBAAqBY,mCAY5Bd,EAAAj0D,UAAAwK,gBAAA,WACE1K,KAAKk1D,kBACLl1D,KAAKm1D,mBAGPhB,EAAAj0D,UAAAi7C,MAAA,SAAMr4C,GACJ9C,KAAK8rD,aAAahpD,GAClB9C,KAAK0sD,wBAGPyH,EAAAj0D,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,MAGT2yD,EAAAj0D,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKmsD,QAAQrhD,cAAc2N,SAI/B07C,EAAAj0D,UAAA2zD,eAAA,WACE,OAAO7zD,KAAKmsD,QAAUnsD,KAAKmsD,QAAQrhD,cAAchI,MAAQ,IAG3DqxD,EAAAj0D,UAAAgtD,gBAAA,WACE,OACEltD,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,eACzCtL,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,aACf,KAA1BtL,KAAK6zD,kBAITM,EAAAj0D,UAAAk1D,WAAA,SAAWtyD,GACT,YADS,IAAAA,IAAAA,EAAA,IACFA,EAAMwQ,MAAM,kDAGrB6gD,EAAAj0D,UAAAm1D,cAAA,SAAcxuD,GAEZ,IAAMyuD,EAAgBpkC,OAAOqkC,aAAa1uD,EAAM4M,OAC1C+hD,EAA2B,IAAhB3uD,EAAM4M,OAA+B,IAAhB5M,EAAM4M,MAE5C,OAAQzT,KAAKo1D,WAAWE,IAAaE,GAIvCrB,EAAAj0D,UAAAmwD,OAAA,SAAOxpD,GACL,IAAM/D,EAAQ+D,EAAMxF,OAAOyB,MAE3B,GAAIA,EAAO,CACT,GAAI9C,KAAKo1D,WAAWtyD,IAAU9C,KAAKy1D,yBAAyB3yD,GAG1D,OAFA9C,KAAK01D,aAAa,SAClB11D,KAAK8rD,kBAAa3iD,GAIpB,IAAMwsD,EAAgC31D,KAAK41D,oCAAoC9yD,GAC/E9C,KAAK01D,aAAa11D,KAAK61D,kBAAkBF,IAG3C31D,KAAKmpD,KAAKnhD,OACVhI,KAAK0sD,wBAGPyH,EAAAj0D,UAAAqwD,QAAA,SAAQ1pD,GAEN7G,KAAKotD,kBAAoBptD,KAAK6zD,iBAI9B7zD,KAAKykD,MAAMz8C,QAGbmsD,EAAAj0D,UAAA41D,QAAA,SAAQjvD,GACN,IAGIkvD,EACAC,EAJE/M,EAAiBpiD,EAAMxF,OAAO4nD,eAC9BC,EAAeriD,EAAMxF,OAAO6nD,aAM9BlpD,KAAKw0D,mBACPx0D,KAAKi2D,uBAAuBpvD,GAG9BkvD,EAAa/1D,KAAK41D,oCAAoC/uD,EAAMxF,OAAOyB,OACnEizD,EAAa/1D,KAAKk2D,cAAcH,IAChCC,EAAYh2D,KAAKm2D,WAAWJ,MAI1B/1D,KAAK01D,aAAaM,GAClBh2D,KAAKo2D,eAAevvD,EAAOoiD,EAAgBC,IAG7ClpD,KAAK8rD,aAAa9rD,KAAKq2D,mBAAmBN,KAG5C5B,EAAAj0D,UAAA+1D,uBAAA,SAAuBpvD,GACrB,IAAM64C,EAAa74C,EAAMxF,OAAOyB,MAC1BmmD,EAAiBpiD,EAAMxF,OAAO4nD,eAC9BmM,EAAap1D,KAAKo1D,WAAW1V,GAEnC,GAAI0V,EAGF,OAFAp1D,KAAK01D,aAAahW,EAAWlrC,QAAQ4gD,EAAW,GAAI,KAE7CvuD,EAAM+5B,iBAEb,IAAM1nB,EAAW+vC,EAAiB,EAC5B3nD,EAAMo+C,EAAWnqC,OAAO2D,GAE9BlZ,KAAKs2D,iBAAiBzvD,GAElB7G,KAAKmwD,WAAWtpD,EAAOvF,IACzBtB,KAAK01D,aAAahW,IAKxByU,EAAAj0D,UAAAk3B,WAAA,SAAWvwB,GACT7G,KAAKmwD,WAAWtpD,IAGlBstD,EAAAj0D,UAAAi1D,gBAAA,WAAA,IAAA7uD,EAAAtG,KACE6M,YAAW,WACT,IACI++B,EAAQtlC,EAAKilB,GAAGzgB,cAAcoB,iBADZ,0EAC4CvL,OAC9D2F,EAAKo1C,OACP9P,IAEEA,IACFtlC,EAAK6lD,QAAQrhD,cAAcpD,MAAM6uD,aAA0B,GAAR3qB,EAAU,UAKnEuoB,EAAAj0D,UAAAg0D,gBAAA,SAAgBpxD,GACd,GAAI9C,KAAKmsD,QACP,GAAIrpD,GAAmB,IAAVA,EAAa,CACxB,IAAM0zD,EAAoBx2D,KAAK61D,kBAAkB/yD,GACjD9C,KAAK01D,aAAac,QAElBx2D,KAAK01D,aAAa,IAIlB5yD,GACF9C,KAAK2jB,OAAO3b,KAAKlF,IAKbqxD,EAAAj0D,UAAAg2D,cAAR,SAAsBpzD,GAGpB,OAF2BA,IAAU9C,KAAKs0D,iBAEd,IAAIxxD,EAAUA,GAGpCqxD,EAAAj0D,UAAAu2D,cAAR,SAAsB3zD,GACpB,OAAOA,EAAMgG,SAAS9I,KAAKs0D,mBAGrBH,EAAAj0D,UAAAu1D,yBAAR,SAAiC3yD,QAAA,IAAAA,IAAAA,EAAA,IAC/B,IAAM4zD,EAAa5zD,EAAMwQ,MAAM,MAE/B,SAAUojD,GAAcA,EAAW/1D,OAAS,IAGtCwzD,EAAAj0D,UAAAwsD,qBAAR,WAAA,IAAApmD,EAAAtG,KACQ22D,EAAe32D,KAAK6zD,iBAKtB8C,IAAiB32D,KAAKotD,oBACxBptD,KAAKu0D,YAAa,EAClB1nD,YAAW,WACTvG,EAAKqd,OAAO3b,KAAK2uD,KAChB,OAICxC,EAAAj0D,UAAAi2D,WAAR,SAAmBrzD,GAKjB,GAAIA,EAAMwQ,MAAMtT,KAAKwqD,MAAMqK,SAAU,CACnC,IAAMrK,EAAQ,IAAI95C,OAAO,6BAA8B,KACvD,OAAO5N,EAAMiQ,WAAWyB,QAAQg2C,EAAO,OAGzC,OAAO1nD,EAAMiQ,WAAWyB,QAAQ,0BAA2B,QAGrD2/C,EAAAj0D,UAAAm2D,mBAAR,SAA2BvzD,GACzB,IAAM8zD,EAAiB52D,KAAK62D,kBAAkB/zD,GACxC26C,EAAcmZ,EAAiB7mD,WAAWmuB,OAAO04B,GAAgB3mD,QAAQjQ,KAAK80D,sBAAmB3rD,EAEvG,OAAuB,IAAhBs0C,GAAqBA,EAAcA,OAAct0C,GAGlDgrD,EAAAj0D,UAAA21D,kBAAR,SAA0B/yD,GACxB,IAAIg0D,EACAC,EACAC,EACAC,EAYJ,OATAn0D,EAAQ9C,KAAK62D,kBAAkB/zD,GAE/Bi0D,EAAc74B,OAAOp7B,GAAOmN,QAAQjQ,KAAK80D,gBAEzCkC,EAAiBh3D,KAAKk3D,wBAAwBH,EAAa/2D,KAAK20D,mBAChEsC,EAAgBj3D,KAAKm3D,uBAAuBJ,EAAa/2D,KAAK20D,mBAE9DmC,EAAiB92D,KAAKm2D,WAAWa,GAEL,IAAxBh3D,KAAK80D,eACAgC,EAEAA,EAAiB92D,KAAKs0D,iBAAmB2C,GAI5C9C,EAAAj0D,UAAA01D,oCAAR,SAA4C9yD,GAC1C,YAD0C,IAAAA,IAAAA,EAAA,IACnCA,EAAMiQ,WAAWyB,QAAQxU,KAAKwqD,MAAMoK,SAAU,KAG/CT,EAAAj0D,UAAAi3D,uBAAR,SAA+Br0D,EAAYs0D,GACzC,YAD6B,IAAAt0D,IAAAA,EAAA,IACtBA,EAAM0f,MAAM40C,GAAW,IAAM,IAG9BjD,EAAAj0D,UAAAg3D,wBAAR,SAAgCp0D,EAAYs0D,GAC1C,YAD8B,IAAAt0D,IAAAA,EAAA,IACvBA,EAAM0f,MAAM40C,GAAW,IAAM,IAG9BjD,EAAAj0D,UAAAm3D,WAAR,SAAmBv0D,GACjB,GAAIA,EAAO,CACT,IAAMw0D,EAAOx0D,EAAMwQ,MAAMtT,KAAKwqD,MAAMoK,UAC9B2C,EAAaD,GAAQA,EAAK32D,OAEhC,GAAI42D,EAAav3D,KAAK00D,cAEpB,OADA10D,KAAK00D,cAAgB6C,GACd,EAQX,OAJKz0D,IACH9C,KAAK00D,cAAgB,OAGhB,GAGDP,EAAAj0D,UAAAs3D,WAAR,SAAmB10D,GACjB,GAAIA,EAAO,CACT,IAAMw0D,EAAOx0D,EAAMwQ,MAAMtT,KAAKwqD,MAAMoK,UAC9B2C,EAAaD,GAAQA,EAAK32D,OAEhC,GAAI42D,EAAav3D,KAAK00D,cAEpB,OADA10D,KAAK00D,cAAgB6C,GACd,EAQX,OAJKz0D,IACH9C,KAAK00D,cAAgB,OAGhB,GAGDP,EAAAj0D,UAAAu3D,4BAAR,SAAoC5wD,GAClC,IAAM6wD,EAAiB7wD,EAAMvF,MAAQtB,KAAKy0D,UACpCxL,EAAiBpiD,EAAMxF,OAAO4nD,eAEpC,OAAOyO,GAAqC,IAAnBzO,GAGnBkL,EAAAj0D,UAAAy3D,aAAR,SAAqB9wD,EAAY+wD,GAC/B,IAAMC,GAAmB73D,KAAKq1D,cAAcxuD,GAE5C,OACE7G,KAAK83D,kBAAkBjxD,IACvB7G,KAAK+3D,qBAAqBlxD,IAC1B7G,KAAKg4D,sBAAsBnxD,IAC3B7G,KAAKi4D,sBAAsBpxD,IAC3B7G,KAAKy3D,4BAA4B5wD,IACjCgxD,GACA73D,KAAKk4D,sCAAsCrxD,IAC3C7G,KAAKm4D,8CAA8CP,IAI/CzD,EAAAj0D,UAAA80D,8BAAR,SAAsCoD,EAA2BnD,GAC/D,OAAOmD,EAAoBnD,EAlcG,IAqcxBd,EAAAj0D,UAAAm4D,sBAAR,SAA8BxxD,GAC5B,OAAOA,EAAMvF,MAAQtB,KAAKs0D,kBAAoBztD,EAAM4jD,OAASzqD,KAAKs0D,kBAG5DH,EAAAj0D,UAAAo4D,gCAAR,SAAwCC,EAAgBz1D,GACtD,IAAM01D,EAAa11D,GAASA,EAAM9B,QAAQhB,KAAKs0D,kBAE/C,GAAIkE,GAAcx4D,KAAK80D,eAAiB,EACtC,OAAOyD,EAAiBC,GAIpBrE,EAAAj0D,UAAAu4D,sCAAR,SAA8Cp3D,GAC5C,OAAOA,EAAO4nD,iBAAmB5nD,EAAO6nD,cAGlCiL,EAAAj0D,UAAAiwD,WAAR,SAAmBtpD,EAAYvF,GAC7B,IAAMs2D,EAAW/wD,EAAM4M,OAAS5M,EAAM2M,QAGtC,KAFiC,IAAhB3M,EAAM4M,OAA+B,IAAhB5M,EAAM4M,QAE3BzT,KAAKw0D,kBAQtB,OAJIlzD,IACFuF,EAAMvF,IAAMA,IAGVtB,KAAK23D,aAAa9wD,EAAO+wD,KAC3B/wD,EAAM+5B,kBACC,IAKHuzB,EAAAj0D,UAAA60D,sBAAR,SAA8BjyD,EAAe41D,GAC3C,OAAO51D,GAAS,GAAKA,GAAS41D,GAIxBvE,EAAAj0D,UAAAi4D,8CAAR,SAAsDP,GACpD,OAAoB,KAAbA,GAA2C,IAAxB53D,KAAK80D,gBAGzBX,EAAAj0D,UAAAg1D,gBAAR,WACMl1D,KAAK8+B,WACP9+B,KAAKyY,SAID07C,EAAAj0D,UAAAy4D,yBAAR,SAAiCt3D,EAAa4nD,EAAgBC,GAC5D,OAAuB,IAAnBD,GAAyC,IAAjBC,EACnB7nD,EAAO+mD,kBAAkBa,EAAiB,EAAGC,EAAe,GAE9D7nD,EAAO+mD,kBAAkBa,EAAiB,EAAGC,EAAe,IAG7DiL,EAAAj0D,UAAA04D,UAAR,SAAkB91D,EAAOgZ,EAAOtH,GAC9B,OAAO1R,EAAM0N,UAAU,EAAGsL,GAAStH,EAAU1R,EAAM0N,UAAUsL,EAAQ,IAG/Dq4C,EAAAj0D,UAAA22D,kBAAR,SAA0B/zD,GACxB,YADwB,IAAAA,IAAAA,EAAA,IACjBA,EAAMiQ,WAAWyB,QAAQxU,KAAKwqD,MAAMqK,QAAS,MAG9CV,EAAAj0D,UAAAk2D,eAAR,SAAuBvvD,EAAOoiD,EAAgBC,GAC5C,IAAM7nD,EAASwF,EAAMxF,OACf20D,EAAY30D,EAAOyB,MAGzB,OAAI9C,KAAKw3D,WAAWxB,IAAcA,IAAc,IAAMh2D,KAAKs0D,iBAClDjzD,EAAO+mD,kBAAkBa,EAAiB,EAAGC,EAAe,IAIjElpD,KAAKq3D,WAAWrB,IAClBh2D,KAAK24D,yBAAyBt3D,EAAQ4nD,EAAgBC,GAEjD7nD,EAAO+mD,kBAAkBa,EAAgBC,KAG1CiL,EAAAj0D,UAAAo2D,iBAAR,SAAyBzvD,GACvB,IAAM/D,EAAQ+D,EAAMxF,OAAOyB,MACrBoW,EAAWrS,EAAMxF,OAAO4nD,eAAiB,EAE3C/vC,EAAW,GAAKrS,EAAMvF,MAAQtB,KAAKy0D,YACrC5tD,EAAMxF,OAAOyB,MAAQA,EAAM0N,UAAU,EAAG0I,GAAYpW,EAAM+1D,OAAO3/C,EAAW,KAIxEi7C,EAAAj0D,UAAAw1D,aAAR,SAAqB5yD,GACnB9C,KAAKmsD,QAAQrhD,cAAchI,MAAQA,GAG7BqxD,EAAAj0D,UAAAg4D,sCAAR,SAA8CrxD,GAC5C,IAAMxF,EAASwF,EAAMxF,OACfy3D,EAAgB94D,KAAK41D,oCAAoCv0D,EAAOyB,OAChEi2D,EAAuB/4D,KAAKk3D,wBAAwB71D,EAAOyB,MAAO9C,KAAKs0D,kBACvE0E,EAA+Bh5D,KAAKk3D,wBAAwB4B,EAAe94D,KAAKs0D,kBAEtF,OAAIt0D,KAAKy4D,sCAAsCp3D,KAI7CA,EAAO4nD,gBAAkB8P,EAAqBp4D,QAC9Cq4D,EAA6Br4D,SAAWX,KAAKi1D,oBAC5Cj1D,KAAKq4D,sBAAsBxxD,KAIxBstD,EAAAj0D,UAAA63D,qBAAR,SAA6BlxD,GAC3B,IAAMxF,EAASwF,EAAMxF,OACfy3D,EAAgB94D,KAAK41D,oCAAoCv0D,EAAOyB,OAChEk2D,EAA+Bh5D,KAAKk3D,wBAAwB4B,EAAe94D,KAAKs0D,kBAEtF,OAAIt0D,KAAKy4D,sCAAsCp3D,KAI7C23D,EAA6Br4D,QAAUX,KAAKi1D,oBAC3Cj1D,KAAKq4D,sBAAsBxxD,IAC5B7G,KAAKs4D,gCAAgCj3D,EAAO4nD,eAAiBjpD,KAAK80D,eAAgBzzD,EAAOyB,SAIrFqxD,EAAAj0D,UAAA43D,kBAAR,SAA0B/2D,GAGxB,OAFiBf,KAAKy2D,cAAc11D,EAAEM,OAAOyB,QAE1B/B,EAAEO,MAAQtB,KAAKs0D,kBAG5BH,EAAAj0D,UAAA+3D,sBAAR,SAA8BpxD,GAC5B,IAAM/D,EAAQ+D,EAAMxF,OAAOyB,MACrBm2D,GAAwD,IAAvCn2D,EAAMmoC,YAAYjrC,KAAKy0D,WACxCyE,EAAoBp2D,EAAMmoC,YAAY,KACtCkuB,EAAsBr2D,EAAMwQ,MAAM,IAAI5C,OAAO,IAAK,MAKxD,OAHI1Q,KAAKw0D,mBAAqByE,GAAkBE,EAAoBx4D,OAAS,IAC3EkG,EAAMxF,OAAOyB,MAAQ9C,KAAK44D,UAAU91D,EAAOo2D,EAAmB,KAEzDD,GAAkBpyD,EAAMvF,MAAQtB,KAAKy0D,WAGtCN,EAAAj0D,UAAA83D,sBAAR,SAA8BnxD,GAC5B,IAAM/D,EAAQ+D,EAAMxF,OAAOyB,MACrBmmD,EAAiBpiD,EAAMxF,OAAO4nD,eAC9BmQ,EAAsBp5D,KAAKm3D,uBAAuBr0D,EAAO9C,KAAKs0D,kBAEpE,OACEt0D,KAAKs4D,gCAAgCrP,EAAgBnmD,IAAUs2D,EAAoBz4D,QAAUX,KAAK80D,yDApc9E5nD,EAAAA,cA3E8B/L,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CAqBnC/L,EAAA,CAA3B2E,EAAAA,MAAM,iHAgCwB3E,EAAA,CAA9B2E,EAAAA,MAAM,uHAtEIquD,EAAkBkF,EAAAl4D,EAAA,CAhB9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,qhCACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAk0C,KAC9Bh0C,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAk0C,KAC9Bh0C,OAAO,6BAgGanY,EAAAA,cA5FbinD,IAA2BhB,mBC/CtC,SAAAmG,EAAY/tC,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,OAAOA,YAXTsG,EAAAgL,KAAO,OAaLhL,EAAKilB,GAAKA,IA2Ld,OA3M6CzrB,EAAAw5D,EAAA/yD,GAS3C/G,OAAAqC,eAAIy3D,EAAAp5D,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKisD,eAAiB,MAAQ,sCASvCqN,EAAAp5D,UAAAwK,gBAAA,WACE1K,KAAKu5D,iBAGPD,EAAAp5D,UAAAq5D,cAAA,WACEv5D,KAAKk1D,kBACa,aAAdl1D,KAAKsR,MACPtR,KAAKm1D,mBAITmE,EAAAp5D,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKmsD,QAAQrhD,cAAc2N,SAI/B6gD,EAAAp5D,UAAAi1D,gBAAA,WAAA,IAAA7uD,EAAAtG,KACE6M,YAAW,WACT,IACI++B,EAAQtlC,EAAKilB,GAAGzgB,cAAcoB,iBADZ,0EAC4CvL,OAC9D2F,EAAKo1C,OACP9P,IAEEA,IACFtlC,EAAK6lD,QAAQrhD,cAAcpD,MAAM6uD,aAA0B,GAAR3qB,EAAU,UAKnE0tB,EAAAp5D,UAAAg1D,gBAAA,WACMl1D,KAAK8+B,WACP9+B,KAAKyY,SAI4B6gD,EAAAp5D,UAAA+sD,UAAA,SAAUlsD,GACzCf,KAAKunD,OAASvnD,KAAK27C,UAAiC,MAArB56C,EAAEM,OAAOmS,UAC1CxT,KAAKqtD,YAAYtsD,GACjBf,KAAKqrD,QAAQ9C,QAAQxnD,KAIUu4D,EAAAp5D,UAAA8sD,QAAA,SAAQjsD,GACrCf,KAAKunD,OAASvnD,KAAK27C,WACI,MAArB56C,EAAEM,OAAOmS,UACXxT,KAAKqtD,YAAYtsD,GACjBf,KAAKqrD,QAAQtD,MAAMhnD,IAErBf,KAAK8rD,aAAa9rD,KAAKqrD,QAAQvD,gBAInCwR,EAAAp5D,UAAAs5D,aAAA,SAAaz4D,GACX,IAAI+B,EAAQ,GACP9C,KAAKunD,MAIRvnD,KAAKqrD,QAAQlC,KAAKpoD,GAClBf,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAKqrD,QAAQxD,aAChD/kD,EAAQ9C,KAAKqrD,QAAQvD,eALrBhlD,EAAQ9C,KAAKy5D,eAAez5D,KAAKg+B,UAAWj9B,EAAEM,OAAOyB,OACrD9C,KAAKmsD,QAAQrhD,cAAchI,MAAQA,GAMrC9C,KAAK8rD,aAAahpD,IAGpBw2D,EAAAp5D,UAAAu5D,eAAA,SAAez7B,EAAmBl7B,GAChC,OAAQk7B,GAA2B,IAAdA,IAAoBl7B,EAAMnC,OAASq9B,EACpDl7B,EAAMiQ,WAAWvC,UAAU,EAAGwtB,GAC9Bl7B,GAGNw2D,EAAAp5D,UAAAw5D,aAAA,SAAa34D,GAEXf,KAAKotD,kBAAoBptD,KAAKmsD,QAAQrhD,cAAchI,MAIpD9C,KAAKykD,MAAMz8C,QAGbsxD,EAAAp5D,UAAAmtD,YAAA,SAAYtsD,GACNf,KAAKunD,MACPvnD,KAAKqrD,QAAQlC,KAAKpoD,GAGL,SAAXA,EAAEuQ,OACJtR,KAAKmpD,KAAKnhD,OACVhI,KAAK0sD,yBAIT4M,EAAAp5D,UAAAwsD,qBAAA,WAAA,IAAApmD,EAAAtG,KACQ22D,EAAe32D,KAAKmsD,QAAQrhD,cAAchI,MAK5C6zD,IAAiB32D,KAAKotD,oBACxBzgD,aAAa3M,KAAK6tD,eAClB7tD,KAAK6tD,cAAgBhhD,YAAW,WAC9BvG,EAAKqd,OAAO3b,KAAK2uD,KAChB,OAIP2C,EAAAp5D,UAAAqtD,aAAA,SAAaxsD,GAEPf,KAAKunD,MACPvnD,KAAKqrD,QAAQ9yC,MAAMxX,IAIvBu4D,EAAAp5D,UAAAgtD,gBAAA,WACE,OACEltD,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,eACzCtL,KAAKurB,GAAGzgB,cAAcmkB,UAAU3jB,SAAS,aACJ,KAArCtL,KAAKmsD,QAAQrhD,cAAchI,OAI/Bw2D,EAAAp5D,UAAAitD,gBAAA,WACE,MAA6B,KAAtBntD,KAAKs8B,cAAuBt8B,KAAKktD,kBAAoBltD,KAAKs8B,aAAe,IAGlFg9B,EAAAp5D,UAAAy5D,0BAAA,WACE,IAAM72D,EAAQ9C,KAAK6zD,iBACbjqD,EAAU5J,KAAKurB,GAAGzgB,cAEpBhI,IAAU9C,KAAK45D,cAAc55D,KAAK2nD,QAAS7kD,IAC7C8G,EAAQqlB,UAAUoiC,IAAI,cACtBznD,EAAQqlB,UAAUoiC,IAAI,aAEtBznD,EAAQqlB,UAAU8iC,OAAO,eAI7BuH,EAAAp5D,UAAA05D,cAAA,SAAcjS,EAAiB7kD,GAC7B,OAAO,IAAI4N,OAAOi3C,GAASh3C,KAAK7N,IAGlCw2D,EAAAp5D,UAAAi7C,MAAA,SAAMr4C,GACJ9C,KAAK8rD,aAAahpD,GAClB9C,KAAK0sD,wBAGP4M,EAAAp5D,UAAAg0D,gBAAA,SAAgBpxD,GACd9C,KAAKozD,kBAAmB,EACpBpzD,KAAKmsD,UACHrpD,EACE9C,KAAKunD,MACPvnD,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAKqrD,QAAQpD,kBAAkB/2B,OAAOpuB,IAGrE9C,KAAKqrD,QAAQ7D,aACfxnD,KAAK2zD,2BAA2B3zD,KAAKqrD,QAAQvD,eAG/C9nD,KAAKmsD,QAAQrhD,cAAchI,MAAQA,EAIrC9C,KAAKmsD,QAAQrhD,cAAchI,MAAQ,IAKnCA,GACF9C,KAAKszD,YAAYtrD,KAAKlF,IAI1Bw2D,EAAAp5D,UAAA2zD,eAAA,WACE,IAAMgG,EAAe75D,KAAKmsD,SAAWnsD,KAAKmsD,QAAQrhD,cAAchI,YAAUqG,EAE1E,GAAkB,WAAdnJ,KAAKsR,KAAmB,CAC1B,IAAMmsC,EAAc1tC,WAAW8pD,GAC/B,OAAOpc,GAA+B,IAAhBA,EAAoBA,EAAc,KAExD,OAAOoc,4CAzLK3sD,EAAAA,cAZsC/L,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CAsD1B/L,EAAA,CAApC2d,EAAAA,aAAa,UAAW,CAAC,kIAOS3d,EAAA,CAAlC2d,EAAAA,aAAa,QAAS,CAAC,gIA9DJw6C,EAAcn4D,EAAA,CADnC4H,EAAAA,mCAciBmE,EAAAA,cAbIosD,IAAuBnG,ICDvC/rD,GAAY,CAChB,CACE4d,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAA20C,MAC9Bz0C,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAA20C,MAC9Bz0C,OAAO,mBAiDT,SAAAy0C,EAAYvuC,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,YAdXsG,EAAAu1B,KAAO,eAEPv1B,EAAA03B,UAAoB,IAEpB13B,EAAAgL,KAAO,QAEPhL,EAAAqhD,QAAU,6FAEVrhD,EAAAihD,KAAO,GAECjhD,EAAAyzD,SAAWzzD,EAAKqzD,0BAA0Bz3C,KAAK5b,KA0BzD,OArCsCxG,EAAAg6D,EAAAvzD,GAkBpCuzD,EAAA55D,UAAAwK,gBAAA,WAAA,IAAApE,EAAAtG,KACE6M,YAAW,WAEJvG,EAAKitD,mBACRjtD,EAAK6lD,QAAQrhD,cAAcmT,iBAAiB,QAAS3X,EAAKyzD,aAG9DxzD,EAAArG,UAAMwK,gBAAe9J,KAAAZ,OAGvB85D,EAAA55D,UAAAuG,YAAA,WACOzG,KAAKuzD,mBACRvzD,KAAKmsD,QAAQrhD,cAAc6T,oBAAoB,QAAS3e,KAAK+5D,WAIjED,EAAA55D,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,+CArBO0L,EAAAA,cAdL4sD,EAAgB34D,EAAA,CAL5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,2kCACAgB,UAAS4yD,4BAgBO9sD,EAAAA,cAdL4sD,IAAyBR,IC9ChClyD,GAAY,CAChB,CACE4d,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAA80C,MAC9B50C,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAA80C,MAC9B50C,OAAO,mBAqCT,SAAA40C,EAAY1uC,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,YAJXsG,EAAAgL,KAAO,SAUT,OAXsCxR,EAAAm6D,EAAA1zD,GAQpC0zD,EAAA/5D,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,+CALO0L,EAAAA,cAJL+sD,EAAgB94D,EAAA,CAL5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,0iCACAgB,UAAS8yD,4BAMOhtD,EAAAA,cAJL+sD,IAAyBX,kBC7BpC,SAAAa,EAAoBC,GAAAp6D,KAAAo6D,WAAAA,EAyBtB,OAvBED,EAAAj6D,UAAAm6D,iBAAA,SAAiBC,GACP,IAAAjc,EAAAic,EAAAjc,aAAckc,EAAAz5D,EAAAw5D,EAAA,CAAA,iBAEhBE,EAAwBx6D,KAAKy6D,eAAepc,GAE5CzwC,EAAMxN,EAAAA,EAAA,GAAQm6D,GAA4BC,GAEhD,OAAOx6D,KAAKo6D,WAAW/rD,IAAIrO,KAAK2N,IAAK,CAAEC,OAAMA,KAG/CusD,EAAAj6D,UAAAghD,iBAAA,SAAiBp+C,EAAeu7C,GAC9B,IAAMmc,EAAwBx6D,KAAKy6D,eAAepc,GAElD,OAAOr+C,KAAKo6D,WAAW/rD,IAAOrO,KAAK2N,IAAG,IAAI7K,EAAS,CAAE8K,OAAQ4sD,KAG/DL,EAAAj6D,UAAAw6D,OAAA,SAAO/sD,GACL3N,KAAK2N,IAAMA,GAGLwsD,EAAAj6D,UAAAu6D,eAAR,SAAuB7sD,GACrB,OAAOwD,EAASxD,EAAQ,YAAcjO,MAAMqW,QAAQpI,GAAUA,OAASzE,4CAvBzCoF,EAAAA,cAHrB4rD,EAAqBh5D,EAAA,CADjCqE,EAAAA,oCAIiC+I,EAAAA,cAHrB4rD,oBC+PX,SAAAQ,EAAoBjc,GAAA1+C,KAAA0+C,eAAAA,EApPZ1+C,KAAAmY,WAAsB,EAGtBnY,KAAA6+B,WAAsB,EAIpB7+B,KAAA46D,SAAmB,GAGrB56D,KAAAuzD,kBAAyB,KAEzBvzD,KAAAwjB,UAAiB,KAgBcxjB,KAAA8+B,WAAqB,EAsDpC9+B,KAAAw9C,YAAuB,GA0J5Bx9C,KAAAoJ,QAA8B,IAAItB,EAAAA,aAM/B9H,KAAA4f,SAA+B,IAAI9X,EAAAA,aAuJ3D,OA5O6BtI,OAAAqC,eAAI84D,EAAAz6D,UAAA,gBAAa,KAK5C,WACE,OAAOF,KAAK66D,oBANa,SAAkBnd,GAC3C19C,KAAK66D,eAAiBnd,EACtB19C,KAAKw+C,WAAWx+C,KAAK09C,gDAgBKl+C,OAAAqC,eAAI84D,EAAAz6D,UAAA,iBAAc,KAI9C,WACE,OAAOF,KAAK6qD,qBALc,SAAmB/nD,GAC7C9C,KAAK6qD,gBAAkBj6C,EAAiB9N,oCA8BrBtD,OAAAqC,eAAI84D,EAAAz6D,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,cAAcnnB,KAAK8nD,+CAeLtoD,OAAAqC,eAAI84D,EAAAz6D,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAaO,GAChC1Y,KAAKmY,UAA8B,KAAbO,GAAyB9H,EAAiB8H,oCAqBlEiiD,EAAAz6D,UAAAuG,YAAA,WACMzG,KAAK8O,iBACP9O,KAAK8O,gBAAgBnI,eAIzBg0D,EAAAz6D,UAAA+I,SAAA,WACEjJ,KAAK86D,oBAGCH,EAAAz6D,UAAA46D,iBAAR,WACM96D,KAAK49C,WACP59C,KAAK+6D,gBAAkB,CAAC/6D,KAAK49C,aAE7B59C,KAAK+6D,gBAAkB,GAEvB/6D,KAAK+6D,gBAAkB/6D,KAAKg/B,QAAQ/e,QAAO,SAAArW,GAAW,OAAAA,EAAQg0C,cAAYxxC,KAAI,SAAAxC,GAAW,OAAAA,EAAQqtB,cAIrG0jC,EAAAz6D,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAKzBmpD,EAAAz6D,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKuzD,kBAAoBzsC,GAK3B6zC,EAAAz6D,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKwjB,UAAYsD,GAInB6zC,EAAAz6D,UAAA86D,YAAA,SAAYC,GACVj7D,KAAK8nD,aAAemT,EAAcj7D,KAAK29C,YAEvC39C,KAAK8rD,aAAa9rD,KAAK8nD,cACvB9nD,KAAK4f,SAAS5X,KAAKizD,IAGrBN,EAAAz6D,UAAA4rD,aAAA,SAAahpD,GAEP9C,KAAKuzD,mBACPvzD,KAAKuzD,kBAAkBzwD,IAI3B63D,EAAAz6D,UAAAg7D,WAAA,SAAWp4D,GAAX,IAAAwD,EAAAtG,KACuB,iBAAV8C,IACTA,EAAQA,EAAMgO,QAGF,KAAVhO,EACF9C,KAAK8O,gBAAkB9O,KAAKyO,QAAQyyC,iBAAiBp+C,EAAO9C,KAAKq+C,cAAcr3C,WAC7E,SAAA4C,GACMA,GACFtD,EAAKs0D,SAAWhxD,EAAQtD,EAAKs3C,YAC7Bt3C,EAAK00D,YAAYpxD,GACjBtD,EAAKovD,aAAapvD,EAAK60D,kBAAkBvxD,GAAUA,IAEnDtD,EAAK80D,gBAGT,SAAAt2D,GACEwB,EAAK80D,aACL90D,EAAK8C,QAAQpB,KAAKlD,MAItB9E,KAAKo7D,cAITT,EAAAz6D,UAAAmnB,SAAA,SAASuY,GACP,GAAIhC,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,OAC/D,MAAO,CACL+6B,SAAU,CACRC,OAAO,KAMf68B,EAAAz6D,UAAAonB,WAAA,SAAWxkB,GACLA,GAASA,aAAiBtD,QAE5BQ,KAAK46D,SAAW93D,EAAM9C,KAAK49C,YAC3B59C,KAAK8nD,aAAehlD,EAAM9C,KAAK29C,YAC/B39C,KAAK01D,aAAa11D,KAAKm7D,kBAAkBr4D,GAAQA,IACxCA,EAET9C,KAAKk7D,WAAWp4D,GAEhB9C,KAAKq7D,kBAUCV,EAAAz6D,UAAAk7D,WAAV,WACEp7D,KAAKq7D,iBACLr7D,KAAK8rD,kBAAa3iD,IAGVwxD,EAAAz6D,UAAAm7D,eAAV,WACEr7D,KAAK01D,aAAa,GAAI,IACtB11D,KAAK46D,SAAW,GAChB56D,KAAK8nD,aAAe,MAIZ6S,EAAAz6D,UAAAi7D,kBAAV,SAA4Br4D,GAC1B,OAAOA,EAAQ9C,KAAK+6D,gBAAgB3uD,KAAI,SAAA6/B,GAAU,OAAAnpC,EAAMmpC,MAASxe,KAAK,OAAS,IAIvEktC,EAAAz6D,UAAAo7D,YAAV,SAAsBx4D,GACpB9C,KAAKsnB,WAAWxkB,GACZA,GAASA,aAAiBtD,QAC5BQ,KAAKg7D,YAAYl4D,IAIX63D,EAAAz6D,UAAAinB,cAAV,SAAwBC,GAClBpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAIjBuzC,EAAAz6D,UAAAs+C,WAAR,SAAmB/vC,GACb2C,EAAS3C,EAAS,YACpBzO,KAAKyO,QAAiCA,GAGpCA,GAAW2C,EAAS3C,EAAS,YAC/BzO,KAAKyO,QAAUzO,KAAK0+C,eACpB1+C,KAAKyO,QAAQisD,OAAOjsD,8CAlJY0rD,MAxNGh5D,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAQNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAwCc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DASiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGmB3E,EAAA,CAAzB2E,EAAAA,MAAM,+EAkBkB3E,EAAA,CAAxB2E,EAAAA,MAAM,+EAMa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAuBnG,sCAiCHwB,EAAA,CAA1B2E,EAAAA,MAAM,+GAkBqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mHAqBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAUc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAkBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAYY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAqBH,EAAAA,6CAMP3G,EAAA,CAArB8G,EAAAA,OAAO,8BAAyBH,EAAAA,8CAnPb6yD,EAAqBx5D,EAAA,CAD1C4H,EAAAA,mCAsPqCoxD,MArPhBQ,MCZTY,GAA0B,CACrC1kD,GAAsB,CACpB2kD,wBAAyB,SACzBC,0BAA2B,SAC3BC,iBAAkB,SAClBC,WAAY,kBACZC,oBAAqBrtB,GAAuB13B,GAAG23B,UAC/CqtB,iBAAkBttB,GAAuB13B,GAAG43B,OAC5CqtB,sBAAuBvtB,GAAuB13B,GAAG83B,YACjDotB,uBAAwBxtB,GAAuB13B,GAAG+3B,cAEpD73B,GAAsB,CACpBykD,wBAAyB,cACzBC,0BAA2B,WAC3BC,iBAAkB,SAClBC,WAAY,yBACZC,oBAAqBrtB,GAAuBx3B,GAAGy3B,UAC/CqtB,iBAAkBttB,GAAuBx3B,GAAG03B,OAC5CqtB,sBAAuBvtB,GAAuBx3B,GAAG43B,YACjDotB,uBAAwBxtB,GAAuBx3B,GAAG63B,cAEpD53B,GAAsB,CACpBwkD,wBAAyB,aACzBC,0BAA2B,WAC3BC,iBAAkB,YAClBC,WAAY,wBACZC,oBAAqBrtB,GAAuBv3B,GAAGw3B,UAC/CqtB,iBAAkBttB,GAAuBv3B,GAAGy3B,OAC5CqtB,sBAAuBvtB,GAAuBv3B,GAAG23B,YACjDotB,uBAAwBxtB,GAAuBv3B,GAAG43B,cAEpD33B,GAAsB,CACpBukD,wBAAyB,WACzBC,0BAA2B,WAC3BC,iBAAkB,QAClBC,WAAY,kBACZC,oBAAqBrtB,GAAuBt3B,GAAGu3B,UAC/CqtB,iBAAkBttB,GAAuBt3B,GAAGw3B,OAC5CqtB,sBAAuBvtB,GAAuBt3B,GAAG03B,YACjDotB,uBAAwBxtB,GAAuBt3B,GAAG23B,6BAUtD,SAAAotB,IAAA,IAAA11D,EAAAtG,KAIEA,KAAAi8D,SAAU,EACVj8D,KAAAk8D,WAAY,EACZl8D,KAAAm8D,KAAO,EACPn8D,KAAAo8D,SAAW,GACXp8D,KAAAuhC,cAA+B,CAC7BjH,OAAQ,WACNh0B,EAAKmD,MAAMiW,SAAQ,SAAA9V,GACbA,EAAmB,YACrBtD,EAAK8gB,MAAMpf,KAAK4B,GAChBtD,EAAK2/B,QAAQjP,aAInBrzB,MAAO3D,KAAK43B,SAAS4jC,yBAEvBx7D,KAAAq8D,YAAsB,GACtBr8D,KAAAoiC,gBAAiC,CAC/B9H,OAAQ,WACNh0B,EAAK8gB,MAAMpf,KAAK,MAChB1B,EAAK2/B,QAAQjP,SAEfrzB,MAAO3D,KAAK43B,SAAS6jC,2BA4DGz7D,KAAAonB,MAA2B,IAAItf,EAAAA,aA8G3D,OApJuBtI,OAAAqC,eAAIm6D,EAAA97D,UAAA,WAAQ,KAkBjC,WACE,OAAOF,KAAKqwC,WAAakrB,GAAwBhsD,UAnB9B,SAAazM,GAC5BA,aAAiBtD,UAAYsD,aAAiBnD,QAChDK,KAAKqwC,UAASjwC,EAAAA,EAAAA,EAAA,GACTm7D,GAAuC,IACvCA,GAAwBhsD,MACxBzM,GAEDA,EAAM64D,aACR37D,KAAKumC,MAAQvmC,KAAK43B,SAAS+jC,aAG7B37D,KAAKqwC,UAAYkrB,GAAwBhsD,KAE3CvP,KAAKuhC,cAAc59B,MAAQ3D,KAAK43B,SAAS4jC,wBACzCx7D,KAAKoiC,gBAAgBz+B,MAAQ3D,KAAK43B,SAAS6jC,0BAC3Cz7D,KAAKs8D,oDAQW98D,OAAAqC,eAAIm6D,EAAA97D,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKu8D,YALI,SAAUz5D,GAC1B9C,KAAKu8D,OAASnrD,EAAStO,EAAO,UAAYA,EAAQ9C,KAAK43B,SAAS+jC,4CAgBlEK,EAAA97D,UAAAuG,YAAA,WACMzG,KAAKgkD,oBACPhkD,KAAKgkD,mBAAmBr9C,cAGtB3G,KAAKw8D,oBACPx8D,KAAKw8D,mBAAmB71D,cAGtB3G,KAAKy8D,sBACPz8D,KAAKy8D,qBAAqB91D,eAI9Bq1D,EAAA97D,UAAA+I,SAAA,WACEjJ,KAAK08D,iBACL18D,KAAKs8D,oBAGPN,EAAA97D,UAAA2+C,OAAA,WAAA,IAAAv4C,EAAAtG,KACEA,KAAKm8D,KAAO,EACRn8D,KAAKq8D,aACPr8D,KAAKk8D,WAAY,EACjBl8D,KAAKw8D,mBAAqBx8D,KAAKq6D,iBAAiBr6D,KAAKq8D,aAAar1D,WAAU,SAAA21D,GAC1Er2D,EAAKmD,MAAQkzD,EAAKlzD,MAClBnD,EAAK21D,QAAUU,EAAKV,QACpB31D,EAAK41D,WAAY,MAGnBl8D,KAAK08D,kBAITV,EAAA97D,UAAA08D,cAAA,WAAA,IAAAt2D,EAAAtG,KACEA,KAAKm8D,OACLn8D,KAAKk8D,WAAY,EACjBl8D,KAAKy8D,qBAAuBz8D,KAAKq6D,iBAAiBr6D,KAAKq8D,aAAar1D,WAAU,SAAA21D,GAC5EA,EAAKlzD,MAAMiW,SAAQ,SAAA7R,GACjBvH,EAAKmD,MAAMjF,KAAKqJ,MAElBvH,EAAK21D,QAAUU,EAAKV,QACpB31D,EAAK41D,WAAY,MAObF,EAAA97D,UAAAm6D,iBAAR,SAAyBp6C,GACjB,IAAEk8C,EAAFn8D,KAAEm8D,KAAMC,EAARp8D,KAAQo8D,SAAU/d,EAAlBr+C,KAAkBq+C,aAExB,GAAIr+C,KAAK09C,cAAc2c,iBAAkB,CACvC,IAAMwC,EAA8C78D,KAAK88D,kBAAkB78C,GAE3E,OAAOjgB,KAAK09C,cAAc2c,iBAAiBwC,GAG7C,OAAO78D,KAAK09C,cAAcmF,gBAAgB5iC,EAAQk8C,EAAMC,EAAU/d,IAG5D2d,EAAA97D,UAAA48D,kBAAR,SAA0B78C,GAClB,IAAEk8C,EAAFn8D,KAAEm8D,KAAMC,EAARp8D,KAAQo8D,SAAU/d,EAAlBr+C,KAAkBq+C,aAAc3N,EAAhC1wC,KAAgC0wC,KAEhCmsB,EAAiB,GAEjBjvD,EAAS,CAAEqS,OAAMA,EAAEk8C,KAAIA,EAAEC,SAAQA,EAAEW,MAD3B/8D,KAAKg9D,cAActsB,GACe2N,aAAYA,GAE5D,IAAK,IAAM/8C,KAAOsM,EACZA,EAAO/N,eAAeyB,IAAQsM,EAAOtM,KACvCu7D,EAAev7D,GAAOsM,EAAOtM,IAIjC,OAAOu7D,GAGDb,EAAA97D,UAAA88D,cAAR,SAAsBtsB,QAAA,IAAAA,IAAAA,EAAA,CAA4Bp/B,UAAMnI,IAC9C,IAAA8iC,EAAAyE,EAAAzE,OAAQ36B,EAAAo/B,EAAAp/B,KAEhB,GAAK26B,EAIL,OAAI36B,IAAS+2B,EAAAA,sBAAsB8I,WAC1B,IAAIlF,EAAOhV,SAGb,GAAGgV,EAAOhV,UAGX+kC,EAAA97D,UAAAw8D,eAAR,WAAA,IAAAp2D,EAAAtG,KACEA,KAAKk8D,WAAY,EAEjBl8D,KAAKgkD,mBAAqBhkD,KAAKq6D,iBAAiB,IAAIrzD,WAAU,SAAA21D,GAC5Dr2D,EAAKmD,MAAQkzD,EAAKlzD,MAClBnD,EAAK21D,QAAUU,EAAKV,QACpB31D,EAAK41D,WAAY,MAIbF,EAAA97D,UAAAo8D,iBAAR,WACEt8D,KAAKi9D,cAAgB,CACnBzuB,UAAaxuC,KAAK43B,SAASgkC,oBAC3BntB,OAAUzuC,KAAK43B,SAASikC,iBACxBltB,YAAe3uC,KAAK43B,SAASkkC,sBAC7BltB,aAAgB5uC,KAAK43B,SAASmkC,yBA7Ja56D,EAAA,CAA9C4E,EAAAA,UAAU07B,GAAkB,CAAEx7B,QAAQ,oBAAiBw7B,mCAMpCtgC,EAAA,CAAnB2E,EAAAA,MAAM,6BAAsBnG,sCAGXwB,EAAA,CAAjB2E,EAAAA,MAAM,2BAAkBnG,oCAGJwB,EAAA,CAApB2E,EAAAA,MAAM,oGAuBW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FASoB3E,EAAA,CAA1B2E,EAAAA,MAAM,iFAGmB3E,EAAA,CAAzB2E,EAAAA,MAAM,+EAGmB3E,EAAA,CAAzB8G,EAAAA,OAAO,kCAAyBH,EAAAA,2CArFbk0D,EAA0B76D,EAAA,CAD/C4H,EAAAA,aACqBizD,qBC/CtB,SAAAkB,IAAA,IAAA52D,EAAA,OAAAC,GAAAA,EAAA1F,MAAAb,KAAAU,YAAAV,YAGEsG,EAAA62D,gBAAmC,KAEnC72D,EAAA82D,gBAA0B,IAC1B92D,EAAA+2D,YAAsB,MAsCxB,OA5C4Cv9D,EAAAo9D,EAAA32D,GAQ1C22D,EAAAh9D,UAAA+I,SAAA,WACE1C,EAAArG,UAAM+I,SAAQrI,KAAAZ,MAEdA,KAAKs9D,uBACLt9D,KAAKu9D,kBAGPL,EAAAh9D,UAAAo9D,qBAAA,WAAA,IAAAh3D,EAAAtG,KACEA,KAAKm9D,gBAAkBtY,EAAAA,UAAU7kD,KAAKw9D,cAAc1yD,cAAe,SAASi4C,KAC1E9iC,EAAAA,QAAO,SAAClf,GAAW,OAAAuF,EAAKm3D,qBAAqB18D,MAC7CgjD,EAAAA,aAAa,MAGf/jD,KAAKm9D,gBAAgBn2D,WAAU,WAC7BV,EAAKu4C,aAITqe,EAAAh9D,UAAAw9D,UAAA,WACE19D,KAAKimC,QAAQ5xB,QAGf6oD,EAAAh9D,UAAAyvC,OAAA,SAAOe,GACL1wC,KAAK0wC,KAAOA,GAGNwsB,EAAAh9D,UAAAq9D,eAAR,WACMrqD,OAAOuI,YAAc,MACvBzb,KAAKq9D,aAAe,GACpBr9D,KAAKo9D,iBAAmB,KAIpBF,EAAAh9D,UAAAu9D,qBAAR,SAA6B18D,GAC3B,OAAqB,KAAdA,EAAEyS,SAzC+BrS,EAAA,CAAzC4E,EAAAA,UAAU,YAAa,CAAEE,QAAQ,oBAAuBiH,EAAAA,iDAD9CgwD,EAAsB/7D,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,mxCAEW82D,IAA+BlB,kBCC1C,SAAA2B,EAAoBr2B,GAAAtnC,KAAAsnC,oBAAAA,EAJZtnC,KAAAq1B,aAAkC,KAE1Cr1B,KAAA49D,iBAAsC,IAAI91D,EAAAA,aA0C5C,OA7BE61D,EAAAz9D,UAAAw9D,UAAA,SAAU9vD,GAAV,IAAAtH,EAAAtG,KAOUyO,EAAAb,EAAAa,QAASuwB,EAAApxB,EAAAoxB,QAASqf,EAAAzwC,EAAAywC,aAAc9X,EAAA34B,EAAA24B,MAAO3O,EAAAhqB,EAAAgqB,SAE/C53B,KAAKq1B,aAAer1B,KAAKsnC,oBAAoBxC,6BAA6Bo4B,IAC1El9D,KAAKq1B,aAAad,SAASgS,MAAQA,EACnCvmC,KAAKq1B,aAAad,SAASyK,QAAUA,EACrCh/B,KAAKq1B,aAAad,SAASmpB,cAAgBjvC,EAC3CzO,KAAKq1B,aAAad,SAAS8pB,aAAeA,EAC1Cr+C,KAAKq1B,aAAad,SAASqD,SAAWA,EACtC53B,KAAKq1B,aAAad,SAASnN,MAAMpgB,WAAU,SAAAghD,GACzC1hD,EAAK00D,YAAYhT,MAEnBhoD,KAAKq1B,aAAakS,kBAAkBzT,gBACpC9zB,KAAKq1B,aAAad,SAASmpC,aAI7BC,EAAAz9D,UAAA86D,YAAA,SAAYl4D,GACNA,GACF9C,KAAK49D,iBAAiB51D,KAAKlF,GAE7B9C,KAAKq1B,aAAaC,oDAtCqBoP,MAL9Bi5B,EAAoBx8D,EAAA,CADhCqE,EAAAA,oCAM0Ck/B,MAL9Bi5B,MCJPv2D,GAAY,CAChB+yD,GACAwD,GACA,CACE34C,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAA04C,MAC9Bx4C,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAA04C,MAC9Bx4C,OAAO,mBAqET,SAAAw4C,EAAYC,EAAsDC,GAAlE,IAAAz3D,EACEC,EAAA3F,KAAAZ,KAAM89D,IAAsB99D,YADoCsG,EAAAy3D,qBAAAA,IA4FpE,OArGuCj+D,EAAA+9D,EAAAt3D,GAKrC/G,OAAAqC,eAAIg8D,EAAA39D,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKisD,eAAiB,MAAQ,sCAOvC4R,EAAA39D,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAITolD,EAAA39D,UAAAuG,YAAA,WACMzG,KAAKg+D,mBACPh+D,KAAKg+D,kBAAkBr3D,eAI3Bk3D,EAAA39D,UAAA+I,SAAA,WACE1C,EAAArG,UAAM+I,SAAQrI,KAAAZ,OAoBhB69D,EAAA39D,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKmsD,QAAQrhD,cAAc2N,SAI/BolD,EAAA39D,UAAA+9D,WAAA,WAAA,IAAA33D,EAAAtG,KACE,GAAIA,KAAKk+D,qBAAsB,CACvB,IAAEzvD,EAAFzO,KAAEyO,QAASuwB,EAAXh/B,KAAWg/B,QAASqf,EAApBr+C,KAAoBq+C,aAAczmB,EAAlC53B,KAAkC43B,SAExC53B,KAAK+9D,qBAAqBL,UAAU,CAAEjvD,QAAOA,EAAEuwB,QAAOA,EAAEqf,aAAYA,EAAE9X,MAAOvmC,KAAK2D,MAAOi0B,SAAQA,IAE5F53B,KAAKg+D,oBACRh+D,KAAKg+D,kBAAoBh+D,KAAK+9D,qBAAqBH,iBAAiB52D,WAAU,SAAA4C,GAC5EtD,EAAKg1D,YAAY1xD,SAMzBi0D,EAAA39D,UAAAw1D,aAAA,SAAa5yD,EAAYuO,GACnBrR,KAAKm+D,YACPn+D,KAAKo+D,4BAA4B/sD,GAEjCrR,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAK8nD,cAAsC,IAAtB9nD,KAAK8nD,aAAqBhlD,EAAQ,IAI9F+6D,EAAA39D,UAAAm+D,aAAA,WACE,OAAOr+D,KAAKmsD,QAAQrhD,cAAchI,OAGpC+6D,EAAA39D,UAAAo+D,YAAA,WACE,IAAMx7D,EAAQ9C,KAAKq+D,eAEfr+D,KAAK46D,WAAa93D,GACpB9C,KAAKk7D,WAAWp4D,IAIZ+6D,EAAA39D,UAAAg+D,mBAAR,WAKE,OAJKl+D,KAAKyO,SACR0uB,QAAQC,KAAK,0BAGLp9B,KAAKyO,SAAYzO,KAAK0Y,WAG1BmlD,EAAA39D,UAAAk+D,4BAAR,SAAoCG,GAClC,IAAMC,EAAiD,IAAvCh/D,OAAOsqB,KAAKy0C,GAAgB59D,OACtC89D,EAAgBz+D,KAAKm+D,YAAYI,GAEvCv+D,KAAK46D,SAAW4D,EAAU,GAAKC,EAC/Bz+D,KAAKmsD,QAAQrhD,cAAchI,MAAQ07D,EAAU,GAAKC,4CA1FjBtE,UAAqDwD,MANlCx8D,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CAHpD2wD,EAAiB18D,EAAA,CAL7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,40BACAgB,UAASs3D,4BAW0BvE,GAAqDwD,MAT7EE,IAA0BlD,kBClEvC,SAAAgE,IA0BsB3+D,KAAA2jB,OAAS,IAAI7b,EAAAA,aAenC,OAxB0BtI,OAAAqC,eAAI88D,EAAAz+D,UAAA,cAAW,KAIvC,WACE,OAAOF,KAAK8qD,cAAgB9qD,KAAK43B,SAASgnC,uBALpB,SAAgBphB,GACtCx9C,KAAK8qD,aAAetN,GAAepsC,EAASosC,EAAa,UAAYA,EAAcx9C,KAAK43B,SAASgnC,mDAYnGD,EAAAz+D,UAAAyuD,SAAA,SAAS9nD,GACP7G,KAAK2jB,OAAO3b,KAAK,CAAEnB,MAAOA,EAAO/D,MAAO9C,KAAKikD,aAAan5C,cAAchI,SAG1E67D,EAAAz+D,UAAA2wD,SAAA,WACE7wD,KAAKikD,aAAan5C,cAAc2N,SAGlCkmD,EAAAz+D,UAAAw7C,MAAA,WACE17C,KAAKikD,aAAan5C,cAAchI,MAAQ,IAnCrB3B,EAAA,CAApB2E,EAAAA,MAAM,sEAaiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GASa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEAEuD9G,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAsBiH,EAAAA,gDA5BlEyxD,EAA4Bx9D,EAAA,CAJxC+E,EAAAA,UAAU,CACTC,SAAU,wBACVC,SAAA,gXAEWu4D,oBCAb,SAAAE,IACE7+D,KAAA2jD,UAAY,EACZ3jD,KAAA8+D,MAAgB,EAGQ9+D,KAAA++D,YAAuB,EASnB/+D,KAAAg/D,eAA6B,GAGrCh/D,KAAAs/B,QAAsC,GAG/Bt/B,KAAAi/D,aAAe,IAAIn3D,EAAAA,aAG1B9H,KAAA2jB,OAAS,IAAI7b,EAAAA,aAOL9H,KAAAk/D,cAAgB,IAAIp3D,EAAAA,aA0DlD,OApDEtI,OAAAqC,eAAIg9D,EAAA3+D,UAAA,aAAU,KAAd,iBACE,SAAqB,QAAb4V,EAAC9V,KAAKs/B,eAAO,IAAAxpB,OAAA,EAAAA,EAAEnV,yCAGzBk+D,EAAA3+D,UAAA8lD,SAAA,SAASlqC,GACP9b,KAAK2jD,UAAY7nC,GAAS,EAAI,EAAY,GAARA,EAAa,IAGjD+iD,EAAA3+D,UAAAi/D,eAAA,SAAel/B,GACb,OAAOjgC,KAAKg/D,eAAepmC,MAAK,SAAAqtB,GAAgB,OAAAA,IAAiBhmB,EAAOn9B,UAG1E+7D,EAAA3+D,UAAAk/D,UAAA,SAAUC,EAAOp/B,GACfjgC,KAAKs/D,qBAAqBD,EAAOp/B,GAE5BjgC,KAAK++D,YACR/+D,KAAKu/D,cAAc1O,YAIvBgO,EAAA3+D,UAAAo/D,qBAAA,SAAqBE,EAASv/B,GAC5B,GAAIu/B,EACFx/D,KAAKg/D,eAAex6D,KAAKy7B,EAAOn9B,WAC3B,CACL,IAAM28D,EAAsBz/D,KAAKg/D,eAAeh+D,QAAQi/B,EAAOn9B,OAC/D9C,KAAKg/D,eAAelrD,OAAO2rD,EAAqB,GAGlDz/D,KAAK2jB,OAAO3b,KAAKhI,KAAKg/D,iBAGxBH,EAAA3+D,UAAAw/D,iBAAA,SAAiB74D,GACf7G,KAAKi/D,aAAaj3D,KAAKnB,IAIzBg4D,EAAA3+D,UAAA+sD,UAAA,SAAUpmD,GACc,IAAlBA,EAAM2M,SACRxT,KAAKk/D,cAAcl3D,QAIvB62D,EAAA3+D,UAAAy/D,kBAAA,SAAkB5Z,GAAlB,IAAAz/C,EAAAtG,KACEA,KAAK8+D,KAAO/Y,EAEZl5C,YAAW,WACLk5C,GAAUz/C,EAAKi5D,gBAAkBj5D,EAAKy4D,aACxCz4D,EAAKi5D,cAAc1O,WACnBvqD,EAAKi5D,cAAc7jB,aA/EDv6C,EAAA,CAAvB2E,EAAAA,MAAM,4EAGc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAGwB3E,EAAA,CAA9B2E,EAAAA,MAAM,yFAGqB3E,EAAA,CAA3B2E,EAAAA,MAAM,qCAAqCnG,6CAGxBwB,EAAA,CAAnB2E,EAAAA,MAAM,6BAAsBnG,sCAGFwB,EAAA,CAA1B8G,EAAAA,OAAO,+EAGY9G,EAAA,CAAnB8G,EAAAA,OAAO,kEAOoB9G,EAAA,CAA3B8G,EAAAA,OAAO,iFAEoD9G,EAAA,CAA3D4E,EAAAA,UAAU,YAAa,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAmBiH,EAAAA,6CACX/L,EAAA,CAA3D4E,EAAAA,UAAU,YAAa,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAmBiH,EAAAA,6CAC3C/L,EAAA,CAA3B4E,EAAAA,UAAU,iCAAgC44D,yCAsC3Cx9D,EAAA,CADC2d,EAAAA,aAAa,UAAW,CAAC,kIAvEf+/C,EAA8B19D,EAAA,CAJ1C+E,EAAAA,UAAU,CACTC,SAAU,0BACVC,SAAA,wwBAEWy4D,OhBVDnU,GAAAA,EAAAA,0BAAAA,EAAAA,wBAAuB,KAEjCA,GAAA,WAAA,GAAA,aAEAA,GAAAA,GAAA,SAAA,GAAA,WAEAA,GAAAA,GAAA,SAAA,GAAA,WiBKK,ICTKkV,GDSCC,GAA+B,CAC1ChpD,GAA2B,CACzB43B,OAAQ,gBACRmwB,kBAAmB,UAErB7nD,GAA2B,CACzB03B,OAAQ,uBACRmwB,kBAAmB,SAErB5nD,GAA2B,CACzBy3B,OAAQ,yBACRmwB,kBAAmB,UAErB3nD,GAA2B,CACzBw3B,OAAQ,oBACRmwB,kBAAmB,yBAiBvB,SAAAkB,IACU9/D,KAAAmY,WAAsB,EACtBnY,KAAA88C,YAAwC4N,EAAAA,wBAAwBv2C,WAChEnU,KAAA+/D,aAAwB,EAGxB//D,KAAA6+B,WAAsB,EACtB7+B,KAAA+8C,OAAkB,EAQ1B/8C,KAAAggE,gBAA8C,GAC9ChgE,KAAAigE,uBAAqD,GACrDjgE,KAAAkgE,mBAAqB,GAakBlgE,KAAA8+B,WAAqB,EAyEpC9+B,KAAAw9C,YAAuB,GAWhBx9C,KAAA4+D,kBAA6B,GAoIxC5+D,KAAA2jB,OAA6B,IAAI7b,EAAAA,aA0JvD,OAxUuBtI,OAAAqC,eAAIi+D,EAAA5/D,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAawvB,GAA6BtwD,UAZnC,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTy/D,GAA4C,IAC5CA,GAA6BtwD,MAC7BzM,GAGY+8D,GAA6BtwD,sCAgD7B/P,OAAAqC,eAAIi+D,EAAA5/D,UAAA,WAAQ,KAKjC,WACE,OAAOF,KAAK6+B,eANO,SAAahB,GAChC79B,KAAK6+B,UAA8B,KAAbhB,GAAyBjtB,EAAiBitB,GAChE79B,KAAKmnB,iDAgBc3nB,OAAAqC,eAAIi+D,EAAA5/D,UAAA,WAAQ,KAOjC,WACE,OAAOF,KAAKmY,eARO,SAAaO,GAChC1Y,KAAKmY,UAA8B,KAAbO,GAAyB9H,EAAiB8H,GAChE1Y,KAAKmnB,gBAELnnB,KAAKmgE,sDAgBiB3gE,OAAAqC,eAAIi+D,EAAA5/D,UAAA,aAAU,KAItC,WACE,OAAOF,KAAK+/D,iBALU,SAAehB,GACrC/+D,KAAK+/D,YAAkC,KAAfhB,GAA2BnuD,EAAiBmuD,oCAmBlDv/D,OAAAqC,eAAIi+D,EAAA5/D,UAAA,UAAO,KAM/B,WACE,OAAOF,KAAKo/B,cAPM,SAAYE,GAC9Bt/B,KAAKo/B,SAAWE,EAEhBt/B,KAAKogE,uDAiBU5gE,OAAAqC,eAAIi+D,EAAA5/D,UAAA,OAAI,KAMzB,WACE,OAAOF,KAAK+8C,WAPG,SAASrM,GACxB1wC,KAAK+8C,MAAsB,KAATrM,GAAqB9/B,EAAiB8/B,GAExD1wC,KAAKogE,uDAiBiB5gE,OAAAqC,eAAIi+D,EAAA5/D,UAAA,aAAU,KAetC,WACE,OAAOF,KAAK88C,iBAhBU,SAAeoB,GAErC,OADAl+C,KAAK88C,YAAcoB,KAAcwM,EAAAA,wBAA0BxM,EAAawM,EAAAA,wBAAwBv2C,WACxFnU,KAAK88C,YAAY/pC,YACvB,IAAK,aACH/S,KAAK88C,YAAc4N,EAAAA,wBAAwBv2C,WAC3C,MACF,IAAK,WACHnU,KAAK88C,YAAc4N,EAAAA,wBAAwBp/C,SAC3C,MACF,IAAK,WACHtL,KAAK88C,YAAc4N,EAAAA,wBAAwBvM,2CAejD2hB,EAAA5/D,UAAA+I,SAAA,WACEjJ,KAAKqgE,WAAWrgE,KAAKs/B,UAGvBwgC,EAAA5/D,UAAAkgE,oBAAA,etJ3CoC9gC,EAAqBrI,EsJ4CnDj3B,KAAKs/B,SAAWt/B,KAAKs/B,QAAQ3+B,SAC/BqT,GAA8BhU,KAAKs/B,SACnC3rB,GAAwB3T,KAAKs/B,SAC7Bt/B,KAAKsgE,mBAAmBtgE,KAAKs/B,SAEzBt/B,KAAK0wC,OtJjDuBpR,EsJkDRt/B,KAAKs/B,QtJlDwBrI,EsJkDf,QtJjD1CqI,EAAQoR,MAAK,SAAC+Q,EAASC,GAIrB,OAHAD,EAAUA,EAAQxqB,GAAUlkB,WAAWxC,gBACvCmxC,EAAUA,EAAQzqB,GAAUlkB,WAAWxC,gBAG7B,EAENkxC,EAAUC,EACL,EAEF,QsJ4CToe,EAAA5/D,UAAAogE,mBAAA,SAAmBhhC,GACjBA,EAAQ5f,SAAQ,SAAAugB,GACTA,EAAc,QACjBA,EAAOt8B,MAAQs8B,EAAOn9B,WAK5Bg9D,EAAA5/D,UAAAmgE,WAAA,SAAW/gC,GACLA,IACFt/B,KAAKigE,uBAAyB3gC,IAIlCwgC,EAAA5/D,UAAA4rD,aAAA,SAAakU,GACPhgE,KAAKy/C,gBACPz/C,KAAKy/C,cAAcz/C,KAAKugE,qBAAqBP,IAC7ChgE,KAAKwgE,YAAYR,KAIrBF,EAAA5/D,UAAAsgE,YAAA,SAAYR,GACNA,GAAmBhgE,KAAKygE,kBAAoBT,EAAgBr/D,QAC9DX,KAAK2jB,OAAO3b,KAAKg4D,GAEnBhgE,KAAKygE,gBAAkBT,EAAkBA,EAAgBr/D,OAAS,MAGpEm/D,EAAA5/D,UAAAqgE,qBAAA,SAAqBP,GACnB,OAAOA,GAAmBA,EAAgBr/D,OAASq/D,EAAgB5zD,KAAI,SAAA6zB,GAAU,OAAAA,EAAOn9B,SAAS,IAGnGg9D,EAAA5/D,UAAAwgE,gBAAA,SAAgB59D,GACd,IAAMgZ,EAAQ9b,KAAKs/B,QAAQzrB,WAAU,SAAAosB,GAAU,OAAAA,EAAOn9B,QAAUA,KAChE,OAAO9C,KAAKs/B,QAAQxjB,GAAOnY,OAG7Bm8D,EAAA5/D,UAAAygE,YAAA,SAAY3B,GACVh/D,KAAK4gE,sBAAsB5B,GAC3Bh/D,KAAK8rD,aAAa9rD,KAAKggE,kBAGzBF,EAAA5/D,UAAA2gE,cAAA,SAAchiB,EAAgBvf,EAAqC4e,GAAnE,IAAA53C,EAAAtG,KACE,GAAI6+C,GAAUvf,GAAWA,EAAQ3+B,OAAQ,CACvC,IAAMk/C,EAAyC,GAC/CvgB,EAAQ5f,SAAQ,SAAAugB,GACVA,EAAOt8B,OAAS2C,EAAKs4C,cAAcC,EAAQ5e,EAAQie,IACrD2B,EAAWr7C,KAAKy7B,MAGpBjgC,KAAKigE,uBAAyBpgB,IAIlCigB,EAAA5/D,UAAA0+C,cAAA,SAAcC,EAAgB5e,EAA6Bie,GACzD,OAAQA,GACN,KAAKwM,EAAAA,wBAAwBv2C,WAC3B,OAAOnU,KAAKmU,WAAW0qC,EAAQ5e,GACjC,KAAKyqB,EAAAA,wBAAwBp/C,SAC3B,OAAOtL,KAAKsL,SAASuzC,EAAQ5e,GAC/B,KAAKyqB,EAAAA,wBAAwBvM,SAC3B,OAAOn+C,KAAKm+C,SAASU,EAAQ5e,KAInC6/B,EAAA5/D,UAAAiU,WAAA,SAAW0qC,EAAgB5e,GACzB,OAAOA,EAAOt8B,MAAM4M,cAAc4D,WAAW0qC,EAAOtuC,gBAGtDuvD,EAAA5/D,UAAAoL,SAAA,SAASuzC,EAAgB5e,GACvB,OAAOA,EAAOt8B,MAAM4M,cAAcvP,QAAQ69C,EAAOtuC,gBAAkB,GAGrEuvD,EAAA5/D,UAAAi+C,SAAA,SAASU,EAAgB5e,GACvB,OAAOA,EAAOt8B,MAAM4M,cAAc4tC,SAASU,EAAOtuC,gBAGpDuvD,EAAA5/D,UAAAmnB,SAAA,SAAS7lB,GACP,OAAIo8B,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUlX,EAAEsB,OAC1C,CACL+6B,SAAU,CACRC,OAAO,IAKN,MAGTgiC,EAAA5/D,UAAA0gE,sBAAA,SAAsBxhD,GAAtB,IAAA9Y,EAAAtG,KACEA,KAAKggE,gBAAkB,GAEvB5gD,EAAOM,SAAQ,SAAA5c,GACbwD,EAAKg5B,QAAQ5f,SAAQ,SAAAugB,GACfA,EAAOn9B,QAAUA,GACnBwD,EAAK05D,gBAAgBx7D,KAAKy7B,SAKhCjgC,KAAKmgE,sBAGPL,EAAA5/D,UAAAonB,WAAA,SAAWlI,GACTA,EAASA,GAAU,GAGnBpf,KAAK4gE,sBAAsBxhD,GAEvBpf,KAAKggE,gBAAgBr/D,OAASye,EAAOze,QACvCX,KAAK8rD,aAAa9rD,KAAKggE,kBAI3BF,EAAA5/D,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKy/C,cAAgBjuC,GAGvBsuD,EAAA5/D,UAAA2mB,kBAAA,SAAkBrV,GAChBxR,KAAKmhD,eAAiB3vC,GAGxBsuD,EAAA5/D,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGjBsuD,EAAA5/D,UAAAinB,cAAR,WACMnnB,KAAKgnB,iBACPhnB,KAAKgnB,mBA7W8B7lB,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAoCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGA4Bc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAWwB3E,EAAA,CAA9B2E,EAAAA,MAAM,yFAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAWc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAkBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAoBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2GAoBa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCAoBxBwB,EAAA,CAAhB2E,EAAAA,MAAM,8FAoBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,yGAoBa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAtPTg4D,EAA0B3+D,EAAA,CAD/C4H,EAAAA,aACqB+2D,ME3BhB14D,GAAY,CAChBgS,GACA,CACE4L,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAA27C,MAC9Bz7C,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAA27C,MAC9Bz7C,OAAO,mBAmDT,SAAAy7C,EACSj3D,EACC4N,EACA4rC,EACA93B,GAJV,IAAAjlB,EAMEC,EAAA3F,KAAAZ,OAAOA,YALAsG,EAAAuD,SAAAA,EACCvD,EAAAmR,eAAAA,EACAnR,EAAA+8C,gBAAAA,EACA/8C,EAAAilB,GAAAA,EAdVjlB,EAAAy6D,iBAAmB,EACnBz6D,EAAAgE,aAAuB,qBACvBhE,EAAA06D,cAAwB,EACxB16D,EAAA6D,aAAc,EAGd7D,EAAA0tC,gBAAiB,EAET1tC,EAAA26D,yBAAmC,EAmOnC36D,EAAA0zB,SAAW,WACjB1zB,EAAKu9C,6BAuCT,OA1R4C/jD,EAAAghE,EAAAv6D,GA0B1Cu6D,EAAA5gE,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,QAEPzY,KAAKmK,aAAc,GAGrB22D,EAAA5gE,UAAA0K,UAAA,WACE,IAAMs2D,EAAalhE,KAAKikD,aAAan5C,cAAcC,YAGnD,GAAKm2D,IAAelhE,KAAKg0C,gBAAkBh0C,KAAKmK,aAAiB+2D,GAAclhE,KAAKihE,wBAGlF,OAFAjhE,KAAKiL,sBACLjL,KAAKg0C,gBAAiB,IAK1B8sB,EAAA5gE,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAoBP6mC,EAAA5gE,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKikD,aAAan5C,cAAc2N,SAIpCqoD,EAAA5gE,UAAAihE,cAAA,WACE,OAAOnhE,KAAKurB,GAAGzgB,cAAckB,cAAc,aAAajB,YAAc,IAGxE+1D,EAAA5gE,UAAAkhE,oBAAA,WACE,IAAMvpC,EAAc73B,KAAKurB,GAAGzgB,cAAcoB,iBAAiB,iBAC3D,OAAOvM,MAAMwM,KAAK0rB,GAAazrB,KAAI,SAAA6rB,GAAc,OAAAA,EAAwB,gBAG3E6oC,EAAA5gE,UAAAmhE,sBAAA,WACE,IAAMC,EAAmBthE,KAAKohE,sBACxBF,EAAalhE,KAAKmhE,gBAElBI,EAAqBD,EAAiB,GAI5C,GAFAthE,KAAKkgE,mBAAqB,GAEtBgB,EAAa,EAAG,CAClB,IAAIM,EAAM,EACNhhE,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIR,KAAKggE,gBAAgBr/D,OAAQH,IAI3C,GAHAghE,GAAOF,EAAiB9gE,GACxBR,KAAKkgE,mBAAmB17D,KAAKxE,KAAKggE,gBAAgBx/D,IAE9CghE,EAAMN,EAAY,CACpBM,GAAOF,EAAiB9gE,GACxBR,KAAKihE,yBAA0B,EAC/B,MAIJ,GAAIM,IAAuBvhE,KAAKggE,gBAAgBr/D,OAAQ,CACtD,GAAIH,IAAMR,KAAKggE,gBAAgBr/D,OAE7B,YADAX,KAAKihE,yBAA0B,GAIjC,GAAIO,EAzBoB,GAyBQN,EAAY,CAC1ClhE,KAAKkgE,mBAAmBpsD,QAAQ,EAAG,GACnC,IAAMnQ,EAAQ,KAAO3D,KAAKggE,gBAAgBr/D,OAAS,EAAIH,GAAGuS,WAC1D/S,KAAKkgE,mBAAmB17D,KAAK,CAAE1B,MAAO,GAAIa,MAAOA,QAC5C,CACL3D,KAAKkgE,mBAAmBpsD,QAAQ,EAAG,GAC7BnQ,EAAQ,KAAO3D,KAAKggE,gBAAgBr/D,OAASH,GAAGuS,WACtD/S,KAAKkgE,mBAAmB17D,KAAK,CAAE1B,MAAO,GAAIa,MAAOA,QAMzDm9D,EAAA5gE,UAAAigE,mBAAA,WACEngE,KAAKkgE,mBAAqB,GAAGl7D,OAAOhF,KAAKggE,iBAEzChgE,KAAKiL,iBAGAjL,KAAKikD,aAAan5C,cAAcC,cACnC/K,KAAKihE,yBAA0B,IAInCH,EAAA5gE,UAAA+K,eAAA,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAClB5M,KAAK4M,cAAgBC,YAAW,WAC9BvG,EAAK+6D,0BACJ,MAGLP,EAAA5gE,UAAA87B,UAAA,SAAUn1B,GACR,GAAIA,EAAM2M,UAAY66B,GAAc+V,SAAWv9C,EAAM2M,UAAY66B,GAAcgW,UAG7E,OAFAx9C,EAAM+5B,sBACN5gC,KAAKyhE,2BAA0B,GAI7B56D,EAAM2M,UAAY66B,GAAc6V,KAClClkD,KAAKyhE,2BAA0B,IAKnCX,EAAA5gE,UAAAwhE,yBAAA,WACM1hE,KAAK0Y,UAIT1Y,KAAKyhE,2BAA2BzhE,KAAKghE,eAGvCF,EAAA5gE,UAAAyhE,aAAA,SAAa5b,GACPA,IAAW/lD,KAAK0Y,UAClB1Y,KAAKyhE,2BAA0B,IAInCX,EAAA5gE,UAAAuhE,0BAAA,SAA0B1b,GACxBA,EAAS/lD,KAAKqU,OAASrU,KAAKg3B,SAG9B8pC,EAAA5gE,UAAA0hE,wBAAA,WAAA,IAAAt7D,EAAAtG,KACE,GAAIA,KAAKggE,iBAAmBhgE,KAAKggE,gBAAgBr/D,OAAQ,CACvD,IAAMmb,EAAQ9b,KAAKs/B,QAAQzrB,WAAU,SAAAosB,GAAU,OAAAA,EAAOn9B,QAAUwD,EAAK05D,gBAAgB,GAAGl9D,SACxF9C,KAAK6hE,SAAS7b,SAASlqC,KAI3BglD,EAAA5gE,UAAA4hE,0BAAA,SAA0BxiC,GACxBt/B,KAAKigE,uBAAyB3gC,GAGhCwhC,EAAA5gE,UAAA++D,aAAA,SAAap4D,GAAb,IAAAP,EAAAtG,KACE6G,GAASA,EAAM/D,MACX9C,KAAK6gE,cAAch6D,EAAM/D,MAAO9C,KAAKs/B,QAASt/B,KAAKk+C,YACnDl+C,KAAK8hE,0BAA0B9hE,KAAKs/B,SAGxCzyB,YAAW,WAAM,OAAAvG,EAAKu9C,8BAGxBid,EAAA5gE,UAAA6hE,eAAA,WACE,OAAO/hE,KAAKw9C,cAAgBx9C,KAAKkgE,mBAAmBv/D,OAASX,KAAKw9C,YAAc,IAGlFsjB,EAAA5gE,UAAA8hE,gBAAA,SAAgBl/D,GACd,IAAMgZ,EAAQ9b,KAAKggE,gBAAgBnsD,WAAU,SAAAosB,GAAU,OAAAA,EAAOn9B,QAAUA,KACxE9C,KAAKggE,gBAAgBlsD,OAAOgI,EAAO,GAEnC9b,KAAKmgE,qBACLngE,KAAK8rD,aAAa9rD,KAAKggE,kBAGzBc,EAAA5gE,UAAAkmD,mBAAA,SAAmBv/C,GAEd7G,KAAKikD,aAAan5C,cAAcQ,SAASzE,EAAMxF,SAC/CrB,KAAKqmD,YAAYv7C,cAAcQ,SAASzE,EAAMxF,SAC9CrB,KAAKiiE,gBAAgBn3D,cAAcQ,SAASzE,EAAMxF,SAClDrB,KAAKkiE,2BAA2Bp3D,cAAcQ,SAASzE,EAAMxF,UAC9DrB,KAAKghE,cAELhhE,KAAKyhE,2BAA0B,IAI3BX,EAAA5gE,UAAA2jD,wBAAR,WACE7jD,KAAKqjD,gBAAgB7pC,eAxQqB,WA2QpCsnD,EAAA5gE,UAAA82B,MAAR,WACEh3B,KAAKsK,aAAe,qBACpBtK,KAAKghE,cAAe,EAEpBhhE,KAAK6hE,SAASlC,mBAAkB,GAChC3/D,KAAK8hE,0BAA0B9hE,KAAKs/B,SAEpCt/B,KAAKi6B,mBAGC6mC,EAAA5gE,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKmiE,iBAAmBniE,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAK8/C,mBAAmBv/C,MAG1B7G,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAC7DzG,EAAK65D,qBAEL9sD,KAAa/M,EAAKu9C,0BAA4Bv9C,EAAK0wB,WAGrD9jB,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAO3C8mC,EAAA5gE,UAAAmU,KAAR,WACErU,KAAKsK,aAAe,mBACpBtK,KAAKghE,cAAe,EAEpBhhE,KAAK6hE,SAASlC,mBAAkB,GAChC3/D,KAAK8hE,0BAA0B9hE,KAAKs/B,SACpCt/B,KAAKq7B,sBACLr7B,KAAK4hE,0BAEL5hE,KAAKyX,eAAeqc,gBACpB9zB,KAAKoiE,uBAGCtB,EAAA5gE,UAAA+5B,gBAAR,WACMj6B,KAAKmiE,kBACPniE,KAAKmiE,mBAGHniE,KAAKgN,gBACPhN,KAAKgN,iBAGPkG,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9C8mC,EAAA5gE,UAAAkiE,oBAAR,WACEpiE,KAAKqjD,gBAAgBtpC,YACnB/Z,KAAK6hE,SAASQ,UAAUv3D,cAnUO,EAqU/B9K,KAAKikD,aACL,CAAC,MAAO,WACR,GAGFjkD,KAAK6jD,oEAtQY12C,EAAAA,iBACOuK,EAAAA,yBACC0B,UACblM,EAAAA,cApBoD/L,EAAA,CAAjE4E,EAAAA,UAAU,kBAAmB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAyBiH,EAAAA,mDACnC/L,EAAA,CAA/C4E,EAAAA,UAAU,kBAAmB,CAAEE,QAAQ,4DAC8B9E,EAAA,CAArE4E,EAAAA,UAAU,sBAAuB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAoCiH,EAAAA,8DACpC/L,EAAA,CAA7D4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CACZ/L,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAsBiH,EAAAA,gDALlE4zD,EAAsB3/D,EAAA,CALlC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,o0DACAgB,UAASk7D,4BAoBUn1D,EAAAA,UACOuK,EAAAA,kBACC0B,GACblM,EAAAA,cArBH4zD,IAA+BhB,kBCvD5C,SAAAyC,IAKuBviE,KAAA4f,UAAqB,EAGtB5f,KAAA2jB,OAAS,IAAI7b,EAAAA,aAMnC,OAJEy6D,EAAAriE,UAAAsiE,YAAA,WACExiE,KAAK4f,UAAY5f,KAAK4f,SACtB5f,KAAK2jB,OAAO3b,KAAKhI,KAAK4f,WAVNze,EAAA,CAAjB2E,EAAAA,MAAM,gEAGc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAGa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEARGs6D,EAA0BphE,EAAA,CALtC+E,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAA,0ZACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9Bm6D,MCTPE,GAAyB,CAC7B,OACA,SACA,YACA,cACA,gBACA,eACA,cACA,sBACA,4BAOF,SAAAC,IAgBsB1iE,KAAA2jB,OAAS,IAAI7b,EAAAA,aAEX9H,KAAA2iE,SAAW,IAAI76D,EAAAA,aAEV9H,KAAA4iE,aAAe,IAAI96D,EAAAA,aAEhB9H,KAAA6iE,gBAAkB,IAAI/6D,EAAAA,aAEjC9H,KAAA8C,MAAQ,IAAIgF,EAAAA,aA4MvB9H,KAAA8iE,cAAgB,SAAAj8D,GACd,IACJ8G,EACAo1D,EAFI1hE,EAAAwF,EAAAxF,OAAQmnD,EAAA3hD,EAAA2hD,QAASC,EAAA5hD,EAAA4hD,SAIrBD,GAAWC,KACT5hD,EAAM0lB,KACR1lB,EAAM0lB,KAAK7M,SAAQ,SAAA9V,GACQ,MAArBA,EAAQo5D,WACVr1D,EAAM/D,EAAQq5D,KACdF,EAAcn5D,OAIlB+D,EAAMtM,EAAO6hE,WAAWD,KAAKngE,MAC7BigE,EAAc1hE,GAEhB+S,GAAiBzG,GACjBo1D,EAAY9zC,UAAU8iC,OAAO,kBAuFnC,OAnTE2Q,EAAAxiE,UAAA+I,SAAA,WAAA,IAAA3C,EAAAtG,KACEA,KAAKmjE,YAAYr4D,cAAcs4D,WAAa,KAG5Cv2D,YAAW,WAAM,OAAAvG,EAAK+8D,gCAGxBX,EAAAxiE,UAAAojE,eAAA,SAAeC,GAGb,GAFAvjE,KAAKmjE,YAAYr4D,cAAc2N,QAER,iBAAZ8qD,EACT,GAAwB,eAApBA,EAAQA,QAA0B,CAElC,IAAAC,EAAAD,EAAAA,QACSE,EAAAF,EAAAzgE,MAAA2gE,QACAC,EAAAH,EAAAzgE,MAAA4gE,YAGX1jE,KAAK2jE,kBAAkBH,EAAaC,EAASC,QAE7Cl0C,SAASo0C,YAAYL,EAAQA,SAAS,EAAOA,EAAQzgE,YAGvD0sB,SAASo0C,YAAYL,GAAS,EAAO,MAGvCvjE,KAAKu/C,cACLv/C,KAAK8C,MAAMkF,KAAKhI,KAAK+1D,aAGvB2M,EAAAxiE,UAAA2jE,YAAA,SAAYh9D,GACV7G,KAAK8jE,gBAAkBj9D,GAGzB67D,EAAAxiE,UAAAmwD,OAAA,WAAA,IAAA/pD,EAAAtG,KACMA,KAAK+1D,aAAe/1D,KAAKotD,oBAC3BzgD,aAAa3M,KAAK6tD,eAClB7tD,KAAK6tD,cAAgBhhD,YAAW,WAC9BvG,EAAKqd,OAAO3b,KAAK1B,EAAKyvD,cACrB,OAIP2M,EAAAxiE,UAAAuY,MAAA,WACEzY,KAAKmjE,YAAYr4D,cAAc2N,SAGjCiqD,EAAAxiE,UAAA6H,QAAA,WACE/H,KAAK+jE,yBAGPrB,EAAAxiE,UAAAqwD,QAAA,WACEvwD,KAAKotD,kBAAoBptD,KAAK+1D,YAGhC2M,EAAAxiE,UAAA87B,UAAA,SAAUn1B,GACR,IAAMm9D,EAAOn9D,EAAM2M,UAAY66B,GAAc21B,MACrBA,GAAQn9D,EAAM2hD,SAAawb,GAAQn9D,EAAM4hD,WAG/D5hD,EAAM+5B,iBACN5gC,KAAK6iE,gBAAgB76D,QAGvBhI,KAAKikE,mBAAmBp9D,EAAO,QAGjC67D,EAAAxiE,UAAAwkD,QAAA,SAAQ79C,GACN7G,KAAKikE,mBAAmBp9D,EAAO,UAE/B7G,KAAKkkE,kBACLlkE,KAAKu/C,cACLv/C,KAAK+jE,yBAGPrB,EAAAxiE,UAAAikE,QAAA,WACEnkE,KAAKokE,mCACLpkE,KAAKqkE,UAGP3B,EAAAxiE,UAAAmkE,OAAA,WAAA,IAAA/9D,EAAAtG,KACE6M,YAAW,WAAM,OAAAvG,EAAKi5C,iBAEtB1yC,YAAW,WACTvG,EAAK49D,kBACL59D,EAAKi5C,cACLj5C,EAAKy9D,4BAIDrB,EAAAxiE,UAAAkkE,iCAAR,WAAA,IAAA99D,EAAAtG,KACEA,KAAKmjE,YAAYr4D,cAAcoB,iBAAiB,KAAKwT,SAAQ,SAAA9V,GAC3DA,EAAQqU,iBAAiB,QAAS3X,EAAKw8D,mBAInCJ,EAAAxiE,UAAA6jE,sBAAR,WACE,IAGIO,EAHE3B,EAAWF,GAAuBxiD,QAAO,SAAAsjD,GAAW,OAAA/zC,SAAS+0C,kBAAkBhB,MAC/EiB,EAAWh1C,SAASi1C,kBAAkB,aAGvCtxD,OACHmxD,EAAWtkE,KAAK0kE,SAASF,IAGvBxkE,KAAK2kE,6BACPhC,EAASn+D,KAAK,cAGhBxE,KAAK4iE,aAAa56D,KAAKhI,KAAK4kE,aAC5B5kE,KAAK2iE,SAAS36D,KAAK,CAAE26D,SAAQA,EAAE2B,SAAQA,KAGjC5B,EAAAxiE,UAAA2kE,iBAAR,WACE,IAAMC,EAAgBt1C,SAASu1C,eAC/B,GAAKD,EAAL,CAGA,IAAME,EAAYF,EAAcE,UAAYF,EAAcE,UAAUpqC,mBAAgBzxB,EAC9E87D,EAAaH,EAAcG,WAAaH,EAAcG,WAAWC,gBAAa/7D,EAC9Eg8D,EAAOH,GAAaC,EAG1B,OAAIE,EAEK,CACLA,KAAIA,EACJC,QAHQD,EAAc,SAAKA,EAAe,eAD9C,IASMzC,EAAAxiE,UAAAyjE,kBAAR,SAA0BH,EAAqBC,EAAiBC,GAC9D,GAAIvwD,KACFnT,KAAKqlE,sBAAsB5B,EAASC,OAC/B,CAEL,IAAM4B,EACJlyD,OAAgBpT,KAAK8jE,cACjB,SAAS9jE,KAAKulE,YAAY9B,EAASC,GAAY,SAC/C1jE,KAAKulE,YAAY9B,EAASC,GAEhCl0C,SAASo0C,YAAYJ,GAAa,EAAO8B,GAG3CtlE,KAAKokE,oCAIC1B,EAAAxiE,UAAAmlE,sBAAR,SAA8B5B,EAAiBC,GAC7C,IACMpR,EADY9iC,SAASu1C,eACMS,WAAW,GACtCzC,EAAcvzC,SAASrR,cAAc,KACrCsnD,EAAkBj2C,SAASk2C,eAAehC,GAEhDX,EAAYxkD,YAAYknD,GACxB1C,EAAYE,KAAOQ,EACnBV,EAAYp1C,aAAa,SAAU,UACnCo1C,EAAY9zC,UAAUoiC,IAAI,qBAE1BiB,EAAeqT,iBACfrT,EAAesT,WAAW7C,IAGpBL,EAAAxiE,UAAAykE,0BAAR,WACE,IAAMG,EAAgB9kE,KAAK6kE,mBAC3B7kE,KAAK4kE,iBAAcz7D,EAEnB,IAAI08D,GAAS,EAUb,OARIf,GAAiBA,EAAcK,MAAkC,MAA1BL,EAAcM,SACvDplE,KAAK4kE,YAAcE,EAAcK,KACjCU,GAAS,GAETA,KADUzyD,OAAeJ,OAAiBhT,KAAK8lE,0CAGtChB,GAAgB9kE,KAAK+lE,mBAAmBjB,GAE5Ce,GAGDnD,EAAAxiE,UAAA6lE,mBAAR,SAA2BjB,GAIzB,IAHA,IAAIl7D,EAAUk7D,EAAcK,KACxBU,GAAS,EAENj8D,IAAgC,OAApBA,EAAQw7D,SAAyC,OAArBx7D,EAAQo5D,WAAoB,CACzE,GAAwB,MAApBp5D,EAAQw7D,SAAwC,MAArBx7D,EAAQo5D,SAGrC,OAFAhjE,KAAK4kE,YAAch7D,EACnBi8D,GAAS,EAGXj8D,EAAUA,EAAQgxB,eAAiBhxB,EAAQs7D,WAI7C,OADAllE,KAAK4kE,iBAAcz7D,EACZ08D,GAGDnD,EAAAxiE,UAAAqlE,YAAR,SAAoB9B,EAAiBC,GACnC,MAAO,sCAAsCD,EAAO,sBAAqBC,GAAeD,GAAO,QA0BzFf,EAAAxiE,UAAAgkE,gBAAR,WACE,IAAMf,EAAcnjE,KAAKmjE,YAAYr4D,eAEhCq4D,EAAYvsB,UAAU9lC,QAA4C,IAAlCqyD,EAAY6C,WAAWrlE,QAAgBwiE,EAAYn3D,cAAc,OACpGm3D,EAAYn3D,cAAc,MAAM+lD,UAI5B2Q,EAAAxiE,UAAAwkE,SAAR,SAAiBuB,GAEf,IAAMC,EAAMD,EAAIjlE,QAAQ,MAAQ,EAAI,IAAM,IAGtCS,KAFJwkE,EAAMA,EAAIpN,OAAO,GAAGr2C,MAAM,KAAK,GAAGA,MAAM0jD,IAE1B,IAAInzD,SAAS,IACvBtP,IAAMwiE,EAAI,IAAIlzD,SAAS,IACvBxT,IAAM0mE,EAAI,IAAIlzD,SAAS,IAY3B,OAViB,IAAbtR,EAAEd,SACJc,EAAI,IAAMA,GAEK,IAAbgC,EAAE9C,SACJ8C,EAAI,IAAMA,GAEK,IAAblE,EAAEoB,SACJpB,EAAI,IAAMA,GAGL,IAAMkC,EAAIgC,EAAIlE,GAGfmjE,EAAAxiE,UAAA+jE,mBAAR,SAA2Bp9D,EAAYyzB,GACrC,IAAM6rC,EAAY32C,SAASu1C,eACrBn7D,EAAUu8D,EAAUnB,UAAYmB,EAAUnB,UAAUE,gBAAa/7D,EACjEi9D,EAAuB,YAAdv/D,EAAMvF,IACf+kE,EAA0B,SAAdx/D,EAAMvF,IAClBglE,EAAetmE,KAAK2kE,8BAAgCyB,GAAUC,GAEpE,GAAIz8D,EAAS,CACX,GAAI08D,EACF18D,EAAmB,UAAE0wB,GAAQ,qBAET1wB,EAAmB,WAAKA,EAAmB,UAAE0B,SAAS,iBAGxE1B,EAAmB,UAAEmoD,OAAO,gBAGhC/xD,KAAKu/C,gBAIDmjB,EAAAxiE,UAAAq/C,YAAR,WACEv/C,KAAK+1D,WAAa/1D,KAAKmjE,YAAYr4D,cAAcy7D,UAEjDvmE,KAAK8C,MAAMkF,KAAKhI,KAAK+1D,aAGf2M,EAAAxiE,UAAAmjE,0BAAR,WACMrjE,KAAK+1D,YACP/1D,KAAKmjE,YAAYr4D,cAAc07D,mBAAmB,aAAcxmE,KAAK+1D,aAIjE2M,EAAAxiE,UAAA4lE,oCAAR,WACE,IAAMhB,EAAgBt1C,SAASu1C,eACzB0B,EAAW3B,EAAcE,UAC3Ba,GAAS,EAEb,GAAIY,GAAkC,MAAtBA,EAASzD,SACvBhjE,KAAK4kE,YAAc6B,EACnBZ,GAAS,MACJ,CACL,IACMa,EADQ5B,EAAcU,WAAW,GACRmB,gBACzB/8D,EAAU88D,EAAiBV,WAAW,IAAMU,EAAiBE,kBAEnE5mE,KAAK4kE,YAAch7D,GAAgC,MAArBA,EAAQo5D,SAAmBp5D,OAAUT,EACnE08D,IAAW7lE,KAAK4kE,YAGlB,OAAOiB,GArUmC1kE,EAAA,CAA3C4E,EAAAA,UAAU,cAAe,CAAEE,QAAQ,oBAAqBiH,EAAAA,+CAEtC/L,EAAA,CAAlB2E,EAAAA,MAAM,kEAEiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAEiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEAEc9G,EAAA,CAArB8G,EAAAA,OAAO,sEAEmB9G,EAAA,CAA1B8G,EAAAA,OAAO,+EAEsB9G,EAAA,CAA7B8G,EAAAA,OAAO,qFAEW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEAxBGy6D,EAAuBvhE,EAAA,CAJnC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,2WAEWs8D,oBCJb,SAAAmE,IAME7mE,KAAA8mE,SAAmB,EACnB9mE,KAAAirD,cAAqB,KAIbjrD,KAAAwjB,UAAiB,KAccxjB,KAAA8+B,WAAqB,EAOlC9+B,KAAAquD,aAAwB,GA6G9BruD,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG3B9H,KAAAszD,YAAkC,IAAIxrD,EAAAA,aA6ClE,OAlJqBtI,OAAAqC,eAAIglE,EAAA3mE,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmpB,aALK,SAAWxhB,GAC5B3H,KAAKmpB,QAAUxhB,mCAoDOnI,OAAAqC,eAAIglE,EAAA3mE,UAAA,cAAW,KAIvC,WACE,OAAOF,KAAK8qD,kBALU,SAAgBhoD,GACtC9C,KAAK8qD,aAAehoD,GAAS,oCAgBVtD,OAAAqC,eAAIglE,EAAA3mE,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKuuD,eALO,SAAazrD,GAChC9C,KAAKuuD,UAAY39C,EAAiB9N,oCAgBftD,OAAAqC,eAAIglE,EAAA3mE,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAa/7B,GAChC9C,KAAK6+B,UAAYjuB,EAAiB9N,GAElC9C,KAAKmnB,cAAcnnB,KAAK8C,wCAe1B+jE,EAAA3mE,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKirD,cAAgBnkC,GAKvB+/C,EAAA3mE,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKwjB,UAAYsD,GAGnB+/C,EAAA3mE,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzBq1D,EAAA3mE,UAAAmnB,SAAA,SAASuY,GACP,GAAIhC,GAAe59B,KAAK69B,UAAU,EAAO+B,EAAgB98B,OACvD,MAAO,CACL+6B,SAAU,CACRC,OAAO,KAMf+oC,EAAA3mE,UAAAonB,WAAA,SAAWxkB,GACT9C,KAAK8C,MAAQA,GAIL+jE,EAAA3mE,UAAAq/C,YAAV,SAAsBz8C,GAEhB9C,KAAKirD,eACPjrD,KAAKirD,cAAcnoD,IAIb+jE,EAAA3mE,UAAAinB,cAAV,SAAwBrkB,GAClB9C,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBlkB,IAjKc3B,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAOEx8B,EAAA,CAAzB2E,EAAAA,MAAM,+EAWY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAeU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAec3E,EAAA,CAApB2E,EAAAA,MAAM,uEAWiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAWa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGH3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAhJpB++D,EAAuB1lE,EAAA,CAD5C4H,EAAAA,aACqB89D,MCThBz/D,GAAY,CAChB,CACE4d,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,YAAW,WAAM,OAAA4hD,MAC9B1hD,OAAO,GAET,CACEL,QAASM,EAAAA,cAETJ,YAAaC,EAAAA,YAAW,WAAM,OAAA4hD,MAC9B1hD,OAAO,mBAwCT,SAAA0hD,EAAoBn9D,GAApB,IAAAtD,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAsD,QAAAA,EATZtD,EAAAyzD,SAAWzzD,EAAK0gE,2BAA2B9kD,KAAK5b,KA+F1D,OAhGyCxG,EAAAinE,EAAAxgE,GAMvC/G,OAAAqC,eAAIklE,EAAA7mE,UAAA,WAAQ,KAAZ,WACE,MAA6B,KAAtBF,KAAKquD,eAAwBruD,KAAK8C,OAAS9C,KAAK69B,UAAY79B,KAAK8mE,QAAU9mE,KAAKquD,aAAe,oCAOxG0Y,EAAA7mE,UAAAwK,gBAAA,WAEE1K,KAAKinE,kBACLjnE,KAAKk1D,mBAGP6R,EAAA7mE,UAAAuG,YAAA,WACOzG,KAAKirD,gBACRjrD,KAAK4J,QAAQkB,cAAc6T,oBAAoB,QAAS3e,KAAK+5D,UAC7D/5D,KAAK4J,QAAQkB,cAAc6T,oBAAoB,UAAW3e,KAAK+5D,UAC/D/5D,KAAK4J,QAAQkB,cAAc6T,oBAAoB,MAAO3e,KAAK+5D,UAC3D/5D,KAAK4J,QAAQkB,cAAc6T,oBAAoB,QAAS3e,KAAK+5D,YAqBjEgN,EAAA7mE,UAAAuY,MAAA,WACEzY,KAAKmjE,YAAY1qD,SAGnBsuD,EAAA7mE,UAAAgnE,cAAA,SAAcpkE,GACZ9C,KAAK2jB,OAAO3b,KAAKlF,IAGnBikE,EAAA7mE,UAAAinE,YAAA,SAAYrkE,GACV9C,KAAK8C,MAAQA,EACb9C,KAAK8mE,SAAWhkE,EAChB9C,KAAK0zD,0BAA0B1zD,KAAK8C,OACpC9C,KAAKu/C,YAAYv/C,KAAK8C,QAGhBikE,EAAA7mE,UAAA+mE,gBAAR,WACOjnE,KAAKirD,gBACRjrD,KAAK4J,QAAQkB,cAAcmT,iBAAiB,QAASje,KAAK+5D,UAC1D/5D,KAAK4J,QAAQkB,cAAcmT,iBAAiB,UAAWje,KAAK+5D,UAC5D/5D,KAAK4J,QAAQkB,cAAcmT,iBAAiB,MAAOje,KAAK+5D,UACxD/5D,KAAK4J,QAAQkB,cAAcmT,iBAAiB,QAASje,KAAK+5D,YAItDgN,EAAA7mE,UAAAwzD,0BAAR,SAAkC5wD,GAC5B9C,KAAK4zD,kBAAoB9wD,IAC3B9C,KAAKszD,YAAYtrD,KAAKlF,GACtB9C,KAAK4zD,gBAAkB9wD,IAInBikE,EAAA7mE,UAAAg1D,gBAAR,WACMl1D,KAAK8+B,WACP9+B,KAAKyY,SAIDsuD,EAAA7mE,UAAA8mE,2BAAR,WAAA,IAAA1gE,EAAAtG,KACE6M,YAAW,WACT,IAAM/J,EAAQwD,EAAKxD,MACb8G,EAAUtD,EAAKsD,QAAQkB,eAExBhI,GAASwD,EAAKu3B,UACjBj0B,EAAQqlB,UAAUoiC,IAAI,cACtBznD,EAAQqlB,UAAUoiC,IAAI,aAEtBznD,EAAQqlB,UAAU8iC,OAAO,2DAlFF7kD,EAAAA,cANyB/L,EAAA,CAArD4E,EAAAA,UAAU28D,GAAyB,CAAEz8D,QAAQ,oBAAqBy8D,uCAJxDqE,EAAmB5lE,EAAA,CAL/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,4oCACAgB,UAASggE,4BAYoBl6D,EAAAA,cAVlB65D,IAA4BF,ICjD5BQ,GAA4B,CACvCxwD,GAAI,CACFywD,KAAM,OACNC,OAAQ,SACRC,UAAW,YACX3yD,KAAM,OACN4yD,OAAQ,SACR3yD,MAAO,QACP4yD,QAAS,UACTx3C,UAAW,aACXy3C,cAAe,gBACfC,WAAY,cACZC,cAAe,iBACfC,kBAAmB,sDACnBC,uBAAwB,4DACxB5kC,OAAQ,SACR6kC,SAAU,YACVC,OAAQ,SACRC,YAAa,eACbC,SAAU,aAEZpxD,GAAI,CACFuwD,KAAM,UACNC,OAAQ,UACRC,UAAW,YACX3yD,KAAM,YACN4yD,OAAQ,SACR3yD,MAAO,UACP4yD,QAAS,cACTx3C,UAAW,kBACXy3C,cAAe,oBACfC,WAAY,mBACZC,cAAe,mBACfC,kBAAmB,sEACnBC,uBAAwB,6DACxB5kC,OAAQ,WACR6kC,SAAU,gBACVC,OAAQ,WACRC,YAAa,kBACbC,SAAU,cAEZnxD,GAAI,CACFswD,KAAM,UACNC,OAAQ,UACRC,UAAW,aACX3yD,KAAM,WACN4yD,OAAQ,SACR3yD,MAAO,UACP4yD,QAAS,cACTx3C,UAAW,eACXy3C,cAAe,uBACfC,WAAY,eACZC,cAAe,iBACfC,kBAAmB,4DACnBC,uBAAwB,sDACxB5kC,OAAQ,WACR6kC,SAAU,cACVC,OAAQ,UACRC,YAAa,iBACbC,SAAU,mBNlDd,SAAYvI,GAIVA,EAAA,MAAA,QAKAA,EAAA,KAAA,OATF,CAAYA,KAAAA,GAAmB,SORnBwI,iBCuBZ,SAAAC,IAEEroE,KAAAsoE,SAAqC,GAGrCtoE,KAAAuoE,YAAwC,GAGhCvoE,KAAAwoE,gBAAkB,IA8G5B,OAvGSH,EAAAnoE,UAAAuoE,QAAP,SAAeC,GACb1oE,KAAK2oE,cAAc3oE,KAAK4oE,aAAaF,EAAcxgC,EAAAA,cAAczE,WAQ5D4kC,EAAAnoE,UAAA2oE,QAAP,SAAeH,GACb1oE,KAAK2oE,cAAc3oE,KAAK4oE,aAAaF,EAAcxgC,EAAAA,cAAcmB,WAQ5Dg/B,EAAAnoE,UAAA4E,MAAP,SAAa4jE,GACX1oE,KAAK2oE,cAAc3oE,KAAK4oE,aAAaF,EAAcxgC,EAAAA,cAAc3jB,SAQ5D8jD,EAAAnoE,UAAA4oE,YAAP,SAAmBJ,GACjB1oE,KAAK2oE,cAAc3oE,KAAK4oE,aAAaF,EAAcxgC,EAAAA,cAAckB,eAU5Di/B,EAAAnoE,UAAA6oE,mBAAP,SAA0BP,GACxBxoE,KAAKwoE,gBAAkBA,GAUjBH,EAAAnoE,UAAA0oE,aAAR,SAAqBF,EAAuCp3D,GAA5D,IAEM62B,EAFN7hC,EAAAtG,KACM8b,EAAQ,OAIqC3S,IAA9Bu/D,EAAcvgC,aACdugC,EAAcvgC,cAAgBzC,EAAAA,qBAAqB0C,QAEpEtsB,EAAQ9b,KAAKuoE,YAAY5nE,OACzBwnC,EAAczC,EAAAA,qBAAqB0C,SAEnCtsB,EAAQ9b,KAAKsoE,SAAS3nE,OACtBwnC,EAAczC,EAAAA,qBAAqBoD,KAGrC,IAAMC,EAAqB,CACzB1T,kBAAclsB,EACdq9B,QAA0BkiC,EAAcliC,SAAmBkiC,EAC3Dp3D,KAAMA,EACN62B,YAAaA,EACb7N,OAAyBouC,EAAcpuC,OACvC4O,YAA8Bw/B,EAAcx/B,YAC5ChwB,SAAU4C,EACVktD,SAA2BN,EAAcM,UAAYhpE,KAAKwoE,iBAU5D,OAPqBE,EAAcpuC,SACjCyO,EAAQzO,OAAS,SAAC5oB,GACCg3D,EAAcpuC,SAC/Bh0B,EAAK2iE,eAAev3D,EAAM2jB,gBAIvB0T,GAqBXs/B,oBC7GE,SAAAa,EAAoB5hC,GAApB,IAAAhhC,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAghC,oBAAAA,WADqBxnC,EAAAopE,EAAA3iE,GAKzC2iE,EAAAhpE,UAAAyoE,cAAA,SAAc5/B,GAAd,IAAAziC,EAAAtG,KACQq1B,EAAkCr1B,KAAKsnC,oBAAoBxC,6BAA6BwD,IAE9FS,EAAQ1T,aAAeA,EAEvBA,EAAakS,kBAAkBzT,gBAC/BuB,EAAad,SAASyU,cAAcD,GAEhCA,EAAQZ,cAAgBzC,EAAAA,qBAAqBoD,IAC/C9oC,KAAKsoE,SAAS9jE,KAAK6wB,GAEnBr1B,KAAKuoE,YAAY/jE,KAAK6wB,GAGxBr1B,KAAKyoC,kBAAkBpT,QAEAlsB,IAAnB4/B,EAAQzO,QACVztB,YAAW,WACTvG,EAAK2iE,eAAe5zC,KACnB0T,EAAQigC,WAIfE,EAAAhpE,UAAA+oE,eAAA,SAAelgC,GACb,IAAIogC,EAQErtD,GALJqtD,EADEpgC,EAAQxU,SAAS4T,cAAgBzC,EAAAA,qBAAqBoD,IAChD9oC,KAAKsoE,SAELtoE,KAAKuoE,aAGKvnE,QAAQ+nC,GAC5BogC,EAAMr1D,OAAOgI,EAAO,GAEpB9b,KAAKsnC,oBAAoBlC,8BAA8B2D,GAEvD,IAAK,IAAIqgC,EAAQ,EAAGA,EAAQD,EAAMxoE,OAAQyoE,IACxCD,EAAMC,GAAO70C,SAASqU,eAAewgC,IAIjCF,EAAAhpE,UAAAuoC,kBAAR,SAA0BpT,GAA1B,IAAA/uB,EAAAtG,KACEq1B,EAAad,SAASkU,kBAAkBzhC,WAAU,WAChDV,EAAK2iE,eAAe5zC,gDAhDiBqP,iHAD9BwkC,EAAqB/nE,EAAA,CAHjCqE,EAAAA,WAAW,CACVmR,WAAY,gCAG6B+tB,MAD9BwkC,IAA8Bb,KF/B3C,SAAYD,GAEVA,EAAAA,EAAA,SAAA,GAAA,WAEAA,EAAAA,EAAA,UAAA,GAAA,YAEAA,EAAAA,EAAA,MAAA,GAAA,QAEAA,EAAAA,EAAA,KAAA,GAAA,OARF,CAAYA,KAAAA,GAAc,KGE1B,ICIYiB,GDJZC,GAAA,WAoBE,SAAAA,EAAYC,GACNA,IACFvpE,KAAKioC,KAAOshC,EAAKthC,KACjBjoC,KAAKwpE,YAAiBD,EAAKthC,KAAI,MAAMjoC,KAAKypE,YAAYF,EAAKG,MAC3D1pE,KAAK2pE,UAAY3pE,KAAK4pE,aAAaL,EAAKthC,MACxCjoC,KAAK0pE,KAAOH,EAAKG,KACjB1pE,KAAK6pE,QAAUN,EACfvpE,KAAK8pE,IAAM9pE,KAAK+pE,eAChB/pE,KAAKiO,OAASm6D,GAAeroD,MAiCnC,OA7BUupD,EAAAppE,UAAA0pE,aAAR,SAAqB9mE,GACnB,OAAIA,EACgBA,EAAM+1D,OAAO/1D,EAAMmoC,YAAY,MAChC16B,cAGZ,IAGD+4D,EAAAppE,UAAA6pE,aAAR,WACE,SAASC,IACP,OAAOp6D,KAAKC,MAA4B,OAArB,EAAID,KAAKwF,WACzBrC,SAAS,IACTvC,UAAU,GAGf,OAAOw5D,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,KAI1EV,EAAAppE,UAAAupE,YAAR,SAAoBC,GAClB,IAAIO,EAAS,EAMb,OAJIP,IACFO,EAASr6D,KAAKs6D,KAAKR,EAAO,OAGlBO,EAAM,OAEpBX,EA7DA,iBESE,SAAAa,EAAoB58D,GAAAvN,KAAAuN,KAAAA,EAHpBvN,KAAAoqE,UAAoB,QACpBpqE,KAAAqqE,SAAuB,GA4GzB,OA9FSF,EAAAjqE,UAAAoqE,OAAP,SACE38D,EACA48D,EACAC,EACAC,EACAC,EACAC,GAQA,IANA,IAAMC,EAAcL,EAAM5pE,OACpBkqE,EAAmB,CACvBlO,KAAM,GACN4M,KAAM,MAGC/oE,EAAI,EAAGA,EAAIoqE,EAAapqE,IAAK,CACpC,IAAMsqE,EAAqB,IAAIC,SACzBxB,EAAOgB,EAAM/pE,GACbwqE,EAAWzB,EAAKM,QAAQ5hC,KAE9B6iC,EAASG,OAAOjrE,KAAKoqE,UAAWb,EAAKM,QAASmB,GAG1CR,IACFK,EAAkB,KAAItB,EACtBiB,EAAUxiE,KAAK6iE,GAEfC,EAASG,OAAO,OAAQpqB,KAAKC,UAAU+pB,EAAYlO,QAGrD38D,KAAKkrE,SAASv9D,EAAK47D,EAAMuB,EAAUL,EAAgBC,EAAiBC,KAIjER,EAAAjqE,UAAAgrE,SAAP,SACEv9D,EACA47D,EACAuB,EACAL,EACAC,EACAC,GANF,IAAArkE,EAAAtG,KAQQmrE,EAAUnrE,KAAKorE,WAAWz9D,EAAKm9D,GAAU9jE,WAC7C,SAAAH,GACE,GAAIA,EAAMyK,OAAS+5D,EAAAA,cAAcC,eAAgB,CAC/ChlE,EAAKilE,WAAWhC,EAAM4B,GAEtB,IAAMK,EAAc57D,KAAK67D,MAAO,IAAM5kE,EAAM6kE,OAAU7kE,EAAM8kE,OAC5DlB,EAAelB,EAAMiC,QACZ3kE,aAAiB+kE,EAAAA,cAE1BlB,EAAgBnB,EAAM1iE,MAG1B,SAACglE,GACClB,EAAcpB,EAAMsC,OAKnB1B,EAAAjqE,UAAAkrE,WAAP,SAAkBz9D,EAAam9D,GAC7B,IAAMgB,EAAM,IAAIC,EAAAA,YAAY,OAAQp+D,EAAKm9D,EAAU,CACjDkB,gBAAgB,IAGlB,OAAOhsE,KAAKuN,KAAK49D,QAAQW,IAGpB3B,EAAAjqE,UAAA+rE,kBAAP,SAAyB1C,EAAWzsC,GAClC,IAAMovC,EAAalsE,KAAKqqE,SAAS5/D,MAAK,SAAAqhE,GACpC,OAAOA,EAAIvC,KAAKO,MAAQP,EAAKO,OAG3BoC,IACcA,EAAWf,QACnBxkE,cACR3G,KAAKmsE,cAAcD,GACnBpvC,MAIGqtC,EAAAjqE,UAAAisE,cAAP,SAAqBD,GACnB,IAAMpwD,EAAQ9b,KAAKqqE,SAASrpE,QAAQkrE,GACpClsE,KAAKqqE,SAASv2D,OAAOgI,EAAO,IAGvBquD,EAAAjqE,UAAAqrE,WAAP,SAAkBhC,EAAoB4B,GACjBnrE,KAAKqqE,SAASzxC,MAAK,SAAAkzC,GACpC,OAAOA,EAAIvC,KAAKO,MAAQP,EAAKO,QAI7B9pE,KAAKqqE,SAAS7lE,KAAK,CAAE+kE,KAAIA,EAAE4B,QAAOA,8CAvGZ58D,EAAAA,cAJf47D,EAAmBhpE,EAAA,CAD/BqE,EAAAA,oCAK2B+I,EAAAA,cAJf47D,qBCHb,SAAAiC,mDAA0D,OAArBtsE,EAAAssE,EAAA7lE,GAAxB6lE,EAAejrE,EAAA,CAD3BqE,EAAAA,cACY4mE,IAAwBjC,ICQxBkC,GAA0B,CACrCx1D,GAAsB,CACpB0zD,MAAO,QACP+B,QAAS,UACTC,WAAY,cACZC,YAAa,eACbC,aAAc,gBACdC,WAAY,SACZvpC,OAAQ,SACRwpC,SAAU,YACVC,aAAc,gBACdC,cAAe,kBACfC,gBAAiB,oBACjBC,sBAAuB,mCACvBC,uBAAwB,oCACxBC,cAAe,kBACfC,gBAAiB,oBACjBC,gBAAiB,2CACjBC,gBAAiB,iEACjBC,cAAe,uEACfpf,cAAe,uEACfqf,YAAa,+EACbC,qBAAsB,sBACtBC,eAAgB,8BAChBC,qBAAsB,uCACtBC,mBAAoB,mCACpBC,mBAAoB,mCACpBC,cAAe,wBACfC,gBAAiB,qBAEnB92D,GAAsB,CACpBwzD,MAAO,WACP+B,QAAS,WACTC,WAAY,sBACZC,YAAa,uBACbC,aAAc,sBACdC,WAAY,SACZvpC,OAAQ,WACRwpC,SAAU,oBACVC,aAAc,gBACdC,cAAe,6BACfC,gBAAiB,6BACjBC,sBAAuB,8CACvBC,uBAAwB,4CACxBC,cAAe,yBACfC,gBAAiB,yBACjBC,gBAAiB,oDACjBC,gBAAiB,4EACjBC,cAAe,gFACfpf,cAAe,8EACfqf,YAAa,iGACbC,qBAAsB,8BACtBC,eAAgB,2BAChBC,qBAAsB,mDACtBC,mBAAoB,yCACpBC,mBAAoB,0CACpBC,cAAe,mBACfC,gBAAiB,qBAEnB72D,GAAsB,CACpBuzD,MAAO,WACP+B,QAAS,aACTC,WAAY,qBACZC,YAAa,sBACbC,aAAc,mBACdC,WAAY,UACZvpC,OAAQ,WACRwpC,SAAU,mBACVC,aAAc,gBACdC,cAAe,2BACfC,gBAAiB,yBACjBC,sBAAuB,yCACvBC,uBAAwB,qCACxBC,cAAe,yBACfC,gBAAiB,uBACjBC,gBAAiB,8CACjBC,gBAAiB,4EACjBC,cAAe,oFACfpf,cAAe,mFACfqf,YAAa,uFACbC,qBAAsB,oCACtBC,eAAgB,0BAChBC,qBAAsB,gDACtBC,mBAAoB,yCACpBC,mBAAoB,+CACpBC,cAAe,kBACfC,gBAAiB,uBAEnB52D,GAAsB,CACpBszD,MAAO,QACP+B,QAAS,kBACTC,WAAY,gBACZC,YAAa,iBACbC,aAAc,2BACdC,WAAY,UACZvpC,OAAQ,WACRwpC,SAAU,qBACVC,aAAc,kBACdC,cAAe,wBACfC,gBAAiB,wBACjBC,sBAAuB,mCACvBC,uBAAwB,yCACxBC,cAAe,uBACfC,gBAAiB,wBACjBC,gBAAiB,4CACjBC,gBAAiB,iEACjBC,cAAe,wFACfpf,cAAe,kFACfqf,YAAa,sGACbC,qBAAsB,sCACtBC,eAAgB,wBAChBC,qBAAsB,2CACtBC,mBAAoB,oCACpBC,mBAAoB,0CACpBC,cAAe,oBACfC,gBAAiB,qCA8XnB,SAAAC,EAAsBC,GAAA/tE,KAAA+tE,cAAAA,EAnWd/tE,KAAAguE,WAAsB,EAmBpBhuE,KAAAiuE,oBAAsB,EACtBjuE,KAAAkuE,mBAAqB,EACrBluE,KAAAmuE,eAAiB,EAaYnuE,KAAA8+B,WAAqB,EAkM7C9+B,KAAAioC,KAAe,OA+CNjoC,KAAAouE,YAAuB,EA+D3BpuE,KAAAquE,SAA+B,IAAIvmE,EAAAA,aAMpC9H,KAAAoJ,QAA8B,IAAItB,EAAAA,aAMhC9H,KAAAsuE,UAAgC,IAAIxmE,EAAAA,aAGhC9H,KAAA++B,cAAoC,IAAIj3B,EAAAA,aA+JnE,OA/cwBtI,OAAAqC,eAAIisE,EAAA5tE,UAAA,YAAS,KAOnC,WACE,OAAOF,KAAKuuE,gBARQ,SAAczrE,GAClC9C,KAAKuuE,WAAa39D,EAAiB9N,GAEnC9C,KAAKwuE,mBAAqBxuE,KAAKuuE,aAAep7D,OAAWE,KACzDrT,KAAKyuE,sBAAsBzuE,KAAKwuE,qDAgCZhvE,OAAAqC,eAAIisE,EAAA5tE,UAAA,WAAQ,KAIlC,WACE,OAAOF,KAAKguE,eALQ,SAAalrE,GACjC9C,KAAKguE,UAAYp9D,EAAiB9N,oCAgBDtD,OAAAqC,eAAIisE,EAAA5tE,UAAA,uBAAoB,KAI3D,WACE,OAAOF,KAAK0uE,2BALqB,SAAyB5rE,GAC1D9C,KAAK0uE,sBAAwB99D,EAAiB9N,oCAmBjBtD,OAAAqC,eAAIisE,EAAA5tE,UAAA,mBAAgB,KAGnD,WACE,OAAOF,KAAK2uE,uBAJiB,SAAqB7rE,GAClD9C,KAAK2uE,kBAAoB/9D,EAAiB9N,oCAkBftD,OAAAqC,eAAIisE,EAAA5tE,UAAA,iBAAc,KAG/C,WACE,OAAOF,KAAK4uE,qBAJe,SAAmB9rE,GAC9C9C,KAAK4uE,gBAAkBh+D,EAAiB9N,oCA8CrBtD,OAAAqC,eAAIisE,EAAA5tE,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAag8B,GAAwB98D,UAZ9B,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTisE,GAAuC,IACvCA,GAAwB98D,MACxBzM,GAGYupE,GAAwB98D,sCAqBpB/P,OAAAqC,eAAIisE,EAAA5tE,UAAA,mBAAgB,KAM7C,WACE,OAAOF,KAAK6uE,uBAPW,SAAqBC,GAC5C9uE,KAAK6uE,kBAAoB7uE,KAAK+uE,iBAAiBD,GAE/C9uE,KAAKgvE,qBAAqBF,oCAmBLtvE,OAAAqC,eAAIisE,EAAA5tE,UAAA,YAAS,KAMpC,WACE,OAAOF,KAAKivE,gBAPS,SAAcnsE,GACnC9C,KAAKivE,WAAansE,GAA0B,iBAAVA,EAAqBA,EAvQ1B,QAyQ7B9C,KAAKkvE,mBAAmB9E,UAAYpqE,KAAKoqE,2CActB5qE,OAAAqC,eAAIisE,EAAA5tE,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,GAElC9C,KAAKmnB,cAAcnnB,KAAKmvE,+CA2BL3vE,OAAAqC,eAAIisE,EAAA5tE,UAAA,aAAU,KAInC,WACE,QAAOF,KAAKwuE,oBAA4BxuE,KAAKovE,iBAL1B,SAAetsE,GAClC9C,KAAKovE,YAAcx+D,EAAiB9N,oCA+BjBtD,OAAAqC,eAAIisE,EAAA5tE,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,cAAcnnB,KAAKmvE,+CAsC1BrB,EAAA5tE,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKy/C,cAAgBjuC,GAGvBs8D,EAAA5tE,UAAA2mB,kBAAA,SAAkBrV,GAChBxR,KAAKmhD,eAAiB3vC,GAGxBs8D,EAAA5tE,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzBs8D,EAAA5tE,UAAAmnB,SAAA,SAASuY,GACP,GAAIhC,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,OAC/D,MAAO,CACL+6B,SAAU,CACRC,OAAO,KAMfgwC,EAAA5tE,UAAAonB,WAAA,SAAWF,OrKrSYtkB,EAAOusE,EqKsSxBjoD,GrKtSiBtkB,EqKuSL9C,KAAKmvE,arKvSOE,EqKuSOjoD,ErKtS9By5B,KAAKC,UAAUh+C,KAAW+9C,KAAKC,UAAUuuB,KqKuS1CrvE,KAAKmvE,aAAenvE,KAAKsvE,WAAWloD,KAGtCpnB,KAAKmvE,kBAAehmE,GAId2kE,EAAA5tE,UAAAqvE,oBAAV,SAA8BC,GAC5B,OACExvE,KAAKyvE,YACLzvE,KAAK0vE,kBACL1vE,KAAK0vE,iBAAiBC,SAAW,GACjC3vE,KAAK0vE,iBAAiBC,UAAYH,GAK5B1B,EAAA5tE,UAAAovE,WAAV,SAAqB/E,GAInB,IAHA,IAAIqF,EAAqC5vE,KAAKmvE,cAAgB,GACxDvE,EAAcL,EAAM5pE,OAEjBH,EAAI,EAAGA,EAAIoqE,EAAapqE,IAAK,CACpC,GAAIR,KAAKuvE,oBAAoBK,EAAcjvE,QAAS,CAClDX,KAAKkuE,mBAAqBtD,EAAc5qE,KAAK0vE,iBAAiBC,SAC9D,MAEF,IAAMpG,EAAO,IAAID,GAAaiB,EAAM/pE,IAEhCR,KAAK6vE,kBAAkBtG,KACzBqG,EAAgB5vE,KAAK8vE,kBAAkBvG,EAAMqG,IAIjD,OADA5vE,KAAK+vE,eACEH,GAGC9B,EAAA5tE,UAAAinB,cAAV,SAAwBC,GAClBpnB,KAAKgnB,iBACPhnB,KAAKgnB,gBAAgBI,IAKjB0mD,EAAA5tE,UAAA2vE,kBAAR,SAA0BtG,GACxB,IAAMuF,EAAe9uE,KAAK0vE,iBAE1B,GAAIZ,EAAc,CAChB,IAAMkB,EAAoBlB,EAAakB,kBACjCC,EAAcnB,EAAamB,YAC3BC,EAAcpB,EAAaoB,YAE3BC,GAAWH,GAAoBhwE,KAAKowE,mBAAmB7G,EAAKI,UAAWqG,GACvEK,EAAe9G,EAAKG,MAAQuG,GAAe1G,EAAKG,MAAQwG,EAM9D,OAJKG,IACHrwE,KAAKmuE,eAAiBnuE,KAAKmuE,eAAiB,GAGvCgC,GAAYE,EAGrB,OAAO,GAGDvC,EAAA5tE,UAAAowE,mBAAR,SAA2B/G,EAAoBgB,GAC7C,OAAOA,EAAM3xC,MAAK,SAAA23C,GAAe,OAAAhH,EAAKthC,OAASsoC,EAAYtoC,SAGrD6lC,EAAA5tE,UAAAgvE,iBAAR,WACE,OAAOlvE,KAAK+tE,eAGND,EAAA5tE,UAAA4vE,kBAAR,SAA0BU,EAAuBjG,GAC/C,OAAIvqE,KAAKswE,mBAAmBE,EAASjG,GAC5BvqE,KAAKywE,wBAAwBD,EAASjG,IAG3CvqE,KAAKyvE,WACPlF,EAAM/lE,KAAKgsE,GAEXjG,EAAMz2D,OAAO,EAAGy2D,EAAM5pE,OAAQ6vE,GAGzBjG,IAGDuD,EAAA5tE,UAAAkwE,mBAAR,SAA2BzG,EAAmBqG,QAAA,IAAAA,IAAAA,EAAA,IAC5C,IAAMU,EAAYV,EAAkBp3C,MAAK,SAAA+3C,GAAO,OAAAA,EAAIpgE,gBAAkBo5D,KAItE,OAHK+G,IACH1wE,KAAKiuE,oBAAsBjuE,KAAKiuE,oBAAsB,GAEjDyC,GAGD5C,EAAA5tE,UAAA8uE,qBAAR,SAA6BF,QAAA,IAAAA,IAAAA,EAAA,IAC3B,IAAM8B,EAAqB9B,EAAakB,mBAAqB,GAE7DhwE,KAAKgwE,kBAAoBY,EAAmBnjD,KAAK,MAG3CqgD,EAAA5tE,UAAA6uE,iBAAR,SAAyBD,GACvB,GAAKA,EAAL,CAIA,IAAMmB,EAAcnB,EAAamB,aA7fT,EA8flBC,EAAcpB,EAAaoB,aA/fT,SAigBxB,OAAA9vE,EAAAA,EAAA,GACK0uE,GAAY,CACfoB,YAAaA,EACbD,YAAaA,MAITnC,EAAA5tE,UAAAuwE,wBAAR,SAAgCD,EAAuBjG,GACrD,IAAMsG,EAAYtG,EAAM12D,WACtB,SAAA08D,GAAe,OAAAC,EAAQvoC,OAASsoC,EAAYtoC,MAAQsoC,EAAYtiE,SAAWm6D,GAAe0I,YAO5F,OAJmB,IAAfD,GACFtG,EAAMz2D,OAAO+8D,EAAW,EAAGL,GAGtBjG,4CAzJ4B6B,MAjUEjrE,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAeFx8B,EAAA,CAArB2E,EAAAA,MAAM,wGAsBsB3E,EAAA,CAA5B2E,EAAAA,MAAM,oFAce3E,EAAA,CAArB2E,EAAAA,MAAM,uGAiB4B3E,EAAA,CAAlC2E,EAAAA,MAAM,gIAoBwB3E,EAAA,CAA9B2E,EAAAA,MAAM,wHAmBsB3E,EAAA,CAA5B2E,EAAAA,MAAM,oHAQW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAuCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAgBU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGS3E,EAAA,CAAf2E,EAAAA,MAAM,4DAUkB3E,EAAA,CAAxB2E,EAAAA,MAAM,gHAWQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAWgB3E,EAAA,CAAtB2E,EAAAA,MAAM,uGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAmBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAWc3E,EAAA,CAApB2E,EAAAA,MAAM,wGAqBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAWc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAoBa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAuBH,EAAAA,8CAMZ3G,EAAA,CAAlB8G,EAAAA,OAAO,2BAAqBH,EAAAA,6CAMR3G,EAAA,CAApB8G,EAAAA,OAAO,6BAAyBH,EAAAA,+CAGR3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAAiCH,EAAAA,mDApWrBgmE,EAAqB3sE,EAAA,CAD1C4H,EAAAA,mCAuWsCqjE,MAtWjB0B,oBChIpB,SAAAiD,EAAmB/zD,GAAAhd,KAAAgd,WAAAA,EAJOhd,KAAAwsE,YAAiC,IAAI1kE,EAAAA,aASjE,OAHEipE,EAAA7wE,UAAAuY,MAAA,WACEzY,KAAKgxE,uBAAuBlmE,cAAc2N,kDAHbvL,EAAAA,cAdE/L,EAAA,CAAhC2E,EAAAA,MAAM,8FAEc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEY3E,EAAA,CAAlB2E,EAAAA,MAAM,kEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEa3E,EAAA,CAAnB2E,EAAAA,MAAM,qEAEmB3E,EAAA,CAAzB8G,EAAAA,OAAO,kCAA+BH,EAAAA,iDAET3G,EAAA,CAA7B4E,EAAAA,UAAU,mCAA2CmH,EAAAA,0DAb3C6jE,EAA6B5vE,EAAA,CALzC+E,EAAAA,UAAU,CACTC,SAAU,2BACVC,SAAA,4rCACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAiBV8E,EAAAA,cAfpB6jE,oBC4CX,SAAAE,EAAoBx5D,GAAAzX,KAAAyX,eAAAA,EA5BZzX,KAAAkxE,gBAT4B,IAYpClxE,KAAAmxE,YAAsB,EAqBGnxE,KAAAoxE,WAAgC,IAAItpE,EAAAA,aAEnC9H,KAAAwsE,YAAiC,IAAI1kE,EAAAA,aA4BjE,OA1C+BtI,OAAAqC,eAAIovE,EAAA/wE,UAAA,iBAAc,KAM/C,WACE,OAAOF,KAAKkxE,qBAPe,SAAmBpuE,GAC9C,IAAMuuE,EAAiBtgE,EAAajO,EAtBF,KAwBlC9C,KAAKkxE,gBAAkBG,EAvBO,IAAA,IAuBkEA,mCAelGJ,EAAA/wE,UAAAuY,MAAA,WACEzY,KAAKsxE,sBAAsB74D,SAG7Bw4D,EAAA/wE,UAAAqxE,cAAA,SAAc3nE,GACZ5J,KAAKwxE,YAAc5nE,EAGnB5J,KAAKyX,eAAeqc,iBAGtBm9C,EAAA/wE,UAAAuxE,YAAA,WACEzxE,KAAKmxE,YAAa,GAGpBF,EAAA/wE,UAAAwxE,WAAA,WACE1xE,KAAKmxE,YAAa,GAGpBF,EAAA/wE,UAAAyxE,aAAA,SAAapH,GACXvqE,KAAKmxE,YAAa,EAElBnxE,KAAKoxE,WAAWppE,KAAKuiE,6CAxBa7yD,EAAAA,qBAvBgBvW,EAAA,CAAnD4E,EAAAA,UAAU,kBAAmB,CAAEqH,KAAMF,EAAAA,6BAAsCA,EAAAA,0DAChB/L,EAAA,CAA3D4E,EAAAA,UAAUgrE,GAA+B,CAAE9qE,QAAQ,oBAA+B8qE,iDAElD5vE,EAAA,CAAhC2E,EAAAA,MAAM,8FAEc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEsB3E,EAAA,CAA5B2E,EAAAA,MAAM,kHAUc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEkB3E,EAAA,CAAxB8G,EAAAA,OAAO,iCAA6BH,EAAAA,gDAEX3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAA+BH,EAAAA,iDA3B5BmpE,EAAyB9vE,EAAA,CALrC+E,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAA,quBACA8B,gBAAiBC,EAAAA,wBAAwBC,gCA+BLsP,EAAAA,qBA7BzBu5D,qBC2DX,SAAAW,EACE7D,EACOlkE,EACCgoE,EACAnJ,WAJVpiE,EAMEC,EAAA3F,KAAAZ,KAAM+tE,IAAc/tE,YAJbsG,EAAAuD,SAAAA,EACCvD,EAAAurE,SAAAA,EACAvrE,EAAAoiE,aAAAA,EA5BVpiE,EAAAwrE,qBAAkBh8D,EAAA,IACfsyD,GAAe0I,UAAW,CACzBx7D,KAAM,WAAM,OAAAhP,EAAKsxB,SAASi2C,iBAC1BhyC,KAAM,cAER/lB,EAACsyD,GAAe7jD,OAAQ,CACtBjP,KAAM,WAAM,OAAAhP,EAAKsxB,SAASg2C,gBAE5B93D,EAACsyD,GAAe2J,WAAY,CAC1Bz8D,KAAM,SAAA08D,GAAW,OAAAA,EAAU,SAI/B1rE,EAAA2rE,6BAA0B7jC,EAAA,IACvBg6B,GAAe0I,UAAWxyC,EAAAA,iBAAiBmF,QAC5C2K,EAACg6B,GAAe7jD,OAAQ+Z,EAAAA,iBAAiB/Z,SAGnCje,EAAA4rE,yBAAmC,UAuS7C,OA1TuCpyE,EAAA8xE,EAAArrE,KAA1BqrE,EAkCXpyE,OAAAqC,eAAI+vE,EAAA1xE,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAKmyE,WAAa9+D,sCAG3B7T,OAAAqC,eAAI+vE,EAAA1xE,UAAA,oBAAiB,KAArB,WACE,IAAMivE,EAAenvE,KAAKmvE,cAAgB,GAC1C,OAAQnvE,KAAKoyE,iBAAmBpyE,KAAKouE,YAAce,EAAaxuE,OAAS,GAAKX,KAAKqyE,oDAGrF7yE,OAAAqC,eAAI+vE,EAAA1xE,UAAA,wBAAqB,KAAzB,WACE,OAAIF,KAAKwuE,mBACAxuE,KAAK43B,SAAS60C,aACZzsE,KAAKyvE,WACPzvE,KAAK43B,SAAS40C,YAEdxsE,KAAK43B,SAAS20C,4CAIzB/sE,OAAAqC,eAAI+vE,EAAA1xE,UAAA,uBAAoB,KAAxB,WACE,OAAOF,KAAKmvE,cAAgBnvE,KAAKmvE,aAAaxuE,OAAS,mCAGzDnB,OAAAqC,eAAI+vE,EAAA1xE,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKmvE,cAAgBnvE,KAAKmvE,aAAaxuE,OAAS,mCAGzDnB,OAAAqC,eAAI+vE,EAAA1xE,UAAA,qBAAkB,KAAtB,WACE,QAAIP,MAAMqW,QAAQhW,KAAKmvE,eACdnvE,KAAKmvE,aAAav2C,MAAK,SAAA2wC,GAAQ,OAAAA,EAAKt7D,SAAWm6D,GAAe0I,6CAMzEtxE,OAAAqC,eAAI+vE,EAAA1xE,UAAA,aAAU,KAAd,WACE,IAAMivE,EAAenvE,KAAKmvE,cAAgB,GAE1C,SACEnvE,KAAKsyE,oBAAoBnD,IACxBnvE,KAAK2N,MACN3N,KAAK0Y,WACL1Y,KAAKuvE,oBAAoBJ,EAAaxuE,0CAI1CnB,OAAAqC,eAAI+vE,EAAA1xE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKyvE,YAAczvE,KAAK0vE,kBAAoB1vE,KAAK0vE,iBAAiBC,0CAG3EiC,EAAA1xE,UAAAijC,OAAA,SAAOomC,GACL,GAAIA,EAAKt7D,SAAWm6D,GAAe2J,UACjC,OAAO/xE,KAAKuyE,WAAWhJ,GAGzBvpE,KAAKwyE,WAAWjJ,IAGlBqI,EAAA1xE,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAKTm5D,EAAA1xE,UAAAi7C,MAAA,WACEn7C,KAAKmvE,kBAAehmE,EACpBnJ,KAAKu/C,YAAY,IACjBv/C,KAAKyyE,mBAoBPb,EAAA1xE,UAAAuY,MAAA,WACE,IAAKzY,KAAK0Y,SAAU,CAClB,GAAI1Y,KAAK0yE,aAEP,YADA1yE,KAAK0yE,aAAaj6D,QAIhBzY,KAAK2yE,iBACP3yE,KAAK4yE,0BAA0Bn6D,UAMrCm5D,EAAA1xE,UAAAoyE,oBAAA,SAAoB/H,GAClB,SAAIA,IAASA,EAAM5pE,SACV4pE,EAAM3xC,MAAK,SAAA2wC,GAAQ,OAAAA,EAAKt7D,SAAWm6D,GAAe2J,cAO7DH,EAAA1xE,UAAA2yE,mBAAA,SAAmB5kE,GACjB,OAAOA,IAAWm6D,GAAe0I,UAInCc,EAAA1xE,UAAAyxE,aAAA,SAAa9qE,GAEX,GAAI7G,KAAKkyE,wBAEP,OADAlyE,KAAKkyE,yBAA0B,EACxBrrE,EAAM+5B,iBAGf,IAAM2pC,EAAQ1jE,EAAMxF,OAAOkpE,MAC3BvqE,KAAK8yE,YAAYvI,GAEjBvqE,KAAKyyE,mBAGPb,EAAA1xE,UAAA6yE,qBAAA,SAAqBxI,GACnBvqE,KAAK8yE,YAAYvI,IAInBqH,EAAA1xE,UAAAsyE,WAAA,SAAWjJ,GACT,IAAMztD,EAAQ9b,KAAKmvE,aAAanuE,QAAQuoE,GACxCvpE,KAAKmvE,aAAar7D,OAAOgI,EAAO,GAEhC9b,KAAKu/C,YAAWx6C,EAAK/E,KAAKmvE,gBAI5ByC,EAAA1xE,UAAAssE,YAAA,WACExsE,KAAKkyE,yBAA0B,EAC/BlyE,KAAKgzE,UAAUloE,cAAcyN,SAG/Bq5D,EAAA1xE,UAAA6vE,aAAA,WACE,GAAI/vE,KAAKmuE,eAAiB,EAAG,CAC3B,IAAM8B,EAAcxgE,EAAYzP,KAAK0vE,iBAAiBO,aAChDC,EAAczgE,EAAYzP,KAAK0vE,iBAAiBQ,aAChDvoC,EAAO,CAAC3nC,KAAKmuE,eAAgB8B,GAAe,IAAKC,GACvDlwE,KAAKizE,iBAAiB,cAAetrC,GACrC3nC,KAAKmuE,eAAiB,EAGxB,GAAInuE,KAAKiuE,oBAAsB,EAAG,CAChC,IAAMiF,EAA6BlzE,KAAK0vE,iBAAiBM,kBAAkBviD,KAAK,MAAMjY,cAChFmyB,EAAO,CAAC3nC,KAAKiuE,oBAAqBiF,GACxClzE,KAAKizE,iBAAiB,gBAAiBtrC,GACvC3nC,KAAKiuE,oBAAsB,EAG7B,GAAIjuE,KAAKkuE,mBAAqB,EAAG,CACzBvmC,EAAO,CAAC3nC,KAAKkuE,oBACnBluE,KAAKizE,iBAAiB,gBAAiBtrC,GACvC3nC,KAAKkuE,mBAAqB,IAK9B0D,EAAA1xE,UAAAizE,UAAA,WACMnzE,KAAKmvE,cAAgBnvE,KAAKmvE,aAAaxuE,QACzCX,KAAKozE,YAAYpzE,KAAKmvE,eAI1ByC,EAAA1xE,UAAAuuE,sBAAA,SAAsBD,GAChBA,EACFxuE,KAAK6J,SAAS8jB,aAAa3tB,KAAKgzE,UAAUloE,cAAe,kBAAmB,QAE5E9K,KAAK6J,SAASwpE,gBAAgBrzE,KAAKgzE,UAAUloE,cAAe,oBAKhE8mE,EAAA1xE,UAAAqyE,WAAA,SAAWhJ,GAAX,IAAAjjE,EAAAtG,KACEA,KAAK+tE,cAAc9B,kBAAkB1C,GAAM,WACrCjjE,EAAK8nE,WACP9nE,EAAKksE,WAAWjJ,GAEhBjjE,EAAKgtE,kBAAkB/J,OAK7BqI,EAAA1xE,UAAA2gC,UAAA,SAAU/kB,EAAOytD,GACf,OAAOA,EAAKO,KAId8H,EAAA1xE,UAAAkzE,YAAA,SAAY7I,GAAZ,IAAAjkE,EAAAtG,KACQuzE,EAAgBhJ,EAAMtqD,QAAO,SAAAspD,GAAQ,OAAAA,EAAKt7D,SAAWm6D,GAAe0I,YAE1E9wE,KAAK+tE,cAAczD,OACjBtqE,KAAK2N,IACL4lE,EACAvzE,KAAKquE,UACL,SAAC9E,EAAMyI,GAEL1rE,EAAKktE,iBAAiBjK,EAAMyI,MAE9B,SAACzI,EAAMkK,GAELntE,EAAKotE,gBAAgBnK,EAAMnB,GAAe0I,UAC1CxqE,EAAKgoE,UAAUtmE,KAAKyrE,MAEtB,SAAClK,EAAMoK,GAELrtE,EAAKotE,gBAAgBnK,EAAMnB,GAAe7jD,OAC1Cje,EAAK8C,QAAQpB,KAAK2rE,OAKhB/B,EAAA1xE,UAAAuyE,gBAAR,WACEzyE,KAAKkyE,yBAA0B,EAC/BlyE,KAAKgzE,UAAUloE,cAAchI,MAAQ,IAI/B8uE,EAAA1xE,UAAAwzE,gBAAR,SAAwBnK,EAAoBt7D,GAC1Cs7D,EAAKt7D,OAASA,EACds7D,EAAKyI,QAAU,KAITJ,EAAA1xE,UAAA+yE,iBAAR,SAAyBW,EAA2BC,GAClD,IAAMC,EAAgB9zE,KAAK6xE,SAASnqC,UAAU1nC,KAAK43B,SAASg8C,GAAoBC,GAChF7zE,KAAK0oE,aAAaI,YAAYgL,IAIxBlC,EAAA1xE,UAAAozE,kBAAR,SAA0B/J,GACxBA,EAAKt7D,OAASm6D,GAAeroD,KAC7BwpD,EAAKyI,QAAU,GAGTJ,EAAA1xE,UAAA4yE,YAAR,SAAoBvI,GAClBvqE,KAAKmvE,aAAenvE,KAAKsvE,WAAW/E,GAEpCvqE,KAAKu/C,YAAWx6C,EAAK/E,KAAKmvE,eAEtBnvE,KAAKouE,YACPpuE,KAAKozE,YAAYpzE,KAAKmvE,eAKlByC,EAAA1xE,UAAAq/C,YAAR,SAAoBgrB,GAClB,IAAMwJ,EAAkC/zE,KAAKg0E,oBAAoBzJ,GACjEvqE,KAAKy/C,cAAgBz/C,KAAKy/C,cAAcs0B,GAAc/zE,KAAK++B,cAAc/2B,KAAK+rE,IAIxEnC,EAAA1xE,UAAAszE,iBAAR,SAAyBjK,EAAWyI,GAClCzI,EAAKt7D,OAASm6D,GAAe2J,UAC7BxI,EAAKyI,QAAUA,GAITJ,EAAA1xE,UAAA8zE,oBAAR,SAA4BzJ,GAO1B,OAAOA,EAAMn+D,KANa,SAAA6nE,GAChBA,EAAAjC,QAASiC,EAAAzK,YAEjB,OAF8B1oE,EAAAmzE,EAAA,CAAA,UAAA,6DAzRjB7H,UACEj/D,EAAAA,iBACC46B,UACImhC,MARoC/nE,EAAA,CAA3D4E,EAAAA,UAAU,YAAa,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA2BiH,EAAAA,6CACzC/L,EAAA,CAArC4E,EAAAA,UAAUkrE,oBAA8DA,qDAC9C9vE,EAAA,CAA1B4E,EAAAA,UAAU,gCAAsCyS,wCAvBtCo5D,EAAiBsC,EAAA/yE,EAAA,CAlB7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,owFACAgB,UAAW,CACT2gC,GACAqkC,GACA,CACEpnD,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA+uD,KAC9B7uD,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAA+uD,KAC9B7uD,OAAO,6BA8BM+mD,GACEj/D,EAAAA,UACC46B,GACImhC,MA7Bb0I,IAA0B9D,IC9CjCqG,GAAqB,CAAC,QAAS,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,sBAqFpF,SAAAC,EAAoBj9D,GAApB,IAAA7Q,EAAAtG,KAAoBA,KAAAmX,gBAAAA,EA5EpBnX,KAAAmmE,UAAY32C,SAASu1C,eAErB/kE,KAAAm0E,mBAA+C,CAC7CnE,kBAAmBmE,IAWZn0E,KAAA43B,SAAQx3B,EAAA,GACZinE,GAA0BrnE,KAAKmX,gBAAgB7G,qBAGpDtQ,KAAAq0E,kBAAmC,CACjC1wE,MAAO3D,KAAK43B,SAASuL,OACrB7I,OAAQ,WACNh0B,EAAKguE,MAAMt9C,QACX1wB,EAAKi9D,QAAQv7D,OACb1B,EAAKiuE,yBACLjuE,EAAKkuE,kBAITx0E,KAAAy0E,mBAAoC,CAClC9wE,MAAO3D,KAAK43B,SAASqwC,OACrBvvD,UAAU,EACV4hB,OAAQ,WAAM,OAAAh0B,EAAKouE,qBAGrB10E,KAAA20E,uBAAyB,CACvBhxE,MAAO3D,KAAK40E,oBACZl8D,UAAU,EACV4hB,OAAQ,WAAM,OAACh0B,EAAKw9D,cAAgBx9D,EAAKuuE,aAAevuE,EAAKwuE,aAAaxuE,EAAKm9D,QAASn9D,EAAKo9D,eAmC1E1jE,KAAAujE,QAAU,IAAIz7D,EAAAA,aAET9H,KAAA6jE,YAAc,IAAI/7D,EAAAA,aA8J9C,OAhMEtI,OAAAqC,eAAIuyE,EAAAl0E,UAAA,aAAU,KAAd,WACE,MAAuB,UAAnBF,KAAK+0E,UACA/0E,KAAK43B,SAASswC,YAGhBloE,KAAK40E,qDAGdp1E,OAAAqC,eAAIuyE,EAAAl0E,UAAA,gBAAa,KAAjB,WACE,SAAUF,KAAKg1E,cAAeh1E,KAAKg1E,YAAYr0E,yCAGjDnB,OAAAqC,eAAIuyE,EAAAl0E,UAAA,aAAU,KAAd,WACE,QAASF,KAAKmoE,UAAYnoE,KAAKi1E,gBAAkBj1E,KAAKi1E,eAAen3C,uCAGvEt+B,OAAAqC,eAAIuyE,EAAAl0E,UAAA,qBAAkB,KAAtB,WACE,MAA0B,UAAnBF,KAAK+0E,UAAwB/0E,KAAKy0E,mBAAqBz0E,KAAK20E,wDAqB/DP,EAAAl0E,UAAAg1E,gBAAN,kHACMl1E,KAAKm1E,eACDC,EAAcp1E,KAAKg1E,YAAY,GAAGnL,QACjC,CAAA,GzKiXwBN,EyKjXG6L,EzKkX/B,IAAI1yE,SAAQ,SAACC,EAASC,GAC3B,IAAMyyE,EAAS,IAAIC,WAEnBD,EAAOE,cAAchM,GACrB8L,EAAOG,OAAS,WAAM,OAAA7yE,EAAQ0yE,EAAOnyE,SAErCmyE,EAAOI,QAAU,SAAA3wE,GAAS,OAAAlC,EAAOkC,UyK1X7B,CAAA,EAAA,UAEF,MAAA,CAAA,EAAOgR,EAAAlS,6BzKiXwB2lE,SyK7WnC6K,EAAAl0E,UAAA00E,kBAAA,WACE,OAAO50E,KAAK8jE,cAAgB9jE,KAAK43B,SAASowC,SAAWhoE,KAAK43B,SAASgwC,YAGrEwM,EAAAl0E,UAAAw1E,YAAA,SAAY5yE,GAENA,GAAS9C,KAAK+0E,YAAcnV,GAAoB+V,QACxC,cACV31E,KAAKujE,QAAQv7D,KAAK,CAAEu7D,QADV,cACmBzgE,MAAKA,MAItCsxE,EAAAl0E,UAAA01E,kBAAA,WACE,OAAQ51E,KAAK20E,uBAAuBj8D,SAAW1Y,KAAK61E,eAAiB71E,KAAK61E,cAAc/O,SAGpFsN,EAAAl0E,UAAAw0E,iBAAN,kHAGM10E,KAAK+0E,YAAcnV,GAAoB+V,OAAU31E,KAAKmoE,SAAtD,CAAA,EAAA,GACY,CAAA,EAAMnoE,KAAKk1E,0BAAzBE,EAAct/D,EAAAlS,+BAGhB5D,KAAKu0E,yBACLv0E,KAAKs0E,MAAMt9C,SAEPh3B,KAAK81E,YAAc91E,KAAKm1E,gBAC1Bn1E,KAAK01E,YAAY11E,KAAKmoE,UAAYiN,GAEpCp1E,KAAKw0E,4BAGPJ,EAAAl0E,UAAAw9D,UAAA,SAAUpsD,GACRtR,KAAK+0E,UAAYzjE,EAEjBtR,KAAK+1E,qBAED/1E,KAAK+0E,YAAcnV,GAAoBoW,OACzCh2E,KAAKi2E,sBACLj2E,KAAK20E,uBAAuBhxE,MAAQ3D,KAAK40E,qBAG3C50E,KAAKs0E,MAAMjgE,QAGb+/D,EAAAl0E,UAAA0iE,aAAA,SAAa/7D,GACX7G,KAAKk2E,iBAAmBrvE,EACxB7G,KAAK4kE,YAAc/9D,GAGbutE,EAAAl0E,UAAAi2E,eAAR,SAAuB1S,EAAiBC,GACtC,YAAuBv6D,IAAhBu6D,GAAoD,KAAvBA,EAAY5yD,OAAgB2yD,EAAUC,GAGpE0Q,EAAAl0E,UAAAs0E,cAAR,WACEx0E,KAAKmoE,cAAWh/D,EAChBnJ,KAAKyjE,aAAUt6D,EACfnJ,KAAK0jE,iBAAcv6D,EACnBnJ,KAAKg1E,iBAAc7rE,EACnBnJ,KAAK8jE,eAAgB,EACrB9jE,KAAKk2E,gBAAiB,EACtBl2E,KAAK4kE,iBAAcz7D,GAGbirE,EAAAl0E,UAAAk2E,UAAR,SAAkBnnB,GAChBA,EAAQonB,iBACRpnB,EAAQqnB,kBACRrnB,EAAQsnB,0BAGFnC,EAAAl0E,UAAA+1E,oBAAR,WAAA,IAAA3vE,EAAAtG,KACEA,KAAKw2E,oBACDx2E,KAAK61E,eACP71E,KAAKo2E,UAAUp2E,KAAK61E,cAAc5mB,SAGpCpiD,YAAW,WACTvG,EAAKsvE,uBAGH51E,KAAKk2E,iBACPl2E,KAAK8jE,eAAgB,EACrB9jE,KAAKy2E,2BAGPz2E,KAAK6jE,YAAY77D,KAAKhI,KAAK8jE,gBAGrBsQ,EAAAl0E,UAAAw2E,iBAAR,WACE,QAAI12E,KAAK22E,iBACH32E,KAAKmmE,YACPnmE,KAAKmmE,UAAUyQ,kBACf52E,KAAKmmE,UAAU0Q,SAAS72E,KAAK22E,kBAExB,IAMHvC,EAAAl0E,UAAAq0E,uBAAR,WACEv0E,KAAKmmE,UAAUxgE,SAAS3F,KAAK82E,oBAAoB,GAAI92E,KAAK82E,oBAAoB,KAGxE1C,EAAAl0E,UAAA61E,mBAAR,WACE/1E,KAAK82E,oBAAsB,CAAC92E,KAAKmmE,UAAUnB,UAAWhlE,KAAKmmE,UAAU4Q,cAG/D3C,EAAAl0E,UAAAs2E,kBAAR,WACE,GAAkC,OAA9Bx2E,KAAKmmE,UAAUlB,WAIjB,OAAO,KAHPjlE,KAAK22E,eAAiB32E,KAAKmmE,UAAUX,WAAW,GAChDxlE,KAAK0jE,YAAc1jE,KAAKmmE,UAAUpzD,YAM9BqhE,EAAAl0E,UAAAu2E,wBAAR,WACEz2E,KAAK0jE,YAAc1jE,KAAK4kE,YAAYhuB,UACpC52C,KAAKyjE,QAAUzjE,KAAK4kE,YAAYoS,aAAa,SAGvC5C,EAAAl0E,UAAA20E,WAAR,WACM1hE,KACFnT,KAAK4kE,YAAYM,WAAWrmD,YAAY7e,KAAK4kE,aAE7C5kE,KAAK4kE,YAAY7S,SAGnB/xD,KAAK80E,aAAa90E,KAAKyjE,QAASzjE,KAAK0jE,cAG/B0Q,EAAAl0E,UAAA40E,aAAR,SAAqBrR,EAASC,GAC5B1jE,KAAKs0E,MAAMt9C,QACXh3B,KAAK02E,mBAEL,IAAMO,EAAmBj3E,KAAKm2E,eAAe1S,EAASC,GAKhD5gE,EAAQ,CAAE2gE,QAJUvvD,GAAeuvD,GAAWA,EAAU,UAAUA,EAI5BC,YAAauT,GAEzDj3E,KAAKujE,QAAQv7D,KAAK,CAAEu7D,QAJI,aAIKzgE,MAAKA,IAElC9C,KAAKw0E,0DA1J8Bt+D,MAhBC/U,EAAA,CAArC4E,EAAAA,UAAU,QAAS,CAAEE,QAAQ,oBAAew7B,iCAEhBtgC,EAAA,CAA5B4E,EAAAA,UAAU,kCAAkCmxE,EAAAA,8CAEN/1E,EAAA,CAAtC4E,EAAAA,UAAU,SAAU,CAAEE,QAAQ,oBAAgB2rE,kCAEJzwE,EAAA,CAA1C4E,EAAAA,UAAU,aAAc,CAAEE,QAAQ,oBAAoBiH,EAAAA,8CAEb/L,EAAA,CAAzC4E,EAAAA,UAAU,YAAa,CAAEE,QAAQ,oBAAmBw7B,qCAEzBtgC,EAAA,CAA3B4E,EAAAA,UAAU,iCAAgCmxE,EAAAA,6CAEtB/1E,EAAA,CAApB8G,EAAAA,OAAO,oEAEkB9G,EAAA,CAAzB8G,EAAAA,OAAO,6EA7EGmsE,EAAwBjzE,EAAA,CAJpC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,+0DAiFqC8P,MA/E1Bk+D,oBCqGX,SAAA+C,EAAoBhgE,GAApB,IAAA7Q,EAAAtG,KAAoBA,KAAAmX,gBAAAA,EApGXnX,KAAA43B,SAAQx3B,EAAA,GACZinE,GAA0BrnE,KAAKmX,gBAAgB7G,qBAGpDtQ,KAAAo3E,aAAwD,CACtD,CACE7T,QAAS,cACT1nC,KAAM,qBACN5iB,QAASjZ,KAAK43B,SAAS/iB,KACvBylB,OAAQt6B,KAAKq3E,iBAAiBn1D,KAAKliB,KAAM,eACzC4f,UAAU,GAEZ,CACE2jD,QAAS,gBACT1nC,KAAM,uBACN5iB,QAASjZ,KAAK43B,SAAS6vC,OACvBntC,OAAQt6B,KAAKq3E,iBAAiBn1D,KAAKliB,KAAM,kBAE3C,CACEujE,QAAS,eACT1nC,KAAM,sBACN5iB,QAASjZ,KAAK43B,SAAS9iB,MACvBwlB,OAAQt6B,KAAKq3E,iBAAiBn1D,KAAKliB,KAAM,iBAE3C,CACEujE,QAAS,cACT1nC,KAAM,wBACN5iB,QAASjZ,KAAK43B,SAAS8vC,QACvBptC,OAAQt6B,KAAKq3E,iBAAiBn1D,KAAKliB,KAAM,iBAI7CA,KAAAs3E,cAAyD,CACvD,CACE/T,QAAS,OACT1nC,KAAM,oBACN5iB,QAASjZ,KAAK43B,SAAS0vC,KACvBhtC,OAAQt6B,KAAK01E,YAAYxzD,KAAKliB,KAAM,SAEtC,CACEujE,QAAS,SACT1nC,KAAM,sBACN5iB,QAASjZ,KAAK43B,SAAS2vC,OACvBjtC,OAAQt6B,KAAK01E,YAAYxzD,KAAKliB,KAAM,WAEtC,CACEujE,QAAS,YACT1nC,KAAM,yBACN5iB,QAASjZ,KAAK43B,SAAS4vC,UACvBltC,OAAQt6B,KAAK01E,YAAYxzD,KAAKliB,KAAM,eAIxCA,KAAAu3E,YAAuD,CACrD,CACEhU,QAAS,sBACT1nC,KAAM,eACN5iB,QAASjZ,KAAK43B,SAAS+vC,cACvBrtC,OAAQt6B,KAAK01E,YAAYxzD,KAAKliB,KAAM,yBAIxCA,KAAAw3E,YAAuD,CACrD,CACEjU,QAAS,aACT1nC,KAAM,eACN5iB,QAAYjZ,KAAK43B,SAASgwC,WAAU,cACpCttC,OAAQ,WAAM,OAAAh0B,EAAKguE,MAAMtsE,KAAK43D,GAAoBoW,SAItDh2E,KAAAy3E,aAAyC,CACvC,CACEx+D,QAASjZ,KAAK43B,SAASswC,YACvBrsC,KAAM,kBACNvB,OAAQ,WAAM,OAAAh0B,EAAKguE,MAAMtsE,KAAK43D,GAAoB+V,UAiBjC31E,KAAAujE,QAAU,IAAIz7D,EAAAA,aAEhB9H,KAAAs0E,MAAQ,IAAIxsE,EAAAA,aAgEjC,OA3EuBtI,OAAAqC,eAAIs1E,EAAAj3E,UAAA,WAAQ,KAKjC,WACE,OAAOF,KAAKuuD,eANO,SAAazrD,GAChC9C,KAAKuuD,UAAYzrD,EACjB9C,KAAK03E,qBAAqB13E,KAAKuuD,4CAWjC/uD,OAAAqC,eAAIs1E,EAAAj3E,UAAA,qBAAkB,KAAtB,WACE,OAAOiT,sCAKTgkE,EAAAj3E,UAAAwK,gBAAA,WACE1K,KAAK23E,oBACL33E,KAAK43E,sBAjHsB,YAoH7BT,EAAAj3E,UAAA23E,gBAAA,SAAgB/0E,GAGd9C,KAAKujE,QAAQv7D,KAAK,CAAEu7D,QAFJ,YAEazgE,MAAKA,KAGpCq0E,EAAAj3E,UAAA43E,iBAAA,SAAiBC,GACV/3E,KAAK27C,WACR37C,KAAKo3E,aAAa13D,SAAQ,SAAAC,GAAU,OAACA,EAAOC,SAAWm4D,EAAIpV,SAAS75D,SAAS6W,EAAO4jD,YACpFvjE,KAAKs3E,cAAc53D,SAAQ,SAAAC,GAAU,OAACA,EAAOC,SAAWm4D,EAAIpV,SAAS75D,SAAS6W,EAAO4jD,YACrFvjE,KAAKu3E,YAAY,GAAG33D,SAAWm4D,EAAIpV,SAAS75D,SAAS9I,KAAKu3E,YAAY,GAAGhU,SACzEvjE,KAAKw3E,YAAY,GAAG53D,SAAWm4D,EAAIpV,SAAS75D,SAAS9I,KAAKw3E,YAAY,GAAGjU,SACzEvjE,KAAK43E,sBAAsBG,EAAIzT,YAInC6S,EAAAj3E,UAAA83E,gBAAA,WACEh4E,KAAKs0E,MAAMtsE,KAAK43D,GAAoBoW,OAG9BmB,EAAAj3E,UAAAm3E,iBAAR,SAAyB9T,GACvB,IAAMznD,EAAQ9b,KAAKo3E,aAAavjE,WAAU,SAAAokE,GAAO,OAAAA,EAAI1U,UAAYA,KAE7DvjE,KAAKo3E,aAAat7D,GAAO8D,WAC3B5f,KAAKo3E,aAAat7D,GAAO8D,UAAW,GAGtC5f,KAAKujE,QAAQv7D,KAAKu7D,IAGZ4T,EAAAj3E,UAAAw1E,YAAR,SAAoBnS,GAClBvjE,KAAKujE,QAAQv7D,KAAKu7D,IAGZ4T,EAAAj3E,UAAAy3E,kBAAR,WACkB33E,KAAKk4E,eAAeptE,cAAcoB,iBAAiB,UAE3DwT,SAAQ,SAAAC,GAAU,OAAAA,EAAOgO,aAAa,WAAY,UAGpDwpD,EAAAj3E,UAAA03E,sBAAR,SAA8B9pD,GAC5B9tB,KAAKm4E,iBAAiBrtE,cAAchI,MAAQgrB,GAGtCqpD,EAAAj3E,UAAAw3E,qBAAR,SAA6BU,GAC3Bp4E,KAAKo3E,aAAa13D,SAAQ,SAAAC,GAAU,OAACA,EAAOjH,SAAW0/D,KACvDp4E,KAAKs3E,cAAc53D,SAAQ,SAAAC,GAAU,OAACA,EAAOjH,SAAW0/D,KACxDp4E,KAAKu3E,YAAY,GAAG7+D,SAAW0/D,EAC/Bp4E,KAAKw3E,YAAY,GAAG9+D,SAAW0/D,EAC/Bp4E,KAAKy3E,aAAa,GAAG/+D,SAAW0/D,4CAxDGliE,MArBgB/U,EAAA,CAApD4E,EAAAA,UAAU,mBAAoB,CAAEqH,KAAMF,EAAAA,6BAAgCA,EAAAA,oDAExB/L,EAAA,CAA9C4E,EAAAA,UAAU,iBAAkB,CAAEE,QAAQ,oBAAwBiH,EAAAA,kDAE1C/L,EAAA,CAApB2E,EAAAA,MAAM,sGASc3E,EAAA,CAApB8G,EAAAA,OAAO,oEAEW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEAjGGkvE,EAA0Bh2E,EAAA,CAJtC+E,EAAAA,UAAU,CACTC,SAAU,uBACVC,SAAA,s3CAyGqC8P,MAvG1BihE,qBC2BX,SAAAkB,EAAY9sD,UACVhlB,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,WAMb,OATsCF,EAAAu4E,EAAA9xE,KAAzB8xE,EAMXA,EAAAn4E,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,+CALO0L,EAAAA,cAFLmrE,EAAgBC,EAAAn3E,EAAA,CAhB5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,2kCACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAmzD,KAC9BjzD,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAmzD,KAC9BjzD,OAAO,6BAMKnY,EAAAA,cAFLmrE,IAAyB/e,mBChCpC,SAAAif,EAAYv7D,GAAZ,IAAA1W,EACEC,EAAA3F,KAAAZ,KAAMgd,IAAWhd,YAJnBsG,EAAAgL,KAAO,WAmET,OApEoDxR,EAAAy4E,EAAAhyE,GAQlDgyE,EAAAr4E,UAAAs5D,aAAA,SAAaz4D,GACX,IAAKf,KAAKunD,KAAM,CACd,IAAIzkD,EAAQ/B,EAAEM,OAAOyB,MACf01E,EAAiBx4E,KAAKy5D,eAAez5D,KAAKg+B,UAAWl7B,GAEvDA,IAAU01E,IACZ11E,EAAQ01E,EAERx4E,KAAKmsD,QAAQrhD,cAAchI,MAAQA,GAGrC9C,KAAK8rD,aAAa9rD,KAAKo1C,aAAatyC,MAIxCy1E,EAAAr4E,UAAAu5D,eAAA,SAAez7B,EAAmBl7B,GAChC,GAAIk7B,GAAal7B,EAAMnC,OAASq9B,EAAW,CACzC,IAAMy6C,EAAiB31E,EAAMiQ,WAAWvC,UAAU,EAAGwtB,GAErD,OAAIy6C,GAAkBz4E,KAAK04E,aAAaD,GAC/BA,EAAe1lE,WAAWvC,UAAU,EAAGwtB,EAAY,GAGrDy6C,EAGT,OAAO31E,GAGTy1E,EAAAr4E,UAAAg0D,gBAAA,SAAgBpxD,GACV9C,KAAKmsD,UACHrpD,GAAmB,IAAVA,EACP9C,KAAKunD,MACPvnD,KAAKmsD,QAAQrhD,cAAchI,MAAQ9C,KAAKqrD,QAAQpD,kBAAkB/2B,OAAOpuB,IAGrE9C,KAAKqrD,QAAQ7D,aACfxnD,KAAKuzD,kBAAkBvzD,KAAKqrD,QAAQvD,eAGtC9nD,KAAKmsD,QAAQrhD,cAAchI,MAAQA,EAIrC9C,KAAKmsD,QAAQrhD,cAAchI,MAAQ,IAMvC9C,KAAKszD,YAAYtrD,KAAKlF,IAGhBy1E,EAAAr4E,UAAAw4E,aAAR,SAAqB51E,GACnB,OAAOA,GAASA,EAAMmoC,YAAY,OAASnoC,EAAMnC,OAAS,GAGpD43E,EAAAr4E,UAAAk1C,aAAR,SAAqBtyC,GACnB,OAAOA,EAAQo7B,OAAOp7B,GAAS,+CA9DToK,EAAAA,cAJJqrE,EAAqBp3E,EAAA,CAD1C4H,EAAAA,mCAKyBmE,EAAAA,cAJJqrE,IAA8Bjf,mBCyElD,SAAAqf,EAAYptD,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,YAJMsG,EAAAvD,KAAgB,YA0BnC,OApDuCjD,EAAA64E,EAAApyE,KAA1BoyE,EAGKn5E,OAAAqC,eAAI82E,EAAAz4E,UAAA,SAAM,KAAV,SAAW04E,GACzB,IAAMC,EAAY3nE,SAAS0nE,EAAK,IAChC54E,KAAK44E,IAAO/iE,MAAMgjE,QAAyB1vE,EAAZ0vE,EAC/B74E,KAAKmnB,iDAKS3nB,OAAAqC,eAAI82E,EAAAz4E,UAAA,SAAM,KAAV,SAAW44E,GACzB,IAAMD,EAAY3nE,SAAS4nE,EAAK,IAChC94E,KAAK84E,IAAOjjE,MAAMgjE,QAAyB1vE,EAAZ0vE,EAC/B74E,KAAKmnB,iDAmBPwxD,EAAAz4E,UAAA+zD,gBAAA,SAAgBr0B,GACd,O3GpDsBg5C,E2GoDR54E,KAAK44E,M3GpDgB91E,E2GoDX88B,EAAgB98B,Q3GnDJ,IAAVA,KACX81E,GAAe,IAARA,IACS91E,EAAQ81E,E2GkD9B,CACLA,IAAK,CACH96C,OAAO,a3GjDSg7C,EAAah2E,GAGrC,OAFmBA,GAAmB,IAAVA,KACXg2E,GAAe,IAARA,IACSh2E,EAAQg2E,E2GmDnCC,CAAU/4E,KAAK84E,IAAKl5C,EAAgB98B,OAC/B,CACLg2E,IAAK,CACHh7C,OAAO,IAKN,S3GpEe86C,EAAa91E,4C2G+CrBoK,EAAAA,cA1BA/L,EAAA,CAAf2E,EAAAA,MAAM,6FAQS3E,EAAA,CAAf2E,EAAAA,MAAM,6FAeU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DA1BI6yE,EAAiBK,EAAA73E,EAAA,CAhB7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,m9BACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA6zD,KAC9B3zD,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAA6zD,KAC9B3zD,OAAO,6BAiCKnY,EAAAA,cA7BLyrE,IAA0BJ,mBCwBrC,SAAAU,EAAY1tD,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,YA5BHsG,EAAA4yE,mBAA8B,EAEtC5yE,EAAAgL,KAAO,WACPhL,EAAA6yE,iBAAkB,UAoCpB,OAxCyCr5E,EAAAm5E,EAAA1yE,KAA5B0yE,EAeoBz5E,OAAAqC,eAAIo3E,EAAA/4E,UAAA,mBAAgB,KAQnD,WACE,OAAOF,KAAKk5E,uBATiB,SAAqBp2E,GAClD9C,KAAKk5E,kBAAoBtoE,EAAiB9N,GACtCA,IACF9C,KAAKm5E,iBAAkB,EACvBn5E,KAAKsR,KAAO,6CAahB2nE,EAAA/4E,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,MAGTy3E,EAAA/4E,UAAAk5E,aAAA,WACEp5E,KAAKm5E,iBAAmBn5E,KAAKm5E,gBAC7Bn5E,KAAKsR,KAAqB,aAAdtR,KAAKsR,KAAsB,OAAS,qDAVlCpE,EAAAA,cAbe/L,EAAA,CAA9B2E,EAAAA,MAAM,wHAfImzE,EAAmBI,EAAAl4E,EAAA,CAhB/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,i9CACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAk0D,KAC9Bh0D,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAk0D,KAC9Bh0D,OAAO,6BAgCKnY,EAAAA,cA5BL+rE,IAA4B3f,kBCpBzC,SAAAggB,IACUt5E,KAAA2+B,SAjBuC,EAkBvC3+B,KAAAmY,WAAsB,EAEtBnY,KAAA6+B,WAAsB,EAE9B7+B,KAAA0+B,UAtB+C,EAyBvC1+B,KAAAuzD,kBAAyB,KAcMvzD,KAAA8+B,WAAqB,EAiGxC9+B,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAkEvD,OA/IsBtI,OAAAqC,eAAIy3E,EAAAp5E,UAAA,UAAO,KAO/B,WACE,OAAOF,KAAK2+B,cARM,SAAY77B,GAC9B,IAAMk8B,EAAUjuB,EAAajO,EA5DgB,GA8D7C9C,KAAK2+B,SAAW3+B,KAAKi/B,qBAAqBD,EAAS,GACnDh/B,KAAK0+B,UAAY1+B,KAAKi/B,qBAAqBD,EAAS,oCAgBjCx/B,OAAAqC,eAAIy3E,EAAAp5E,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,GAElC1Y,KAAKmnB,iDAgBc3nB,OAAAqC,eAAIy3E,EAAAp5E,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,iDAWa3nB,OAAAqC,eAAIy3E,EAAAp5E,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAKo/B,cALM,SAAYt8B,GAC9B9C,KAAKo/B,SAAWt8B,EAChB6Q,GAAwB3T,KAAKs/B,0CA4B/Bg6C,EAAAp5E,UAAAq/B,YAAA,SAAYg6C,GACNv5E,KAAKuzD,mBACPvzD,KAAKuzD,kBAAkBgmB,GAGrBv5E,KAAK8C,QAAUy2E,GACjBv5E,KAAK2jB,OAAO3b,KAAKuxE,GAGnBv5E,KAAK8C,MAAQy2E,GAGfD,EAAAp5E,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKuzD,kBAAoB/hD,GAG3B8nE,EAAAp5E,UAAA2mB,kBAAA,SAAkBrV,KAElB8nE,EAAAp5E,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKgnB,gBAAkBxV,GAGzB8nE,EAAAp5E,UAAAmnB,SAAA,SAASuY,GACP,GAAIhC,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,OAC/D,MAAO,CACL+6B,SAAU,CACRC,OAAO,KAMfw7C,EAAAp5E,UAAAonB,WAAA,SAAWyuC,GACT/1D,KAAK8C,MAAQizD,GAGG/1D,KAAKw5E,kBAAkBzjB,IACvB/1D,KAAKuzD,oBACnBvzD,KAAK8C,WAAQqG,EACbnJ,KAAKuzD,kBAAkBvzD,KAAK8C,SAIxBw2E,EAAAp5E,UAAA4/B,kBAAR,SAA0Bd,EAASe,GAGjC,OAAOf,GAFY,GAEaA,GAAWe,GAGrCu5C,EAAAp5E,UAAA++B,qBAAR,SAA6BD,EAAiBe,GAC5C,IAAMG,EA/LqC,GA+LgBlB,EAE3D,OAAOh/B,KAAK8/B,kBAAkBd,EAASe,GAAcG,EAlMR,GAqMvCo5C,EAAAp5E,UAAAinB,cAAR,WACMnnB,KAAKgnB,iBACPhnB,KAAKgnB,mBAhK8B7lB,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGTx8B,EAAA,CAAd2E,EAAAA,MAAM,4DAiBa3E,EAAA,CAAnB2E,EAAAA,MAAM,kGAoBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAmBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAca3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAqBlBwB,EAAA,CAApB2E,EAAAA,MAAM,uEAGa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAxHTwxE,EAAyBn4E,EAAA,CAD9C4H,EAAAA,aACqBuwE,qBCiDpB,SAAAG,EAAY9vE,GAAZ,IAAArD,EACEC,EAAA3F,KAAAZ,OAAOA,YACPsG,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,cAgE1C,OA9E2CL,EAAA25E,EAAAlzE,KAA9BkzE,EAiBXA,EAAAv5E,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAITghE,EAAAv5E,UAAA0K,UAAA,WACiB5K,KAAKwK,OAAOe,KAAKvL,KAAKs/B,UAEnC3rB,GAAwB3T,KAAKs/B,UAIjCm6C,EAAAv5E,UAAAw5E,WAAA,SAAW52E,EAAY4V,GAChBA,GACH1Y,KAAKu/B,YAAYz8B,IAqBrB22E,EAAAv5E,UAAAuY,MAAA,WAAA,IAAAnS,EAAAtG,KACE,GAAIA,KAAK25E,cAAgB35E,KAAK0Y,SAAU,CACtC,IAAMkhE,EAAa55E,KAAK25E,YAAYlvE,MAAK,SAAC/G,EAAGoY,GAAU,OAACxV,EAAKg5B,QAAQxjB,GAAOpD,YAExEkhE,GACFA,EAAW9uE,cAAc2N,UAK/BghE,EAAAv5E,UAAAs5E,kBAAA,SAAkB12E,GAChB,OAAO9C,KAAKmsD,QAAQrhD,cAAckB,cAAc,gBAAgBlJ,EAAK,OAGvE22E,EAAAv5E,UAAAwkD,QAAA,SAAQ79C,EAAsB/D,GAC5B,IAAMxB,EAAMuF,EAAM2M,SAAW3M,EAAM4M,MAE/BzT,KAAK65E,WAAWv4E,IAClBtB,KAAKu/B,YAAYz8B,IAIb22E,EAAAv5E,UAAA25E,WAAR,SAAmBv4E,GACjB,OAAOA,GAAO,IAAMA,GAAO,6CAhER2L,EAAAA,mBAVH9L,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAE+C3E,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CACnC/L,EAAA,CAA3B2/B,EAAAA,aAAa,8BAA2B35B,EAAAA,8CAR9BsyE,EAAqBK,EAAA34E,EAAA,CAhBjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,8gCACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA20D,KAC9Bz0D,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAA20D,KAC9Bz0D,OAAO,6BAgBUpY,EAAAA,mBAZVwsE,IAA8BH,kBC2FzC,SAAAS,EAAmBnwE,EAAqB6N,GAArBzX,KAAA4J,QAAAA,EAjIX5J,KAAAmY,WAAsB,EAEtBnY,KAAAuuD,WAAqB,EACrBvuD,KAAA6+B,WAAsB,EAeS7+B,KAAA8+B,WAAqB,EA6CxC9+B,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG5B9H,KAAA++B,cAAoC,IAAIj3B,EAAAA,aA2DjE9H,KAAAg6E,mBAA6B,EAK3Bh6E,KAAK4J,QAAUA,EACf5J,KAAKyX,eAAiBA,EA+C1B,OA/HsBjY,OAAAqC,eAAIk4E,EAAA75E,UAAA,UAAO,KAO/B,WACE,OAAOF,KAAKo/B,cARM,SAAYE,GAC9Bt/B,KAAKo/B,SAAWE,EAChB3rB,GAAwB3T,KAAKo/B,UAC7BprB,GAA8BhU,KAAKo/B,UACnCp/B,KAAKi6E,mDAsBcz6E,OAAAqC,eAAIk4E,EAAA75E,UAAA,WAAQ,KAKjC,WACE,OAAOF,KAAKmY,eANO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,GAElC1Y,KAAKmnB,iDAec3nB,OAAAqC,eAAIk4E,EAAA75E,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKuuD,eALO,SAAazrD,GAChC9C,KAAKuuD,UAAY39C,EAAiB9N,oCAiBpCtD,OAAAqC,eAAIk4E,EAAA75E,UAAA,WAAQ,KAKZ,WACE,OAAOF,KAAK6+B,eANd,SAAahB,GACX79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,iDAkBP4yD,EAAA75E,UAAAs/C,gBAAA,SAAgB18C,GAEd,OAAO9C,KAAKy/C,cAAgBz/C,KAAKy/C,cAAc38C,GAAS9C,KAAK++B,cAAc/2B,KAAKlF,IAGlFi3E,EAAA75E,UAAAyuD,SAAA,SAAS7rD,GACP9C,KAAK2jB,OAAO3b,KAAKlF,IAGnBi3E,EAAA75E,UAAAmnB,SAAA,SAASuY,GACP,OAAIhC,GAAe59B,KAAK6+B,UAAW7+B,KAAKmY,UAAWynB,EAAgB98B,OAC1D,CACL+6B,SAAU,CACRC,OAAO,IAKN,MAGTi8C,EAAA75E,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKy/C,cAAgBjuC,GAGvBuoE,EAAA75E,UAAA2mB,kBAAA,SAAkBrV,GAChBxR,KAAKmhD,eAAiB3vC,GAGxBuoE,EAAA75E,UAAA6mB,0BAAA,SAA0BvV,GACxBxR,KAAKk6E,kBAAoB1oE,GAGnBuoE,EAAA75E,UAAAinB,cAAR,WACMnnB,KAAKk6E,mBACPl6E,KAAKk6E,8DAxCmBhtE,EAAAA,kBAA4BwK,EAAAA,qBA/GjBvW,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAec3E,EAAA,CAApB2E,EAAAA,MAAM,uEAMa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCAYrBwB,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGJ3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAAiCH,EAAAA,mDAWpB3G,EAAA,CAApB2E,EAAAA,MAAM,oGAkBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAkBP3E,EAAA,CADC2E,EAAAA,MAAM,oGAjHai0E,EAAqB54E,EAAA,CAD1C4H,EAAAA,mCAmI6BmE,EAAAA,WAA4BwK,EAAAA,qBAlIpCqiE,oBC2BpB,SAAAI,EAAmBvmC,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAFrBm0E,EAA+Bh5E,EAAA,CAH3C4H,EAAAA,UAAU,CACT5C,SAAU,sDAIsBH,EAAAA,eAFrBm0E,qBC0CX,SAAAC,EACExwE,EACA6N,EACA9N,EACOE,EACCw5C,GALV,IAAA/8C,EAOEC,EAAA3F,KAAAZ,KAAM4J,EAAS6N,IAAezX,YAHvBsG,EAAAuD,SAAAA,EACCvD,EAAA+8C,gBAAAA,EAzBV/8C,EAAA+M,SAAgBA,KAEhB/M,EAAA+N,MAAgB,EAEhB/N,EAAA+zE,WAAqB,qBAyOb/zE,EAAA0zB,SAAW,WACjB1zB,EAAK+8C,gBAAgB7pC,eA3Rc,WA0EnClT,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,cAqQ1C,OApSuCL,EAAAs6E,EAAA7zE,KAA1B6zE,EAkCX56E,OAAAqC,eAAIu4E,EAAAl6E,UAAA,0BAAuB,KAA3B,WACE,OAAOF,KAAK27C,UAAY37C,KAAKqT,0CAGM+mE,EAAAl6E,UAAA+sD,UAAA,SAAUjF,GAC7C,IAAM4P,EAAW5P,EAAOv0C,OAASu0C,EAAOx0C,QAGpCxT,KAAK27C,SAEHic,IAAavpB,GAAc6V,MAC7BlkD,KAAKs6E,qCACLtyB,EAAOpnB,mBAML5gC,KAAKqU,OAAQ2zC,EAAOuyB,QAAY3iB,IAAavpB,GAAcgW,WAAauT,IAAavpB,GAAc+V,SACvGpkD,KAAKs6E,qCAIH1iB,IAAavpB,GAAcoW,OAASmT,IAAavpB,GAAc8N,OACjEn8C,KAAKs6E,qCAIHt6E,KAAKqU,MAAQujD,IAAavpB,GAAc6V,MAC1C8D,EAAOpnB,iBACP5gC,KAAKw6E,kBAITJ,EAAAl6E,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAIT2hE,EAAAl6E,UAAA0K,UAAA,WACiB5K,KAAKwK,OAAOe,KAAKvL,KAAKs/B,WAEnC3rB,GAAwB3T,KAAKs/B,SAC7BtrB,GAA8BhU,KAAKs/B,WAqBvC86C,EAAAl6E,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKy6E,cAAc3vE,cAAc2N,SAIrC2hE,EAAAl6E,UAAAw6E,aAAA,WACE16E,KAAKq6E,WAAa,qBAClBr6E,KAAKmG,SAAS,wBAAwB8oB,UAAU8iC,OAAO,kBACvD/xD,KAAKqU,MAAO,EAEZrU,KAAKyX,eAAekjE,eACpB36E,KAAKy6E,cAAc3vE,cAAc2N,QAEjCzY,KAAKi6B,mBAGPmgD,EAAAl6E,UAAA6+C,QAAA,SAAQj8C,EAAY48C,GAClB,OAAK58C,GAAmB,IAAVA,IAAgB48C,EACrB58C,EAAMiQ,aAAe2sC,EAAW3sC,aAG1B,OAAVjQ,GAAiC,OAAf48C,QAAmCv2C,IAAVrG,QAAsCqG,IAAfu2C,KACrE58C,EAAQ,GAAGA,GAGNA,IAAU48C,IAGnB06B,EAAAl6E,UAAAslD,cAAA,SAAcvlB,GACZjgC,KAAKu/C,YAAYtf,GACjBjgC,KAAKw6E,gBAIPJ,EAAAl6E,UAAA06E,eAAA,SAAe93E,GACb,GAAIA,GAAS9C,KAAKs/B,SAAWt/B,KAAKs/B,QAAQ3+B,OAAQ,CAChD,IAAM0/C,EAA8BrgD,KAAK66E,gBAAgB/3E,GAErDu9C,IACFrgD,KAAKu/C,YAAYc,GACjBrgD,KAAK86E,kBAAkBz6B,EAAYv9C,UAKzCs3E,EAAAl6E,UAAA+5E,gBAAA,WACMj6E,KAAK+1D,YACP/1D,KAAK46E,eAAe56E,KAAK+1D,aAI7BqkB,EAAAl6E,UAAA66E,YAAA,SAAYj/D,EAAOsf,GACjB,IAAM4/C,EAA4Bl/D,EAAQ9b,KAAKi7E,sBAE/C,OAAQj7E,KAAKk7E,eAAiBF,EAAoB5/C,EAAe4/C,EAAoB,GAGvFZ,EAAAl6E,UAAAiG,SAAA,SAASg1E,GACP,OAAOn7E,KAAK4J,QAAQkB,cAAckB,cAAcmvE,IAGlDf,EAAAl6E,UAAAs6E,aAAA,WACEx6E,KAAKqU,KAAOrU,KAAK06E,eAAiB16E,KAAK8J,gBAIzCswE,EAAAl6E,UAAAq/C,YAAA,SAAYtf,GACNjgC,KAAK+9C,gBAAkB9d,EAAOn9B,QAChC9C,KAAK+9C,cAAgB9d,EAAOn9B,MAC5B9C,KAAKy6E,cAAc3vE,cAAchI,MAAQm9B,EAAOn9B,MAChD9C,KAAKw/C,gBAAgBvf,EAAOn9B,OAC5B9C,KAAK0lB,aAAeua,EAAOt8B,MAC3B3D,KAAK2uD,SAAS1uB,EAAOn9B,SAKzBs3E,EAAAl6E,UAAAkmD,mBAAA,SAAmBv/C,GAEd7G,KAAKo7E,oBAAoBtwE,cAAcQ,SAASzE,EAAMxF,SACtDrB,KAAKqmD,YAAYv7C,cAAcQ,SAASzE,EAAMxF,SAE/CrB,KAAK06E,gBAKTN,EAAAl6E,UAAAonB,WAAA,SAAWxkB,GACT,IAAMu9C,EAA8BrgD,KAAK66E,gBAAgB/3E,GAErDu9C,GACFrgD,KAAKy6E,cAAc3vE,cAAchI,MAAQu9C,EAAYv9C,MACrD9C,KAAK+9C,cAAgBsC,EAAYv9C,MACjC9C,KAAK0lB,aAAe26B,EAAY18C,MAChC3D,KAAK86E,kBAAkBz6B,EAAYv9C,QAC1BmR,GAAWjU,KAAK+9C,iBACzB/9C,KAAKy6E,cAAc3vE,cAAchI,WAAQqG,EACzCnJ,KAAKw/C,qBAAgBr2C,GACrBnJ,KAAK+9C,mBAAgB50C,EACrBnJ,KAAK0lB,kBAAevc,GAGtBnJ,KAAK+1D,WAAajzD,EAClB9C,KAAKyX,eAAeqc,iBAKdsmD,EAAAl6E,UAAAo6E,mCAAR,WAAA,IAAAh0E,EAAAtG,KACEA,KAAKy6E,cAAc3vE,cAAcpD,MAAMmhC,QAAU,OAEjDh8B,YAAW,WACTvG,EAAKm0E,cAAc3vE,cAAcpD,MAAMmhC,QAAU,QACjDviC,EAAKk0E,mBAIDJ,EAAAl6E,UAAA26E,gBAAR,SAAwB/3E,GAAxB,IAAAwD,EAAAtG,KACE,OAAOA,KAAKs/B,QAAQ70B,MAAK,SAAAw1B,GAAU,OAAA35B,EAAKy4C,QAAQ9e,EAAOn9B,MAAOA,OAGxDs3E,EAAAl6E,UAAA+6E,oBAAR,WACE,IAAMI,EAAar7E,KAAKmG,SAAS,sBAEjC,OAAOk1E,GAAcA,EAAWjgD,cAG1Bg/C,EAAAl6E,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAK8M,iBAAmB9M,KAAK6J,SAASkD,OAAO,WAAY,SAAS,SAAClG,GACjEP,EAAK8/C,mBAAmBv/C,MAG1B7G,KAAKknD,oBAAsBlnD,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAClEzG,EAAKo0E,kBAGPxnE,OAAO+K,iBAAiB,SAAUje,KAAKg6B,UAAU,IAO3CogD,EAAAl6E,UAAA+5B,gBAAR,WACMj6B,KAAK8M,kBACP9M,KAAK8M,mBAGP9M,KAAKknD,sBACLh0C,OAAOyL,oBAAoB,SAAU3e,KAAKg6B,UAAU,IAG9CogD,EAAAl6E,UAAAkiE,oBAAR,WACEpiE,KAAKqjD,gBAAgBtpC,YACnB/Z,KAAKs7E,YAAYxwE,cA1SO,EA4SxB9K,KAAKo7E,oBACL,CAAC,MAAO,WACR,GAGFp7E,KAAKqjD,gBAAgB7pC,eAhTc,WAmT7B4gE,EAAAl6E,UAAA46E,kBAAR,SAA0Bh4E,GACxB,IAAMy4E,EAAav7E,KAAK4J,QAAQkB,cAAckB,cAAc,wBAE5D,GAAIlJ,GAAS9C,KAAKs/B,SAAWt/B,KAAKs/B,QAAQ3+B,OAAQ,CAChD,IAAM0/C,EAA8BrgD,KAAK66E,gBAAgB/3E,GAEzD,GAAIu9C,EAAa,CACf,IAAMvkC,EAAQ9b,KAAKs/B,QAAQt+B,QAAQq/C,GACnCk7B,EAAW53B,UAAY3jD,KAAK+6E,YAAYj/D,EAAOy/D,EAAWngD,iBAKxDg/C,EAAAl6E,UAAA4J,aAAR,WACO9J,KAAK27C,WACR37C,KAAKy6E,cAAc3vE,cAAc2N,QACjCzY,KAAKq6E,WAAa,mBAClBr6E,KAAKmG,SAAS,wBAAwB8oB,UAAUoiC,IAAI,kBACpDrxD,KAAKqU,MAAO,EACZrU,KAAKyX,eAAekjE,eACpB36E,KAAKoiE,sBACLpiE,KAAKq7B,sBAEDr7B,KAAKs/B,SAAWt/B,KAAKs/B,QAAQ3+B,QAC/BX,KAAK86E,kBAAkB96E,KAAK+9C,0DAzQvB7wC,EAAAA,kBACOwK,EAAAA,yBACPzK,EAAAA,uBACQE,EAAAA,iBACQiM,MAZ3BjY,EAAA,CADCg3C,EAAAA,aAAagiC,GAAiC,CAAEl0E,QAAQ,oBACnCk0E,gDAEwCh5E,EAAA,CAA7D4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CACpB/L,EAAA,CAAtD4E,EAAAA,UAAU,OAAQ,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CACX/L,EAAA,CAAxD4E,EAAAA,UAAU,SAAU,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAuBiH,EAAAA,iDACT/L,EAAA,CAA9D4E,EAAAA,UAAU,eAAgB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA6BiH,EAAAA,uDAkB/C/L,EAAA,CAApC2d,EAAAA,aAAa,UAAW,CAAC,kIAtCfs7D,EAAiBoB,EAAAr6E,EAAA,CAlB7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,6lEACA8B,gBAAiBC,EAAAA,wBAAwBC,OACzChB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAq2D,KAC9Bn2D,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAq2D,KAC9Bn2D,OAAO,GAETjM,6BA0BSlM,EAAAA,WACOwK,EAAAA,kBACPzK,EAAAA,gBACQE,EAAAA,UACQiM,MA3BhBghE,IAA0BL,KjB7D3B1Q,GAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAE/BA,GAAA,MAAA,GAAA,QAEAA,GAAAA,GAAA,KAAA,GAAA,WkBJUoS,iBCeZ,SAAAC,IACU17E,KAAAmY,WAAsB,EAG9BnY,KAAA27E,aAAuB,EAgBgB37E,KAAA8+B,WAAqB,EAa5D9+B,KAAA47E,QAAmB,OAUnB57E,KAAA67E,SAAoB,QAcpB77E,KAAA87E,cAAwCzS,EAAAA,sBAAsB0S,MAuB1C/7E,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG5B9H,KAAA++B,cAAoC,IAAIj3B,EAAAA,aAgCnE,OAjFuBtI,OAAAqC,eAAI65E,EAAAx7E,UAAA,aAAU,KAAd,SAAeyD,GAClC3D,KAAK47E,QAAUj4E,GAAS,wCASJnE,OAAAqC,eAAI65E,EAAAx7E,UAAA,cAAW,KAAf,SAAgByD,GACpC3D,KAAK67E,SAAWl4E,GAAS,yCAaAnE,OAAAqC,eAAI65E,EAAAx7E,UAAA,mBAAgB,KAApB,SAAqBgZ,GAC9ClZ,KAAK87E,cAAgB5iE,KAAYmwD,EAAAA,sBAAwBn4D,SAAcgI,EAAU,IAAMmwD,EAAAA,sBAAsB0S,uCAY1Fv8E,OAAAqC,eAAI65E,EAAAx7E,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,oCAapCgjE,EAAAx7E,UAAAq/B,YAAA,SAAYz8B,GACN9C,KAAK27E,cAAgB74E,IACvB9C,KAAK27E,YAAc74E,EAEf9C,KAAKyjB,gBACPzjB,KAAKyjB,gBAAgB3gB,GAErB9C,KAAK++B,cAAc/2B,KAAKlF,GAE1B9C,KAAK2jB,OAAO3b,KAAKhI,KAAK27E,eAI1BD,EAAAx7E,UAAAw5E,WAAA,WACO15E,KAAK0Y,UACR1Y,KAAKu/B,aAAav/B,KAAK27E,cAI3BD,EAAAx7E,UAAA0mB,iBAAA,SAAiBpV,GACfxR,KAAKyjB,gBAAkBjS,GAGzBkqE,EAAAx7E,UAAA2mB,kBAAA,SAAkBrV,KAElBkqE,EAAAx7E,UAAAonB,WAAA,SAAWxkB,GACLA,IAAU9C,KAAK27E,cACjB37E,KAAK27E,cAAgB74E,IAzGV3B,EAAA,CAAd2E,EAAAA,MAAM,4DAagC3E,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAQc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAUe3E,EAAA,CAArB2E,EAAAA,MAAM,wGAcoB3E,EAAA,CAA1B2E,EAAAA,MAAM,kHAac3E,EAAA,CAApB2E,EAAAA,MAAM,sGASa3E,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGJ3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAAiCH,EAAAA,mDAnF9B4zE,EAAqBv6E,EAAA,CADjC4H,EAAAA,aACY2yE,qBCiCX,SAAAM,EAAoBvkE,GAApB,IAAAnR,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,UAiEtB,OApEuC3X,EAAAk8E,EAAAz1E,KAA1By1E,EAOXA,EAAA97E,UAAAugC,mBAAA,WACEzgC,KAAKyX,eAAeqc,iBAGtBkoD,EAAA97E,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAqBTujE,EAAA97E,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKi8E,gBAAgBnxE,cAAc2N,SAIvCujE,EAAA97E,UAAAg8E,iBAAA,WACE,OAAQl8E,KAAK87E,eACX,KAAKzS,EAAAA,sBAAsB8S,KACzB,MAAO,OACT,KAAK9S,EAAAA,sBAAsB0S,MAE3B,QACE,MAAO,UAIbC,EAAA97E,UAAAk8E,kBAAA,WACE,OAAQp8E,KAAK87E,eACX,KAAKzS,EAAAA,sBAAsB8S,KACzB,MAAO,QACT,KAAK9S,EAAAA,sBAAsB0S,MAE3B,QACE,MAAO,SAIbC,EAAA97E,UAAA87B,UAAA,SAAUn1B,GACY,KAAhBA,EAAM4M,OAAkC,KAAlB5M,EAAM2M,UAC9B3M,EAAM+5B,iBACN5gC,KAAK05E,wDA9D2BhiE,EAAAA,qBAFYvW,EAAA,CAA/C4E,EAAAA,UAAU,kBAAmB,CAAEE,QAAQ,oBAAyBiH,EAAAA,mDADtD8uE,EAAiBK,EAAAl7E,EAAA,CAX7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,6tCACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAk3D,KAC9Bh3D,OAAO,6BAOyB3N,EAAAA,qBAHzBskE,IAA0BN,kBC1BvC,SAAAY,IACUt8E,KAAAmY,WAAqB,EAGrBnY,KAAAuuD,WAAqB,EACrBvuD,KAAA6+B,WAAqB,EACrB7+B,KAAAu8E,MAAgB,EAGhBv8E,KAAAuzD,kBAAyB,KAEzBvzD,KAAAwjB,UAAiB,KAccxjB,KAAA8+B,WAAqB,EASpC9+B,KAAAw9C,YAAuB,GA4H7Bx9C,KAAAmpD,KAA2B,IAAIrhD,EAAAA,aAG9B9H,KAAAykD,MAA4B,IAAI38C,EAAAA,aAG/B9H,KAAA2jB,OAA6B,IAAI7b,EAAAA,aAG3B9H,KAAAszD,YAAkC,IAAIxrD,EAAAA,aAsElE,OA7LuBtI,OAAAqC,eAAIy6E,EAAAp8E,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,oCA+BflZ,OAAAqC,eAAIy6E,EAAAp8E,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKuuD,eALO,SAAa5S,GAChC37C,KAAKuuD,UAAY39C,EAAiB+qC,oCAkBfn8C,OAAAqC,eAAIy6E,EAAAp8E,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAK6+B,eAPO,SAAahB,GAChC79B,KAAK6+B,UAAYjuB,EAAiBitB,GAElC79B,KAAKmnB,iDAce3nB,OAAAqC,eAAIy6E,EAAAp8E,UAAA,YAAS,KAKnC,WACE,OAAOF,KAAKyzD,gBANQ,SAAcr1B,GAClCp+B,KAAKyzD,WAAa1iD,EAAaqtB,GAC/Bp+B,KAAKmnB,iDAce3nB,OAAAqC,eAAIy6E,EAAAp8E,UAAA,YAAS,KAKnC,WACE,OAAOF,KAAKwzD,gBANQ,SAAcx1B,GAClCh+B,KAAKwzD,WAAaziD,EAAaitB,GAC/Bh+B,KAAKmnB,iDAgBU3nB,OAAAqC,eAAIy6E,EAAAp8E,UAAA,OAAI,KAGzB,WACE,OAAOF,KAAKu8E,WAJG,SAASz5E,GACxB9C,KAAKu8E,MAAQ1mE,MAAM3E,SAAcpO,EAAO,MAAQA,EAAQ,EAAI,EAAIoO,SAAcpO,EAAO,qCAkBvFw5E,EAAAp8E,UAAA4rD,aAAA,SAAahpD,GAEP9C,KAAKuzD,mBACPvzD,KAAKuzD,kBAAkBzwD,GAGzB9C,KAAK0zD,0BAA0B5wD,IAGjCw5E,EAAAp8E,UAAAwzD,0BAAA,SAA0B5wD,GACpB9C,KAAK4zD,kBAAoB9wD,IAC3B9C,KAAKszD,YAAYtrD,KAAKlF,GACtB9C,KAAK4zD,gBAAkB9wD,IAM3Bw5E,EAAAp8E,UAAA0mB,iBAAA,SAAiBE,GACf9mB,KAAKuzD,kBAAoBzsC,GAG3Bw1D,EAAAp8E,UAAA2mB,kBAAA,SAAkBC,GAChB9mB,KAAKwjB,UAAYsD,GAGnBw1D,EAAAp8E,UAAA6mB,0BAAA,SAA0BD,GACxB9mB,KAAKgnB,gBAAkBF,GAGzBw1D,EAAAp8E,UAAAmnB,SAAA,SAASuY,GACP,OAAIhC,GAAe59B,KAAK69B,SAAU79B,KAAK0Y,SAAUknB,EAAgB98B,OACxD,CACL+6B,SAAU,CACRC,OAAO,IAKTK,GAAen+B,KAAKo+B,UAAWwB,EAAgB98B,OAC1C,CACLs7B,UAAW,CACTN,OAAO,IAKTC,GAAe/9B,KAAKg+B,UAAW4B,EAAgB98B,OAC1C,CACLk7B,UAAW,CACTF,OAAO,SAHb,GAUFw+C,EAAAp8E,UAAAonB,WAAA,SAAWxkB,GACT9C,KAAKk0D,gBAAgBpxD,IAGbw5E,EAAAp8E,UAAAinB,cAAV,WACMnnB,KAAKgnB,iBACPhnB,KAAKgnB,mBA/M8B7lB,EAAA,CAAtC2E,EAAAA,MAAM,gBAAiB63B,+DAGNx8B,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,4DAWc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAqBc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAWc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAmBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAiBe3E,EAAA,CAArB2E,EAAAA,MAAM,sGAgBe3E,EAAA,CAArB2E,EAAAA,MAAM,sGAkBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAQW3E,EAAA,CAAjB8G,EAAAA,OAAO,0BAAiBH,EAAAA,0CAGN3G,EAAA,CAAlB8G,EAAAA,OAAO,2BAAmBH,EAAAA,2CAGP3G,EAAA,CAAnB8G,EAAAA,OAAO,4BAAqBH,EAAAA,4CAGH3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDAvKpBw0E,EAAuBn7E,EAAA,CAD5C4H,EAAAA,aACqBuzE,qBC2BpB,SAAAE,IAAA,IAAAl2E,EACEC,EAAA3F,KAAAZ,OAAOA,YAHTsG,EAAAiuD,YAAsB,UAkFxB,OAtFyCz0D,EAAA08E,EAAAj2E,KAA5Bi2E,EA2BXA,EAAAt8E,UAAAuY,MAAA,WACOzY,KAAK0Y,UACR1Y,KAAKmsD,QAAQrhD,cAAc2N,SAI/B+jE,EAAAt8E,UAAAwK,gBAAA,WACM1K,KAAK8+B,WACP9+B,KAAKyY,SAIT+jE,EAAAt8E,UAAAg0D,gBAAA,SAAgBpxD,GACV9C,KAAKmsD,UAKLnsD,KAAKmsD,QAAQrhD,cAAchI,MAJxBA,GAEgC,IAOnCA,GACF9C,KAAK2jB,OAAO3b,KAAKlF,IAIrB05E,EAAAt8E,UAAAu5D,eAAA,SAAez7B,EAAmBl7B,GAChC,OAAOk7B,GAAal7B,EAAMnC,OAASq9B,EAAYl7B,EAAMiQ,WAAWvC,UAAU,EAAGwtB,GAAal7B,GAG5F05E,EAAAt8E,UAAAs5D,aAAA,SAAa3yD,GACX,IAAM/D,EAAQ9C,KAAKy5D,eAAez5D,KAAKg+B,UAAWn3B,EAAMxF,OAAOyB,OAC/D9C,KAAK8rD,aAAahpD,GAClB9C,KAAKmsD,QAAQrhD,cAAchI,MAAQA,GAGrC05E,EAAAt8E,UAAAw5D,aAAA,WAEE15D,KAAKotD,kBAAoBptD,KAAKmsD,QAAQrhD,cAAchI,MAIpD9C,KAAKykD,MAAMz8C,QAGbw0E,EAAAt8E,UAAAmtD,YAAA,WACErtD,KAAKmpD,KAAKnhD,OACVhI,KAAK0sD,wBAGP8vB,EAAAt8E,UAAAwsD,qBAAA,WACE,IAAMiK,EAAe32D,KAAKmsD,QAAQrhD,cAAchI,MAE5C6zD,IAAiB32D,KAAKotD,mBACxBptD,KAAK2jB,OAAO3b,KAAK2uD,IAlFiCx1D,EAAA,CAArD4E,EAAAA,UAAU,MAAO,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAiBiH,EAAAA,2CADpDsvE,EAAmBC,EAAAt7E,EAAA,CAhB/B+E,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,qkBACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAs3D,KAC9Bp3D,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAs3D,KAC9Bp3D,OAAO,iCAIAm3D,IAA4BF,kBCjBvC,SAAAI,EAAoB7K,EAA8BnJ,GAA9B1oE,KAAA6xE,SAAAA,EAA8B7xE,KAAA0oE,aAAAA,EAN1B1oE,KAAA28E,UAA+B,IAAI70E,EAAAA,aAEpC9H,KAAA48E,SAA8B,IAAI90E,EAAAA,aAEhC9H,KAAAoxE,WAAgC,IAAItpE,EAAAA,aA4I/D,OAxIkD40E,EAAAx8E,UAAAuxE,YAAA,SAAY5qE,GAA5D,IAAAP,EAAAtG,KACE6G,EAAM+5B,iBACN/5B,EAAMm7B,kBAENhiC,KAAK68E,QAAUhwE,YAAW,WAAM,OAAAvG,EAAKq2E,UAAU30E,SAAQ,KAGV00E,EAAAx8E,UAAAwxE,WAAA,SAAW7qE,GACxDA,EAAM+5B,iBACN/5B,EAAMm7B,kBAENr1B,aAAa3M,KAAK68E,SAEb78E,KAAK0Y,UACR1Y,KAAK48E,SAAS50E,QAIyB00E,EAAAx8E,UAAA48E,OAAA,SAAOj2E,GAChDA,EAAM+5B,iBACN/5B,EAAMm7B,kBAENhiC,KAAK+8E,8BAA8Bl2E,GACnC7G,KAAK28E,UAAU30E,QAGT00E,EAAAx8E,UAAA68E,8BAAR,SAAsCl2E,GAAtC,IAAAP,EAAAtG,KACE,IAAKA,KAAK0Y,SAER,GADA1Y,KAAKotE,gBAAkB,EACnBptE,KAAKg9E,oBACPh9E,KAAKi9E,mBAAmBp2E,EAAMq2E,aAAazzE,OAAOrG,MAAK,WACrDkD,EAAK6sE,UAAUtsE,EAAOP,EAAKikE,cAExB,CACL,IAAMA,EAAQvqE,KAAKm9E,aAAat2E,EAAMq2E,aAAa3S,OACnDvqE,KAAKmzE,UAAUtsE,EAAO0jE,KAMdmS,EAAAx8E,UAAAk9E,kBAAd,SAAgCC,oGAC1BA,EAAMC,OACK,CAAA,EAAMt9E,KAAKu9E,SAASF,IAD/B,CAAA,EAAA,UAEF,MAAA,CAAA,EAAO,CADMvnE,EAAAlS,uBAEJy5E,EAAMG,YACR,CAAA,EAAMx9E,KAAKy9E,cAAcJ,IADvB,CAAA,EAAA,UACT,MAAA,CAAA,EAAOvnE,EAAAlS,iCAIG84E,EAAAx8E,UAAA+8E,mBAAd,SAAiCS,2HACzBC,EAAU,OAGhB,IAAmBC,EAAAn5E,EAAAi5E,GAAiBG,EAAAD,EAAA56E,QAAA66E,EAAA16E,KAAA06E,EAAAD,EAAA56E,OAAzB6K,EAAIgwE,EAAA/6E,MACb66E,EAAQn5E,KAAKqJ,EAAKiwE,qHAGpB99E,KAAKuqE,MAAQ,2CACOwT,EAAAt5E,EAAAk5E,GAAOK,EAAAD,EAAA/6E,6CAAhBq6E,EAAKW,EAAAl7E,OACJw6E,QACRt9E,KAAKotE,yBADH,CAAA,EAAA,UAGe,MAAA,CAAA,EAAMptE,KAAKo9E,kBAAkBC,WAAxCY,EAAWC,EAAAt6E,OACjB5D,KAAKuqE,MAAQvqE,KAAKuqE,MAAMvlE,OAAOi5E,uNAM7BvB,EAAAx8E,UAAAi9E,aAAR,SAAqBgB,GAArB,IAAA73E,EAAAtG,KACE,OAAOL,MAAMwM,KAAKgyE,GAAU7xE,QAAO,SAAC2xE,EAAU1U,GAC5C,OAAIA,EAAKj4D,KACA2sE,EAASj5E,OAAOukE,IAEvBjjE,EAAK8mE,kBAEA6Q,KACN,KAGGvB,EAAAx8E,UAAAq9E,SAAR,SAAiBF,GACf,OAAO,IAAI36E,SAAQ,SAAAC,GACjB06E,EAAM9T,MAAK,SAAAA,GACT5mE,EAAQ4mE,UAKAmT,EAAAx8E,UAAAu9E,cAAd,SAA4BJ,uGAKf,OAJLe,EAAYf,EAAMgB,eACpB9T,EAAQ,GAGD,CAAA,EAAMvqE,KAAKs+E,qBAAqBF,WAE3C,OAFAH,EAAWnoE,EAAAlS,OAEX,CAAA,EADA2mE,EAAQA,EAAMvlE,OAAOi5E,YAIfvB,EAAAx8E,UAAAo+E,qBAAR,SAA6BF,GAA7B,IAAA93E,EAAAtG,KACE,OAAO,IAAI0C,SAAQ,SAAAC,GACjBy7E,EAAUG,aAAY,SAAMZ,GAAO,OAAAt7E,EAAAiE,OAAA,OAAA,GAAA,iFAC7BikE,EAAQ,2CACQiU,EAAA/5E,EAAAk5E,GAAOc,EAAAD,EAAAx7E,6CAAhBq6E,EAAKoB,EAAA37E,MACI,CAAA,EAAM9C,KAAKo9E,kBAAkBC,YAAzCqB,EAAYtwC,EAAAxqC,OAClB2mE,EAAQA,EAAMvlE,OAAO05E,4MAEvB/7E,EAAQ4nE,qBAKNmS,EAAAx8E,UAAA6vE,aAAR,SAAqB4O,GACfA,GACF3+E,KAAKizE,iBAAiB,kBAAmB0L,IAIrCjC,EAAAx8E,UAAAizE,UAAR,SAAkBtsE,EAAO0jE,GACvB,GAAIvqE,KAAKwxE,YAAYlmE,SAASzE,EAAMxF,QAC9BkpE,EAAM5pE,OAAS,GACjBX,KAAKoxE,WAAWppE,KAAKuiE,GAGvBvqE,KAAK+vE,aAAa/vE,KAAKotE,qBAClB,CACL,IAAMwR,EAAqB5+E,KAAKg9E,oBAAsBh9E,KAAK43B,SAAS00C,QAAUtsE,KAAK43B,SAAS2yC,MAC5FvqE,KAAKizE,iBAAiB,kBAAmB2L,KAKrClC,EAAAx8E,UAAA+yE,iBAAR,SAAyBW,EAA2BjsC,GAClD,IAAMmsC,EAAgB9zE,KAAK6xE,SAASnqC,UAAU1nC,KAAK43B,SAASg8C,GAAoBjsC,GAChF3nC,KAAK0oE,aAAaI,YAAYgL,6CAxIF/rC,UAAkCmhC,MAdvC/nE,EAAA,CAAxB2E,EAAAA,MAAM,kCAA+B+4E,gDAEL19E,EAAA,CAAhC2E,EAAAA,MAAM,8FAEc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEiB3E,EAAA,CAAvB8G,EAAAA,OAAO,gCAA2BH,EAAAA,+CAEZ3G,EAAA,CAAtB8G,EAAAA,OAAO,+BAAyBH,EAAAA,8CAER3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAA6BH,EAAAA,gDAIW3G,EAAA,CAA/C2d,EAAAA,aAAa,qBAAsB,CAAC,oIAOU3d,EAAA,CAA9C2d,EAAAA,aAAa,oBAAqB,CAAC,mIAWO3d,EAAA,CAA1C2d,EAAAA,aAAa,gBAAiB,CAAC,+HAxCrB49D,EAAyBv7E,EAAA,CAJrC4H,EAAAA,UAAU,CACT5C,SAAU,uBACViB,UAAW,CAAC2gC,6BAsBkBA,GAAkCmhC,MApBrDwT,oBCsBX,SAAAoC,EAAoBj1E,GAAA7J,KAAA6J,SAAAA,EAFM7J,KAAAwxE,YAAiC,IAAI1pE,EAAAA,aAqBjE,OAjBEg3E,EAAA5+E,UAAAwK,gBAAA,WACM1K,KAAKqB,QACPrB,KAAKu7B,YAAYv7B,KAAKqB,QAExBrB,KAAKwxE,YAAYxpE,KAAKhI,KAAK++E,kBAAkBj0E,gBAGvCg0E,EAAA5+E,UAAAq7B,YAAR,SAAoBthB,GAApB,IAAA3T,EAAAtG,KACQg/E,EAAqB/kE,EAAcnP,cAAc8Q,wBAChC,CAAC,SAAU,OAAQ,SAAU,QAAS,MAAO,SAErD8D,SAAQ,SAAAu/D,GACrB,IAAMC,EAAkBF,EAAmBC,GAE3C34E,EAAKuD,SAASulB,SAAS9oB,EAAKy4E,kBAAkBj0E,cAAem0E,EAAkBC,EAAe,mDAhBpE/xE,EAAAA,aAZsChM,EAAA,CAAnE4E,EAAAA,UAAU,oBAAqB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA2BiH,EAAAA,qDAEtD/L,EAAA,CAAhC2E,EAAAA,MAAM,8FAEc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBoH,EAAAA,0CAED/L,EAAA,CAAzB8G,EAAAA,OAAO,kCAA+BH,EAAAA,iDAX5Bg3E,EAAoC39E,EAAA,CALhD+E,EAAAA,UAAU,CACTC,SAAU,mCACVC,SAAA,wTACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAeX+E,EAAAA,aAbnB2xE,oBC6BX,SAAAK,EAAoB1nE,GAAAzX,KAAAyX,eAAAA,EAyBtB,OAvDiCjY,OAAAqC,eAAIs9E,EAAAj/E,UAAA,oBAAiB,KAIpD,WACE,OAAOF,KAAK4wE,wBALiB,SAAsB9tE,GACnD9C,KAAK4wE,mBAAqB5wE,KAAKo/E,wBAA6Bt8E,oCASpCtD,OAAAqC,eAAIs9E,EAAAj/E,UAAA,cAAW,KAIzC,WACE,OAAOF,KAAKq/E,kBALY,SAAgBv8E,GACxC9C,KAAKq/E,aAAe5vE,EAAiB3M,oCAObtD,OAAAqC,eAAIs9E,EAAAj/E,UAAA,cAAW,KAIzC,WACE,OAAOF,KAAKs/E,kBALY,SAAgBx8E,GACxC9C,KAAKs/E,aAAe7vE,EAAiB3M,oCAOvCtD,OAAAqC,eAAIs9E,EAAAj/E,UAAA,WAAQ,KAAZ,WACE,OAAOqP,qCAKT4vE,EAAAj/E,UAAA+I,SAAA,WACEjJ,KAAKu/E,eAGCJ,EAAAj/E,UAAAk/E,wBAAR,SAAgCpP,GAG9B,OAAOA,EACHA,EACGviD,KAAK,MACLjY,cACAhB,QAAQ,cAAe,IANV,CAAEwC,GAAM,IAAKH,GAAM,MAAOE,GAAM,KAMN/W,KAAKmQ,gBAC/ChH,GAGEg2E,EAAAj/E,UAAAq/E,YAAR,WACEv/E,KAAK43B,SAAQx3B,EAAAA,EAAA,GACRisE,GAAuC,IACvCA,GAAwBrsE,KAAKmQ,WAGlCnQ,KAAKyX,eAAeqc,0DAvBcpc,EAAAA,qBA9BLvW,EAAA,CAA9B2E,EAAAA,MAAM,uHAQe3E,EAAA,CAArB2E,EAAAA,MAAM,uEAEmB3E,EAAA,CAAzB2E,EAAAA,MAAM,4GAQmB3E,EAAA,CAAzB2E,EAAAA,MAAM,4GAzBIq5E,EAAiCh+E,EAAA,CAL7C+E,EAAAA,UAAU,CACTC,SAAU,8BACVC,SAAA,4uBACA8B,gBAAiBC,EAAAA,wBAAwBC,gCAuCLsP,EAAAA,qBArCzBynE,qBCuDX,SAAAK,EAAYj0D,GAAZ,IAAAjlB,EACEC,EAAA3F,KAAAZ,KAAMurB,IAAGvrB,YApBXsG,EAAAu1B,KAAO,gBAEPv1B,EAAA03B,UAAoB,IAEpB13B,EAAAgL,KAAO,MAEPhL,EAAAqhD,QACE,uLAOFrhD,EAAAihD,KAAO,GAECjhD,EAAAyzD,SAAWzzD,EAAKqzD,0BAA0Bz3C,KAAK5b,WA0BzD,OA3CoCxG,EAAA0/E,EAAAj5E,KAAvBi5E,EAwBXA,EAAAt/E,UAAAwK,gBAAA,WAAA,IAAApE,EAAAtG,KAEE6M,YAAW,WACJvG,EAAKitD,mBACRjtD,EAAK6lD,QAAQrhD,cAAcmT,iBAAiB,QAAS3X,EAAKyzD,aAG9DxzD,EAAArG,UAAMwK,gBAAe9J,KAAAZ,OAGvBw/E,EAAAt/E,UAAAuG,YAAA,WACOzG,KAAKuzD,mBACRvzD,KAAKmsD,QAAQrhD,cAAc6T,oBAAoB,QAAS3e,KAAK+5D,WAIjEylB,EAAAt/E,UAAA+zD,gBAAA,SAAgBzyD,GACd,OAAO,+CArBO0L,EAAAA,cApBLsyE,EAAcC,EAAAt+E,EAAA,CAhB1B+E,EAAAA,UAAU,CACTC,SAAU,SACVC,SAAA,2kCACAgB,UAAW,CACT,CACE4d,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAs6D,KAC9Bp6D,OAAO,GAET,CACEL,QAASM,EAAAA,cACTJ,YAAaC,EAAAA,YAAW,WAAM,OAAAs6D,KAC9Bp6D,OAAO,6BAwBKnY,EAAAA,cApBLsyE,IAAuBlmB,kBCqGpC,SAAAomB,KAA4B,OAAfA,EAAav+E,EAAA,CAnFzBmH,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAy4B,EAAAA,YACA0+C,EAAAA,iBACAr/D,GACA1H,GACAooB,GACAtK,GACAW,GACAqF,GACA1kB,GACA6qB,GACAmB,GACA6F,GACA8P,GACA56B,IAEFrW,QAAS,CACPwzC,GACAlb,GACA4a,GACAwH,GACAD,GACAgR,GACAnI,GACA0D,GACAoK,GACAue,GACApe,GACA4D,GACAX,GACA4D,GACA6X,GACAM,GACAQ,GACA1S,GACAqT,GACAD,GACA6B,GACAQ,GACA5K,GACA4N,IAEF/2E,aAAc,CACZ2c,GACAw2B,GACAM,GACAkH,GACAD,GACAgR,GACAnI,GACA0D,GACAoK,GACAue,GACApe,GACA4D,GACAX,GACA4D,GACAjC,GACA0D,GACA5D,GACAga,GACAM,GACAQ,GACA/W,GACAqE,GACAqN,GACA+C,GACAiD,GACAD,GACA6B,GACAQ,GACA5K,GACAX,GACAyL,GACAoC,GACA/N,GACAoO,GACAK,IAEFp4E,UAAW,MAEAs4E,OT5IDjE,GAAAA,EAAAA,oBAAAA,EAAAA,kBAAiB,KAE3B,WAAA,aAGAA,GAAA,SAAA,WURF,ICGYmE,GCAAC,GFHNC,GAA2BrE,EAAAA,kBAAkBsE,uBAGnD,SAAAC,IAEUhgF,KAAAigF,aAAkCH,GAE1B9/E,KAAAkgF,kBAAoBzE,EAAAA,kBA6DtC,OA3CyBj8E,OAAAqC,eAAIm+E,EAAA9/E,UAAA,YAAS,KAUpC,WACE,OAAOF,KAAKmgF,gBAXS,SAAcr9E,GAC/B+S,MAAM3E,SAAcpO,EAAO,KAC7B9C,KAAKmgF,gBAAah3E,GAElBrG,EAAQoO,SAAcpO,EAAO,IAE7B9C,KAAKmgF,WAAar9E,EAAQ,GAAKA,EAAQ,QAAKqG,EAAYrG,oCAmBpCtD,OAAAqC,eAAIm+E,EAAA9/E,UAAA,cAAW,KAGvC,WACE,OAAOF,KAAKigF,kBAJU,SAAgBn9E,GACtC9C,KAAKigF,aAAqBzgF,OAAQ4f,OAAOq8D,EAAAA,mBAAmB3yE,SAAShG,GAASA,EAAQg9E,oCAzCtE3+E,EAAA,CAAjB2E,EAAAA,MAAM,gEAegB3E,EAAA,CAAtB2E,EAAAA,MAAM,uGAyBiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GAcS3E,EAAA,CAAf2E,EAAAA,MAAM,4DAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAhEIk6E,EAAmB7+E,EAAA,CAD/B4H,EAAAA,aACYi3E,qBGwBb,SAAAI,mDAIA,OAJqCtgF,EAAAsgF,EAAA75E,GACnC/G,OAAAqC,eAAIu+E,EAAAlgF,UAAA,iBAAc,KAAlB,WACE,OAAOgU,GAAelU,KAAK2N,sCAFlByyE,EAAej/E,EAAA,CAL3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,+6CACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9Bg4E,IAAwBJ,kBCdrC,SAAAK,KAA2B,OAAdA,EAAYl/E,EAAA,CAPxBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,cACxB5G,aAAc,CAAC23E,IACf13E,QAAS,CAAC03E,IACVh5E,UAAW,GACXu0B,QAAS,MAEE0kD,OHVDT,GAAAA,EAAAA,mBAAAA,EAAAA,iBAAgB,KAE1B,WAAA,aAGAA,GAAA,SAAA,YCLUC,GAAAA,EAAAA,YAAAA,EAAAA,UAAS,KAEnB,OAAA,SAGAA,GAAA,KAAA,OAGAA,GAAA,QAAA,UAGAA,GAAA,QAAA,UGTF,ICFYS,GDENC,GAAoB/gF,OAAQ4f,OAAO2jB,IACnCy9C,GAA0BZ,EAAAA,iBAAiBG,uBAcjD,SAAAU,IAIUzgF,KAAAigF,aAAkCO,GAG1BxgF,KAAA0gF,iBAAmBd,EAAAA,iBA+IhB5/E,KAAAuY,MAA4B,IAAIzQ,EAAAA,aACrD,OAvHoBtI,OAAAqC,eAAI4+E,EAAAvgF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAK2gF,YALI,SAAU79E,GAC1B9C,KAAK2gF,OAASJ,GAAYz3E,SAAShG,GAASA,OAAQqG,mCAwBrC3J,OAAAqC,eAAI4+E,EAAAvgF,UAAA,OAAI,KAQzB,WACE,OAAOF,KAAK4gF,WATG,SAAS99E,GACpB9C,KAAKsR,KACPtR,KAAK4gF,MAAQhwE,EAAiB9N,GAE9B9C,KAAK4gF,MAAQ99E,mCAoBGtD,OAAAqC,eAAI4+E,EAAAvgF,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAK6gF,cALM,SAAY/9E,GAC9B9C,KAAK6gF,SAAWjwE,EAAiB9N,oCAyBXtD,OAAAqC,eAAI4+E,EAAAvgF,UAAA,cAAW,KAIvC,WACE,OAAOF,KAAKigF,kBALU,SAAgBn9E,GACtC9C,KAAKigF,aAAqBzgF,OAAQ4f,OAAOwgE,EAAAA,kBAAkB92E,SAAShG,GAASA,EAAQ09E,oCAwBtEhhF,OAAAqC,eAAI4+E,EAAAvgF,UAAA,OAAI,KAIzB,WACE,OAAOF,KAAKsY,WALG,SAASxV,GACxB9C,KAAKsY,MAAc9Y,OAAQ4f,OAAOygE,EAAAA,WAAW/2E,SAAShG,GAASA,OAAQqG,mCArGvDhI,EAAA,CAAjB2E,EAAAA,MAAM,8FAyBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAwBa3E,EAAA,CAAnB2E,EAAAA,MAAM,oGAeW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAWiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GAyBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEASY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAmBH,EAAAA,2CAtJhB24E,EAAkBt/E,EAAA,CAD9B4H,EAAAA,aACY03E,OCjBb,SAAYH,GAEVA,EAAA,OAAA,gBAGAA,EAAA,KAAA,eAGAA,EAAA,QAAA,aAGAA,EAAA,QAAA,kBAXF,CAAYA,KAAAA,GAAS,KCArB,ICAYQ,GDANC,GAAmB,UAAYlB,EAAAA,UAAUmB,oBA2B/C,SAAAC,mDAqDA,OArDoCnhF,EAAAmhF,EAAA16E,GAGlC06E,EAAA/gF,UAAA+I,SAAA,WACEjJ,KAAKksC,YAAclsC,KAAKuY,MAAMirB,UAAU7iC,OAAS,GAGnDnB,OAAAqC,eAAIo/E,EAAA/gF,UAAA,eAAY,KAAhB,WACE,OAAQF,KAAKsR,MACX,KAAKuuE,EAAAA,UAAUqB,OACb,OAAOZ,GAAUY,OAEnB,KAAKrB,EAAAA,UAAUmB,KACb,OAAOV,GAAUU,KAEnB,KAAKnB,EAAAA,UAAUp8C,QACb,OAAO68C,GAAU78C,QAEnB,KAAKo8C,EAAAA,UAAUx2C,QACb,OAAOi3C,GAAUj3C,0CAIvB7pC,OAAAqC,eAAIo/E,EAAA/gF,UAAA,iBAAc,KAAlB,WACE,MAA4B,iBAAdF,KAAK67B,sCAGrBr8B,OAAAqC,eAAIo/E,EAAA/gF,UAAA,WAAQ,KAAZ,WACE,OAAIF,KAAKsR,KACAtR,KAAKmhF,QAAU,UAAUnhF,KAAKsR,KAAI,WAAa,UAAUtR,KAAKsR,KAGnEtR,KAAK8tB,MACA9tB,KAAKmhF,QAAU,WAAWnhF,KAAK8tB,MAAU,MAAM9tB,KAAK8tB,MAGtD9tB,KAAKmhF,QAAaJ,GAAgB,WAAaA,oCAGxDvhF,OAAAqC,eAAIo/E,EAAA/gF,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKmoC,cAAgBnoC,KAAK0gF,iBAAiBU,4CAGpDH,EAAA/gF,UAAA6H,QAAA,WACE,IAAMs5E,EAA8B,CAAEv+E,MAAO9C,KAAK8C,MAAOwO,KAAMtR,KAAKsR,MACpEtR,KAAKuY,MAAMvQ,KAAKq5E,IAGlBJ,EAAA/gF,UAAAohF,aAAA,SAAaz6E,GACXA,EAAM+5B,iBACN/5B,EAAMm7B,kBACNhiC,KAAK+H,WAnDIk5E,EAAc9/E,EAAA,CAL1B+E,EAAAA,UAAU,CACTC,SAAU,SACVC,SAAA,uyBACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9B64E,IAAuBR,kBEjBpC,SAAAc,KAA0B,OAAbA,EAAWpgF,EAAA,CAPvBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACw4E,IACfv4E,QAAS,CAACu4E,IACV75E,UAAW,GACXu0B,QAAS,MAEE4lD,oBCDb,SAAAC,IACUxhF,KAAAyhF,YAAuB,EAyGbzhF,KAAA0hF,WAAmC,IAAI55E,EAAAA,aAmG3D,OAjFyBtI,OAAAqC,eAAI2/E,EAAAthF,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKyhF,gBALS,SAAc3+E,GACnC9C,KAAKyhF,WAA4B,KAAV3+E,GAAsB8N,EAAiB9N,oCAnHzC3B,EAAA,CAAtB2E,EAAAA,MAAM,yEAgCY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBnG,qCAUTwB,EAAA,CAAjB2E,EAAAA,MAAM,gEAsDW3E,EAAA,CAAjB8G,EAAAA,OAAO,0BAAsBH,EAAAA,gDAkBP3G,EAAA,CAAtB2E,EAAAA,MAAM,yGAwCU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAwCc3E,EAAA,CAApB2E,EAAAA,MAAM,sEA5MI07E,EAA0BrgF,EAAA,CADtC4H,EAAAA,aACYy4E,oBCRX,SAAAG,EAAoBp0E,GAAAvN,KAAAuN,KAAAA,EAmBtB,OAjBYo0E,EAAAzhF,UAAA0hF,QAAV,SAAkBtnD,EAA2B5oB,GAC3C,MAAyB,iBAAX4oB,EAAsBt6B,KAAKmO,KAAKmsB,EAAQ5oB,GAASmwE,EAAAA,GAAGvnD,EAAO5oB,KAGjEiwE,EAAAzhF,UAAAiO,KAAV,SAAeR,EAAarK,GAC1B,OAAOtD,KAAKuN,KAAKY,KAAKR,EAAKrK,IAGnBq+E,EAAAzhF,UAAA4hF,sBAAV,SAAgCC,GAC9B,OACEA,GAAkB,CAChBj/E,MAAO,GACPk/E,OAAQ,GACRvpE,WAAOtP,IAIfw4E,oBCjBE,SAAAM,EAAY10E,UACVhH,EAAA3F,KAAAZ,KAAMuN,IAAKvN,KAwBf,OA1B8CF,EAAAmiF,EAAA17E,GAK5C07E,EAAA/hF,UAAAgiF,0BAAA,SAA0BC,EAA8CH,GACtE,YADwB,IAAAG,IAAAA,EAAA,SAA8C,IAAAH,IAAAA,EAAA,IAC/Dj9E,EAAIo9E,GAAc71E,QACvB,SAAC81E,EAAeC,GACd,IAAMvmE,EAAQsmE,EAAcvuE,WAAU,SAAAyuE,GAAgB,OAAAA,EAAarrD,WAAaorD,EAAMprD,YAStF,OARoBnb,GAAS,EAG3BsmE,EAActmE,GAAM1b,EAAAA,EAAA,GAAQ4hF,EAAOlmE,IAAWumE,GAE9CD,EAAc59E,KAAK69E,GAGdD,IACRr9E,EACGi9E,KAIRC,EAAA/hF,UAAAqiF,YAAA,SAAYC,EAAyB1/E,GAArC,IAAAwD,EAAAtG,KACE,OAAOA,KAAK4hF,QAAQY,EAAM1/E,GAAOigD,KAAK32C,EAAAA,KAAI,SAAAq2E,GAAmB,OAAAn8E,EAAKw7E,sBAAsBW,iDAvBxEl0E,EAAAA,cADP0zE,EAAwB9gF,EAAA,CADpCqE,EAAAA,oCAEmB+I,EAAAA,cADP0zE,IAAiCN,mBCI5C,SAAAe,EAAYn1E,UACVhH,EAAA3F,KAAAZ,KAAMuN,IAAKvN,KA4Cf,OA9CoDF,EAAA4iF,EAAAn8E,GAKlDm8E,EAAAxiF,UAAAyiF,gBAAA,SAAgBN,EAA2Bv/E,GAA3C,IAAAwD,EAAAtG,KACQu5E,EAA0C,CAAEtiD,SAAUorD,EAAMprD,SAAUn0B,MAAKA,GAEjF,OAAO9C,KAAK4hF,QAAQS,EAAMh7D,SAAUkyD,GAAcx2B,KAChD32C,EAAAA,KAAI,SAAA21E,GAAkB,OAAAz7E,EAAKs8E,uBAAuBb,QAItDW,EAAAxiF,UAAA2iF,eAAA,SACEx7D,EACAg7D,EACAv/E,GAHF,IAAAwD,EAAAtG,KAKQu5E,EAA0C,CAAEtiD,SAAUorD,EAAMprD,SAAUn0B,MAAKA,GAEjF,OAAO9C,KAAK4hF,QAAQv6D,EAAUkyD,GAAcx2B,KAAK32C,EAAAA,KAAI,SAAA21E,GAAkB,OAAAz7E,EAAKw7E,sBAAsBC,QAGpGW,EAAAxiF,UAAA4iF,iBAAA,SAAiBC,EAAiDf,GAChE,YADe,IAAAe,IAAAA,EAAA,SAAiD,IAAAf,IAAAA,EAAA,IACzDj9E,EAAIg+E,GAAiBz2E,QAC1B,SAAC81E,EAAeY,GACd,IAAMlnE,EAAQsmE,EAAcvuE,WAAU,SAAAwuE,GAAS,OAAAA,EAAMprD,WAAa+rD,EAAe/rD,YAOjF,OANoBnb,GAAS,IAG3BsmE,EAActmE,GAAM1b,EAAAA,EAAA,GAAQ4hF,EAAOlmE,IAAWknE,IAGzCZ,IACRr9E,EACGi9E,KAIAU,EAAAxiF,UAAA0iF,uBAAR,SAA+Bb,GAC7B,OACEA,GAAkB,CAChBM,MAAO,8CAzCK9zE,EAAAA,cADPm0E,EAA8BvhF,EAAA,CAD1CqE,EAAAA,oCAEmB+I,EAAAA,cADPm0E,IAAuCf,mBC4ClD,SAAAsB,EACU71C,EACA81C,EACAC,GAHV,IAAA78E,EAKEC,EAAA3F,KAAAZ,OAAOA,YAJCsG,EAAA8mC,QAAAA,EACA9mC,EAAA48E,YAAAA,EACA58E,EAAA68E,kBAAAA,IA6HZ,OAvJ4CrjF,EAAAmjF,EAAA18E,GAQhB/G,OAAAqC,eAAIohF,EAAA/iF,UAAA,OAAI,KASlC,WACE,OAAOF,KAAKojF,OAAc,QAVF,SAAStgF,GAAnC,IAAAwD,EAAAtG,KAEE6M,YAAW,WACTvG,EAAK88E,MAAQtgF,EAEbwD,EAAK+8E,+CAkBTJ,EAAA/iF,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGPgpD,EAAA/iF,UAAA+I,SAAA,WACMjJ,KAAKwiF,MACPxiF,KAAKsjF,wBAgCTL,EAAA/iF,UAAAuY,MAAA,SAAMwe,GACJj3B,KAAKujF,gBAAgB9qE,MAAMwe,IAG7BgsD,EAAA/iF,UAAAsjF,aAAA,SAAanB,GAAb,IAAA/7E,EAAAtG,KACQyjF,EAAuBj0D,SAAS+S,cAEtCviC,KAAK0jF,aAAY,GAGjB1jF,KAAK2jF,qBAAuB3jF,KAAKmjF,kBAC9BN,eAAe7iF,KAAKqnB,SAAUg7D,EAAOriF,KAAK8C,OAC1CkE,UAAUhH,KAAK4jF,oBAAoBH,IAJZ,WAAM,OAAAn9E,EAAKo9E,aAAY,OAO3CT,EAAA/iF,UAAA2jF,uBAAR,SAA+BJ,GAA/B,IAAAn9E,EAAAtG,KACE,OAAO,SAAA8jF,GACLx9E,EAAKy9E,kBAAkBD,GACvBx9E,EAAKo9E,aAAY,GACjBp9E,EAAK09E,0BAA0BF,EAAgBrrE,MAAOgrE,KAIlDR,EAAA/iF,UAAA0jF,oBAAR,SAA4BH,GAA5B,IAAAn9E,EAAAtG,KACE,OAAO,SAAA8jF,GACLx9E,EAAK29E,0BAA0BH,GAC/Bx9E,EAAKo9E,aAAY,GACjBp9E,EAAK09E,0BAA0BF,EAAgBrrE,MAAOgrE,KAIlDR,EAAA/iF,UAAAwjF,YAAR,SAAoB5gF,GAClB9C,KAAKkkF,aAAephF,EACpB9C,KAAKotC,QAAQtZ,iBAGPmvD,EAAA/iF,UAAAmjF,SAAR,YACOrjF,KAAKmkF,WAAankF,KAAK0hF,WAAWl+C,UAAU7iC,QAC/CX,KAAK0hF,WAAW15E,KAAKhI,KAAKokF,OAItBnB,EAAA/iF,UAAAojF,qBAAR,WAAA,IAAAh9E,EAAAtG,KACQyjF,EAAuBj0D,SAAS+S,cAEtCviC,KAAKkkF,cAAe,EAGpBlkF,KAAKqkF,mBAAqBrkF,KAAKkjF,YAC5BX,YAAYviF,KAAKwiF,KAAMxiF,KAAK8C,OAC5BkE,UAAUhH,KAAK6jF,uBAAuBJ,IAJrB,WAAM,OAACn9E,EAAK49E,cAAe,MAOzCjB,EAAA/iF,UAAA+5B,gBAAR,WACMj6B,KAAKqkF,oBACPrkF,KAAKqkF,mBAAmB19E,cAGtB3G,KAAK2jF,sBACP3jF,KAAK2jF,qBAAqBh9E,eAItBs8E,EAAA/iF,UAAA8jF,0BAAR,SAAkC/sD,EAAkBwsD,GAApD,IAAAn9E,EAAAtG,KACMi3B,EAGFpqB,YAAW,WAAM,OAAAvG,EAAKmS,MAAMwe,MAE5BwsD,EAA4B,SAIxBR,EAAA/iF,UAAA6jF,kBAAR,SAA0BO,GACxB9kF,OAAOa,OAAOL,KAAK8C,MAAOwhF,EAAexhF,OACzC9C,KAAKgiF,OAAShiF,KAAKkjF,YAAYhB,0BAA0BoC,EAAetC,OAAQhiF,KAAKgiF,SAG/EiB,EAAA/iF,UAAA+jF,0BAAR,SAAkCnZ,GAChCtrE,OAAOa,OAAOL,KAAK8C,MAAOgoE,EAAShoE,OACnC9C,KAAKgiF,OAAShiF,KAAKmjF,kBAAkBL,iBAAiBhY,EAASkX,OAAQhiF,KAAKgiF,kDA7H3DtqE,EAAAA,yBACIuqE,UACMS,MAlBHvhF,EAAA,CAAzB4E,EAAAA,UAAU,+BAA+BmxE,EAAAA,+BAAAA,EAAAA,mCAaZ/1E,EAAA,CAA7B4E,EAAAA,UAAU,kFArBAk9E,EAAsB9hF,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,usBA0BmBsR,EAAAA,kBACIuqE,GACMS,MA1BlBO,IAA+BzB,aC/B5B+C,GAAsBC,EAAW9lD,EAAW+lD,EAAWC,EAAWC,GAQhF,MAAO,UANDH,GAAaG,GAAe,IAML,WALvBjmD,GAAaimD,GAAe,GAKkB,WAJ9CF,GAAaE,GAAe,GAIyC,WAHrED,GAAaC,GAAe,YAMpBC,GAAevC,GAG7B,QAFwB,YAAaA,IAEZA,EAAMr0C,SPTrB8yC,GAAAA,EAAAA,qBAAAA,EAAAA,mBAAkB,KAE5B,QAAA,UAGAA,GAAA,SAAA,WAGAA,GAAA,KAAA,OAGAA,GAAA,SAAA,WAGAA,GAAA,KAAA,OAGAA,GAAA,OAAA,SAGAA,GAAA,OAAA,aQlBU+D,iBCoCV,SAAAC,EAAoBC,GAAA/kF,KAAA+kF,cAAAA,EAhCZ/kF,KAAAijC,OAAe,GAEvBjjC,KAAAglF,cAAmD,GAazBhlF,KAAAilF,aAAe,IAAIn9E,EAAAA,aAelB9H,KAAAklF,aAAe,IAAIp9E,EAAAA,aAkLhD,OAzMqBtI,OAAAqC,eAAIijF,EAAA5kF,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmlF,aALK,SAAWriF,GAC5B9C,KAAKmlF,QAAUxlF,MAAMqW,QAAQlT,GAAMiC,EAAOjC,GAAS,oCAUnCtD,OAAAqC,eAAIijF,EAAA5kF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKijC,YALI,SAAUngC,GAC1B9C,KAAKijC,OAASngC,GAASsO,EAAStO,EAAO,UAAYA,EAAQ,oCAe7DgiF,EAAA5kF,UAAAklF,UAAA,SAAUtiF,EAAOsiF,GACf,OAAOtiF,IAAUsiF,GAITN,EAAA5kF,UAAAmlF,iBAAV,WAAA,IAAA/+E,EAAAtG,KACQglF,EAAgB,GAoBtB,OAlBAhlF,KAAKgiF,OAAOtiE,SAAQ,SAAA2iE,GACd/7E,EAAKg/E,eAAeN,EAAe3C,EAAMprD,UAC3C3wB,EAAKi/E,WACH,+BAA+BlD,EAAMprD,SAAQ,oDAK5CorD,EAAgB,SAKjBuC,GAAevC,IACjB2C,EAAcxgF,KAAK8B,EAAKk/E,YAAYnD,IALpC/7E,EAAKi/E,WAAW,oEASbP,GAIDF,EAAA5kF,UAAAulF,eAAR,SAAuBnmD,GAGrB,OAF0BA,EAAQa,OAAM,SAAAF,GAAU,MAAkB,iBAAXA,KAGhDX,EAAQlzB,KAAI,SAAAtJ,GAAS,MAAA,CAAGa,MAAOb,EAAOA,MAAKA,MAG7Cw8B,GAIDwlD,EAAA5kF,UAAAslF,YAAR,SAAoBnD,GAClB,IAAMpzB,EAAUjvD,KAAK0lF,oBAAoBrD,GACnC/iD,EAAY+iD,EAAM/iD,QAAUt/B,KAAKylF,eAAepD,EAAM/iD,cAAWn2B,EACjEsP,EAAQzY,KAAK2lF,SAAStD,GAEtBuD,EAAiBrB,GACrBlC,EAAMwD,cACNxD,EAAMyD,cACNzD,EAAM0D,cACN1D,EAAM2D,cACN3D,EAAMsC,aAGR,OAAAvkF,EAAAA,EAAA,CACEuD,MAAO3D,KAAK+kF,cAAcr9C,UAAU26C,EAAMprD,WACvCorD,GAAK,CACRuD,eAAcA,EACd32B,QAAOA,EACPx2C,MAAKA,EACL6mB,QAAOA,KAIHwlD,EAAA5kF,UAAAolF,eAAR,SAAuBtD,EAAmC/qD,GACxD,OAAO+qD,EAAOppD,MAAK,SAAAypD,GACjB,OAAOA,EAAMprD,WAAaA,MAKtB6tD,EAAA5kF,UAAAwlF,oBAAR,SAA4BrD,QAAA,IAAAA,IAAAA,EAAiC,IAC3D,IAAM/wE,EAAO+wE,GAASA,EAAM/wE,KAAO+wE,EAAM/wE,KAAK20E,oBAAsB,SAEpE,OAAIjmF,KAAKkmF,aAAa7D,EAAO/wE,GACpB,SACEtR,KAAKmmF,eAAe9D,EAAO/wE,GAC7B,UACEtR,KAAKomF,SAAS/D,GAChB,SACEriF,KAAKqmF,aAAahE,GACpB,aACEriF,KAAKsmF,gBAAgBjE,GACvB,gBACEriF,KAAKumF,cAAclE,GACrB,cACEriF,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmB0F,SAC1C,SACExmF,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmB3uE,OAASnS,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmB2F,UAC3F,aACEzmF,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmB4F,OACjDrE,EAAM96B,KAAO86B,EAAM96B,MAAQ,QAEpB,SACEvnD,KAAK2mF,QAAQtE,GACf,QACEriF,KAAK4mF,SAASvE,GAChB,SACEriF,KAAK6mF,WAAWxE,GAClB,WACEriF,KAAK8mF,WAAWzE,GAClB,WAGF,SAGDyC,EAAA5kF,UAAAylF,SAAR,SAAiBtD,GACf,QAASriF,KAAK8+B,WAAa9+B,KAAK8+B,YAAcujD,EAAMprD,UAG9C6tD,EAAA5kF,UAAAomF,gBAAR,SAAwBjE,GACd,IAAA0E,EAAA1E,EAAA0E,eAAgBC,EAAA3E,EAAA2E,aAAc1nD,EAAA+iD,EAAA/iD,QAEtC,OAAQynD,GAAkBC,KAAkB1nD,GAAWA,EAAQ3+B,QAAU,GAGnEmkF,EAAA5kF,UAAAymF,QAAR,SAAgBtE,GACN,IAAA0E,EAAA1E,EAAA0E,eAER,QAASA,GAAkB31E,EAAS21E,EAAgB,WAG9CjC,EAAA5kF,UAAAimF,eAAR,SAAuB9D,EAA2B/wE,GACxC,IAAAi2C,EAAA86B,EAAA96B,KAAMI,EAAA06B,EAAA16B,QAEd,OAAO3nD,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmBmG,YAAc1/B,IAASI,GAGhEm9B,EAAA5kF,UAAA0mF,SAAR,SAAiBvE,GACP,IAAA6E,EAAA7E,EAAA6E,cAER,QAASA,GAAiB91E,EAAS81E,EAAe,WAG5CpC,EAAA5kF,UAAAqmF,cAAR,SAAsBlE,GACZ,IAAA0E,EAAA1E,EAAA0E,eAAgBC,EAAA3E,EAAA2E,aAAc1nD,EAAA+iD,EAAA/iD,QAEtC,OAAQynD,GAAkBC,KAAkB1nD,GAAWA,EAAQ3+B,OAAS,GAGlEmkF,EAAA5kF,UAAAgmF,aAAR,SAAqB7D,EAA2B/wE,GACtC,IAAAi2C,EAAA86B,EAAA96B,KAAMI,EAAA06B,EAAA16B,QAEd,OAAO3nD,KAAKolF,UAAU9zE,EAAMwvE,EAAAA,mBAAmB5iD,UAAYqpB,IAASI,GAG9Dm9B,EAAA5kF,UAAA4mF,WAAR,SAAmBzE,GAGjB,OAFQA,EAAA8E,QAKFrC,EAAA5kF,UAAAmmF,aAAR,SAAqBhE,GACX,IAAA2E,EAAA3E,EAAA2E,aAAc1nD,EAAA+iD,EAAA/iD,QAEtB,OAAQ0nD,KAAkB1nD,GAAWA,EAAQ3+B,QAAU,GAGjDmkF,EAAA5kF,UAAAkmF,SAAR,SAAiB/D,GACP,IAAA2E,EAAA3E,EAAA2E,aAAc1nD,EAAA+iD,EAAA/iD,QAEtB,OAAQ0nD,KAAkB1nD,GAAWA,EAAQ3+B,OAAS,GAGhDmkF,EAAA5kF,UAAA2mF,WAAR,SAAmBxE,GACT,IAAAzvC,EAAAyvC,EAAAzvC,KAER,OAAOA,GAAQA,GAAQ,GAGjBkyC,EAAA5kF,UAAAqlF,WAAR,SAAmBzgF,GACjBq4B,QAAQr4B,MAAMA,6CA9KmBsiF,EAAAA,iBA5BZjmF,EAAA,CAAtB2E,EAAAA,MAAM,yEAGY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAA8BnG,8BAAAA,oCAQXwB,EAAA,CAAzB8G,EAAAA,OAAO,8EAGU9G,EAAA,CAAjB2E,EAAAA,MAAM,8FAQmB3E,EAAA,CAAzB2E,EAAAA,MAAM,gFAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEoB3E,EAAA,CAA1B8G,EAAAA,OAAO,+EAhCG68E,EAAgC3jF,EAAA,CAD5C4H,EAAAA,mCAmCoCq+E,EAAAA,iBAlCxBtC,qBCgBX,SAAAuC,EACEtC,EACQ5B,EACA/1C,GAHV,IAAA9mC,EAKEC,EAAA3F,KAAAZ,KAAM+kF,IAAc/kF,YAHZsG,EAAA68E,kBAAAA,EACA78E,EAAA8mC,QAAAA,EALF9mC,EAAA+kB,cAAgB,KAoG1B,OAvGkDvrB,EAAAunF,EAAA9gF,GAahD8gF,EAAAnnF,UAAAitC,YAAA,SAAYC,GACNA,EAAQ40C,SACVhiF,KAAKglF,cAAgBhlF,KAAKqlF,qBAI9BgC,EAAAnnF,UAAAuY,MAAA,SAAMwe,GACJ,IAAMqwD,EAAiBtnF,KAAKunF,WAAW98E,MAAK,SAAAs6B,GAAa,OAAAA,EAAUkD,OAAShR,KACxEqwD,GACFA,EAAe7uE,SAInB4uE,EAAAnnF,UAAA6rC,WAAA,SAAWs2C,GACT,OAAOA,EAAM3pE,UAAY1Y,KAAKkkF,cAG1BmD,EAAAnnF,UAAAsnF,cAAN,SAAoBC,gHACVxwD,EAAawwD,EAAYxwD,SACLj3B,KAAKqrB,cAAc4L,KAAcj3B,KAAK8C,MAAMm0B,IAGhEnhB,EAAsC9V,KAAK0nF,SAASzwD,GAAlD0wD,EAAY7xE,EAAA6xE,aAAEC,EAAiB9xE,EAAA8xE,kBAEnCD,EAAatgE,SACf,CAAA,EAAMrnB,KAAK6nF,cAAcF,EAAcC,EAAmBH,IADxD,CAAA,EAAA,IAHF,CAAA,EAAA,UAIAr5C,EAAAxqC,wBAGF5D,KAAK8nF,wBAAwBF,2BAG/B5nF,KAAKqrB,cAAc4L,GAAYj3B,KAAK8C,MAAMm0B,eAG5CowD,EAAAnnF,UAAAg3C,QAAA,SAAQp7B,GACN,OAAOA,GAGDurE,EAAAnnF,UAAA6nF,qBAAR,SAA6BjsE,EAAeknE,GAC1C,IAAMX,EAAQriF,KAAKgiF,OAAOlmE,GAE1B9b,KAAKgiF,OAAOlmE,GAAM1b,EAAAA,EAAA,GAAQiiF,GAAUW,EAAeX,OACnDriF,KAAKgoF,eAEDhF,EAAenjF,eAAe,WAChCG,KAAK8C,MAAMu/E,EAAMprD,UAAY+rD,EAAelgF,OAG9C9C,KAAKotC,QAAQtZ,gBAETkvD,EAAevqE,OACjBzY,KAAKyY,MAAM4pE,EAAMprD,WAIbowD,EAAAnnF,UAAAwnF,SAAR,SAAiBzwD,GACf,IAAM2wD,EAAoB5nF,KAAKgiF,OAAOnuE,WAAU,SAAAwuE,GAAS,OAAAA,EAAMprD,WAAaA,KAG5E,MAAO,CAAE0wD,aAFY3nF,KAAKgiF,OAAO4F,GAEVA,kBAAiBA,IAGlCP,EAAAnnF,UAAA4nF,wBAAR,SAAgCF,GAG9B,GAF0B5nF,KAAKqnB,UAAYrnB,KAAKklF,aAAa1hD,UAAU7iC,OAEhD,CACrB,IAAM2hF,EAAetiF,KAAKgiF,OAAO4F,GACjC5nF,KAAKklF,aAAal9E,KAAKs6E,KAInB+E,EAAAnnF,UAAA8nF,aAAR,WACEhoF,KAAKilF,aAAaj9E,KAAKhI,KAAKgiF,QAC5BhiF,KAAKglF,cAAgBhlF,KAAKqlF,oBAGdgC,EAAAnnF,UAAA2nF,cAAd,SAA4BxF,EAA2B4F,EAAoBR,uGACnE3kF,EAAQ9C,KAAK8C,MAAMu/E,EAAMprD,UAEzBixD,EAAmBT,EAAa/uE,SACtC+uE,EAAa/uE,UAAW,EACxB1Y,KAAKotC,QAAQtZ,iCAGY,6BAAA,CAAA,EAAM9zB,KAAKmjF,kBAAkBR,gBAAgBN,EAAOv/E,GAAOqlF,2BAA5EnF,EAAiB50C,EAAAxqC,OACvB5D,KAAK+nF,qBAAqBE,EAAYjF,gCAEtCyE,EAAa/uE,SAAWwvE,0EA9FXd,EAAAA,qBACY1E,UACVhrE,EAAAA,qBAPQvW,EAAA,CAA1B2/B,EAAAA,aAAa,6BAAyB35B,EAAAA,6CAD5BkgF,EAA4BlmF,EAAA,CANxC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,ytPACAgiF,cAAe,CAAC,CAAEpjE,QAASqjE,EAAAA,iBAAkBnjE,YAAagyD,EAAAA,SAC1D9vE,UAAW,CAACs7E,6BAQK0E,EAAAA,cACY1E,GACVhrE,EAAAA,qBARR2vE,IAAqCvC,kBCfhD,SAAAwD,EAAoB/6E,GAAAvN,KAAAuN,KAAAA,EAKtB,OAHE+6E,EAAApoF,UAAAqoF,OAAA,SAAO56E,EAAa7K,GAClB,OAAO9C,KAAKuN,KAAKY,KAAKR,EAAK7K,GAAOqlF,sDAHV55E,EAAAA,cADf+5E,EAAoBnnF,EAAA,CADhCqE,EAAAA,oCAE2B+I,EAAAA,cADf+5E,oBCuHX,SAAAE,EACUC,EACAC,EACA50C,EACA60C,EACA5D,EACE6D,GALF5oF,KAAAyoF,aAAAA,EACAzoF,KAAA0oF,SAAAA,EACA1oF,KAAA8zC,YAAAA,EACA9zC,KAAA2oF,SAAAA,EACA3oF,KAAA+kF,cAAAA,EACE/kF,KAAA4oF,mBAAAA,EA9GJ5oF,KAAAmlF,QAAqC,GACrCnlF,KAAA6oF,eAAyB,EACzB7oF,KAAAijC,OAAS,GAEjBjjC,KAAAglF,cAAgB,GA6LlB,OArKqBxlF,OAAAqC,eAAI2mF,EAAAtoF,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmlF,aALK,SAAWnD,GAC5BhiF,KAAKmlF,QAAUxlF,MAAMqW,QAAQgsE,GAAOj9E,EAAOi9E,GAAU,oCAgB5BxiF,OAAAqC,eAAI2mF,EAAAtoF,UAAA,eAAY,KAI3C,WACE,OAAOF,KAAK6oF,mBALa,SAAiB/lF,GAC1C9C,KAAK6oF,cAAgBj4E,EAAiB9N,oCAkDtBtD,OAAAqC,eAAI2mF,EAAAtoF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKijC,YALI,SAAUngC,GAC1B9C,KAAKijC,OAASngC,GAASsO,EAAStO,EAAO,UAAYA,EAAQ,oCAiBnD0lF,EAAAtoF,UAAA4oF,oBAAV,WAAA,IAAAxiF,EAAAtG,KACQ+oF,EAAY,GAQlB,OANA/oF,KAAKgiF,OAAOtiE,SAAQ,SAAA2iE,GACduC,GAAevC,IACjB0G,EAAUvkF,KAAK8B,EAAKk/E,YAAYnD,OAI7B0G,GAICP,EAAAtoF,UAAA8oF,gBAAV,WAAA,IAAA1iF,EAAAtG,KACQipF,EAAYlkF,EAAO/E,KAAK8oF,uBAW9B,OATA9oF,KAAKkpF,iBAAiBxpE,SAAQ,SAAAypE,GAC5B,IAAMlB,EAAagB,EAAap1E,WAAU,SAAAwuE,GAAS,OAAAA,EAAMprD,WAAakyD,EAAWlyD,YAC3EA,EAAWkyD,EAAWlyD,UAER,IAAhBgxD,GACFgB,EAAazkF,KAAK8B,EAAKk/E,YAAY,CAAEvuD,SAAQA,QAI1CgyD,GAICT,EAAAtoF,UAAAgpF,eAAV,WAAA,IAAA5iF,EAAAtG,KACE,OAAOR,OAAOsqB,KAAK9pB,KAAK8C,OAAOsJ,KAAI,SAAA6qB,GACjC,OAAO3wB,EAAKk/E,YAAY,CAAEvuD,SAAQA,QAI9BuxD,EAAAtoF,UAAAslF,YAAR,SAAoBnD,GAClB,IAAMprD,EAAWorD,EAAMprD,SACjBn0B,EAAQ9C,KAAKopF,eAAe/G,EAAM/wE,KAAMtR,KAAK8C,MAAMm0B,GAAWorD,EAAMt3C,QAEpEs+C,EAAqB9E,GACzBlC,EAAMwD,cACNxD,EAAMyD,cACNzD,EAAM0D,cACN1D,EAAM2D,cACN3D,EAAMsC,aAGR,OAAAvkF,EAAA,CACE62B,SAAQA,EACRn0B,MAAKA,EACLa,MAAO3D,KAAK+kF,cAAcr9C,UAAUzQ,GACpCqyD,SAAUD,GACPhH,IAICmG,EAAAtoF,UAAAkpF,eAAR,SAAuB93E,EAAcxO,EAAOioC,GAC1C,IAAIw+C,EAAmBzmF,EAEvB,OAAQwO,GACN,IAAK,WACHi4E,EAAmBvpF,KAAKyoF,aAAa/gD,UAAU5kC,EAAOioC,GAAU,MAAO,SAAU,SACjF,MACF,IAAK,OACHw+C,EAAmBvpF,KAAK0oF,SAAShhD,UAAU5kC,EAAOioC,GAAU,cAC5D,MACF,IAAK,WACHw+C,EAAmBvpF,KAAK0oF,SAAShhD,UAAU5kC,EAAOioC,GAAU,uBAC5D,MACF,IAAK,SACHw+C,EAAmBvpF,KAAK8zC,YAAYpM,UAAU5kC,EAAOioC,GACrD,MACF,IAAK,OACHw+C,EAAmBvpF,KAAK2oF,SAASjhD,UAAU5kC,EAAOioC,GAAU,mBAIhE,OAAOw+C,4CAtFeC,EAAAA,oBACJC,EAAAA,gBACGvxC,EAAAA,mBACHpN,UACKs8C,EAAAA,qBACOkB,MAlFbnnF,EAAA,CAAlB2E,EAAAA,MAAM,4BAA+BnG,8BAAAA,oCAiBXwB,EAAA,CAA1B2E,EAAAA,MAAM,gHAyCU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAUW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAjGI0iF,EAA0BrnF,EAAA,CADtC4H,EAAAA,mCA2GyBygF,EAAAA,aACJC,EAAAA,SACGvxC,EAAAA,YACHpN,GACKs8C,EAAAA,cACOkB,MA/GrBE,qBCcX,SAAAkB,EACEjB,EACAC,EACA50C,EACA60C,EACA5D,EACA6D,UAEAriF,EAAA3F,KAAAZ,KAAMyoF,EAAcC,EAAU50C,EAAa60C,EAAU5D,EAAe6D,IAAmB5oF,KAiE3F,OA1E4CF,EAAA4pF,EAAAnjF,GAY1CmjF,EAAAxpF,UAAAitC,YAAA,SAAYC,IACNA,EAAQ40C,QAAU50C,EAAQtqC,OAASsqC,EAAQu8C,gBAC7C3pF,KAAKglF,cAAgBhlF,KAAKqlF,qBAI9BqE,EAAAxpF,UAAA+I,SAAA,WACMjJ,KAAKwiF,MACPxiF,KAAK4pF,+BAIKF,EAAAxpF,UAAA2pF,2BAAd,iHAG2B,iBAAd7pF,KAAKwiF,KAAZ,CAAA,EAAA,GACuB,CAAA,EAAMxiF,KAAK4oF,mBAAmBL,OAAOvoF,KAAKwiF,KAAMxiF,KAAK8C,sBAA9EgnF,EAAyBh0E,EAAAlS,oBACK,mBAAd5D,KAAKwiF,OACrBsH,EAAyB9pF,KAAKwiF,yBAGhC,MAAA,CAAA,EAAOsH,GAA0B,YAG3BJ,EAAAxpF,UAAAmlF,iBAAR,WACE,OAAIrlF,KAAK2pF,aACA3pF,KAAKgpF,kBAGPhpF,KAAK8C,OAAS9C,KAAKgiF,OAAOrhF,OAASX,KAAK8oF,sBAAwB9oF,KAAKkpF,kBAGtEQ,EAAAxpF,UAAA6pF,eAAR,SAAuBC,GACrB,IAAMluE,EAAQ9b,KAAKgiF,OAAOnuE,WAAU,SAAAwuE,GAAS,OAAAA,EAAMprD,WAAa+yD,EAAY/yD,YAExEnb,GAAS,EACX9b,KAAKgiF,OAAOlmE,GAAM1b,EAAAA,EAAA,GAAQJ,KAAKgiF,OAAOlmE,IAAWkuE,GAEjDhqF,KAAKgiF,OAAOx9E,KAAIpE,EAAA,GAAM4pF,KAIlBN,EAAAxpF,UAAA+pF,gBAAR,SAAwBjI,GAAxB,IAAA17E,EAAAtG,KACMgiF,GACFA,EAAOtiE,SAAQ,SAAAsqE,GACb1jF,EAAKyjF,eAAeC,OAKlBN,EAAAxpF,UAAAgqF,eAAR,SAAuBC,GACrB3qF,OAAOa,OAAOL,KAAK8C,MAAOqnF,IAGdT,EAAAxpF,UAAA0pF,4BAAd,+GAC4B,MAAA,CAAA,EAAM5pF,KAAK6pF,4CAA/B/zE,EAAoBs4B,EAAAxqC,OAAlBd,EAAKgT,EAAAhT,MAAEk/E,EAAMlsE,EAAAksE,OAErBhiF,KAAKkqF,eAAepnF,GACpB9C,KAAKiqF,gBAAgBjI,GAErBhiF,KAAKglF,cAAgBhlF,KAAKqlF,wEAtEZmE,EAAAA,oBACJC,EAAAA,gBACGvxC,EAAAA,mBACHpN,UACKs8C,EAAAA,qBACKkB,MAPXoB,EAAsBvoF,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,2yBAIgBojF,EAAAA,aACJC,EAAAA,SACGvxC,EAAAA,YACHpN,GACKs8C,EAAAA,cACKkB,MAPXoB,IAA+BlB,kBCA5C,SAAA4B,KAA8B,OAAjBA,EAAejpF,EAAA,CAf3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcy4B,EAAAA,YAAa7H,GAAiBinD,GAAcX,GAAe6B,GAAa91C,IAChGhjC,aAAc,CAACw6E,GAAwBoE,GAA8BqC,IACrEhhF,QAAS,CAACu6E,GAAwByG,IAClCtiF,UAAW,CACToiF,EAAAA,aACAC,EAAAA,SACAvxC,EAAAA,YACApN,GACAs8C,EAAAA,cACAnF,GACAS,GACA4F,OAGS8B,oBCtBX,SAAAC,IAJqBrqF,KAAAkZ,SAAoB,GAkB3C,OAZEmxE,EAAAnqF,UAAAoqF,iBAAA,SAAiBzjF,GAIO,KAAlBA,EAAM2M,SACR3M,EAAM+5B,kBAXWz/B,EAAA,CAApB2E,EAAAA,MAAM,sEAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAHIukF,EAAyBlpF,EAAA,CAJrC+E,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAA,iQAEWikF,oBC2CX,SAAAE,EAAoBhjD,GAAAvnC,KAAAunC,kBAAAA,EAxCpBvnC,KAAAijC,OAAc,GACdjjC,KAAAwqF,MAAgB,EAChBxqF,KAAAyqF,UAAoB,GAEFzqF,KAAA6c,MAAiB,OAEhB7c,KAAA0qF,QAAmB,EAEhB1qF,KAAA2qF,UAAqB,EAEtB3qF,KAAAkZ,SAAoB,GAapBlZ,KAAA27C,UAAqB,EAErB37C,KAAA69B,UAAqB,EAEjB79B,KAAA4qF,YAAc,IAAI9iF,EAAAA,aA4F7C,OA3GoBtI,OAAAqC,eAAI0oF,EAAArqF,UAAA,QAAK,KAO3B,WACE,OAAOF,KAAK6qF,OAAY7qF,KAAK6qF,OAAM,KAAO,YAR1B,SAAU/nF,GAC1B9C,KAAK6qF,OAAS/nF,EAEV9C,KAAK0qF,SAAW1qF,KAAK6qF,SACvB7qF,KAAK6qF,OAAS,sCAaArrF,OAAAqC,eAAI0oF,EAAArqF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKijC,YALI,SAAUngC,GAC1B9C,KAAKijC,OAASngC,EACd9C,KAAK4qF,YAAY5iF,KAAKhI,KAAKijC,yCAW7BsnD,EAAArqF,UAAAoqF,iBAAA,SAAiBzjF,GAIf,IAAKA,EAAM2hD,UAA8B,IAAlB3hD,EAAM2M,SAAmC,KAAlB3M,EAAM2M,SAAiB,CACnE,GAAIxT,KAAK27C,SACP,OAKF,OAFA90C,EAAM+5B,sBACN5gC,KAAK8C,MAAQ,IAKf,OAAsB,KAAlB+D,EAAM2M,SACR3M,EAAM+5B,sBACN5gC,KAAK8qF,WAAW9qF,KAAK8C,QAKlB+D,EAAM2M,SAAW,IAAM3M,EAAM2M,SAAW,IAAQ3M,EAAM2M,SAAW,IAAM3M,EAAM2M,SAAW,IAC3F3M,EAAM+5B,sBACN5gC,KAAK8qF,WAAWjkF,EAAMvF,WAFxB,GAOFipF,EAAArqF,UAAA6qF,SAAA,SAASlkF,GAGPA,EAAM+5B,iBAEN5gC,KAAK8qF,WAAW9qF,KAAK8C,QAGvBynF,EAAArqF,UAAA8qF,YAAA,SAAYnkF,GAGV7G,KAAK8C,MAAQ9C,KAAKyqF,UAClBzqF,KAAKyqF,eAAYthF,EACjBnJ,KAAKwqF,MAAO,GAGdD,EAAArqF,UAAA+qF,eAAA,SAAepkF,GAIS,KAAlBA,EAAM2M,UACRxT,KAAK8C,MAAQ9C,KAAKyqF,UAClBzqF,KAAKyqF,eAAYthF,EACjBnJ,KAAKwqF,MAAO,EACZxqF,KAAKunC,kBAAkBzT,gBACvB9zB,KAAKsmD,eAAex7C,cAAc2N,SAId,KAAlB5R,EAAM2M,UACRxT,KAAKyqF,eAAYthF,EACjBnJ,KAAKwqF,MAAO,EACZxqF,KAAKunC,kBAAkBzT,gBACvB9zB,KAAKsmD,eAAex7C,cAAc2N,QAClC5R,EAAMm7B,oBAIFuoD,EAAArqF,UAAA4qF,WAAR,SAAmBhoF,GACb9C,KAAK27C,WAIT37C,KAAKyqF,UAAY3nF,EACjB9C,KAAKwqF,MAAO,EACZxqF,KAAKunC,kBAAkBzT,gBACvB9zB,KAAKikD,aAAan5C,cAAc2N,mDA7EKf,EAAAA,qBApCrBvW,EAAA,CAAjB2E,EAAAA,MAAM,gEAEY3E,EAAA,CAAlB2E,EAAAA,MAAM,mEAEe3E,EAAA,CAArB2E,EAAAA,MAAM,uEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAWc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAEkB3E,EAAA,CAAxB8G,EAAAA,OAAO,4EAEU9G,EAAA,CAAjB2E,EAAAA,MAAM,8FAQsC3E,EAAA,CAA5C4E,EAAAA,UAAU,eAAgB,CAAEE,QAAQ,oBAAsBiH,EAAAA,gDACZ/L,EAAA,CAA9C4E,EAAAA,UAAU,iBAAkB,CAAEE,QAAQ,oBAAwBiH,EAAAA,kDAzCpDq9E,EAAmBppF,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,irCA6CuCsR,EAAAA,qBA3C5B6yE,oBCoFX,SAAAW,EAAoB3jD,EAA8C4jD,EAAmBthF,GAArF,IAAAvD,EAAAtG,KAAoBA,KAAAunC,kBAAAA,EAA8CvnC,KAAAmrF,MAAAA,EAtDlEnrF,KAAAorF,SAAmB,MACnBprF,KAAAqrF,QAAkB,EAClBrrF,KAAAsrF,WAAqB,EACrBtrF,KAAAurF,aAAuB,MACvBvrF,KAAAwrF,YAAsB,EACtBxrF,KAAAyrF,eAAyB,EAGzBzrF,KAAA0rF,QAAS,EAET1rF,KAAAqc,MAAQ,OACRrc,KAAA2rF,WAAa,EACb3rF,KAAA4rF,aAAe,EAQP5rF,KAAA2+B,SAAW,GAOK3+B,KAAA6rF,WAA+B,GAyBtC7rF,KAAA28D,KAAmB,GAGlC38D,KAAKiL,iBAELjL,KAAKgN,eAAiBnD,EAASkD,OAAO,SAAU,UAAU,SAAClG,GACzDP,EAAK2E,oBA2QX,OArSsBzL,OAAAqC,eAAIqpF,EAAAhrF,UAAA,UAAO,KAa/B,WACE,OAAOF,KAAK2+B,SAAS1e,QAAO,SAAAgsB,GAAU,OAAkB,IAAlBA,EAAOy+C,SAAqC,IAAlBz+C,EAAO3R,eAdrD,SAAYx3B,GAC9B9C,KAAK2+B,SAAQ55B,EAAOjC,GAEpB9C,KAAK2+B,SAASjf,SAAQ,SAAAusB,GACpBA,EAAOtoC,MAAQsoC,EAAOtoC,OAASsoC,EAAOhV,UAEhB,IAAlBgV,EAAOy+C,OACTz+C,EAAO6/C,UAAc7/C,EAAO5vB,OAAS,KAAG,KAExC4vB,EAAO6/C,SAAW7/C,EAAO5vB,MAAW4vB,EAAO5vB,MAAK,KAAO,2CAqB7D6uE,EAAAhrF,UAAAuG,YAAA,WACMzG,KAAKgN,gBACPhN,KAAKgN,kBAIDk+E,EAAAhrF,UAAA+K,eAAR,WAAA,IAAA3E,EAAAtG,KACE2M,aAAa3M,KAAK4M,eAElB5M,KAAK4M,cAAgBC,YAAW,WAC9B,IAAMk/E,EAAoBzlF,EAAK0lF,aAAalhF,cAAcC,YAC1DzE,EAAK+V,MAAW0vE,GAAqBzlF,EAAKqlF,WAAa,GAAKrlF,EAAKslF,aAAY,OAC5E,MAGLpsF,OAAAqC,eAAIqpF,EAAAhrF,UAAA,gBAAa,KAAjB,WACE,IAAM+rF,EAAgBjsF,KAAK2+B,SAAS1e,QAAO,SAAAgsB,GAAU,OAAkB,IAAlBA,EAAOy+C,UAI5D,OAFA1qF,KAAK2rF,WAAaM,EAAc3/E,QAAO,SAAC4/E,EAAMC,GAAY,OAAAD,GAAQC,EAAQ9vE,OAAS,OAAM,GAElF4vE,mCAGTzsF,OAAAqC,eAAIqpF,EAAAhrF,UAAA,gBAAa,KAAjB,WACE,IAAMksF,EAAiBpsF,KAAK2+B,SAAS1e,QAAO,SAAAgsB,GAAU,OAAkB,IAAlBA,EAAO3R,UAI7D,OAFAt6B,KAAK4rF,aAAeQ,EAAezrF,OAAS,EAAI,GAAK,EAE9CyrF,mCAGTlB,EAAAhrF,UAAAmsF,UAAA,SAAUxlF,EAAYmlC,GAAtB,IAAA1lC,EAAAtG,KACQurB,EAAK1kB,EAAM0lB,KAAK9hB,MAAK,SAAAb,GAAW,OAAAA,EAAQ22B,MAE9C,GAAKhV,EAAL,CAIM,IAAC+gE,EAAD1nF,EAAA2mB,EAAAgV,GAAA/d,MAAA,KAAA,GAAC,GAEP,GAAIxiB,KAAKusF,WAAWD,GAAI,CACtB,IAAKtsF,KAAKwsF,UAAU3lF,EAAOmlC,GACzB,OAGFhsC,KAAKysF,YAAcjtF,OAAOa,OAAO,GAAIL,KAAK28D,KAAK38D,KAAKwrF,YAAc,SAElExrF,KAAK28D,MAAM2vB,EAAI,GAAK9sF,OAAOa,OAAO,GAAIL,KAAKysF,aAC3C5/E,YAAW,WAAM,OAAAvG,EAAKomF,WAAWpmF,EAAKklF,YAAallF,EAAKmlF,qBAI5DP,EAAAhrF,UAAAssF,UAAA,SAAU3lF,EAAYmlC,GACpB,GAAIhsC,KAAK6rF,WAAWc,eAAiB3sF,KAAK6rF,WAAWc,aAAantF,OAAOa,OAAO,GAAI2rC,IAClF,OAAO,EAGT,IAAMlwB,EAAQ9b,KAAK28D,KAAK37D,QAAQgrC,GAYhC,OAVAhsC,KAAK28D,KAAK7oD,OAAOgI,EAAO,GAExB9b,KAAKunC,kBAAkBzT,gBAEE,IAArB9zB,KAAK28D,KAAKh8D,QAAgBmb,IAAU9b,KAAK28D,KAAKh8D,OAChDX,KAAK0sF,WAAW1sF,KAAKwrF,YAAc,EAAGxrF,KAAKyrF,gBAE3CzrF,KAAK0sF,WAAW1sF,KAAKwrF,YAAaxrF,KAAKyrF,iBAGlC,GAGTP,EAAAhrF,UAAA0sF,aAAA,SAAa/lF,EAAYgmF,GACnB,IAAA/2E,EAAAlR,EAAAiC,EAAAxF,OAAAk/B,GAAA/d,MAAA,KAAA,GAACwpB,EAAAl2B,EAAA,GAAKm7B,EAAAn7B,EAAA,GAGNg3E,IAFJ9gD,GAAOA,GAGH+gD,IAFJ97C,GAAOA,GAQP,GAAkB,SAAd47C,GAKF,GAJI7gD,GAAOhsC,KAAK28D,KAAKh8D,QACnBmsF,IAGE9gD,IAAQhsC,KAAK28D,KAAKh8D,OACpB,GAAY,IAARqrC,GAAchsC,KAAKusF,WAAWvgD,GAShC8gD,QATsC,CACtC,IAAI9sF,KAAKgtF,QAAQhhD,GAKf,OAJA,IAAKhsC,KAAKitF,YACR,YASe,OAAdJ,GAAsB7gD,EAAM,EACrC8gD,IACuB,SAAdD,GAAwB57C,EAAM,EACvC87C,IACuB,UAAdF,GAAyB57C,EAAMjxC,KAAK2+B,SAASh+B,OAAS,EAC/DosF,IACuB,SAAdF,EACL57C,EAAMjxC,KAAK2+B,SAASh+B,OAAS,GAC/BosF,IACAlmF,EAAM+5B,kBACGoL,EAAMhsC,KAAK28D,KAAKh8D,SACzBosF,EAAO,EACPD,IACAjmF,EAAM+5B,kBAEe,UAAdisD,IACL57C,EAAM,GACR87C,IACAlmF,EAAM+5B,kBACGoL,EAAM,IACf+gD,EAAO/sF,KAAK2+B,SAASh+B,OAAS,EAC9BmsF,IACAjmF,EAAM+5B,mBAIV,GAAI5gC,KAAKurF,eAAoBuB,EAAI,IAAIC,EAArC,CAMA,GAAID,IAAS9sF,KAAKwrF,aAAex/C,EAAM,GAAKhsC,KAAK28D,KAAKh8D,QAAUqrC,EAC9D,GAAKhsC,KAAKusF,WAAWvgD,IAKnB,IAAKhsC,KAAKwsF,UAAU3lF,EAAOmlC,GACzB,YALF,IAAKhsC,KAAKgtF,QAAQhhD,GAChB,OASFhsC,KAAKwrF,cAAgBsB,IACvB9sF,KAAKysF,YAAcjtF,OAAOa,OAAO,GAAIL,KAAK28D,KAAKmwB,EAAO,KAIxD9sF,KAAKorF,SAAWvkF,EAAMxF,OAAOk/B,GAC7BvgC,KAAKqrF,QAAUr/C,EACfhsC,KAAKsrF,WAAar6C,EAElBjxC,KAAK0sF,WAAWI,EAAMC,KAGxB7B,EAAAhrF,UAAAgtF,WAAA,SAAWrmF,GACT,IAAM0kB,EAAK1kB,EAAM0lB,KAAK9hB,MAAK,SAAAb,GAAW,OAAAA,EAAQ22B,MAE9C,GAAKhV,GAKL,GAAIvrB,KAAKurF,eAAiBhgE,EAAGgV,GAA7B,CAIM,IAAAzqB,EAAAlR,EAAA2mB,EAAAgV,GAAA/d,MAAA,KAAA,GAACwpB,EAAAl2B,EAAA,GACDg3E,GAAQ9gD,EACR+gD,GAFMj3E,EAAA,GAIZ,GAAIg3E,IAAS9sF,KAAKwrF,YAAa,CAC7B,GAAIxrF,KAAKwrF,YAAc,EACrB,GAAKxrF,KAAKusF,WAAWvsF,KAAKwrF,cAMxB,IAAKxrF,KAAKwsF,UAAU3lF,EAAOmlC,GACzB,YANF,IAAKhsC,KAAKgtF,QAAQhtF,KAAKwrF,aAErB,YADAxrF,KAAK0sF,WAAW1sF,KAAKwrF,YAAaxrF,KAAKyrF,gBAU7CzrF,KAAKysF,YAAcjtF,OAAOa,OAAO,GAAIL,KAAK28D,KAAKmwB,EAAO,IAIxD9sF,KAAKorF,SAAWprF,KAAKurF,aACrBvrF,KAAKqrF,QAAUrrF,KAAKwrF,YACpBxrF,KAAKsrF,WAAatrF,KAAKyrF,eAEvBzrF,KAAKurF,aAAehgE,EAAGgV,GACvBvgC,KAAKwrF,YAAcsB,EACnB9sF,KAAKyrF,eAAiBsB,QApCpB/sF,KAAK0sF,WAAW1sF,KAAKwrF,YAAaxrF,KAAKyrF,iBAuC3CP,EAAAhrF,UAAA8sF,QAAA,SAAQhhD,GAAR,IAAA1lC,EAAAtG,KAGQ+3E,EAAM/3E,KAAK28D,KAAK3wB,EAAM,GAE5B,IAAKxsC,OAAOsqB,KAAKiuD,GAAKn/C,MAAK,SAAAu0D,GAAQ,OAAApV,EAAIoV,KAAU7mF,EAAKmmF,YAAYU,MAEhE,OAAO,EAGT,GAAIntF,KAAK6rF,WAAWuB,aAAeptF,KAAK6rF,WAAWuB,WAAWrV,EAAK/3E,KAAKysF,aACtE,OAAO,EAGT,IAAMY,EAAY,GAQlB,OANArtF,KAAKg/B,QAAQtf,SAAQ,SAAAusB,IACK,IAApBA,EAAOpO,UAAsBk6C,EAAI9rC,EAAOhV,WAC1Co2D,EAAU7oF,KAAKynC,EAAOhV,aAIE,IAArBo2D,EAAU1sF,QAGnBuqF,EAAAhrF,UAAA+sF,UAAA,WACE,IAAMlV,EAAM,GAEZ,QAAI/3E,KAAK6rF,WAAWyB,eAAiBttF,KAAK6rF,WAAWyB,aAAavV,MAMlE/3E,KAAK28D,KAAKn4D,KAAKuzE,GACf/3E,KAAKunC,kBAAkBzT,iBAEhB,IAGTo3D,EAAAhrF,UAAAqsF,WAAA,SAAWvgD,GACT,IAAM+rC,EAAM/3E,KAAK28D,KAAK3wB,EAAM,GAE5B,QAAK+rC,IAKUv4E,OAAOsqB,KAAKiuD,GAAKn/C,MAAK,SAAA3B,GAAY,OAAA8gD,EAAI9gD,OAKvDi0D,EAAAhrF,UAAAwsF,WAAA,SAAW1gD,EAAaiF,GACtB,IAAMs8C,EAAWvtF,KAAKmrF,MAAMrgF,cAAckB,cAAc,QAAQggC,EAAG,IAAIiF,EAAG,MAEtEs8C,IACFvtF,KAAKurF,aAAkBv/C,EAAG,IAAIiF,EAC9BjxC,KAAKwrF,YAAcx/C,EACnBhsC,KAAKyrF,eAAiBx6C,EACtBs8C,EAAS90E,mDA5Q0Bf,EAAAA,yBAAkCxK,EAAAA,kBAAsBC,EAAAA,aArCzDhM,EAAA,CAArC4E,EAAAA,UAAU,QAAS,CAAEE,QAAQ,oBAAsBiH,EAAAA,gDACZ/L,EAAA,CAAvC4E,EAAAA,UAAU,UAAW,CAAEE,QAAQ,oBAAsBiH,EAAAA,gDAS9B/L,EAAA,CAAvB2E,EAAAA,MAAM,2EAKa3E,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAoBtBwB,EAAA,CAAhB2E,EAAAA,MAAM,0BAAgBnG,mCArDZurF,EAAe/pF,EAAA,CAJ3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,+jMAyDuCsR,EAAAA,kBAAkCxK,EAAAA,WAAsBC,EAAAA,aAvDpF+9E,oBCTX,SAAAsC,EAAoBjmD,GAAAvnC,KAAAunC,kBAAAA,EAjBFvnC,KAAA6c,MAAiB,OAEhB7c,KAAAw1C,SAAoB,EAElBx1C,KAAAkZ,SAAoB,GAEnBlZ,KAAA2qF,UAAqB,EAY7C,OAVoBnrF,OAAAqC,eAAI2rF,EAAAttF,UAAA,QAAK,KAG3B,WACE,OAAOF,KAAK6qF,OAAY7qF,KAAK6qF,OAAM,KAAO,YAJ1B,SAAU/nF,GAC1B9C,KAAK6qF,OAAS/nF,4EAQuB4U,EAAAA,qBAjBrBvW,EAAA,CAAjB2E,EAAAA,MAAM,gEAEY3E,EAAA,CAAlB2E,EAAAA,MAAM,oEAEc3E,EAAA,CAApB2E,EAAAA,MAAM,sEAEe3E,EAAA,CAArB2E,EAAAA,MAAM,uEAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAOW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAlBI0nF,EAAmBrsF,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,gNAsBuCsR,EAAAA,qBApB5B81E,oBCeb,SAAAC,KAA2B,OAAdA,EAAYtsF,EAAA,CALxBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcy4B,EAAAA,YAAay+C,IACrCj3E,aAAc,CAAC4hF,GAA2BE,GAAqBW,GAAiBsC,IAChF9kF,QAAS,CAACwiF,OAECuC,MCdAC,GAA4B,CACvC72E,GAAwB,CACtB82E,YAAa,eACb/+C,aAAc,iBACdH,OAAQ,gBACRW,UAAW,aACXw+C,YAAa,gBAEf72E,GAAwB,CACtB42E,YAAa,mBACb/+C,aAAc,wBACdH,OAAQ,uBACRW,UAAW,oBACXw+C,YAAa,oBAEf52E,GAAwB,CACtB22E,YAAa,mBACb/+C,aAAc,2BACdH,OAAQ,yBACRW,UAAW,mBACXw+C,YAAa,mBAEf32E,GAAwB,CACtB02E,YAAa,gBACb/+C,aAAc,+BACdH,OAAQ,oBACRW,UAAW,cACXw+C,YAAa,oCAgBjB,SAAAC,IAUE7tF,KAAAovC,WAAqB,EACrBpvC,KAAA8tF,YAAsB,EAkKC9tF,KAAA0vC,SAA+B,IAAI5nC,EAAAA,aAOhC9H,KAAA+tF,YAAkC,IAAIjmF,EAAAA,aAgElE,OAhOsBtI,OAAAqC,eAAIgsF,EAAA3tF,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAK05B,cALM,SAAY52B,GAC9B9C,KAAK05B,SAAW/5B,MAAMqW,QAAQlT,GAASA,EAAQ,oCAc9BtD,OAAAqC,eAAIgsF,EAAA3tF,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmpB,aALK,SAAWxhB,GAC5B3H,KAAKmpB,QAAUxhB,mCAcWnI,OAAAqC,eAAIgsF,EAAA3tF,UAAA,gBAAa,KAK7C,WACE,OAAOF,KAAKguF,oBANc,SAAkBn9C,GAC5C7wC,KAAKguF,eAAiBp9E,EAAiBigC,GACvC7wC,KAAKiuF,kDAQWzuF,OAAAqC,eAAIgsF,EAAA3tF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKwJ,YALI,SAAU1G,GAC1B9C,KAAKwJ,OAAS7J,MAAMqW,QAAQlT,GAASA,EAAQ,oCA2C1BtD,OAAAqC,eAAIgsF,EAAA3tF,UAAA,WAAQ,KAYjC,WACE,OAAOF,KAAKqwC,WAAaq9C,GAA0Bn+E,UAbhC,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTstF,GAAyC,IACzCA,GAA0Bn+E,MAC1BzM,GAGY4qF,GAA0Bn+E,sCAgC5B/P,OAAAqC,eAAIgsF,EAAA3tF,UAAA,SAAM,KAK7B,WACE,OAAOF,KAAKkuF,aANK,SAAWC,GAC5BnuF,KAAKkuF,QAAUt9E,EAAiBu9E,GAChCnuF,KAAKiuF,kDAcwBzuF,OAAAqC,eAAIgsF,EAAA3tF,UAAA,mBAAgB,KAInD,WACE,OAAOF,KAAKouF,uBALiB,SAAqBtrF,GAClD9C,KAAKouF,kBAAoBx9E,EAAiB9N,oCAqB5C+qF,EAAA3tF,UAAAmuF,cAAA,SAAcC,EAAkCzgF,GAC9C,IAAM0gF,EAAYvuF,KAAKwuF,oBAAoB3gF,GACvCygF,EAAeh0D,QACjBg0D,EAAeh0D,OAAOi0D,IAI1BV,EAAA3tF,UAAAyyC,WAAA,WACE3yC,KAAK0vC,SAAS1nC,QAGhB6lF,EAAA3tF,UAAAuuF,eAAA,SAAeC,GACb,IAAMC,EAA2B3uF,KAAKwuF,oBAAoBE,GAC1D1uF,KAAK+tF,YAAY/lF,KAAK2mF,IAGxBd,EAAA3tF,UAAA0uF,mBAAA,WAAA,IAAAtoF,EAAAtG,KACOA,KAAK6wC,gBACR7wC,KAAKovC,WAAapvC,KAAKovC,UAEvBpvC,KAAKyJ,MAAMiW,SAAQ,SAAA7R,GACjBA,EAAK2jC,UAAYlrC,EAAK8oC,eAK5By+C,EAAA3tF,UAAA2uF,eAAA,SAAe7iD,GACbA,EAAIwF,WAAaxF,EAAIwF,UAErBxxC,KAAKovC,UAAYpvC,KAAK8uF,wBAAwB9uF,KAAKyJ,QAG7CokF,EAAA3tF,UAAAsuF,oBAAR,SAA4B3gF,GAC1B,IAAMkhF,EAAWlhF,EAAIzN,EAAA,GAAQyN,QAAS1E,EAEtC,IAAK,IAAM7H,KAAOytF,EACZA,EAASlvF,eAAeyB,IAAQA,EAAI6S,WAAW,aAC1C46E,EAASztF,GAIpB,OAAOytF,GAGDlB,EAAA3tF,UAAA4uF,wBAAR,SAAgCrlF,GAI9B,QAAIA,EAAM02B,OAFW,SAAAtyB,GAAQ,OAAAA,EAAK2jC,gBAM9B/nC,EAAMmvB,MAPyB,SAAA/qB,GAAQ,OAAAA,EAAK2jC,WAAgC,OAAnB3jC,EAAK2jC,cAQzD,MAMHq8C,EAAA3tF,UAAA+tF,eAAR,WACEjuF,KAAK8tF,cAAgB9tF,KAAKmuF,QAAWnuF,KAAK6wC,gBAAiB7wC,KAAKyJ,QAASzJ,KAAKyJ,MAAM9I,SA9NlEQ,EAAA,CAAnB2E,EAAAA,MAAM,6BAAgCnG,8BAAAA,qCAepBwB,EAAA,CAAlB2E,EAAAA,MAAM,gGAeqB3E,EAAA,CAA3B2E,EAAAA,MAAM,kHAUW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCA4CdwB,EAAA,CAApB2E,EAAAA,MAAM,oGAiBmB3E,EAAA,CAAzB2E,EAAAA,MAAM,+EAGoB3E,EAAA,CAA1B2E,EAAAA,MAAM,iFAoBY3E,EAAA,CAAlB2E,EAAAA,MAAM,kGAgBwB3E,EAAA,CAA9B2E,EAAAA,MAAM,wHAagB3E,EAAA,CAAtB8G,EAAAA,OAAO,+BAA0BH,EAAAA,8CAOR3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDApL7B+lF,EAAuB1sF,EAAA,CADnC4H,EAAAA,aACY8kF,oBCkDX,SAAAmB,EAAmBp7C,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAHd7E,EAAA,CAAjB2E,EAAAA,MAAM,kEAVIkpF,EAAkC7tF,EAAA,CAH9C4H,EAAAA,UAAU,CACT5C,SAAU,0DAesBH,EAAAA,eAbrBgpF,oBCxBX,SAAAC,EAAmBr7C,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAHR7E,EAAA,CAAvB2E,EAAAA,MAAM,6EAVImpF,EAAiC9tF,EAAA,CAH7C4H,EAAAA,UAAU,CACT5C,SAAU,yDAesBH,EAAAA,eAbrBipF,qBCYX,SAAAC,EAAoBz3E,EAAmC9N,GAAvD,IAAArD,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,EAElBnR,EAAKkE,OAASb,EAAQc,KAAK,IAAItK,OAAO,QA2F1C,OAvGyCL,EAAAovF,EAAA3oF,GAevC/G,OAAAqC,eAAIqtF,EAAAhvF,UAAA,qBAAkB,KAAtB,WACE,QAASF,KAAKmvF,yDAGhB3vF,OAAAqC,eAAIqtF,EAAAhvF,UAAA,oBAAiB,KAArB,WACE,QAASF,KAAKovF,wDAGhB5vF,OAAAqC,eAAIqtF,EAAAhvF,UAAA,wBAAqB,KAAzB,WACE,OAAOF,KAAKyJ,OAASzJ,KAAKyJ,MAAM9I,OAAS,GAAKX,KAAK0vC,SAASlM,UAAU7iC,OAAS,mCAGjFnB,OAAAqC,eAAIqtF,EAAAhvF,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKu0C,gBAAkBv0C,KAAKu0C,eAAe5zC,OAAS,GAAKX,KAAKu0C,eAAe5zC,QAAU,mCAGhGnB,OAAAqC,eAAIqtF,EAAAhvF,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKu0C,gBAAkBv0C,KAAKu0C,eAAe5zC,OAAS,mCAG7DnB,OAAAqC,eAAIqtF,EAAAhvF,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAK+tF,YAAYvqD,UAAU7iC,OAAS,mCAG7CnB,OAAAqC,eAAIqtF,EAAAhvF,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKwwC,SAAWxwC,KAAKwwC,QAAQvwB,QAAO,SAAAqa,GAAU,OAAmB,IAAnBA,EAAO0T,4CAG9DkhD,EAAAhvF,UAAAmvF,mBAAA,WACErvF,KAAKsvF,kBAGPJ,EAAAhvF,UAAA0K,UAAA,WACE5K,KAAKuvF,oBAGPL,EAAAhvF,UAAAsvF,eAAA,SAAe3hF,GACb,OAAI7N,KAAKyvF,cAAgB5hF,EAAK7N,KAAKyvF,cAC1B5hF,EAAK7N,KAAKyvF,cAAct7E,WAAW,QAAU,eAAiB,eAGhE,UAGT+6E,EAAAhvF,UAAAwvF,aAAA,SAAa7hF,GACX,OAAO7N,KAAK2vF,oBAAsB3vF,KAAKmvF,wBAAwB5oD,MAC3DvmC,KAAKmvF,wBAAwB5oD,MAAM14B,GACnCA,EAAK7N,KAAK4vF,gBAGhBV,EAAAhvF,UAAA2vC,SAAA,WACE,OAAO7vC,KAAKyJ,OAASzJ,KAAKyJ,MAAM9I,OAAS,GAG3CuuF,EAAAhvF,UAAAm6B,mBAAA,SAAmBi0D,EAAkCzgF,GACnD,OAAOuD,EAASk9E,EAAe51E,SAAU,YAC/B41E,EAAgB51E,SAAS7K,GAC/BygF,EAAe51E,UAGrBw2E,EAAAhvF,UAAAg3C,QAAA,SAAQp7B,GACN,OAAOA,GAGTozE,EAAAhvF,UAAAyqC,YAAA,SAAY98B,EAAMkpC,GAChB/2C,KAAKg3C,YAAcD,EACnB/2C,KAAKyX,eAAeqc,gBAEpB9zB,KAAKi3C,iBAAiBlwC,OAAO8G,IAGvBqhF,EAAAhvF,UAAAqvF,iBAAR,WACE,IAAM93C,EAAez3C,KAAKwK,OAAOe,KAAKvL,KAAKyJ,OAEvCguC,GAAgBz3C,KAAKovC,YACvBpvC,KAAKovC,UAAY,MAGfqI,GAAgBz3C,KAAKyJ,OAASzJ,KAAKyJ,MAAM9I,QAAUX,KAAKmuF,SAAWnuF,KAAK6wC,gBAC1E7wC,KAAK8tF,YAAa,IAIdoB,EAAAhvF,UAAAovF,eAAR,WAAA,IAAAhpF,EAAAtG,KACMA,KAAKyJ,OAASzJ,KAAKyJ,MAAM9I,OAAS,GAAKX,KAAK6vF,mBAAqB7vF,KAAKovF,uBAAuBU,YAC/F9vF,KAAKyJ,MAAMiW,SAAQ,SAAA7R,GAAQ,OAACA,EAAKskC,YAAc7rC,EAAK8oF,uBAAuBU,WAAWjiF,gDA1FtD6J,EAAAA,yBAA4BzK,EAAAA,mBARhE9L,EAAA,CADCg3C,EAAAA,aAAa62C,GAAoC,CAAE/oF,QAAQ,oBACnC+oF,mDAEzB7tF,EAAA,CADCg3C,EAAAA,aAAa82C,GAAmC,CAAEhpF,QAAQ,oBACnCgpF,kDAEc9tF,EAAA,CAArC4E,EAAAA,UAAU,QAAS,CAAEE,QAAQ,oBAA0B4zB,4CAN7Cq1D,EAAmB/tF,EAAA,CAZ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,iqJACAmB,WAAY,CACVC,EAAAA,QAAQ,iBAAkB,CACxB4wE,EAAAA,MAAM,IAAK1wE,EAAAA,MAAM,CAAEqoF,aAAc,aACjC3X,EAAAA,MAAM,OAAQ1wE,EAAAA,MAAM,CAAEqoF,aAAc,YACpCtoF,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,OAAQ,IAAKooF,aAAc,WAAanoF,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,OACtGF,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,OAAQ,MAAQC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,qCAc9C+P,EAAAA,kBAA4BzK,EAAAA,mBAVrDiiF,IAA4BrB,kBCHzC,SAAAmC,KAA+B,OAAlBA,EAAgB7uF,EAAA,CAP5BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,aAAcuJ,GAAgB8iB,IACtDjzB,aAAc,CAACymF,GAAqBF,GAAoCC,IACxEvmF,QAAS,CAACwmF,GAAqBF,GAAoCC,IACnE7nF,UAAW,GACXu0B,QAAS,MAEEq0D,MC7CPC,GAAkB,CACtB,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,0BAYF,SAAAC,KAiEA,OA1BoB1wF,OAAAqC,eAAIquF,EAAAhwF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAK2gF,YALI,SAAU79E,GAC1B9C,KAAK2gF,OAASsP,GAAgBnnF,SAAShG,GAASA,EAlDrB,4CA8DXtD,OAAAqC,eAAIquF,EAAAhwF,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKijC,YANI,SAAUngC,GAC1B9C,KAAKijC,OAASlyB,EAAajO,GAC3B9C,KAAKmwF,cAAcnwF,KAAKijC,yCAOlBitD,EAAAhwF,UAAAiwF,cAAR,SAAsBrtF,GACpB,IAAMstF,GAAmBttF,GAAmB,IAAVA,IAAgBA,GAAS,GAAKA,EAAQ,IACxE9C,KAAKqwF,WAAaD,EAAkBttF,EAAMiQ,WAAajQ,EAAQ,GAAK,WAAQqG,GAxB5DhI,EAAA,CAAjB2E,EAAAA,MAAM,8FAaW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FApDIoqF,EAAoB/uF,EAAA,CADhC4H,EAAAA,aACYmnF,qBCfb,SAAAI,mDAA4D,OAAtBxwF,EAAAwwF,EAAA/pF,GAAzB+pF,EAAgBnvF,EAAA,CAJ5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,6GAEWkqF,IAAyBJ,kBCEtC,SAAAK,KAA4B,OAAfA,EAAapvF,EAAA,CALzBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC6nF,IACf5nF,QAAS,CAAC4nF,OAECC,oBCUX,SAAAC,EAAoBjjF,GAAAvN,KAAAuN,KAAAA,EAgBtB,OApBE/N,OAAAqC,eAAI2uF,EAAAtwF,UAAA,MAAG,KAAP,WACE,OAAOF,KAAKwN,sCAKdgjF,EAAAtwF,UAAAy+C,iBAAA,SAAiBhxC,GACf3N,KAAKwN,KAAOG,GAGd6iF,EAAAtwF,UAAA2iD,gBAAA,SAAgBhE,EAAgBjxC,GAC9B,IAAMywC,EAAYj+C,EAAA,CAChBy+C,OAAMA,GACHjxC,GAGL,OAAO5N,KAAKuN,KACTc,IAAIrO,KAAK2N,IAAK,CAAEC,OAAQywC,IACxB0E,KAAK32C,EAAAA,KAAI,SAAC42C,GAAmD,OAAAA,GAAYA,EAASv5C,oDAd7D8E,EAAAA,cAPfiiF,EAAarvF,EAAA,CADzBqE,EAAAA,oCAQ2B+I,EAAAA,cAPfiiF,MCDAC,GAAwB,CACnC55E,GAAI,CAAE65E,aAAc,mBACpB35E,GAAI,CAAE25E,aAAc,2BACpB15E,GAAI,CAAE05E,aAAc,uCA2MpB,SAAAC,EAAmBC,GAAA5wF,KAAA4wF,YAAAA,EA9LX5wF,KAAA6wF,YAAa,EACb7wF,KAAA8wF,SAAU,EAGV9wF,KAAA+wF,UAAY,EACZ/wF,KAAAgxF,OAAS,GAWRhxF,KAAA43B,SAAQx3B,EAAAA,EAAA,GACZqwF,GAAqC,IACrCA,GAAsBlhF,MA2R7B,OAtQwB/P,OAAAqC,eAAI8uF,EAAAzwF,UAAA,YAAS,KAMnC,WACE,OAAOF,KAAK6wF,gBAPQ,SAAcphD,GAClCzvC,KAAK6wF,WAAajgF,EAAiB6+B,GAEnCzvC,KAAKixF,yDAQWzxF,OAAAqC,eAAI8uF,EAAAzwF,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKgxF,YALI,SAAUE,GAC1BlxF,KAAKgxF,OAASrxF,MAAMqW,QAAQk7E,GAASA,EAAQ,oCAO/C1xF,OAAAqC,eAAI8uF,EAAAzwF,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK+wF,2CAgBKvxF,OAAAqC,eAAI8uF,EAAAzwF,UAAA,SAAM,KAK7B,WACE,OAAOF,KAAK8wF,aANK,SAAW7wE,GAC5BjgB,KAAK8wF,QAA0B,KAAX7wE,GAAuBrP,EAAiBqP,GAC5DjgB,KAAKmxF,cAAapsF,EAAO/E,KAAKgxF,yCAiCZxxF,OAAAqC,eAAI8uF,EAAAzwF,UAAA,UAAO,KAM/B,WACE,OAAOF,KAAKoxF,cAPM,SAAYtuF,GAC9B9C,KAAKoxF,SAAWtuF,QAASqG,EAEzBnJ,KAAK0N,cAAc1N,KAAKyO,0CA2BPjP,OAAAqC,eAAI8uF,EAAAzwF,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKqxF,aALK,SAAWvuF,GAC5B9C,KAAKqxF,QAAUvuF,GAASsO,EAAStO,EAAO,UAAYA,OAAQqG,mCAmB7C3J,OAAAqC,eAAI8uF,EAAAzwF,UAAA,OAAI,KAIzB,WACE,OAAOF,KAAKsxF,WALG,SAASxuF,GACxB9C,KAAKsxF,MAAQlgF,EAAStO,EAAO,WAAaA,EAAMgO,OAAShO,OAAQqG,mCAqB5C3J,OAAAqC,eAAI8uF,EAAAzwF,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKuxF,gBALS,SAAczuF,GACnC9C,KAAKuxF,WAAangF,EAAStO,EAAO,WAAaA,EAAMgO,OAAShO,OAAQqG,mCAShEwnF,EAAAzwF,UAAAwN,cAAR,SAAsBe,GACG,iBAAZA,GAAwBA,EAAQqC,QAEzC9Q,KAAK4wF,YAAYjyC,iBAAiBlwC,GAClCzO,KAAK09C,cAAgB19C,KAAK4wF,aACE,iBAAZniF,GAAwBA,EAAQo0C,gBAEhD7iD,KAAK09C,cAAgBjvC,EAErBzO,KAAK09C,mBAAgBv0C,GAIfwnF,EAAAzwF,UAAAsxF,uBAAV,WAAA,IAAAlrF,EAAAtG,KACEA,KAAKyxF,aAAezxF,KAAKkxF,MAAMvwF,OAC/BX,KAAK0xF,oBAAsB1xF,KAAKkxF,MAAMvwF,OAEtCX,KAAKkxF,MAAMxxE,SAAQ,SAAAiyE,GACjBrrF,EAAKsrF,OAAS,EACdtrF,EAAKmrF,aAAanrF,EAAKmrF,YAAax9E,GAAW09E,EAAS91D,MACxDv1B,EAAKorF,qBAAoBprF,EAAKorF,oBAAqBprF,EAAKmrF,aAAax9E,GAAW09E,EAASE,YACzFvrF,EAAKwrF,iBAAiBH,GACtBrrF,EAAKyrF,sBAAsBJ,GAEvBA,EAASK,WACX1rF,EAAKsrF,SACLtrF,EAAK2rF,gBAAgBN,QAKjBhB,EAAAzwF,UAAA6xF,sBAAV,SAAgCJ,GAC9BA,EAAa,GAAIA,EAAa,IAAKz8E,EAAAA,KACnCy8E,EAAgB,MAAI3xF,KAAK4xF,OACzBD,EAAe,KAAI3xF,KAAKkyF,YAAYP,IAG5BhB,EAAAzwF,UAAAiyF,cAAV,SAAwBjB,GAAxB,IAAA5qF,EAAAtG,KACEkxF,EAAMxxE,SAAQ,SAAA0yE,GAAQ,OAAA9rF,EAAK+rF,aAAaD,OAGlCzB,EAAAzwF,UAAA+xF,gBAAR,SAAwBG,GAAxB,IAAA9rF,EAAAtG,KACEoyF,EAAKJ,SAAStyE,SAAQ,SAACiyE,EAAU71E,EAAOw2E,GACtC,IAAMC,EAAeD,EAAUx2E,EAAQ,GACnCy2E,GAAgBA,EAAaP,WAC/B1rF,EAAKsrF,OAASW,EAAoB,OAGhCjsF,EAAKsrF,QAAUtrF,EAAKksF,WACtBlsF,EAAKyrF,sBAAsBJ,GAEvBA,EAASK,WACX1rF,EAAKsrF,SACLtrF,EAAK2rF,gBAAgBN,KAIpBS,EAAiB,aACpBA,EAAO9rF,EAAKmsF,kBAAkBL,EAAMT,OAIxCS,EAAKJ,SAAWxyF,OAAOa,OAAO,GAAI+xF,EAAKJ,WAGjCrB,EAAAzwF,UAAA4xF,iBAAR,SAAyBH,GAAzB,IAAArrF,EAAAtG,KACM2xF,EAAqB,mBAChBA,EAAqB,WAG1BA,EAASK,UACXL,EAASK,SAAStyE,SAAQ,SAAAgzE,GAAW,OAAApsF,EAAKwrF,iBAAiBY,OAIvD/B,EAAAzwF,UAAAuyF,kBAAR,SAA0BE,EAAoBC,GAC5C,IAAMC,EAAmBD,EAAMZ,UAAYY,EAAMZ,SAASrxF,OACpDmyF,EAAqBF,EAAkB,WACvCG,EAAgBH,EAAMI,OAASjiF,EAAa6hF,EAAMI,MAAMlwF,QAAU,EAIxE,OAFA6vF,EAAmB,WAAIG,GAAuBC,IAAkBF,EAEzDF,GAGDhC,EAAAzwF,UAAAgyF,YAAR,SAAoBP,GAClB,OAAIA,EAASK,UAAYL,EAASK,SAASrxF,OAAS,GAAKX,KAAK4xF,OAAS5xF,KAAKwyF,SACnE,WAEJb,EAAS5jF,KAGVmG,GAAey9E,EAAS5jF,MACnB,eAEF,eALE,UAQH4iF,EAAAzwF,UAAAmyF,aAAR,SAAqBV,GAArB,IAAArrF,EAAAtG,KACE,IAAK2xF,EAAShuF,OAAmC,KAA1BguF,EAAShuF,MAAMmN,OACpC,MAAM,IAAIyT,MAAM,mDACPotE,EAASK,UAClBL,EAASK,SAAStyE,SAAQ,SAAAgzE,GACxBpsF,EAAK+rF,aAAaK,gDAzGQlC,MAvJVrvF,EAAA,CAArB2E,EAAAA,MAAM,wGAWW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAyBhBwB,EAAA,CAAlB2E,EAAAA,MAAM,kGAmCa3E,EAAA,CAAnB2E,EAAAA,MAAM,kGA8BY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAoBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAsBgB3E,EAAA,CAAtB2E,EAAAA,MAAM,uGAvLa6qF,EAAmBxvF,EAAA,CADxC4H,EAAAA,mCAgMiCynF,MA/LZG,oBCUpB,SAAAsC,EAAmBr/C,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAFrBitF,EAA6B9xF,EAAA,CAHzC4H,EAAAA,UAAU,CACT5C,SAAU,oDAIsBH,EAAAA,eAFrBitF,oBC5Bb,SAAAC,IACUlzF,KAAAmzF,cAAgB,IAAIhuF,EAAAA,QACpBnF,KAAAkF,aAAe,IAAIC,EAAAA,QAqB7B,OAlBE+tF,EAAAhzF,UAAAkzF,wBAAA,SAAwBhB,GACtBpyF,KAAKkF,aAAalC,KAAKovF,IAIzBc,EAAAhzF,UAAAmzF,4BAAA,WACE,OAAOrzF,KAAKkF,aAAaG,gBAI3B6tF,EAAAhzF,UAAAozF,uBAAA,SAAuBlB,GACrBpyF,KAAKmzF,cAAcnwF,KAAKovF,IAI1Bc,EAAAhzF,UAAAqzF,6BAAA,WACE,OAAOvzF,KAAKmzF,cAAc9tF,gBArBjB6tF,EAAkB/xF,EAAA,CAD9BqE,EAAAA,cACY0tF,qBC8HX,SAAAM,EACS/7E,EACP0I,EACQvW,EACAC,EACAkwB,EACA05D,EACR7C,GAPF,IAAAtqF,EASEC,EAAA3F,KAAAZ,KAAM4wF,IAAY5wF,YARXsG,EAAAmR,eAAAA,EAECnR,EAAAsD,QAAAA,EACAtD,EAAAuD,SAAAA,EACAvD,EAAAyzB,OAAAA,EACAzzB,EAAAmtF,iBAAAA,EAtBVntF,EAAAotF,eAAgB,EAGhBptF,EAAAqtF,cAAwB,EACxBrtF,EAAAmoC,QAAkB,EAIVnoC,EAAAstF,gBAA0B,EAC1BttF,EAAAutF,iBAA2B,EAC3BvtF,EAAAwtF,aAAuB,KAgB7BxtF,EAAK8Z,UAAYD,EAAmB,UAAE,KAwa1C,OAvcqCrgB,EAAA0zF,EAAAjtF,GAkCnC/G,OAAAqC,eAAY2xF,EAAAtzF,UAAA,0BAAuB,KAAnC,WACE,OAAOF,KAAK+zF,eAAsB,MAAI/zF,KAAKg0F,gBAAuB,uCAGpEx0F,OAAAqC,eAAI2xF,EAAAtzF,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKi0F,cAAgBj0F,KAAKk0F,iDAGnC10F,OAAAqC,eAAI2xF,EAAAtzF,UAAA,uBAAoB,KAAxB,WACE,OAAOF,KAAK0xF,oBAAsB1xF,KAAKyvC,YAAczvC,KAAK2zF,8CAG5Dn0F,OAAAqC,eAAI2xF,EAAAtzF,UAAA,YAAS,KAAb,WACE,OACGF,KAAK0xF,oBAAsB1xF,KAAK2zF,cAAgB3zF,KAAKm0F,sBACrDn0F,KAAKyvC,YAAczvC,KAAKk0F,iDAI7B10F,OAAAqC,eAAI2xF,EAAAtzF,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK0xF,mBAAqB1xF,KAAKyvC,2CAGxC+jD,EAAAtzF,UAAA0K,UAAA,WACE,IAAI5K,KAAK4zF,iBAAkB5zF,KAAKigB,OAAhC,CAIA,IAAMm0E,EAAcvzC,KAAKC,UAAU9gD,KAAKkxF,OAEpClxF,KAAK8zF,eAAiBM,GAAgBp0F,KAAK6zF,kBAC7C7zF,KAAKq0F,aACLr0F,KAAKixF,2BAITuC,EAAAtzF,UAAAuG,YAAA,WACEzG,KAAKs0F,iBAAiB3tF,cACtB3G,KAAKu0F,kBAAkB5tF,cAEnB3G,KAAKgN,gBACPhN,KAAKgN,kBAITwmF,EAAAtzF,UAAA+I,SAAA,WAAA,IAAA3C,EAAAtG,KACEA,KAAKw0F,sBACLx0F,KAAKy0F,mBAEL5nF,YAAW,WACT,IAAM6nF,EAAYpuF,EAAKquF,kCACvBruF,EAAKsuF,qBAAqBF,OAI9BlB,EAAAtzF,UAAA20F,kBAAA,SAAkBC,EAAiB5D,GAAnC,IAAA5qF,EAAAtG,KACE,GAAIkxF,EACF,OAAOA,EAAMt4D,MAAK,SAAAw5D,GAChB,IAAM79E,EAAgBD,GAAiB89E,EAAKrkF,MAC5C,OAAIwG,IAAkBugF,GACpBxuF,EAAKyuF,WAAaxgF,EAClBjO,EAAK0uF,iBAAiB5C,IACf,GAEA9rF,EAAKuuF,kBAAkBC,EAAS1C,EAAKJ,cAMpDwB,EAAAtzF,UAAA00F,qBAAA,SAAqBE,GACd90F,KAAK+0F,YAAc/0F,KAAK+0F,aAAeD,GAC1C90F,KAAK60F,kBAAkBC,EAAS90F,KAAKkxF,QASzCsC,EAAAtzF,UAAAyF,SAAA,WACE3F,KAAKi1F,oBAAmB,IAG1BzB,EAAAtzF,UAAAg1F,eAAA,SAAej1E,GAAf,IAAA3Z,EAAAtG,KACE2M,aAAa3M,KAAKm1F,eAElBn1F,KAAKm1F,cAAgBtoF,YAAW,WAC9BvG,EAAK8uF,cAAcn1E,KAtNE,MA+NzBuzE,EAAAtzF,UAAA2F,OAAA,WACE7F,KAAKi1F,oBAAmB,IAG1BzB,EAAAtzF,UAAAs0F,oBAAA,WAAA,IAAAluF,EAAAtG,KACEA,KAAKs0F,iBAAmBt0F,KAAKyzF,iBAAiBJ,8BAA8BrsF,WAAU,SAACorF,GACrF9rF,EAAK+uF,cAAcjD,OAIvBoB,EAAAtzF,UAAAu0F,iBAAA,WAAA,IAAAnuF,EAAAtG,KACEA,KAAKu0F,kBAAoBv0F,KAAK+5B,OAAOu7D,OAAOtuF,WAAU,SAAA6J,GACpD,GAAIA,aAAe0kF,EAAAA,eAAiB1kF,aAAe2kF,EAAAA,iBAAkB,CACnE,IAAMd,EAAYpuF,EAAKquF,kCACvBruF,EAAKsuF,qBAAqBF,QAYhClB,EAAAtzF,UAAA6G,OAAA,WACE/G,KAAKi1F,oBAAoBj1F,KAAKyvC,YAGhC+jD,EAAAtzF,UAAAu1F,iBAAA,WACEz1F,KAAK2zF,cAAgB3zF,KAAK2zF,aAC1B3zF,KAAKk0F,gBAAkBl0F,KAAKyvC,WAAazvC,KAAK2zF,aAE9C3zF,KAAKixF,sBAAsBjxF,KAAKk0F,iBAE5B7gF,MAIArT,KAAK2zF,cACP3zF,KAAK01F,wBAIDlC,EAAAtzF,UAAAy1F,4BAAR,WACE31F,KAAK41F,2BAA2B51F,KAAK+zF,iBAEhC/zF,KAAKyvC,WAAazvC,KAAK+zF,eAAsB,MA7Q9B,GA6QqD/zF,KAAK61F,yBAC5E71F,KAAK81F,eAAe91F,KAAK+zF,iBAIrBP,EAAAtzF,UAAA80F,iBAAR,SAAyB5C,GACvBpyF,KAAK+zF,eAAiB3B,EACtBpyF,KAAK+0F,WAAa3C,EAAKrkF,KACnB/N,KAAK+zF,eAAsB,MArRX,EAsRlB/zF,KAAK81F,eAAe91F,KAAK+zF,gBAEzB/zF,KAAKg0F,gBAAkB,KAEzBh0F,KAAKyzF,iBAAiBH,uBAAuB,CAC3CyC,OAAQ/1F,KAAK+zF,eACbiC,QAASh2F,KAAKg0F,gBACdiC,kBAAkB,KAIdzC,EAAAtzF,UAAAg2F,YAAR,SAAoBhF,GAClB,OAAOA,EAAM/wD,OAAM,SAAAiyD,GAAQ,OAAAA,EAAY,MAlSnB,MAqSdoB,EAAAtzF,UAAAy0F,gCAAR,WACE,IAAMwB,EAAkBn2F,KAAK+5B,OAAOq8D,SAASp2F,KAAK+5B,OAAOpsB,KAAK0oF,KAAKC,SAAkB,QAErF,OAAOH,EAAkB,IAAIA,EAAgBI,SAASnqF,KAAI,SAAAoqF,GAAM,OAAAA,EAAGjqE,QAAMkB,KAAK,KAAS,IAGjF+lE,EAAAtzF,UAAA01F,2BAAR,SAAmC7B,GA3Sb,IA4ShBA,EAAsB,QACxB/zF,KAAKg0F,qBAAkB7qF,IAInBqqF,EAAAtzF,UAAAm1F,cAAR,SAAsBjD,GAChBA,EAAK93D,QACPt6B,KAAKy2F,kBAAkBrE,GAGJ,iBAAjBA,EAAW,KACbh+E,GAAiBg+E,EAAKrkF,MACI,iBAAjBqkF,EAAW,KACpBpyF,KAAKg1F,iBAAiB5C,GACI,aAAjBA,EAAW,OAChBpyF,KAAK4zF,iBACP5zF,KAAK4zF,gBAAiB,GAGxB5zF,KAAK02F,cAActE,IAGA,aAAjBA,EAAW,OACbpyF,KAAK2zF,cAAe,IAIhBH,EAAAtzF,UAAAy2F,0BAAR,SAAkChF,QAAA,IAAAA,IAAAA,EAAA,CAAkBhuF,MAAO,GAAIoK,KAAM,KAC3D,IAEF6oF,EAAuC,CAAEjzF,MAFvCguF,EAAAhuF,MAE8CoK,KAFvC4jF,EAAA5jF,MAMf,OAFA/N,KAAK+xF,sBAAsB6E,GAEpBA,GAGDpD,EAAAtzF,UAAAw1F,qBAAR,WAAA,IAAApvF,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAC7DzG,EAAKuwF,eACLvwF,EAAK0G,qBAIDwmF,EAAAtzF,UAAAu2F,kBAAR,SAA0BrE,GACG,iBAAhBA,EAAK93D,OACdt6B,KAAKogB,UAAUgyE,EAAK93D,QAAQ83D,GAE5BA,EAAK93D,OAAO15B,KAAKZ,KAAKogB,UAAWgyE,IAIvBoB,EAAAtzF,UAAA42F,YAAd,SAA0B72E,8GAClB82E,EAAa92E,GAAUA,EAAOnP,SAGlC9Q,KAAKmxF,cAAgB,GACrBr7E,EAAA9V,KAAqBA,KAAK09C,cACtB,CAAA,EAAM19C,KAAKg3F,gBAAgBD,IADV,CAAA,EAAA,IAFnB,CAAA,EAAA,iBAGE3oD,EAAA8vC,EAAAt6E,oBACAwqC,EAAApuC,KAAKi3F,iBAAiBF,2BAF1BjhF,EAAKq7E,cAAa/iD,EAGlBpuC,KAAK4zF,gBAAiB,eAEtB5zF,KAAKmxF,cAAapsF,EAAO/E,KAAKkxF,OAC9BlxF,KAAK4zF,gBAAiB,qCAIlBJ,EAAAtzF,UAAA+2F,iBAAR,SAAyBh3E,GACvB,IAAMkxE,EAAgB,GAItB,OAFAnxF,KAAKk3F,UAAUl3F,KAAKkxF,MAAOjxE,EAAO1P,cAAe4gF,GAE1CA,GAGDqC,EAAAtzF,UAAAk1F,cAAR,SAAsBn1E,GAAtB,IAAA3Z,EAAAtG,KACEA,KAAK0zF,eAAgB,EAErB1zF,KAAK82F,YAAY72E,GACd7c,MAAK,WACJkD,EAAKotF,eAAgB,EAErBptF,EAAK6wF,aACL7wF,EAAKmR,eAAeqc,gBACpBxtB,EAAKmtF,iBAAiBH,uBAAuB,CAAEyC,OAAQzvF,EAAKytF,eAAgBiC,QAAS1vF,EAAK0tF,qBAE3FoD,OAAM,SAAAtyF,GACLwB,EAAKotF,eAAgB,EACrBhxF,QAAQE,OAAOkC,OAIP0uF,EAAAtzF,UAAA82F,gBAAd,SAA8Bn4C,eAAA,IAAAA,IAAAA,EAAA,yGACxBA,EAAOl+C,QA1YS,EA2YX,CAAA,EAAMX,KAAK09C,cACfmF,gBAAgBhE,EAAQ7+C,KAAK4N,QAC7Bm1C,KAAK32C,EAAAA,KAAI,SAAAirF,GAAqB,OAAAA,EAAkBjrF,KAAI,SAAAulF,GAAY,OAAArrF,EAAKqwF,0BAA0BhF,UAC/FxJ,aAJD,CAAA,EAAA,UACF,MAAA,CAAA,EAAOryE,EAAAlS,eAKP,MAAA,CAAA,EAAO5D,KAAKmxF,uBAIRqC,EAAAtzF,UAAAg3F,UAAR,SAAkBhG,EAA0BjxE,EAAgBkxE,GAA5D,IAAA7qF,EAAAtG,KACEkxF,EAAMxxE,SAAQ,SAAA0yE,IAETA,EAAKzuF,MAAM4M,cAAczH,SAASmX,KAAYmyE,EAAKJ,UACnDI,EAAKJ,UAAY1rF,EAAK4wF,UAAU9E,EAAKJ,SAAU/xE,EAAQkxE,KAExDA,EAAc3sF,KAAK4tF,OAKjBoB,EAAAtzF,UAAAo3F,WAAR,SAAmBpG,EAA0BS,GAC3C,IAAM4F,EAAY,SAAUjF,EAA8B/xD,GACxD,GAAI+xD,EACF,IAAK,IAAIx2E,EAAQ,EAAGA,EAAQw2E,EAAU3xF,OAAQmb,IAAS,CACrD,IAAMs2E,EAAOE,EAAUx2E,GACvB,GAAIs2E,EAAKJ,UAAYI,EAAKJ,SAASvnF,MAAK,SAAAioF,GAAW,OAAAA,EAAY,KAAMnyD,KACnE,OAAO6xD,EAET,IAAM9xC,EAAQi3C,EAAUnF,EAAKJ,SAAUzxD,GACvC,GAAI+f,EACF,OAAOA,IAKf,OAAOi3C,EAAUrG,EAAOS,EAAa,KAG/B6B,EAAAtzF,UAAAs3F,eAAR,SAAuBtG,EAA0BkB,GAC/C,IAAMkF,EAAat3F,KAAKs3F,WAElBG,EAAgB,SAAUnF,EAA8BX,GAC5D,IAAIgB,EAAS2E,EAAWhF,EAAWX,GAKnC,OAzbkB,IAsbdgB,EAAc,QAChBA,EAAS8E,EAAcnF,EAAWK,IAE7BA,GAET,OAAO8E,EAAcvG,EAAOkB,IAGtBoB,EAAAtzF,UAAAw3F,oBAAR,SAA4BxG,EAA0B6C,EAA4BC,GAChF,GAAIh0F,KAAKk2F,YAAY,CAAClC,EAAiBD,IACrC,OAAO/zF,KAAKw3F,eAAetG,EAAO6C,IAI9BP,EAAAtzF,UAAAw2F,cAAR,SAAsBtE,GAChBpyF,KAAKyvC,WACPzvC,KAAK23F,qBAGPvF,EAAe,UAAKA,EAAe,SACnCpyF,KAAKg0F,gBAAkB5B,EAGrBpyF,KAAK+zF,gBACL3B,EAAe,UACfpyF,KAAK61F,yBACL71F,KAAK43F,2BAA2B53F,KAAKkxF,MAAOlxF,KAAK+zF,eAAgB3B,IAEjEpyF,KAAKg1F,iBAAiBh1F,KAAK+zF,gBAG7B/zF,KAAKyzF,iBAAiBH,uBAAuB,CAAEyC,OAAQ/1F,KAAK+zF,eAAgBiC,QAASh2F,KAAKg0F,mBAGpFR,EAAAtzF,UAAA03F,2BAAR,SACE1G,EACA6C,EACAC,GAGA,OAD6Bh0F,KAAKw3F,eAAetG,EAAO6C,GACxB,KAAMC,EAAoB,IAGpDR,EAAAtzF,UAAA41F,eAAR,SAAuB+B,GACrB,IAAMlF,EAAS3yF,KAAKs3F,WAAWt3F,KAAKkxF,MAAO2G,GAC3ClF,EAAiB,UAAI,EACrB3yF,KAAKg0F,gBAAkBrB,GAGjBa,EAAAtzF,UAAAi3F,WAAR,WACEn3F,KAAKyuC,OAAuC,IAA9BzuC,KAAKmxF,cAAcxwF,QAG3B6yF,EAAAtzF,UAAA43F,sBAAR,WACE93F,KAAKg0F,gBAA0B,UAAKh0F,KAAKyvC,WAAazvC,KAAK0xF,mBAGrD8B,EAAAtzF,UAAAy3F,mBAAR,SAA2BloD,QAAA,IAAAA,IAAAA,GAAA,GACzBzvC,KAAKyvC,UAAYA,EAEbzvC,KAAKg0F,iBAAmBh0F,KAAK+zF,iBAC/B/zF,KAAKg0F,gBACHh0F,KAAK03F,oBAAoB13F,KAAKkxF,MAAOlxF,KAAK+zF,eAAgB/zF,KAAKg0F,kBAAoBh0F,KAAKg0F,gBAC1Fh0F,KAAK83F,yBAGH93F,KAAK+zF,iBACP/zF,KAAK21F,8BACL31F,KAAKyzF,iBAAiBH,uBAAuB,CAC3CyC,OAAQ/1F,KAAK+zF,eACbiC,QAASh2F,KAAKg0F,gBACdiC,kBAAkB,KAItBj2F,KAAKq0F,cAGCb,EAAAtzF,UAAA22F,aAAR,WACM72F,KAAK2zF,eACP3zF,KAAK2zF,cAAe,EACpB3zF,KAAKk0F,iBAAkB,EACvBl0F,KAAKixF,sBAAsBjxF,KAAKk0F,mBAI5BV,EAAAtzF,UAAA+0F,mBAAR,SAA2BxlD,GACpBzvC,KAAK0xF,mBAIV1xF,KAAK23F,mBAAmBloD,IAGlB+jD,EAAAtzF,UAAAm0F,WAAR,WACEr0F,KAAK6zF,iBAAkB,EACvB7zF,KAAKwxF,yBACLxxF,KAAKmxF,cAAapsF,EAAO/E,KAAKkxF,OAC9BlxF,KAAK8zF,aAAejzC,KAAKC,UAAU9gD,KAAKkxF,OACxClxF,KAAKmyF,cAAcnyF,KAAKkxF,QAGhBsC,EAAAtzF,UAAA+wF,sBAAV,SAAgCiD,GAC9B,IAAM6D,EAAU/3F,KAAK4J,QAAQkB,cAAco6D,WAC3CllE,KAAK6J,SAAS7J,KAAKi0F,cAAgBC,EAAkB,WAAa,eAAe6D,EAAS,+DA/anErgF,EAAAA,yBACd2I,EAAAA,wBACQnT,EAAAA,kBACCC,EAAAA,iBACFsuB,EAAAA,cACUy3D,UACb1C,MA3BgDrvF,EAAA,CAA9Dg3C,EAAAA,aAAa86C,GAA+B,CAAEhtF,QAAQ,oBAA4BgtF,8CADxEO,EAAeryF,EAAA,CAL3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,qrFACAgB,UAAW,CAAC8rF,GAAoB1C,6BAwBP94E,EAAAA,kBACd2I,EAAAA,iBACQnT,EAAAA,WACCC,EAAAA,UACFsuB,EAAAA,OACUy3D,GACb1C,MA5BJgD,IAAwB7C,kBCxGrC,SAAAqH,IAEWh4F,KAAA07C,OAAQ,EAOG17C,KAAAigB,OAAS,IAAInY,EAAAA,aAKnC,OAHEkwF,EAAA93F,UAAA42F,YAAA,SAAYj4C,GACV7+C,KAAKigB,OAAOjY,KAAK62C,IARC19C,EAAA,CAAnB2E,EAAAA,MAAM,qEAGuD3E,EAAA,CAA7D4E,EAAAA,UAAU,cAAe,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA4BiH,EAAAA,sDAE9D/L,EAAA,CAAnB8G,EAAAA,OAAO,kEATG+vF,EAAqB72F,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,mlBAEW4xF,oBCuGX,SAAAC,EAAoBxE,GAAAzzF,KAAAyzF,iBAAAA,EA3FZzzF,KAAAk4F,aAAuB,EACvBl4F,KAAAm4F,YAAsB,EAI9Bn4F,KAAAo4F,UAAoB,EA8MtB,OAhM0B54F,OAAAqC,eAAIo2F,EAAA/3F,UAAA,aAAU,KAItC,WACE,OAAOF,KAAKq4F,iBALU,SAAehI,GACrCrwF,KAAKq4F,YAActnF,EAAas/E,oCAoBV7wF,OAAAqC,eAAIo2F,EAAA/3F,UAAA,aAAU,KAKtC,WACE,OAAOF,KAAKk4F,iBANU,SAAep1F,GACrC9C,KAAKk4F,YAActnF,EAAiB9N,GAEpC9C,KAAKs4F,kBAAoBt4F,KAAKu4F,YAAcv4F,KAAKw4F,2CAO3Bh5F,OAAAqC,eAAIo2F,EAAA/3F,UAAA,YAAS,KAIrC,WACE,OAAOF,KAAKm4F,gBALU,SAAcr1F,GACpC9C,KAAKm4F,WAAavnF,EAAiB9N,oCAoBftD,OAAAqC,eAAIo2F,EAAA/3F,UAAA,WAAQ,KAOlC,WACE,OAAOF,KAAKy4F,eARQ,SAAaC,GACjC14F,KAAKy4F,UAAYC,EACb14F,KAAK24F,UACP34F,KAAK44F,6DAaTp5F,OAAAqC,eAAIo2F,EAAA/3F,UAAA,eAAY,KAAhB,WACE,MAAqB,aAAdF,KAAKsR,OAAwBtR,KAAKqwF,YAAkC,IAApBrwF,KAAKqwF,aAAqBrwF,KAAKqwF,YAAc,mCAKtG4H,EAAA/3F,UAAAuG,YAAA,WACEzG,KAAKs0F,iBAAiB3tF,eAGxBsxF,EAAA/3F,UAAA+I,SAAA,WAAA,IAAA3C,EAAAtG,KAEEA,KAAKs0F,iBAAmBt0F,KAAKyzF,iBAAiBF,+BAA+BvsF,WAAU,SAAAorF,GACrF9rF,EAAKuyF,gBAAgBzG,OAIzB6F,EAAA/3F,UAAAm1F,cAAA,SAAcxuF,GACNA,EAAM2hD,SAAW3hD,EAAM4hD,UAC3B5hD,EAAM+5B,iBAGN5gC,KAAKyzF,iBAAiBL,wBAAwB,CAC5CrlF,KAAM/N,KAAK+N,KACXusB,OAAQt6B,KAAKs6B,OACbiG,GAAIvgC,KAAKugC,GACT1E,KAAM77B,KAAK67B,KACXl4B,MAAO3D,KAAK2D,MACZm1F,MAAO94F,KAAK84F,MACZ9G,SAAUhyF,KAAKgyF,SACfuG,WAAYv4F,KAAKu4F,WACjBI,SAAU34F,KAAK24F,SACf9G,WAAY7xF,KAAK6xF,WACjBvgF,KAAMtR,KAAKsR,SAKT2mF,EAAA/3F,UAAA64F,mBAAR,SACEC,EACAC,EACAC,EACAjD,GAEIj2F,KAAKugC,KAAO04D,EAAe,KAC7Bj5F,KAAKo4F,UAnJmB,GAmJPp4F,KAAKgyF,SAASrxF,QAG7Bu4F,IACFl5F,KAAKo4F,UAAYa,EAAqB,SAClCj5F,KAAKo4F,UAxJe,GAwJHa,EAAWjH,SAASrxF,OACrCX,KAAKo4F,UAzJe,GAyJHa,EAAWjH,SAASrxF,OAErCs1F,IACFj2F,KAAKo4F,UAAYp4F,KAAKm5F,iBAAiB,EAAGn5F,KAAMg5F,MAK9Cf,EAAA/3F,UAAAk5F,aAAR,SAAqBhH,GACnBpyF,KAAKu4F,WAAanG,GAAQpyF,KAAKugC,KAAO6xD,EAAK7xD,IAGrC03D,EAAA/3F,UAAA04F,0BAAR,WAAA,IAAAtyF,EAAAtG,KACE6M,YAAW,WACQlN,MAAMwM,KAAK7F,EAAK+yF,aAAavuF,cAAcoB,iBAAiB,kBACpEwT,SAAQ,SAACiyE,GAAkB,OAACrrF,EAAK8xF,WAAazG,EAAS7+D,oBAI5DmlE,EAAA/3F,UAAAi5F,iBAAR,SAAyBG,EAAuB3H,EAAsBqH,GAGpE,GAFAM,GA7K0B,GA+KtB3H,EAASK,UAAYhyF,KAAKu5F,WAAW5H,EAASK,SAAUgH,EAAe,IACzE,IAAK,IAAIl9E,EAAQ,EAAGA,EAAQ61E,EAASK,SAASrxF,OAAQmb,IACpDw9E,EAAgBt5F,KAAKm5F,iBAAiBG,EAAe3H,EAASK,SAASl2E,GAAQk9E,GAInF,OAAOM,GAGDrB,EAAA/3F,UAAAs5F,YAAR,SAAoBR,EAAwBC,EAAwBhD,QAAA,IAAAA,IAAAA,GAAA,GAClE,IAAMiD,KACJD,GAAcj5F,KAAKugC,KAAO04D,EAAe,KAAIj5F,KAAKu5F,WAAWv5F,KAAKgyF,SAAUiH,EAAe,IAE7Fj5F,KAAK24F,SAAW34F,KAAKy5F,aAAaR,EAAYC,GAE9Cl5F,KAAKu4F,cAAaS,GAAeh5F,KAAK24F,WAAW34F,KAAKu5F,WAAWv5F,KAAKgyF,SAAUgH,EAAe,IAE1Fh5F,KAAK24F,SAIV34F,KAAK+4F,mBAAmBC,EAAYC,EAAYC,EAAkBjD,GAHhEj2F,KAAKo4F,UAAY,GAMbH,EAAA/3F,UAAAq5F,WAAR,SAAmBvH,EAA6BzxD,GAAhD,IAAAj6B,EAAAtG,KACE,GAAIgyF,EACF,OAAOA,EAASp5D,MAAK,SAAA/qB,GACnB,OAAOA,EAAS,KAAM0yB,GAAYj6B,EAAKizF,WAAW1rF,EAAKmkF,SAAUzxD,OAK/D03D,EAAA/3F,UAAAu5F,aAAR,SAAqBR,EAAwBC,GAC3C,QAAID,IACKj5F,KAAKugC,KAAO04D,EAAe,GAAIA,EAAqB,SAAIC,IAM3DjB,EAAA/3F,UAAA24F,gBAAR,SAAwBzG,GACJ,iBAAdpyF,KAAKsR,KAKS,aAAdtR,KAAKsR,MACPtR,KAAKw5F,YAAYpH,EAAK2D,OAAQ3D,EAAK4D,QAAS5D,EAAK6D,kBALjDj2F,KAAKo5F,aAAahH,EAAK2D,kDA/GW7C,MAjFnB/xF,EAAA,CAAlB2E,EAAAA,MAAM,kEAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,yGASoB3E,EAAA,CAA1B2E,EAAAA,MAAM,kFAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGQ3E,EAAA,CAAd2E,EAAAA,MAAM,0DAGe3E,EAAA,CAArB2E,EAAAA,MAAM,wEAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2GAUiB3E,EAAA,CAAvB2E,EAAAA,MAAM,0GASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGiB3E,EAAA,CAAvB2E,EAAAA,MAAM,2EAGe3E,EAAA,CAArB2E,EAAAA,MAAM,+BAAsCnG,8BAAAA,sCAY5BwB,EAAA,CAAhB2E,EAAAA,MAAM,8DAEoB3E,EAAA,CAA1B4E,EAAAA,UAAU,gCAA8BmH,EAAAA,gDAvF9B+qF,EAAmB92F,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,q5FA+FsC8sF,MA7F3B+E,oBCAb,SAAAyB,KAA2B,OAAdA,EAAYv4F,EAAA,CALxBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,aAAckhF,GAAe7Q,GAAe1nE,IACpEvP,aAAc,CAAC+qF,GAAiBwE,GAAuB/E,GAA+BgF,IACtFvvF,QAAS,CAAC8qF,GAAiBP,OAEhByG,oBCLb,SAAAC,KAiDA,OA7CoBn6F,OAAAqC,eAAI83F,EAAAz5F,UAAA,QAAK,KAO3B,WACE,OAAOF,KAAKgxF,YARI,SAAUE,GAC1BlxF,KAAKgxF,OAASrxF,MAAMqW,QAAQk7E,GAASA,EAAQ,GAE7ClxF,KAAKwxF,uBAAuBxxF,KAAKgxF,QACjChxF,KAAKmyF,cAAcnyF,KAAKgxF,yCAOlB2I,EAAAz5F,UAAAsxF,uBAAR,SAA+BN,GAA/B,IAAA5qF,EAAAtG,KACEkxF,EAAMxxE,SAAQ,SAAAiyE,GAAY,OAAArrF,EAAKyrF,sBAA+CJ,OAGxEgI,EAAAz5F,UAAA6xF,sBAAR,SAA8BJ,GAC5BA,EAASpxD,GAAKoxD,EAASpxD,IAAMrrB,EAAAA,KAC7By8E,EAASrgF,KAAOtR,KAAKkyF,YAAYP,IAG3BgI,EAAAz5F,UAAAgyF,YAAR,SAAoBP,GAClB,OAAKA,EAAS5jF,KAIVmG,GAAey9E,EAAS5jF,MACnB,eAGF,eAPE,UAUH4rF,EAAAz5F,UAAAmyF,aAAR,SAAqBV,GACnB,IAAKA,EAAShuF,MACZ,MAAM,IAAI4gB,MAAM,wDAGlB,IAAKotE,EAAS91D,KACZ,MAAM,IAAItX,MAAM,wDAIZo1E,EAAAz5F,UAAAiyF,cAAR,SAAsBjB,GAAtB,IAAA5qF,EAAAtG,KACEkxF,EAAMxxE,SAAQ,SAAA0yE,GAAQ,OAAA9rF,EAAK+rF,aAAaD,OA3CxBjxF,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAJxBg6F,EAAwBx4F,EAAA,CADpC4H,EAAAA,aACY4wF,oBCNb,SAAAC,IACU55F,KAAAkF,aAAe,IAAIC,EAAAA,QACnBnF,KAAAmzF,cAAgB,IAAIhuF,EAAAA,QAqB9B,OAlBEy0F,EAAA15F,UAAAmzF,4BAAA,WACE,OAAOrzF,KAAKkF,aAAaG,gBAI3Bu0F,EAAA15F,UAAAqzF,6BAAA,WACE,OAAOvzF,KAAKmzF,cAAc9tF,gBAI5Bu0F,EAAA15F,UAAAkzF,wBAAA,SAAwBhB,GACtBpyF,KAAKkF,aAAalC,KAAKovF,IAIzBwH,EAAA15F,UAAAozF,uBAAA,SAAuBlB,GACrBpyF,KAAKmzF,cAAcnwF,KAAKovF,IArBfwH,EAAuBz4F,EAAA,CADnCqE,EAAAA,cACYo0F,qBCiFX,SAAAC,EACE15E,EACQ25E,EACArG,EACA15D,GAJV,IAAAzzB,EAMEC,EAAA3F,KAAAZ,OAAOA,YAJCsG,EAAAwzF,SAAAA,EACAxzF,EAAAmtF,iBAAAA,EACAntF,EAAAyzB,OAAAA,EAGRzzB,EAAK8Z,UAAYD,EAAmB,UAAE,KA6D1C,OA5E0CrgB,EAAA+5F,EAAAtzF,GAkBxCszF,EAAA35F,UAAAuG,YAAA,WACEzG,KAAKs0F,iBAAiB3tF,cACtB3G,KAAKu0F,kBAAkB5tF,eAGzBkzF,EAAA35F,UAAA+I,SAAA,WACEjJ,KAAKw0F,sBACLx0F,KAAKy0F,oBAGCoF,EAAA35F,UAAA20F,kBAAR,SAA0BC,EAAiB5D,GAA3C,IAAA5qF,EAAAtG,KACE,GAAIkxF,EACF,OAAOA,EAAMt4D,MAAK,SAAAw5D,GAChB,GAAI99E,GAAiB89E,EAAKrkF,QAAU+mF,EAElC,OADAxuF,EAAK0uF,iBAAiB5C,IACf,MAMPyH,EAAA35F,UAAA80F,iBAAR,SAAyB5C,GACvBpyF,KAAK+zF,eAAiB3B,EACtBpyF,KAAK+0F,WAAazgF,GAAiB89E,EAAKrkF,MACxC/N,KAAKyzF,iBAAiBH,uBAAuB,CAAEyC,OAAQ/1F,KAAK+zF,eAAgBkC,kBAAkB,KAGxF4D,EAAA35F,UAAA00F,qBAAR,SAA6BE,GACtB90F,KAAK+0F,YAAc/0F,KAAK+0F,aAAeD,GAC1C90F,KAAK60F,kBAAkBC,EAAS90F,KAAKkxF,QAIjC2I,EAAA35F,UAAAm1F,cAAR,SAAsBjD,GAChBA,EAAK93D,QACP/oB,EAAa6gF,EAAK93D,OAAQt6B,KAAKogB,UAAWgyE,GAG1B,iBAAdA,EAAK9gF,KACP8C,GAAiBg+E,EAAKrkF,MACC,iBAAdqkF,EAAK9gF,MACdtR,KAAKg1F,iBAAiB5C,IAIlByH,EAAA35F,UAAAu0F,iBAAR,WAAA,IAAAnuF,EAAAtG,KACEA,KAAKu0F,kBAAoBv0F,KAAK+5B,OAAOu7D,OAAOtuF,WAAU,SAAA+yF,GAChDA,aAAwBxE,EAAAA,eAC1BjvF,EAAKsuF,qBAAqBtuF,EAAKwzF,SAASvtE,YAKtCstE,EAAA35F,UAAAs0F,oBAAR,WAAA,IAAAluF,EAAAtG,KACEA,KAAKs0F,iBAAmBt0F,KAAKyzF,iBAC1BJ,8BACArsF,WAAU,SAACorF,GAAkC,OAAA9rF,EAAK+uF,cAAcjD,gDAjE1D/xE,EAAAA,wBACS25E,EAAAA,gBACQJ,UACVn+D,EAAAA,UAZPo+D,EAAoB14F,EAAA,CAJhC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,0iBAWWia,EAAAA,iBACS25E,EAAAA,SACQJ,GACVn+D,EAAAA,UAZPo+D,IAA6BF,kBC9DxC,SAAAM,EAAoBxG,GAAAzzF,KAAAyzF,iBAAAA,EAmCtB,OAjCEwG,EAAA/5F,UAAAuG,YAAA,WACEzG,KAAKk6F,kBAAkBvzF,eAGzBszF,EAAA/5F,UAAA+I,SAAA,WAEEjJ,KAAKm6F,kCAGPF,EAAA/5F,UAAAm1F,cAAA,SAAcxuF,GACNA,EAAM2hD,SAAW3hD,EAAM4hD,UAC3B5hD,EAAM+5B,iBAGN5gC,KAAKyzF,iBAAiBL,wBAAwBpzF,KAAKo6F,oBAI/CH,EAAA/5F,UAAAk5F,aAAR,SAAqBhH,GACnBpyF,KAAKo6F,iBAAiB7B,WAAav4F,KAAKo6F,iBAAiB75D,KAAO6xD,EAAK7xD,IAG/D05D,EAAA/5F,UAAA24F,gBAAR,SAAwBzG,GACa,iBAA/BpyF,KAAKo6F,iBAAiB9oF,MACxBtR,KAAKo5F,aAAahH,EAAK2D,SAInBkE,EAAA/5F,UAAAi6F,+BAAR,WAAA,IAAA7zF,EAAAtG,KACEA,KAAKk6F,kBAAoBl6F,KAAKyzF,iBAAiBF,+BAA+BvsF,WAAU,SAAAorF,GACtF9rF,EAAKuyF,gBAAgBzG,gDAhCawH,MAFPz4F,EAAA,CAA9B2E,EAAAA,MAAM,wFAHIm0F,EAAwB94F,EAAA,CAJpC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,u8BAOsCwzF,MAL3BK,oBCGb,SAAAI,KAAgC,OAAnBA,EAAiBl5F,EAAA,CAN7BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,aAAcqwE,GAAe3gE,IACrDtW,aAAc,CAACoxF,GAAsBI,IACrCvxF,QAAS,CAACmxF,IACVzyF,UAAW,CAACwyF,OAEDS,oBCCX,SAAAC,EAAYxgE,EAA4CC,GAAA/5B,KAAA+5B,OAAAA,EACtD/5B,KAAKogB,UAAY0Z,EAA4B,UAAE,GAuBnD,OApBEwgE,EAAAp6F,UAAAqY,MAAA,WACE,IAAIvY,KAAKs6B,OAKT,OAAIt6B,KAAK+N,KACA/N,KAAKu6B,QAAQv6B,KAAK+N,WAD3B,EAJEwD,EAAavR,KAAKs6B,OAAQt6B,KAAKogB,WAAapgB,OASxCs6F,EAAAp6F,UAAAq6B,QAAR,SAAgB5sB,GACd,OAAIuG,GAAevG,GACVyG,GAAiBzG,GAGtBA,EACK3N,KAAK+5B,OAAOuB,SAAS,CAAC3tB,SAD/B,4CApB4B0S,EAAAA,wBAAkCob,EAAAA,UAV7Ct6B,EAAA,CAAlB2E,EAAAA,MAAM,4BAAqBqJ,wCAEXhO,EAAA,CAAhB2E,EAAAA,MAAM,8DAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAEU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAEkB3E,EAAA,CAAxB2E,EAAAA,MAAM,yEAXIw0F,EAAuBn5F,EAAA,CAJnC+E,EAAAA,UAAU,CACTC,SAAU,mBACVC,SAAA,2LAe8Bia,EAAAA,iBAAkCob,EAAAA,UAbrD6+D,oBCDb,SAAAC,KAQA,OALEA,EAAAr6F,UAAAs6F,kBAAA,WACE,GAAIx6F,KAAKy6F,aAAez6F,KAAKy6F,YAAY95F,OACvC,OAAOX,KAAKy6F,YAAYz6F,KAAKy6F,YAAY95F,OAAS,GAAGk7B,MAJhC16B,EAAA,CAAxB2E,EAAAA,MAAM,kCAA+BnG,0CAD3B46F,EAA4Bp5F,EAAA,CAJxC+E,EAAAA,UAAU,CACTC,SAAU,yBACVC,SAAA,iQAEWm0F,oBCAb,SAAAG,KAUA,OAP2Bl7F,OAAAqC,eAAI64F,EAAAx6F,UAAA,cAAW,KAIxC,WACE,OAAOF,KAAK26F,kBALW,SAAgBnqD,GACvCxwC,KAAK26F,aAAenqD,EAAQpkC,KAAI,SAAAkuB,GAAU,OAAAl6B,EAAAA,EAAA,GAAMk6B,GAAM,CAAE88B,WAAW,EAAMzpD,IAAK2sB,EAAOvsB,2CAD9D5M,EAAA,CAAxB2E,EAAAA,MAAM,kCAA2CnG,8BAAAA,yCAHvC+6F,EAAwBv5F,EAAA,CAJpC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,kZAEWs0F,oBCMb,SAAAE,KAAoC,OAAvBA,EAAqBz5F,EAAA,CALjCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAckzB,GAAe3c,IACvCtW,aAAc,CAAC6xF,GAAyBC,GAA8BG,IACtEhyF,QAAS,CAACgyF,OAECE,MCLAC,GAA0B,CACrChkF,GAAsB,CACpBikF,YAAa,gBAEf/jF,GAAsB,CACpB+jF,YAAa,gBAEf9jF,GAAsB,CACpB8jF,YAAa,gBAEf7jF,GAAsB,CACpB6jF,YAAa,+BAWjB,SAAAC,IACU/6F,KAAA26F,aAA0C,GAC1C36F,KAAAwJ,OAA8B,GAG9BxJ,KAAAg7F,SAAmB,EAuI7B,OA9H2Bx7F,OAAAqC,eAAIk5F,EAAA76F,UAAA,cAAW,KAIxC,WACE,OAAOF,KAAK26F,kBALW,SAAgB73F,GACvC9C,KAAK26F,aAAeh7F,MAAMqW,QAAQlT,GAASA,EAAQ,oCAcnCtD,OAAAqC,eAAIk5F,EAAA76F,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKwJ,YALI,SAAU1G,GAC1B9C,KAAKwJ,OAAS7J,MAAMqW,QAAQlT,GAASA,EAAQ,oCAgC1BtD,OAAAqC,eAAIk5F,EAAA76F,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAawqD,GAAwBtrF,UAZ9B,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTy6F,GAAuC,IACvCA,GAAwBtrF,MACxBzM,GAGY+3F,GAAwBtrF,sCAc5B/P,OAAAqC,eAAIk5F,EAAA76F,UAAA,OAAI,KAOzB,WACE,OAAOF,KAAKsxF,WARG,SAASxuF,GACxB9C,KAAKsxF,MAAQxuF,EAET9C,KAAKoyF,MACPpyF,KAAKi7F,oDA2CUz7F,OAAAqC,eAAIk5F,EAAA76F,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKg7F,aALK,SAAWl4F,GAC5B9C,KAAKg7F,QAAUpqF,EAAiB9N,oCAtHT3B,EAAA,CAAxB2E,EAAAA,MAAM,kCAAyCnG,8BAAAA,yCAe9BwB,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAiCdwB,EAAA,CAApB2E,EAAAA,MAAM,oGAsBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAoCU3E,EAAA,CAAhB2E,EAAAA,MAAM,0BAAiB0tF,gCAWLryF,EAAA,CAAlB2E,EAAAA,MAAM,kGAnIai1F,EAAqB55F,EAAA,CAD1C4H,EAAAA,aACqBgyF,oBCrBtB,SAAAG,IASqBl7F,KAAAuY,MAAoC,IAAIzQ,EAAAA,aAa7D,OAXEtI,OAAAqC,eAAIq5F,EAAAh7F,UAAA,OAAI,KAAR,WACE,OAAOgU,GAAelU,KAAK+N,MAAQ,eAAiB,gDAGtDmtF,EAAAh7F,UAAAi7F,UAAA,SAAUx3F,EAAgBoK,GACpB/N,KAAKs6B,QACPt6B,KAAKs6B,OAAO,CAAE32B,MAAKA,EAAEoK,KAAIA,IAG3B/N,KAAKuY,MAAMvQ,QAnBM7G,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBqJ,wCAELhO,EAAA,CAArB2E,EAAAA,MAAM,yEAEW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAEU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAEY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAkBH,EAAAA,2CATfozF,EAAqB/5F,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,+dAEW80F,oBCaX,SAAAE,EAAoBrhE,GAAA/5B,KAAA+5B,OAAAA,EAgCtB,OA9BEqhE,EAAAl7F,UAAAuG,YAAA,WACEzG,KAAKu0F,kBAAkB5tF,eAGzBy0F,EAAAl7F,UAAA+I,SAAA,WACEjJ,KAAKy0F,oBAGP2G,EAAAl7F,UAAAm7E,WAAA,SAAWxtE,GACT7N,KAAKimD,aAAep4C,GAGdutF,EAAAl7F,UAAAm7F,qBAAR,SAA6B3G,GAC3B10F,KAAKimD,aAAejmD,KAAKyJ,MAAMgB,MAAK,SAAAoD,GAAQ,OAAAA,EAAKE,OAAS2mF,MAGpD0G,EAAAl7F,UAAAo7F,6BAAR,WACE,IAAMnF,EAAkBn2F,KAAK+5B,OAAOq8D,SAASp2F,KAAK+5B,OAAOpsB,KAAK0oF,KAAKC,SAAkB,QAErF,OAAOH,EAAkB,IAAIA,EAAgBI,SAASnqF,KAAI,SAAAoqF,GAAM,OAAAA,EAAGjqE,QAAMkB,KAAK,KAAS,IAGjF2tE,EAAAl7F,UAAAu0F,iBAAR,WAAA,IAAAnuF,EAAAtG,KACEA,KAAKu0F,kBAAoBv0F,KAAK+5B,OAAOu7D,OAAOtuF,WAAU,SAAA6J,GACpD,GAAIA,aAAe0kF,EAAAA,eAAiB1kF,aAAe2kF,EAAAA,iBAAkB,CACnE,IAAMd,EAAYpuF,EAAKg1F,+BACvBh1F,EAAK+0F,qBAAqB3G,iDA5BJj5D,EAAAA,UAN2Ct6B,EAAA,CAAtE4E,EAAAA,UAAU,uBAAwB,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA8BiH,EAAAA,wDAElC/L,EAAA,CAA1D2/B,EAAAA,aAAao6D,GAAuB,CAAE9tF,KAAMF,EAAAA,6BAA8B/F,EAAAA,iDAEzDhG,EAAA,CAAjB2E,EAAAA,MAAM,2BAAkBnG,oCATdy7F,EAAsBj6F,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,ieAa4Bq1B,EAAAA,UAXjB2/D,qBCuCX,SAAAG,EACU1xF,EACA2xF,EACA/jF,GAHV,IAAAnR,EAKEC,EAAA3F,KAAAZ,OAAOA,YAJCsG,EAAAuD,SAAAA,EACAvD,EAAAk1F,QAAAA,EACAl1F,EAAAmR,eAAAA,EAxBVnR,EAAAm1F,qBAA+B,EAGvBn1F,EAAAo1F,OAAiB,EA4JjBp1F,EAAAq1F,mBAAqB,SAAAC,GAC3Bt1F,EAAKu1F,sBAAsBD,EAAQE,QAASx1F,EAAKgsF,UAAWhsF,EAAKmD,MAAOnD,EAAKsxB,SAASkjE,cArItFx0F,EAAKyrB,qBAAuBzrB,EAAKuD,SAASkD,OAAOmG,OAAQ,SAAU5M,EAAKy1F,uBAAuB75E,KAAK5b,MAyJxG,OAtLuCxG,EAAAy7F,EAAAh1F,GAWrC/G,OAAAqC,eAAI05F,EAAAr7F,UAAA,kCAA+B,KAAnC,WACE,OAAuB,IAAhBF,KAAK07F,wCAGdl8F,OAAAqC,eAAI05F,EAAAr7F,UAAA,mCAAgC,KAApC,WACE,OAAOF,KAAKg8F,cAAgC,IAAhBh8F,KAAK07F,wCAgBnCH,EAAAr7F,UAAAwK,gBAAA,WACE1K,KAAK+7F,yBAED/7F,KAAKoyF,MACPpyF,KAAKi8F,kBAITV,EAAAr7F,UAAAuG,YAAA,WACMzG,KAAKk8F,YACPl8F,KAAKk8F,WAAWC,eAAen8F,KAAK27F,qBAIxCJ,EAAAr7F,UAAAk8F,cAAA,SAAcj0D,GACI,SAAhBA,EAAyBnoC,KAAKq8F,eAAiBr8F,KAAKs8F,gBAEpDt8F,KAAK4H,QAAQ5H,KAAK07F,SAGZH,EAAAr7F,UAAAq8F,oBAAR,WACE,OAAOv8F,KAAKw8F,YAAYC,eAAenwF,QACrC,SAACowF,EAAevQ,GAAiB,OAAAuQ,EAAWvQ,EAAQrhF,cAAcC,cAClE,IAIIwwF,EAAAr7F,UAAA0H,QAAR,SAAgB8zF,GACd,IAAMiB,EAA8B38F,KAAK48F,yBAAyBlB,GAElE17F,KAAK68F,OAASF,EAAUx8F,OAAOH,KAAKw8F,YAAYM,qBAAqBhyF,eACrE9K,KAAK68F,OAAOE,QAGNxB,EAAAr7F,UAAA08F,yBAAR,SAAiClB,GAC/B,OAAO17F,KAAKw7F,QAAQwB,MAAM,CAACp1F,EAAAA,QA5ER,aA4EgCq1F,EAAAA,UAAU,CAACv1F,EAAAA,MAAM,CAAEggC,UAAW,eAAeg0D,EAAM,cAGhGH,EAAAr7F,UAAA27F,sBAAR,SACEqB,EACA5K,EACAkK,EACA74F,GAEA,GAAIu5F,EAAkB,CACpB,IAAMlL,EAAW,CAAC,CAAEruF,MAAKA,EAAEquF,SAAUwK,IACrCx8F,KAAKoyF,KAAKlB,MAAKnsF,EAAOitF,EAAaM,QAEnCtyF,KAAKoyF,KAAKlB,MAAQoB,GAIdiJ,EAAAr7F,UAAAi9F,wBAAR,WAAA,IACMC,EADN92F,EAAAtG,KAYE,OATAA,KAAKw8F,YAAYC,eAAe7jE,MAAK,SAAAykE,GACnC,IAAMC,EAAmBD,EAAWvyF,cAAcyyF,WAC5CC,EAAkBH,EAAWvyF,cAAcC,YAEjD,GAAIuyF,GAAoBh3F,EAAKo1F,OAE3B,OADA0B,EAAmBE,GAAoBh3F,EAAKm3F,mBAAqBD,IAC1D,KAGJJ,GAGD7B,EAAAr7F,UAAAw9F,yBAAR,SAAiCC,GAC/B,IAAIP,EAWJ,OATAp9F,KAAKw8F,YAAYC,eAAe7jE,MAAK,SAAAykE,GACnC,IAAME,EAAaF,EAAWvyF,cAAcyyF,WACtC71C,EAAgB21C,EAAWvyF,cAAcC,YAAcwyF,EAE7D,GAAII,EAAiBj2C,EAEnB,OADA01C,EAAmBG,GACZ,KAGJH,GAGD7B,EAAAr7F,UAAA67F,uBAAR,WACE/7F,KAAKy7F,oBAAsBz7F,KAAKy9F,mBAAqBz9F,KAAKu8F,sBA/H9B,GAiI5Bv8F,KAAKyX,eAAeqc,gBAEA,IAAhB9zB,KAAK07F,SACP17F,KAAK49F,kBACL59F,KAAK4H,QAAQ5H,KAAK07F,UAIdH,EAAAr7F,UAAA+7F,eAAR,WACEj8F,KAAKk8F,WAAahpF,OAAO2qF,WAxIF,sBAyIvB79F,KAAKsyF,UAAYtyF,KAAKoyF,KAAKlB,MAEvBh+E,OAAOoI,WA5IW,KA6IpBtb,KAAK67F,uBAAsB,EAAM77F,KAAKsyF,UAAWtyF,KAAKyJ,MAAOzJ,KAAK43B,SAASkjE,aAG7E96F,KAAKi7F,mBAELj7F,KAAKk8F,WAAW4B,YAAY99F,KAAK27F,qBAG3BJ,EAAAr7F,UAAAu9F,iBAAR,WACE,OAAOz9F,KAAK+9F,mBAAmBjzF,cAAcC,aAGvCwwF,EAAAr7F,UAAAm8F,aAAR,WACEr8F,KAAKg8F,cAAe,EAEpBh8F,KAAK07F,OAAS17F,KAAKm9F,0BAEfn9F,KAAK07F,OAAS,GAChB17F,KAAK49F,mBAIDrC,EAAAr7F,UAAAo8F,cAAR,WACE,IAAM0B,EAAmBh+F,KAAKu8F,sBAAwBv8F,KAAKy9F,mBACrDE,EAAiB39F,KAAK07F,OAAS17F,KAAKy9F,mBAE1Cz9F,KAAK07F,OAAS17F,KAAK09F,yBAAyBC,GAE5C39F,KAAKi+F,kBAAkBD,IAOjBzC,EAAAr7F,UAAA09F,gBAAR,WACE59F,KAAK07F,OAAS,GAGRH,EAAAr7F,UAAA+9F,kBAAR,SAA0BD,GACpBh+F,KAAK07F,QAAUsC,IACjBh+F,KAAK07F,OAASsC,EACdh+F,KAAKg8F,cAAe,IAIdT,EAAAr7F,UAAA+6F,iBAAV,WACMj7F,KAAKoyF,KAAK8L,MAAQl+F,KAAKk+F,OACzBl+F,KAAKoyF,KAAK8L,UAAO/0F,EACjBnJ,KAAKoyF,KAAK36E,eAAeqc,2DA3JT3mB,EAAAA,iBACDgxF,EAAAA,wBACOzmF,EAAAA,qBAP6CvW,EAAA,CAAtE4E,EAAAA,UAAUq1F,GAAwB,CAAEhuF,KAAMF,EAAAA,WAAYjH,QAAQ,oBAA4BiH,EAAAA,sDAEtC/L,EAAA,CAApD4E,EAAAA,UAAUq1F,GAAwB,CAAEn1F,QAAQ,oBAAqBm1F,uCArBvDG,EAAiBp6F,EAAA,CAJ7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,0zBA0BoB+G,EAAAA,UACDgxF,EAAAA,iBACOzmF,EAAAA,qBA1Bf6jF,IAA0BR,kBChBvC,SAAAqD,KAAkC,OAArBA,EAAmBj9F,EAAA,CAL/BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,cACxB5G,aAAc,CAACyyF,GAAuBE,IACtC1yF,QAAS,CAAC0yF,OAECgD,oBCNb,SAAAC,KAEA,OADmBl9F,EAAA,CAAhB2E,EAAAA,MAAM,8DADIu4F,EAAqBl9F,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,wGAEWi4F,oBCAb,SAAAC,IAKqBt+F,KAAAuY,MAA2B,IAAIzQ,EAAAA,aACpD,OAL2B3G,EAAA,CAAxB2E,EAAAA,MAAM,8EAEmB3E,EAAA,CAAzB2E,EAAAA,MAAM,gFAEY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAkBH,EAAAA,2CALfw2F,EAA+Bn9F,EAAA,CAJ3C+E,EAAAA,UAAU,CACTC,SAAU,4BACVC,SAAA,8YAEWk4F,oBCAb,SAAAC,IAKqBv+F,KAAAuY,MAA2B,IAAIzQ,EAAAA,aACpD,OALuB3G,EAAA,CAApB2E,EAAAA,MAAM,uEAEU3E,EAAA,CAAhB2E,EAAAA,MAAM,+DAEY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAkBH,EAAAA,2CALfy2F,EAAmCp9F,EAAA,CAJ/C+E,EAAAA,UAAU,CACTC,SAAU,iCACVC,SAAA,4PAEWm4F,oBCMb,SAAAC,KAA2C,OAA9BA,EAA4Br9F,EAAA,CALxCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,cACxB5G,aAAc,CAAC61F,GAAiCC,IAChD71F,QAAS,CAAC41F,OAECE,oBCkCb,SAAAC,KAA6B,OAAhBA,EAAct9F,EAAA,CAL1BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcoyF,GAAuBwD,GAAqBI,GAA8B9E,IAClGjxF,aAAc,CAAC8yF,GAAmB8C,IAClC31F,QAAS,CAAC6yF,OAECkD,SC1Bb,4BCPA,SAAAC,mDAA0D,OAArB5+F,EAAA4+F,EAAAn4F,GAAxBm4F,EAAev9F,EAAA,CAJ3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,mEAEWs4F,IAAwBC,OCNrC,4BCWE,SAAAC,EAAmB/0F,GAAnB,IAAAvD,EACEC,EAAA3F,KAAAZ,OAAOA,YADUsG,EAAAuD,SAAAA,EAJnBvD,EAAAu4F,eAAyB,EACzBv4F,EAAAqB,OAAiB,MACjBrB,EAAAw4F,UAAoB,OAIlBx4F,EAAK+0B,wBAqCT,OA5C4Cv7B,EAAA8+F,EAAAr4F,GAU1Cq4F,EAAA1+F,UAAAwK,gBAAA,WACE1K,KAAK++F,yBAGPH,EAAA1+F,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGP2kE,EAAA1+F,UAAA6+F,sBAAA,WAAA,IAAAz4F,EAAAtG,KACE6M,YAAW,WACT,IAAMmyF,EAAiCxvE,SAASxjB,cAAc,sBAE9D1F,EAAK24F,iBAAiBD,GACtB14F,EAAKu4F,eAAiB,MAI1BD,EAAA1+F,UAAA++F,iBAAA,SAAiBC,GACf,IAEMC,EAFa3vE,SAASlsB,KAAK83B,cACR8jE,EAAeA,EAAah5C,UAAYg5C,EAAapsE,aAAe,GAG7F9yB,KAAK2H,OAAYw3F,EAAS,MAGpBP,EAAA1+F,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,WAC7DzG,EAAKy4F,4BAIDH,EAAA1+F,UAAA+5B,gBAAR,WACEj6B,KAAKgN,2DArCsBG,EAAAA,aALlByxF,EAAsBz9F,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,wLAO6B+G,EAAAA,aALlByxF,IAA+BQ,kBCD5C,SAAAC,IACUr/F,KAAA05B,SAAiC,GAoC3C,OAxBsBl6B,OAAAqC,eAAIw9F,EAAAn/F,UAAA,UAAO,KAK/B,WACE,OAAOF,KAAK05B,cANM,SAAY8W,GAC9BxwC,KAAK05B,SAAW/5B,MAAMqW,QAAQw6B,GAAWA,EAAU,GACnDxwC,KAAKs/F,sDAWW9/F,OAAAqC,eAAIw9F,EAAAn/F,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKu8D,YANI,SAAUh2B,GAA5B,IAAAjgC,EAAAtG,KACEA,KAAKu8D,OAASh2B,EACd15B,YAAW,WAAM,OAAAvG,EAAKipB,cAAcwvE,4DAxBe59F,EAAA,CAApD4E,EAAAA,UAAU64F,GAAwB,CAAE34F,QAAQ,oBAAuB24F,yCAShDz9F,EAAA,CAAnB2E,EAAAA,MAAM,6BAAkCnG,8BAAAA,qCAUlBwB,EAAA,CAAtB2E,EAAAA,MAAM,0EAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FA1Bau5F,EAA0Bl+F,EAAA,CAD/C4H,EAAAA,aACqBs2F,qBC6BpB,SAAAE,EAAYp/E,EAAmCtW,EAA6BkwB,GAA5E,IAAAzzB,EACEC,EAAA3F,KAAAZ,OAAOA,YADsCsG,EAAAuD,SAAAA,EAA6BvD,EAAAyzB,OAAAA,EAP5EzzB,EAAAk5F,oBAA8B,EAItBl5F,EAAAm5F,eAAyB,IAK/Bn5F,EAAK8Z,UAAYD,EAAmB,UAAE,KA0D1C,OApE4CrgB,EAAAy/F,EAAAh5F,GAanCg5F,EAAAr/F,UAAAmvF,mBAAP,WAAA,IAAA/oF,EAAAtG,KACEA,KAAK0/F,cACL1/F,KAAKs/F,qBAELt/F,KAAK6J,SAASkD,OAAO,SAAU,UAAU,SAAClG,GACxCP,EAAK2uB,SAASpuB,OAIlB04F,EAAAr/F,UAAAitC,YAAA,SAAYC,GACVptC,KAAKs/F,sBAGPC,EAAAr/F,UAAAy/F,iBAAA,SAAiBrlE,GACf,OAAOlpB,EAASkpB,EAAO5hB,SAAU,YAAc4hB,EAAO5hB,SAAS4hB,GAAUA,EAAO5hB,UAGlF6mF,EAAAr/F,UAAA0/F,WAAA,SAAW/xF,GACLA,EAAKF,IACPuG,GAAerG,EAAKF,KAAOyG,GAAiBvG,EAAKF,KAAO3N,KAAK+5B,OAAOuB,SAAS,CAACztB,EAAKF,MAC1EE,EAAKysB,QACd/oB,EAAa1D,EAAKysB,OAAQt6B,KAAKogB,YAInCm/E,EAAAr/F,UAAA2/F,cAAA,WACE,SAAU7/F,KAAKumC,OAAUvmC,KAAKwwC,SAAWxwC,KAAKwwC,QAAQ7vC,QAAYX,KAAKqM,YAAcrM,KAAKqM,WAAW5C,MAAM9I,SAGrG4+F,EAAAr/F,UAAA+0B,SAAR,SAAiBpuB,GACAA,EAAMxF,OAAkBia,WAE3Btb,KAAKy/F,gBACfz/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,EAC3Bx/F,KAAKs/F,uBAELt/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,EAC3Bx/F,KAAKs/F,uBAIDC,EAAAr/F,UAAAw/F,YAAR,WACMxsF,OAAOoI,WAAatb,KAAKy/F,iBAC3Bz/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,IAI/BD,EAAAr/F,UAAAo/F,mBAAA,WACMt/F,KAAKwwC,QAAQ7vC,OAASX,KAAKw/F,sBAC7Bx/F,KAAK8/F,gBAAkB9/F,KAAKwwC,QAAQhkC,MAAMxM,KAAKw/F,oBAAsB,8CAzDpDn/E,EAAAA,wBAAoClT,EAAAA,iBAA2BsuB,EAAAA,UARzE8jE,EAAsBp+F,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,ywCAUqBia,EAAAA,iBAAoClT,EAAAA,UAA2BsuB,EAAAA,UARzE8jE,IAA+BF,ICzB/BU,GAA8B,CACzClpF,GAA0B,CACxBmpF,KAAM,OACNxV,KAAM,OACNz4B,OAAQ,UAEVh7C,GAA0B,CACxBipF,KAAM,SACNxV,KAAM,SACNz4B,OAAQ,YAEV/6C,GAA0B,CACxBgpF,KAAM,SACNxV,KAAM,SACNz4B,OAAQ,WAEV96C,GAA0B,CACxB+oF,KAAM,cACNxV,KAAM,gBACNz4B,OAAQ,2BAWZ,SAAAkuC,IA+EoBjgG,KAAAggG,KAAQ,IAAIl4F,EAAAA,aAYZ9H,KAAAwqF,KAAQ,IAAI1iF,EAAAA,aAYV9H,KAAA+xD,OAAU,IAAIjqD,EAAAA,aACpC,OA5DuBtI,OAAAqC,eAAIo+F,EAAA//F,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAa0vD,GAA4BxwF,UAZlC,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACT2/F,GAA2C,IAC3CA,GAA4BxwF,MAC5BzM,GAGYi9F,GAA4BxwF,sCAQ/B/P,OAAAqC,eAAIo+F,EAAA//F,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKu8D,YANI,SAAUh2B,GAA5B,IAAAjgC,EAAAtG,KACEA,KAAKu8D,OAASh2B,EACd15B,YAAW,WAAM,OAAAvG,EAAKipB,cAAcwvE,4DA1De59F,EAAA,CAApD4E,EAAAA,UAAU64F,GAAwB,CAAE34F,QAAQ,oBAAuB24F,yCAG7Cz9F,EAAA,CAAtB2E,EAAAA,MAAM,0EAqCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAgBW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAmBW3E,EAAA,CAAjB8G,EAAAA,OAAO,8DAYU9G,EAAA,CAAjB8G,EAAAA,OAAO,8DAYY9G,EAAA,CAAnB8G,EAAAA,OAAO,kEAvGGg4F,EAAyB9+F,EAAA,CADrC4H,EAAAA,aACYk3F,qBCVb,SAAAC,mDAgCA,OAhC2CpgG,EAAAogG,EAAA35F,GACzC25F,EAAAhgG,UAAAigG,aAAA,WACE,OAAOngG,KAAKogG,SAAS,SAAWpgG,KAAKogG,SAAS,SAAWpgG,KAAKogG,SAAS,WAGzEF,EAAAhgG,UAAAmgG,UAAA,SAAUppE,GACR,MAAiB,SAAbA,EACKj3B,KAAKogG,SAAS,QAAU,GAAK,iBACd,SAAbnpE,EACFj3B,KAAKogG,SAAS,QAAU,UAAY,UAEpC,IAIXF,EAAAhgG,UAAAogG,kBAAA,SAAkBrpE,GAChB,MAAiB,SAAbA,EACKj3B,KAAKogG,SAAS,SAAWpgG,KAAKogG,SAAS,UAAY,GAAK,qBACzC,SAAbnpE,EACFj3B,KAAKogG,SAAS,SAAWpgG,KAAKogG,SAAS,UAAY,UAAY,UAE/D,IAIXF,EAAAhgG,UAAAkgG,SAAA,SAASv5F,GACP,QAAS7G,KAAK6G,GAAO28B,UAAU7iC,QAGjCu/F,EAAAhgG,UAAA2/F,cAAA,WACE,SAAU7/F,KAAKumC,OAASvmC,KAAKmgG,gBAAmBngG,KAAKqM,YAAcrM,KAAKqM,WAAW5C,MAAM9I,SA9BhFu/F,EAAqB/+F,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,gjCAEW85F,IAA8BD,ICpB9BM,GAA4B,CACvC1pF,GAAwB,CACtBssB,OAAQ,SACRq9D,KAAM,OACNC,QAAS,gBAEX1pF,GAAwB,CACtBosB,OAAQ,WACRq9D,KAAM,UACNC,QAAS,mBAEXzpF,GAAwB,CACtBmsB,OAAQ,WACRq9D,KAAM,SACNC,QAAS,iBAEXxpF,GAAwB,CACtBksB,OAAQ,WACRq9D,KAAM,YACNC,QAAS,oCAeb,SAAAC,IAkFsB1gG,KAAAmjC,OAAU,IAAIr7B,EAAAA,aAYhB9H,KAAAwgG,KAAQ,IAAI14F,EAAAA,aAYR9H,KAAAygG,QAAW,IAAI34F,EAAAA,aACvC,OA5DuBtI,OAAAqC,eAAI6+F,EAAAxgG,UAAA,WAAQ,KAWjC,WACE,OAAOF,KAAKqwC,WAAakwD,GAA0BhxF,UAZhC,SAAazM,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTmgG,GAAyC,IACzCA,GAA0BhxF,MAC1BzM,GAGYy9F,GAA0BhxF,sCAQ7B/P,OAAAqC,eAAI6+F,EAAAxgG,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKu8D,YANI,SAAUh2B,GAA5B,IAAAjgC,EAAAtG,KACEA,KAAKu8D,OAASh2B,EACd15B,YAAW,WAAM,OAAAvG,EAAKipB,cAAcwvE,4DA7De59F,EAAA,CAApD4E,EAAAA,UAAU64F,GAAwB,CAAE34F,QAAQ,oBAAuB24F,yCAG7Cz9F,EAAA,CAAtB2E,EAAAA,MAAM,0EAGoB3E,EAAA,CAA1B2E,EAAAA,MAAM,kFAqCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGAgBW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAmBa3E,EAAA,CAAnB8G,EAAAA,OAAO,kEAYU9G,EAAA,CAAjB8G,EAAAA,OAAO,8DAYc9G,EAAA,CAArB8G,EAAAA,OAAO,qEA1GGy4F,EAAuBv/F,EAAA,CADnC4H,EAAAA,aACY23F,qBCdb,SAAAC,mDA+CA,OA/CyC7gG,EAAA6gG,EAAAp6F,GACvCo6F,EAAAzgG,UAAAqpC,QAAA,SAAQ1N,GACN,MAAa,WAATA,EACK77B,KAAK4gG,gBAAgB,UAAY,gBAAkB,GAG/C,YAAT/kE,GACK77B,KAAK4gG,gBAAgB,WAAa,aAGpC,IAGTD,EAAAzgG,UAAA2gG,QAAA,SAAQvvF,GACN,IAAMwvF,EAAiC,WAATxvF,GAAqBtR,KAAK4gG,gBAAgB,UAClEG,EAAkC,YAATzvF,GAAsBtR,KAAK4gG,gBAAgB,WAE1E,OAAOE,GAAyBC,EAAyB,UAAY,WAGvEJ,EAAAzgG,UAAAigG,aAAA,WACE,OAAOngG,KAAKogG,SAAS,WAAapgG,KAAKogG,SAAS,YAAcpgG,KAAKogG,SAAS,SAG9EO,EAAAzgG,UAAA2/F,cAAA,WACE,SAAU7/F,KAAKumC,OAASvmC,KAAKmgG,gBAAmBngG,KAAKqM,YAAcrM,KAAKqM,WAAW5C,MAAM9I,SAG3FggG,EAAAzgG,UAAAkgG,SAAA,SAASv5F,GACP,QAAS7G,KAAK6G,GAAO28B,UAAU7iC,QAGzBggG,EAAAzgG,UAAA0gG,gBAAR,SAAwBtmE,GACtB,IAAM0mE,EAAgBhhG,KAAKogG,SAAS,QAEpC,MAAe,YAAX9lE,GACM0mE,EAGK,WAAX1mE,KACuBt6B,KAAKogG,SAAS,aAEVY,IA1CtBL,EAAmBx/F,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,qnCAEWu6F,IAA4BD,kBCfzC,SAAAO,KAcA,OATyBzhG,OAAAqC,eAAIo/F,EAAA/gG,UAAA,aAAU,KAGrC,WACE,OAAOF,KAAKkhG,iBAJS,SAAep+F,GACpC9C,KAAKkhG,YAAcp+F,mCADE3B,EAAA,CAAtB2E,EAAAA,MAAM,wGAQW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAbIm7F,EAAyB9/F,EAAA,CADrC4H,EAAAA,aACYk4F,qBCDb,SAAAE,mDAAsE,OAA3BrhG,EAAAqhG,EAAA56F,GAA9B46F,EAAqBhgG,EAAA,CAJjC+E,EAAAA,UAAU,CACTC,SAAU,iBACVC,SAAA,ogBAEW+6F,IAA8BF,ICD9BG,GAA4B,CACvCvqF,GAAwB,CACtBwqF,aAAc,iBAEhBtqF,GAAwB,CACtBsqF,aAAc,kBAEhBrqF,GAAwB,CACtBqqF,aAAc,gBAEhBpqF,GAAwB,CACtBoqF,aAAc,mCA6GhB,SAAAC,EAAYnqF,GAAZ,IAAA7Q,EACEC,EAAA3F,KAAAZ,OAAOA,YAEPsG,EAAK6J,SAAWgH,EAAgB7G,qBAEpC,OAhGsDxQ,EAAAwhG,EAAA/6F,GAuBvB/G,OAAAqC,eAAIy/F,EAAAphG,UAAA,kBAAe,KAQhD,WACE,OAAOF,KAAKuhG,sBATe,SAAoBz+F,GAC1CA,IACHA,EAAa,IAGf9C,KAAKuhG,iBAAmBz+F,mCA+CLtD,OAAAqC,eAAIy/F,EAAAphG,UAAA,WAAQ,KAYjC,WACE,OAAOF,KAAKqwC,WAAa+wD,GAA0BphG,KAAKmQ,eAbrC,SAAarN,GAE9B9C,KAAKqwC,UADHvtC,aAAiBtD,UAAYsD,aAAiBnD,OAClCS,EAAAA,EAAAA,EAAA,GACTghG,GAAyC,IACzCA,GAA0BphG,KAAKmQ,WAC/BrN,GAGYs+F,GAA0BphG,KAAKmQ,oFAQvB+F,MA7EN/U,EAAA,CAAtB2E,EAAAA,MAAM,0EASsB3E,EAAA,CAA5B2E,EAAAA,MAAM,mHAiBY3E,EAAA,CAAlB2E,EAAAA,MAAM,kEAmCc3E,EAAA,CAApB2E,EAAAA,MAAM,oGA3Eaw7F,EAAuBngG,EAAA,CAD5C4H,EAAAA,mCA4F8BmN,MA3FTorF,IAAgCjC,mBCuBpD,SAAAmC,EACErhF,EACAhJ,EACOtN,EACCkwB,EACAtiB,GALV,IAAAnR,EAOEC,EAAA3F,KAAAZ,KAAMmX,IAAgBnX,YAJfsG,EAAAuD,SAAAA,EACCvD,EAAAyzB,OAAAA,EACAzzB,EAAAmR,eAAAA,EAhBVnR,EAAAk5F,oBAA8B,EAGtBl5F,EAAAm7F,eAAgB,EAChBn7F,EAAAm5F,eAAyB,IAEjCn5F,EAAAiL,aAAeA,EAabjL,EAAK8Z,UAAYD,EAAmB,UAAE,GACtC7Z,EAAK+0B,wBAyHT,OAlJyCv7B,EAAA0hG,EAAAj7F,GA4BvCi7F,EAAAthG,UAAA+I,SAAA,WACEjJ,KAAK0hG,eAAiB1hG,KAAK2hG,2BAG7BH,EAAAthG,UAAAmvF,mBAAA,WACErvF,KAAK0/F,cACL1/F,KAAKs/F,sBAGPkC,EAAAthG,UAAAitC,YAAA,SAAYC,GACVptC,KAAKs/F,sBAGPkC,EAAAthG,UAAAuG,YAAA,WACEzG,KAAKi6B,mBAGPunE,EAAAthG,UAAAy/F,iBAAA,SAAiBrlE,GACf,OAAOlpB,EAASkpB,EAAO5hB,SAAU,YAAc4hB,EAAO5hB,SAAS4hB,GAAUA,EAAO5hB,UAGlF8oF,EAAAthG,UAAA0/F,WAAA,SAAW/xF,GACLA,EAAKF,IACPuG,GAAerG,EAAKF,KAAOyG,GAAiBvG,EAAKF,KAAO3N,KAAK+5B,OAAOuB,SAAS,CAACztB,EAAKF,MAC1EE,EAAKysB,QACd/oB,EAAa1D,EAAKysB,OAAQt6B,KAAKogB,YAInCohF,EAAAthG,UAAA2/F,cAAA,WACE,SAAU7/F,KAAKumC,OAAUvmC,KAAKwwC,SAAWxwC,KAAKwwC,QAAQ7vC,QAAYX,KAAKqM,YAAcrM,KAAKqM,WAAW5C,MAAM9I,SAGrG6gG,EAAAthG,UAAA+0B,SAAR,SAAiBpuB,GACAA,EAAMxF,OAAkBia,WAE3Btb,KAAKy/F,gBACfz/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,EAC3Bx/F,KAAKs/F,uBAELt/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,EAC3Bx/F,KAAKs/F,uBAIDkC,EAAAthG,UAAAw/F,YAAR,WACMxsF,OAAOoI,WAAatb,KAAKy/F,iBAC3Bz/F,KAAKqT,UAAW,EAChBrT,KAAKw/F,oBAAsB,IAI/BgC,EAAAthG,UAAAo/F,mBAAA,WACMt/F,KAAKwwC,QAAQ7vC,OAASX,KAAKw/F,sBAC7Bx/F,KAAK8/F,gBAAkB9/F,KAAKwwC,QAAQhkC,MAAMxM,KAAKw/F,oBAAsB,KAIzEgC,EAAAthG,UAAA0hG,iBAAA,SAAiBvf,GACfriF,KAAKuR,aAAavR,KAAKigB,OAAOoiE,GAAQriF,KAAKogB,WAC3CpgB,KAAKyX,eAAeqc,iBAGtB0tE,EAAAthG,UAAA2hG,WAAA,SAAWvgG,GACG,KAARA,GACFtB,KAAK4hG,iBAAiB,WAI1BJ,EAAAthG,UAAAozD,YAAA,SAAYwuC,GACV9hG,KAAKogB,UAAUpgB,KAAKigB,OAAO8hF,SAAWD,GAIxCN,EAAAthG,UAAA8hG,wBAAA,SAAwBnqE,IAEnBA,GAAeA,EAAYl3B,QAAUX,KAAKyhG,eACnB,IAAvB5pE,EAAYl3B,SAAiBX,KAAKyhG,iBAEnCzhG,KAAKuvB,cAAcwvE,wBACnB/+F,KAAKyhG,eAAiBzhG,KAAKyhG,eAGzBzhG,KAAKiiG,iBAAmBjiG,KAAKiiG,gBAAgBt+E,QAC/C3jB,KAAKiiG,gBAAgBt+E,OAAOkU,IAIxB2pE,EAAAthG,UAAAyhG,wBAAR,WAgBE,MAfgB,CACd3qF,GAAI,CACF0qF,eAAgB,kBAElB7qF,GAAI,CACF6qF,eAAgB,mBAElB3qF,GAAI,CACF2qF,eAAgB,qBAElBzqF,GAAI,CACFyqF,eAAgB,iBAIL1hG,KAAKmQ,UAAUuxF,gBAGxBF,EAAAthG,UAAAm7B,oBAAR,WAAA,IAAA/0B,EAAAtG,KACEA,KAAKgN,eAAiBhN,KAAK6J,SAASkD,OAAO,SAAU,UAAU,SAAClG,GAC9DP,EAAK2uB,SAASpuB,OAIV26F,EAAAthG,UAAA+5B,gBAAR,WACEj6B,KAAKgN,2DA/HIqT,EAAAA,wBACQnK,UACA/I,EAAAA,iBACDsuB,EAAAA,cACQ/jB,EAAAA,qBAR2BvW,EAAA,CAApD4E,EAAAA,UAAU64F,GAAwB,CAAE34F,QAAQ,oBAAuB24F,yCAbzD4C,EAAmBrgG,EAAA,CAJ/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,ijGAmBWia,EAAAA,iBACQnK,GACA/I,EAAAA,UACDsuB,EAAAA,OACQ/jB,EAAAA,qBArBf8pF,IAA4BF,kBCCzC,SAAAY,KAA2B,OAAdA,EAAY/gG,EAAA,CAxBxBmH,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAy4B,EAAAA,YACA5xB,EAAAA,aACAD,EACAwJ,GACAqgB,GACAmD,GACAsjD,GACA3nE,GACA8qB,IAEFp6B,aAAc,CACZi2F,GACAE,GACAW,GACAW,GACAS,GACAQ,GACAK,IAEF94F,QAAS,CAACw3F,GAAuBX,GAAwBoB,GAAqBa,OAEnEU,oBCnCb,SAAAC,IAQqBniG,KAAAuY,MAAQ,IAAIzQ,EAAAA,aACjC,OAPkC3G,EAAA,CAA/B2E,EAAAA,MAAM,0FAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAAkBnG,oCAGNwB,EAAA,CAAlB8G,EAAAA,OAAO,gEARGk6F,EAAuBhhG,EAAA,CAJnC+E,EAAAA,UAAU,CACTC,SAAU,mBACVC,SAAA,8RAEW+7F,oBCOb,SAAAC,IACUpiG,KAAAqiG,UAfqB,IA4F/B,OAjEqB7iG,OAAAqC,eAAIugG,EAAAliG,UAAA,SAAM,KAI7B,WACE,OAAOF,KAAKmpB,aALK,SAAWrmB,GAC5B9C,KAAKmpB,QAAUpY,EAAajO,oCAgBTtD,OAAAqC,eAAIugG,EAAAliG,UAAA,WAAQ,KAKjC,WACE,OAAOF,KAAKqiG,eANO,SAAav/F,GAChC9C,KAAKqiG,UAAYtxF,EAAajO,EA7CH,KA8C3B9C,KAAKqiG,WAAa,IAAOriG,KAAKsiG,gBAAkBtiG,KAAKuiG,kDA2BpC/iG,OAAAqC,eAAIugG,EAAAliG,UAAA,SAAM,KAS7B,WACE,OAAOF,KAAKwiG,aAVK,SAAW1/F,GAC5B9C,KAAKwiG,QAAU1/F,EACf9C,KAAKyiG,cAAc3/F,GAEfA,GAASA,EAAMnC,QACjBX,KAAK0iG,8CAnDUvhG,EAAA,CAAlB2E,EAAAA,MAAM,gGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,oGA6BY3E,EAAA,CAAlB2E,EAAAA,MAAM,4BAA8BnG,8BAAAA,oCA3DjByiG,EAAoBjhG,EAAA,CADzC4H,EAAAA,aACqBq5F,oBC8BpB,SAAAO,EAAmB/uD,GAAA5zC,KAAA4zC,YAAAA,EACrB,gDADkC5tC,EAAAA,eAFrB28F,EAA+BxhG,EAAA,CAH3C4H,EAAAA,UAAU,CACT5C,SAAU,sDAIsBH,EAAAA,eAFrB28F,oBC/Bb,SAAAC,IAGE5iG,KAAAgT,WAAkBA,KA8BpB,OAPE4vF,EAAA1iG,UAAA2iG,YAAA,WACE,OAAK7iG,KAAKoG,UAAYpG,KAAK+N,KAClB/N,KAAK+N,KAAKoG,WAAW,QAAU,eAAiB,eAGlD,UA9BiChT,EAAA,CAAzC4E,EAAAA,UAAU,YAAa,CAAEE,QAAQ,oBAAqBiH,EAAAA,+CAKpC/L,EAAA,CAAlB2E,EAAAA,MAAM,4BAAoBqJ,wCAGXhO,EAAA,CAAf2E,EAAAA,MAAM,4DAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,0BAAgBnG,mCAGLwB,EAAA,CAAjB2E,EAAAA,MAAM,gEAGkB3E,EAAA,CAAxB2E,EAAAA,MAAM,6EAGc3E,EAAA,CAApB2E,EAAAA,MAAM,8BAAwB68F,oCAGdxhG,EAAA,CAAhB2E,EAAAA,MAAM,8DAxBI88F,EAAoBzhG,EAAA,CAJhC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,ouDAEWw8F,qBCqEX,SAAAE,EAAoBtH,GAApB,IAAAl1F,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAk1F,QAAAA,EAhCZl1F,EAAAy8F,UAAoB,EAoB5Bz8F,EAAA08F,kBAAoB,EAEpB18F,EAAA28F,WAAuC,KA6KzC,OApMsCnjG,EAAAgjG,EAAAv8F,GAKpC/G,OAAAqC,eAAYihG,EAAA5iG,UAAA,cAAW,KAAvB,WACE,QAASF,KAAKkjG,MAAMp4F,cAAcC,eAAiB/K,KAAKmjG,iBAAmBnjG,KAAKmjG,cAAcxiG,wCAGhGnB,OAAAqC,eAAYihG,EAAA5iG,UAAA,eAAY,KAAxB,WACE,OAAQF,KAAKojG,sDAGf5jG,OAAAqC,eAAYihG,EAAA5iG,UAAA,SAAM,KAAlB,WACE,OAAOF,KAAKgjG,kBAAoBhjG,KAAKqjG,gDAGvC7jG,OAAAqC,eAAIihG,EAAA5iG,UAAA,YAAS,KAAb,WACE,QAASF,KAAKsjG,UAAYtjG,KAAKsjG,OAAO3iG,wCAmBTmiG,EAAA5iG,UAAA+0B,SAAA,WACzBj1B,KAAKkjG,QACPljG,KAAKujG,oBACLvjG,KAAKwjG,SAASxjG,KAAKgjG,qBAIvBF,EAAA5iG,UAAA0K,UAAA,YACO5K,KAAK+iG,UAAY/iG,KAAKyjG,cACzBzjG,KAAKujG,oBACLvjG,KAAK+iG,UAAW,EAEZ/iG,KAAK0jG,WACP1jG,KAAK0iG,eAKXI,EAAA5iG,UAAAitC,YAAA,SAAYC,GACNA,EAAQzlC,QACV3H,KAAK2jG,eAAe3jG,KAAK2H,SAI7Bm7F,EAAA5iG,UAAAsjG,SAAA,SAAS1nF,GACH9b,KAAK4jG,SA9Fc,KA+FrB5jG,KAAKsiG,gBAGPtiG,KAAKgjG,kBAAoBlnF,EACzB9b,KAAK4H,QAAQ5H,KAAK07F,SAGpBoH,EAAA5iG,UAAA2jG,YAAA,WACM7jG,KAAK4jG,SAvGc,KAwGrB5jG,KAAKsiG,gBAGPtiG,KAAKgD,QAGP8/F,EAAA5iG,UAAA8C,KAAA,WACE,GAAIhD,KAAKgjG,kBAAoB,IAAMhjG,KAAKijG,WAAWtiG,OAGjD,OAFAX,KAAKgjG,kBAAoB,OACzBhjG,KAAK4H,QAAQ,GAGf5H,KAAKgjG,mBAAqBhjG,KAAKgjG,kBAAoB,GAAKhjG,KAAKijG,WAAWtiG,OACxEX,KAAK4H,QAAQ5H,KAAK07F,SAGpBoH,EAAA5iG,UAAAw8F,SAAA,WACE,GAA+B,IAA3B18F,KAAKgjG,kBAGP,OAFAhjG,KAAKgjG,kBAAoBhjG,KAAKijG,WAAWtiG,OAAS,OAClDX,KAAK4H,QAAQ5H,KAAK07F,QAGpB17F,KAAKgjG,mBAAqBhjG,KAAKgjG,kBAAoB,EAAIhjG,KAAKijG,WAAWtiG,QAAUX,KAAKijG,WAAWtiG,OACjGX,KAAK4H,QAAQ5H,KAAK07F,SAGpBoH,EAAA5iG,UAAA4jG,gBAAA,WACM9jG,KAAK4jG,SAnIc,KAoIrB5jG,KAAKsiG,gBAGPtiG,KAAK08F,YAGPoG,EAAA5iG,UAAAyjG,eAAA,SAAeh8F,GACb3H,KAAK+jG,UAAUp8F,IAGTm7F,EAAA5iG,UAAA0H,QAAR,SAAgB8zF,GACd,GAAI17F,KAAKyjG,YAAa,CACpB,IAAM9G,EAA8B38F,KAAK48F,yBAAyBlB,GAElE17F,KAAK68F,OAASF,EAAUx8F,OAAOH,KAAKkjG,MAAMp4F,eAC1C9K,KAAK68F,OAAOE,SAIR+F,EAAA5iG,UAAA08F,yBAAR,SAAiClB,GAC/B,OAAO17F,KAAKw7F,QAAQwB,MAAM,CAACp1F,EAAAA,QAtJT,aAsJgCq1F,EAAAA,UAAU,CAACv1F,EAAAA,MAAM,CAAEggC,UAAW,eAAeg0D,EAAM,cAG/FoH,EAAA5iG,UAAA8jG,uBAAR,SAA+BV,GAC7BtjG,KAAKijG,WAAUl+F,EAAOu+F,IAGhBR,EAAA5iG,UAAA+jG,sBAAR,SAA8BX,GAA9B,IAAAh9F,EAAAtG,KACwBsjG,EAAOnjE,OAAM,SAAAtyB,GAAQ,MAAgB,iBAATA,KAGhDy1F,EAAO5jF,SAAQ,SAAA9V,GAAW,OAAAtD,EAAK28F,WAAWz+F,KAAK,CAAE0/F,MAAO,GAAGt6F,OAE3D5J,KAAKijG,WAAUl+F,EAA4Bu+F,IAIvCR,EAAA5iG,UAAAkpB,iBAAR,SAAyBzhB,GAClBA,GAAUA,GAzKM,MAyK2BA,GAAU3H,KAAKmkG,cAC7DnkG,KAAKkjG,MAAMp4F,cAAcpD,MAAMC,OAAYy8F,QAC3CpkG,KAAKqkG,YA7KkB,KA+KvBrkG,KAAKqkG,iBAAcl7F,GAIf25F,EAAA5iG,UAAA6jG,UAAR,SAAkBp8F,GACZA,GAAUA,EAlLO,KAmLnB3H,KAAKkjG,MAAMp4F,cAAcpD,MAAMC,OAAYA,EAAM,KACjD3H,KAAKqkG,YAAc18F,GAEnB3H,KAAKopB,iBAAiBzhB,IAIlBm7F,EAAA5iG,UAAAqjG,kBAAR,WACMvjG,KAAKyjG,cACPzjG,KAAKqjG,eAAiBrjG,KAAKmjG,cAAcmB,MAAMC,YAAYz5F,cAAc8Q,wBAAwBS,QAI3FymF,EAAA5iG,UAAAqiG,eAAV,WACEiC,cAAcxkG,KAAKykG,cAGX3B,EAAA5iG,UAAAuiG,cAAV,SAAwBa,GAClBtjG,KAAK0jG,UACP1jG,KAAKojG,qBAAuBpjG,KAAKgkG,uBAAuBV,GAAUtjG,KAAKikG,sBAAsBX,IAE7FtjG,KAAKijG,WAAa,GAClBjjG,KAAKuiG,mBAICO,EAAA5iG,UAAAwiG,WAAV,WACE1iG,KAAK2jG,eAAe3jG,KAAK2H,QAErB3H,KAAK4jG,SAjNc,KAkNrB5jG,KAAKsiG,gBAGPtiG,KAAKgjG,kBAAoB,GAGjBF,EAAA5iG,UAAAoiG,cAAV,WAAA,IAAAh8F,EAAAtG,KACMA,KAAKykG,aACPzkG,KAAKuiG,iBAGPviG,KAAKykG,YACHzkG,KAAK0jG,WAAa1jG,KAAKyjG,YACnBgB,aAAY,WACVn+F,EAAKtD,SACJhD,KAAK4jG,eACRz6F,4CAjKqBg1F,EAAAA,oBAN7Bh9F,EAAA,CADCg3C,EAAAA,aAAawqD,GAAiC,CAAE18F,QAAQ,oBACnC08F,gDAEgBxhG,EAAA,CAArC4E,EAAAA,UAAU,QAAS,CAAEE,QAAQ,oBAAuBiH,EAAAA,yCAEjB/L,EAAA,CAAnC2/B,EAAAA,aAAa8hE,oBAA6Cz7F,EAAAA,gDAM5BhG,EAAA,CAA9B2d,EAAAA,aAAa,iIArCHgkF,EAAgB3hG,EAAA,CAJ5B+E,EAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,whCAmC6B+3F,EAAAA,oBAjClB2E,IAAyBV,kBCxCtC,SAAAsC,IAKqB1kG,KAAAuY,MAAQ,IAAIzQ,EAAAA,aACjC,OAJsB3G,EAAA,CAAnB2E,EAAAA,MAAM,oEAGY3E,EAAA,CAAlB8G,EAAAA,OAAO,gEALGy8F,EAAuBvjG,EAAA,CAJnC+E,EAAAA,UAAU,CACTC,SAAU,mBACVC,SAAA,yMAEWs+F,oBC2Cb,SAAAC,KAA4B,OAAfA,EAAaxjG,EAAA,CAbzBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc6G,EAAAA,aAAcqnB,IACtCjuB,aAAc,CACZ05F,GACAW,GACA4B,GACA/B,GACAC,IAEFl6F,QAAS,CAACo6F,GAAkBH,IAC5Bv7F,UAAW,GACXu0B,QAAS,MAEEgpE,OpE/CD9f,GAAAA,EAAAA,kBAAAA,EAAAA,gBAAe,KAEzB,OAAA,SAGAA,GAAA,QAAA,UAGAA,GAAA,SAAA,WAGAA,GAAA,KAAA,OAGAA,GAAA,MAAA,YqEbU+f,iBCqFV,SAAAC,EAAoB7nF,GAAAhd,KAAAgd,WAAAA,EA9CZhd,KAAA8kG,QAA4BjgB,EAAAA,gBAAgBkgB,SAGpD/kG,KAAAugC,GAAcrrB,KAqDhB,OApBqB1V,OAAAqC,eAAIgjG,EAAA3kG,UAAA,SAAM,KAM7B,WACE,OAAOF,KAAK8kG,aAPK,SAAW72F,GAC5BjO,KAAK8kG,QAAU72F,EAEfjO,KAAKglG,6DASPH,EAAA3kG,UAAAmvF,mBAAA,WACErvF,KAAKglG,6BAGGH,EAAA3kG,UAAA8kG,0BAAV,WACEhlG,KAAKgd,WAAWlS,cAAcpD,MAAMmhC,QAClC7oC,KAAKiO,SAAW42E,EAAAA,gBAAgBogB,QAAUjlG,KAAKiO,SAAW42E,EAAAA,gBAAgBtgE,MAAQ,GAAK,iDAR3DrX,EAAAA,cAlBC/L,EAAA,CAAhC2E,EAAAA,MAAM,6FAKW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGArCI++F,EAAe1jG,EAAA,CAJ3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,uDAiDgC8G,EAAAA,cA/CrB23F,oBC9Bb,SAAAK,KAwCA,OA3BE1lG,OAAAqC,eAAIqjG,EAAAhlG,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKiO,SAAW42E,EAAAA,gBAAgBogB,wCAGzCzlG,OAAAqC,eAAIqjG,EAAAhlG,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKiO,SAAW42E,EAAAA,gBAAgB3hD,yCAGzC1jC,OAAAqC,eAAIqjG,EAAAhlG,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKiO,SAAW42E,EAAAA,gBAAgBkgB,0CAGzCvlG,OAAAqC,eAAIqjG,EAAAhlG,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKiO,SAAW42E,EAAAA,gBAAgBsgB,sCAGzC3lG,OAAAqC,eAAIqjG,EAAAhlG,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKiO,SAAW42E,EAAAA,gBAAgBtgE,uCAGzC/kB,OAAAqC,eAAIqjG,EAAAhlG,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK0pE,MA/CQ,oCAkDtBlqE,OAAAqC,eAAIqjG,EAAAhlG,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK0pE,MApDS,KAoDoB1pE,KAAKolG,6CApC5BjkG,EAAA,CAAnB2E,EAAAA,MAAM,oEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,iEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8DAGY3E,EAAA,CAAlB2E,EAAAA,MAAM,kEAXIo/F,EAAwB/jG,EAAA,CAJpC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,wlBAEW8+F,OFRDN,GAAAA,EAAAA,uBAAAA,EAAAA,qBAAoB,KAE9B,WAAA,aAGAA,GAAA,SAAA,WGNF,IAAMS,GAA8BT,EAAAA,qBAAqBxjB,yBA4CzD,SAAAkkB,IACUtlG,KAAAigF,aAAsColB,GACtCrlG,KAAAulG,aAAwB,EACxBvlG,KAAAwlG,MAAgB,EAChBxlG,KAAAylG,OAA+B,GAmHdzlG,KAAA0lG,aAAe,IAAI59F,EAAAA,aAC9C,OAvG0BtI,OAAAqC,eAAIyjG,EAAAplG,UAAA,cAAW,KAMvC,WACE,OAAOF,KAAKigF,kBAPU,SAAgBn9E,GACtC9C,KAAKigF,aAAqBzgF,OAAQ4f,OAAOwlF,EAAAA,sBAAsB97F,SAAShG,GACpEA,EACAuiG,oCAmBW7lG,OAAAqC,eAAIyjG,EAAAplG,UAAA,OAAI,KAOzB,WACE,OAAOF,KAAKwlG,WARG,SAASziG,GACpBA,GAAQ,GAAKA,GAAQ/C,KAAK2lG,MAAMhlG,SAClCX,KAAKwlG,MAAQziG,EACb/C,KAAKylG,OAAOzlG,KAAKwlG,MAAQ,GAAGv3F,OAAS42E,EAAAA,gBAAgBogB,yCAkBvCzlG,OAAAqC,eAAIyjG,EAAAplG,UAAA,QAAK,KAM3B,WACE,OAAOF,KAAKylG,YAPI,SAAUE,GAC1B3lG,KAAKylG,OAAS9lG,MAAMqW,QAAQ2vF,GAASA,EAAQ,GAC7C3lG,KAAKylG,OAAO/lF,SAAQ,SAAA3c,GAAQ,OAACA,EAAKkL,OAAS42E,EAAAA,gBAAgB3hD,WAC3DljC,KAAK+C,KAAO,mCA+CSvD,OAAAqC,eAAIyjG,EAAAplG,UAAA,aAAU,KAIrC,WACE,OAAOF,KAAKulG,iBALS,SAAeK,GACpC5lG,KAAKulG,YAAc30F,EAAiBg1F,oCA9FdzkG,EAAA,CAAvB2E,EAAAA,MAAM,0GAsBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAqBW3E,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAsBZwB,EAAA,CAAtB2E,EAAAA,MAAM,0EAee3E,EAAA,CAArB2E,EAAAA,MAAM,uEAagB3E,EAAA,CAAtB2E,EAAAA,MAAM,0GASkB3E,EAAA,CAAxB8G,EAAAA,OAAO,6EAvHGq9F,EAAsBnkG,EAAA,CADlC4H,EAAAA,aACYu8F,qBCDX,SAAAO,EAAoBpuF,GAApB,IAAAnR,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,IAuNtB,OAzOwC3X,EAAA+lG,EAAAt/F,GAMtC/G,OAAAqC,eAAIgkG,EAAA3lG,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAK+C,KAAO,mCAGrBvD,OAAAqC,eAAIgkG,EAAA3lG,UAAA,WAAQ,KAAZ,WACE,OAAQF,KAAK8lG,YAAc9lG,KAAK+lG,SAAY/lG,KAAK2lG,uCAGnDnmG,OAAAqC,eAAIgkG,EAAA3lG,UAAA,aAAU,KAAd,WACE,QAASF,KAAK+lG,QAAQplG,wCAOxBklG,EAAA3lG,UAAAmvF,mBAAA,WAAA,IAAA/oF,EAAAtG,KACEA,KAAKgmG,kBAELhmG,KAAK+lG,QAAQ34D,QAAQpmC,WAAU,WAC7BV,EAAK2/F,mBAAmB,EAAG3/F,EAAKy/F,QAAQzB,WAW5CuB,EAAA3lG,UAAA61F,OAAA,SAAOj6E,GACL,GAAK9b,KAAK8lG,WAAV,CAIA,IACM/iG,EADa/C,KAAKkmG,aACApqF,GAClBqqF,EAAiBpjG,EAAKkL,SAAW42E,EAAAA,gBAAgBkgB,SACjDqB,EAAcrjG,EAAKkL,SAAW42E,EAAAA,gBAAgBtgE,MAE/C4hF,IAAkBC,GACrBpmG,KAAKqmG,WAAWvqF,EAAO/Y,KAS3B8iG,EAAA3lG,UAAAokG,MAAA,WACE,GAAKtkG,KAAK8lG,WAAV,CAIA,IAAMQ,EAAYtmG,KAAK+lG,QAAQzB,MAG/BtkG,KAAKqmG,WAFkB,EAESC,KAQlCT,EAAA3lG,UAAA8C,KAAA,WACE,GAAKhD,KAAK8lG,WAAV,CAIM,IAAAhwF,EAAA9V,KAAAumG,iBAAAvmG,KAAAwmG,mBAAEb,EAAA7vF,EAAA6vF,MACF5pF,EADSjG,EAAA2wF,UACe,EACxBC,EAAWf,EAAM5pF,GAEvB/b,KAAKqmG,WAAWtqF,EAAW2qF,KAQ7Bb,EAAA3lG,UAAAw8F,SAAA,WACE,GAAK18F,KAAK8lG,WAAV,CAIM,IAAAhwF,EAAA9V,KAAAumG,iBAAAvmG,KAAAwmG,mBAAEb,EAAA7vF,EAAA6vF,MACFgB,EADS7wF,EAAA2wF,UACmB,EAC5BG,EAAejB,EAAMgB,GAE3B3mG,KAAKqmG,WAAWM,EAAeC,KAGjCf,EAAA3lG,UAAAmmG,WAAA,SAAWI,EAAmB1jG,GAA9B,IAAAuD,EAAAtG,KACEA,KAAK6mG,cAAcJ,GAChB1jD,KAAK+jD,EAAAA,KAAK,IACV9/F,WAAU,SAAA+/F,GACT,GAAIA,EAAiB,CACnB,IAAMC,GAAmB1gG,EAAKkgG,mBAAqBzjG,EAAKw9B,KAAOj6B,EAAKkgG,kBAAkBjmE,GAElFj6B,EAAKw/F,YAAckB,GACrB1gG,EAAK2/F,mBAAmBQ,EAAW1jG,GACnCuD,EAAKo/F,aAAa19F,KAAKjF,IACbuD,EAAKw/F,YAAcW,IAAcngG,EAAK2gG,kBAEhD3gG,EAAKo/F,aAAa19F,KAAKy+F,EAAY,QAM7CZ,EAAA3lG,UAAAgnG,aAAA,SAAankG,GACX/C,KAAKwmG,kBAAoBzjG,EAEzB/C,KAAKmnG,mBAAqBnnG,KAAK+lG,QAAQt7F,MACrC,SAAA28F,GAAa,OAAAA,EAAUn5F,SAAW42E,EAAAA,gBAAgBogB,QAAUmC,EAAU7mE,KAAOx9B,EAAKw9B,MAGpFvgC,KAAKqnG,yBAGPxB,EAAA3lG,UAAA2gC,UAAA,SAAU99B,GACR,OAAOA,EAAKw9B,IAGNslE,EAAA3lG,UAAA8lG,gBAAR,WACE,IAAMsB,EAAgBtnG,KAAK+lG,QAAQntE,MAAK,SAAA2uE,GAAU,OAAAA,EAAOt5F,SAAW42E,EAAAA,gBAAgBogB,UAEhFjlG,KAAK8lG,aAAewB,GACtBtnG,KAAKqmG,WAAW,EAAGrmG,KAAK+lG,QAAQzB,QAI5BuB,EAAA3lG,UAAA2mG,cAAR,SAAsBW,GACpB,IAAKxnG,KAAK4lG,WACR,OAAO/jB,EAAAA,IAAG,GAGZ,IAAM4lB,EAAmBznG,KAAK8lG,WAC1B9lG,KAAK0nG,aAAaF,IAAkBxnG,KAAK2nG,kBAAkB3nG,KAAKwmG,mBAChExmG,KAAK2lG,MAAMn5F,MAAMxM,KAAK+C,KAAMykG,GAAernE,OAAM,SAAAp9B,GAAQ,OAAAA,EAAKkL,SAAW42E,EAAAA,gBAAgBsgB,QAE7F,MAAmC,kBAArBsC,EAAiC5lB,EAAAA,GAAG4lB,GAAoBA,GAGhE5B,EAAA3lG,UAAAynG,kBAAR,SAA0BnB,GAA1B,IAAAlgG,EAAAtG,KACE,QADwB,IAAAwmG,IAAAA,EAAqC,KACxDA,EAAkBmB,kBACrB,OAAO9lB,EAAAA,IAAG,GAGZ,IAAM8lB,EAAoBnB,EAAkBmB,kBAAkBnB,GAI9D,OAF2BmB,aAA6BC,EAAAA,WAAaD,EAAoB9lB,EAAAA,GAAG8lB,IAElE5kD,KACxBkC,EAAAA,KAAI,SAAA4iD,GACFrB,EAAkBv4F,OAAS3H,EAAKwhG,4BAA4BD,MAE9DE,EAAAA,YAAW,SAAAl8B,GAGT,OAFA26B,EAAkBv4F,OAAS42E,EAAAA,gBAAgBtgE,MAEpCyjF,EAAAA,WAAWn8B,QAKhBg6B,EAAA3lG,UAAA+lG,mBAAR,SAA2BQ,EAAmB1jG,GACxC/C,KAAK8lG,aACP9lG,KAAKioG,gBAAgBllG,GACrB/C,KAAKkoG,qBAAqBnlG,GAEtB/C,KAAK0nG,aAAajB,IACpBzmG,KAAKmoG,2BAA2B1B,GAGlCzmG,KAAKyX,eAAeqc,kBAIhB+xE,EAAA3lG,UAAA4nG,4BAAR,SAAoCH,GAClC,OAAOA,EAAoB9iB,EAAAA,gBAAgBsgB,KAAOtgB,EAAAA,gBAAgBtgE,OAG5DshF,EAAA3lG,UAAAqmG,iBAAR,SAAyBxjG,QAAA,IAAAA,IAAAA,EAA6B,IACpD,IAAM4iG,EAAQ3lG,KAAKkmG,aACbO,EAAYd,EAAM9xF,WAAU,SAAA0zF,GAAU,OAAAA,EAAOhnE,KAAOx9B,EAAKw9B,MAE/D,MAAO,CAAEolE,MAAKA,EAAEc,UAASA,IAGnBZ,EAAA3lG,UAAAgmG,WAAR,WACE,OAAOlmG,KAAK+lG,QAAQqC,WAGdvC,EAAA3lG,UAAAwnG,aAAR,SAAqBjB,GAArB,IAAAngG,EAAAtG,KAGE,QAASA,KAAKwmG,mBAFuBlgG,EAAK4/F,aAAaryF,WAAU,SAAA9Q,GAAQ,OAAAA,EAAKw9B,KAAOj6B,EAAKkgG,kBAAkBjmE,OAE7CkmE,GAGzDZ,EAAA3lG,UAAAioG,2BAAR,SAAmC1B,GACjCzmG,KAAKkmG,aACFjmF,QAAO,SAACld,EAAM+Y,GAAU,OAAA/Y,GAAQ+Y,GAAS2qF,EAAY,KACrD/mF,SAAQ,SAAA3c,GAAQ,OAACA,EAAKkL,OAAS42E,EAAAA,gBAAgBkgB,aAG5Cc,EAAA3lG,UAAA+nG,gBAAR,SAAwBllG,GACtBA,EAAKkL,OAAS42E,EAAAA,gBAAgBogB,QAGxBY,EAAA3lG,UAAAgoG,qBAAR,SAA6BG,GACrB,IAAAvyF,EAAA9V,KAAAumG,iBAAA8B,GAAE1C,EAAA7vF,EAAA6vF,MACF5pF,EADSjG,EAAA2wF,UACe,EAE1B1qF,EAAY/b,KAAK+lG,QAAQplG,SAC3BglG,EAAM5pF,GAAW9N,OAAS42E,EAAAA,gBAAgB3hD,UAItC2iE,EAAA3lG,UAAAmnG,sBAAR,WACMrnG,KAAKmnG,qBACPnnG,KAAKmnG,mBAAmBl5F,OAAS42E,EAAAA,gBAAgBsgB,gDApNjBztF,EAAAA,qBAjBFvW,EAAA,CAAjC+F,EAAAA,gBAAgB29F,oBAA0B19F,EAAAA,0CADhC0+F,EAAkB1kG,EAAA,CAJ9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,iuBAoBoCsR,EAAAA,qBAlBzBmuF,IAA2BP,kBCrBxC,SAAAgD,KAGA,OADsBnnG,EAAA,CAAnB2E,EAAAA,MAAM,oEAFIwiG,EAAuBnnG,EAAA,CAJnC+E,EAAAA,UAAU,CACTC,SAAU,mBACVC,SAAA,+DAEWkiG,MCJPC,GAAwB,CAC5B1xF,GAAI,CAAElT,MAAO,QACboT,GAAI,CAAEpT,MAAO,QACbqT,GAAI,CAAErT,MAAO,wBAcf,SAAA6kG,IAGUxoG,KAAAyoG,YAAuB,EACvBzoG,KAAA0oG,UAvBuB,GAyBtB1oG,KAAA43B,SAAQx3B,EAAAA,EAAA,GACZmoG,GAAqC,IACrCA,GAAsBh5F,MAmDJvP,KAAA2oG,UAAY,IAAI7gG,EAAAA,aAGpB9H,KAAAuY,MAAQ,IAAIzQ,EAAAA,aAGZ9H,KAAAykD,MAAQ,IAAI38C,EAAAA,aAwCjC,OA1FoBtI,OAAAqC,eAAI2mG,EAAAtoG,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAK4oG,YALI,SAAU9lG,GAC1B9C,KAAK4oG,OAASx3F,EAAStO,EAAO,UAAYA,EAAW9C,KAAK43B,SAASj0B,MAAK,IAAI3D,KAAK6oG,+CAWhErpG,OAAAqC,eAAI2mG,EAAAtoG,UAAA,SAAM,KAQ7B,WACE,OAAOF,KAAK8kG,aATK,SAAWhiG,GAC5B9C,KAAK8kG,QAAWhiG,QAA2BqG,EAEvCnJ,KAAKiO,SAAW42E,EAAAA,gBAAgBogB,QAClCjlG,KAAK2oG,UAAU3gG,wCAQIxI,OAAAqC,eAAI2mG,EAAAtoG,UAAA,YAAS,KAIpC,WACE,OAAOF,KAAKyoG,gBALS,SAAcK,GACnC9oG,KAAKyoG,WAAa73F,EAAiBk4F,oCASftpG,OAAAqC,eAAI2mG,EAAAtoG,UAAA,WAAQ,KAKlC,WACE,OAAOF,KAAK0oG,eANQ,SAAa5lG,GACjC9C,KAAK0oG,UACH5lG,GAtE2B,IAsEUA,GArEd,GAqE8CA,EAtE1C,oCAsF/BtD,OAAAqC,eAAI2mG,EAAAtoG,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK+oG,SAAW,mCAGzBvpG,OAAAqC,eAAI2mG,EAAAtoG,UAAA,wBAAqB,KAAzB,WACE,OAAOF,KAAKmoC,cAAgBy8D,EAAAA,qBAAqB7kB,0CAGnDvgF,OAAAqC,eAAI2mG,EAAAtoG,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAKgpG,2BAAwB7/F,EAAYnJ,KAAKipG,8CAGvDT,EAAAtoG,UAAAgpG,eAAA,SAAej7F,GACb,OAAQA,GACN,KAAK42E,EAAAA,gBAAgBogB,OACnB,MAAO,yBACT,KAAKpgB,EAAAA,gBAAgBkgB,SACnB,MAAO,2BACT,KAAKlgB,EAAAA,gBAAgBsgB,KACnB,MAAO,uBACT,KAAKtgB,EAAAA,gBAAgBtgE,MACnB,MAAO,wBACT,QACE,MAAO,4BAIbikF,EAAAtoG,UAAA6H,QAAA,WACM/H,KAAKiO,SAAW42E,EAAAA,gBAAgBkgB,UAClC/kG,KAAKuY,MAAMvQ,QAIfwgG,EAAAtoG,UAAAipG,QAAA,WACMnpG,KAAKiO,SAAW42E,EAAAA,gBAAgBkgB,UAClC/kG,KAAKykD,MAAMz8C,QA1FY7G,EAAA,CAA1B2E,EAAAA,MAAM,iFAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FASiB3E,EAAA,CAAvB2E,EAAAA,MAAM,4EAGY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAYgB3E,EAAA,CAAtB2E,EAAAA,MAAM,yGAUe3E,EAAA,CAArB2E,EAAAA,MAAM,qGAUgB3E,EAAA,CAAtB8G,EAAAA,OAAO,wEAGW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEAGW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEAjEGugG,EAAsBrnG,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,w4BAEWoiG,oBCFb,SAAAY,KAA8B,OAAjBA,EAAejoG,EAAA,CAX3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CACZo8F,GACAK,GACAW,GACAyC,GACAE,IAEF9/F,QAAS,CAACm8F,GAAiBgB,OAEhBuD,oBCsCX,SAAAC,EAAoBrsF,GAAAhd,KAAAgd,WAAAA,EARGhd,KAAA2oG,UAAY,IAAI7gG,EAAAA,aAGb9H,KAAAspG,YAAc,IAAIxhG,EAAAA,aAGzB9H,KAAAuY,MAAQ,IAAIzQ,EAAAA,aAyBjC,OAjEqBtI,OAAAqC,eAAIwnG,EAAAnpG,UAAA,SAAM,KAM7B,WACE,OAAOF,KAAKupG,aAPK,SAAWzmG,GAC5B9C,KAAKupG,QAAUzmG,EAEf9C,KAAKwpG,iDAWUhqG,OAAAqC,eAAIwnG,EAAAnpG,UAAA,OAAI,KAMzB,WACE,OAAOF,KAAKypG,WAPG,SAAS3mG,GACxB9C,KAAKypG,MAAQ74F,EAAiB9N,GAE9B9C,KAAK0pG,oDA2BPL,EAAAnpG,UAAAitC,YAAA,SAAYC,IACLA,EAAQu8D,MAAQv8D,EAAQu8D,KAAKx7D,cAAkBf,EAAQ10B,UAAY00B,EAAQ10B,SAASy1B,eACvFnuC,KAAKspG,YAAYthG,KAAKhI,OAI1BqpG,EAAAnpG,UAAA6H,QAAA,WACO/H,KAAK0Y,UACR1Y,KAAKuY,MAAMvQ,KAAKhI,KAAKugC,KAIjB8oE,EAAAnpG,UAAAspG,cAAR,WACMxpG,KAAK+1F,QACP/1F,KAAK2oG,UAAU3gG,KAAKhI,OAIhBqpG,EAAAnpG,UAAAwpG,iBAAR,WACE1pG,KAAKgd,WAAWlS,cAAcpD,MAAMmhC,QAAU7oC,KAAK2pG,KAAO,OAAS,6CArBrCz8F,EAAAA,cA1Cb/L,EAAA,CAAlB2E,EAAAA,MAAM,kGAWc3E,EAAA,CAApB2E,EAAAA,MAAM,uEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,8FAWQ3E,EAAA,CAAd2E,EAAAA,MAAM,0DAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,iEAGgB3E,EAAA,CAAtB8G,EAAAA,OAAO,wEAGkB9G,EAAA,CAAzB8G,EAAAA,OAAO,6EAGW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEA7CGohG,EAAoBloG,EAAA,CAJhC+E,EAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,mXAiDgC8G,EAAAA,cA/CrBm8F,oBCAb,SAAAO,IACU5pG,KAAAupG,SAAoB,EACpBvpG,KAAAmY,WAAsB,EACtBnY,KAAAypG,OAAkB,EAG1BzpG,KAAAugC,GAAcrrB,KA4DKlV,KAAAuY,MAAQ,IAAIzQ,EAAAA,aAGjC,OAlDqBtI,OAAAqC,eAAI+nG,EAAA1pG,UAAA,SAAM,KAK7B,WACE,OAAOF,KAAKupG,aANK,SAAWxT,GAC5B/1F,KAAKupG,QAAU34F,EAAiBmlF,GAChC/1F,KAAK6pG,sDAgBcrqG,OAAAqC,eAAI+nG,EAAA1pG,UAAA,WAAQ,KAIjC,WACE,OAAOF,KAAKmY,eALO,SAAaO,GAChC1Y,KAAKmY,UAAYvH,EAAiB8H,oCAgBnBlZ,OAAAqC,eAAI+nG,EAAA1pG,UAAA,OAAI,KAIzB,WACE,OAAOF,KAAKypG,WALG,SAASE,GACxB3pG,KAAKypG,MAAQ74F,EAAiB+4F,oCApCbxoG,EAAA,CAAlB2E,EAAAA,MAAM,kGAkBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAiBU3E,EAAA,CAAhB2E,EAAAA,MAAM,8FASW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAGY3E,EAAA,CAAlB8G,EAAAA,OAAO,gEAlEY2hG,EAAkBzoG,EAAA,CADvC4H,EAAAA,aACqB6gG,qBCHpB,SAAAE,EAAoB9sF,GAApB,IAAA1W,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAA0W,WAAAA,IAWtB,OAZoCld,EAAAgqG,EAAAvjG,GAKlCujG,EAAA5pG,UAAAmvF,mBAAA,WACErvF,KAAK6pG,sBAGGC,EAAA5pG,UAAA2pG,mBAAV,WACE7pG,KAAKgd,WAAWlS,cAAcpD,MAAMmhC,QAAU7oC,KAAK+1F,OAAS,GAAK,iDATnC7oF,EAAAA,cADrB48F,EAAc3oG,EAAA,CAJ1B+E,EAAAA,UAAU,CACTC,SAAU,SACVC,SAAA,uDAGgC8G,EAAAA,cADrB48F,IAAuBF,kBCMpC,SAAAG,IAWmB/pG,KAAAgqG,KAA8B,GAGxBhqG,KAAA2oG,UAAY,IAAI7gG,EAAAA,aAGb9H,KAAAspG,YAAc,IAAIxhG,EAAAA,aAGzB9H,KAAAuY,MAAQ,IAAIzQ,EAAAA,aASjC,OAPEiiG,EAAA7pG,UAAA+pG,kBAAA,WACE,OAAOjqG,KAAKkqG,MAAQ,+BAAiC,6BAGvDH,EAAA7pG,UAAAiqG,cAAA,WACEnqG,KAAKiuC,QAAQzvB,SAAWxe,KAAKiuC,QAAQ55B,OAASrU,KAAKiuC,QAAQjX,SA1BrB71B,EAAA,CAAvC4E,EAAAA,UAAU,UAAW,CAAEE,QAAQ,oBAAiBgkC,mCACS9oC,EAAA,CAAzD4E,EAAAA,UAAU,UAAW,CAAEqH,KAAMF,EAAAA,WAAYjH,QAAQ,oBAAqBiH,EAAAA,+CAGrD/L,EAAA,CAAjB2E,EAAAA,MAAM,gEAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,iEAGU3E,EAAA,CAAhB2E,EAAAA,MAAM,0BAAgBnG,mCAGAwB,EAAA,CAAtB8G,EAAAA,OAAO,wEAGkB9G,EAAA,CAAzB8G,EAAAA,OAAO,6EAGW9G,EAAA,CAAlB8G,EAAAA,OAAO,gEApBG8hG,EAAsB5oG,EAAA,CAJlC+E,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAA,q+BAEW2jG,oBCQb,SAAAK,IACUpqG,KAAAqY,QAAmB,EAkB7B,OAPoB7Y,OAAAqC,eAAIuoG,EAAAlqG,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKqY,YALI,SAAUvV,GAC1B9C,KAAKqY,OAASzH,EAAiB9N,oCADf3B,EAAA,CAAjB2E,EAAAA,MAAM,gGAZIskG,EAAmBjpG,EAAA,CAD/B4H,EAAAA,aACYqhG,qBCwBX,SAAAC,EAAoB5yF,GAApB,IAAAnR,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAAmR,eAAAA,EATpBnR,EAAAgkG,gBAhC4B,IA4I9B,OA7GqCxqG,EAAAuqG,EAAA9jG,GAcnC/G,OAAAqC,eAAIwoG,EAAAnqG,UAAA,iBAAc,KAAlB,WACE,OAAOmT,sCAGT7T,OAAAqC,eAAIwoG,EAAAnqG,UAAA,oBAAiB,KAArB,WACE,OAAQF,KAAKuqG,gBAAkBvqG,KAAKwqG,YAAY7pG,OAASX,KAAKsqG,iDAIhE9qG,OAAAqC,eAAIwoG,EAAAnqG,UAAA,iBAAc,KAAlB,WAAA,IAAAoG,EAAAtG,KACE,OAAOA,KAAKwqG,YAAYvqF,QAAO,SAACwqF,EAAM3uF,GAAU,OAAAA,EAAQxV,EAAKgkG,gBAAkB,sCAGjF9qG,OAAAqC,eAAIwoG,EAAAnqG,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKgqG,KAAK/pF,QAAO,SAAAikC,GAAO,OAACA,EAAIylD,yCAGtCU,EAAAnqG,UAAAwqG,aAAA,WACiC1qG,KAAK2qG,aAAe3qG,KAAK2qG,YAAY18D,UAAYjuC,KAAK2qG,YAAY18D,QAAQzvB,UAGvGxe,KAAK2qG,YAAY18D,QAAQjX,SAI7BqzE,EAAAnqG,UAAA0qG,aAAA,SAAa1mD,GACX,GAAIlkD,KAAKuqG,eACP,OAAO,EAGT,IAAMM,EAAkB7qG,KAAKwqG,YAAY32F,WAAU,SAAAi3F,GAAc,OAAAA,EAAWvqE,KAAO2jB,EAAI3jB,MAEvF,OAAOvgC,KAAKwqG,YAAY7pG,QAAUX,KAAKsqG,iBAAmBO,EAAkB7qG,KAAKsqG,gBAAkB,GAIrGD,EAAAnqG,UAAA6qG,YAAA,SAAY7mD,GACVlkD,KAAKgrG,kBAAoBhrG,KAAKgqG,KAAKv/F,MAAK,SAAAwgG,GAAY,OAAAA,EAASlV,QAAUkV,EAAS1qE,KAAO2jB,EAAI3jB,MAE3FvgC,KAAKkrG,iBAIPb,EAAAnqG,UAAAirG,iBAAA,SAAiBjnD,GACXA,EAAI6xC,SACN7xC,EAAI6xC,QAAS,EAEb/1F,KAAKorG,oBAELprG,KAAKyX,eAAeqc,kBAKxBu2E,EAAAnqG,UAAAmrG,YAAA,SAAYnnD,GACVA,EAAI6xC,QAAS,EAET7xC,EAAI3rC,OACN2rC,EAAI3rC,MAAMvQ,KAAKk8C,GAGjBlkD,KAAKyX,eAAeqc,iBAGtBu2E,EAAAnqG,UAAA2gC,UAAA,SAAUyqE,EAAIpnD,GACZ,OAAOA,EAAI3jB,IAIL8pE,EAAAnqG,UAAAkrG,kBAAR,WACMprG,KAAKgrG,kBACPhrG,KAAKgrG,kBAAkBjV,QAAS,EAEhC/1F,KAAKurG,kBAKDlB,EAAAnqG,UAAAqrG,eAAR,WACEvrG,KAAKgqG,KAAKpxE,MAAK,SAAAqyE,GACb,IAAKA,EAASvyF,WAAauyF,EAAStB,KAElC,OADAsB,EAASlV,QAAS,GACX,MAMLsU,EAAAnqG,UAAAgrG,cAAR,WACMlrG,KAAKgrG,oBACPhrG,KAAKgrG,kBAAkBjV,QAAS,EAEhC/1F,KAAKyX,eAAeqc,2DAhGYpc,EAAAA,qBAJHvW,EAAA,CAAhC+F,EAAAA,gBAAgB4iG,oBAAsB3iG,EAAAA,uCAEKhG,EAAA,CAA3C4E,EAAAA,UAAU,cAAe,CAAEE,QAAQ,oBAAqB8jG,uCAR9CM,EAAelpG,EAAA,CAJ3B+E,EAAAA,UAAU,CACTC,SAAU,UACVC,SAAA,2rCAYoCsR,EAAAA,qBAVzB2yF,IAAwBD,kBCpBrC,SAAAoB,KAA2B,OAAdA,EAAYrqG,EAAA,CALxBmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcqiC,IACxBpiC,aAAc,CAAC4gG,GAAsBS,GAAgBC,GAAwBM,IAC7E3hG,QAAS,CAACohG,GAAgBO,OAEfmB,oBCIb,SAAAC,IACUzrG,KAAA0rG,aAjB0B,eA8BpC,OAP2BlsG,OAAAqC,eAAI4pG,EAAAvrG,UAAA,cAAW,KAIxC,WACE,OAAOF,KAAK0rG,kBALW,SAAgB7vE,GACvC77B,KAAK0rG,aAAet6F,EAASyqB,EAAM,UAAYA,EAxBf,gDAoBd16B,EAAA,CAAnB2E,EAAAA,MAAM,6BAAuBnG,sCAGLwB,EAAA,CAAxB2E,EAAAA,MAAM,2GAPI2lG,EAAyBtqG,EAAA,CALrC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,yPACAgB,UAAW,CAACgS,OAEDqyF,oBCVb,SAAAE,IAgCgC3rG,KAAA4rG,kBAA6B,EAgC7D,OAXkCpsG,OAAAqC,eAAI8pG,EAAAzrG,UAAA,qBAAkB,KAItD,WACE,OAAOF,KAAK6rG,yBALkB,SAAuB/oG,GACrD9C,KAAK6rG,oBAAsB96F,EAAajO,EAAO,oCAOjDtD,OAAAqC,eAAI8pG,EAAAzrG,UAAA,gBAAa,KAAjB,WACE,SAAUF,KAAK8rG,UAAW9rG,KAAK+rG,iDApDb5qG,EAAA,CAAnB2E,EAAAA,MAAM,6BAAuBnG,sCAaLwB,EAAA,CAAxB2E,EAAAA,MAAM,6EAGa3E,EAAA,CAAnB2E,EAAAA,MAAM,oEAGqB3E,EAAA,CAA3B2E,EAAAA,MAAM,qCAAsCnG,6CAGfwB,EAAA,CAA7B2E,EAAAA,MAAM,wFAGW3E,EAAA,CAAjB2E,EAAAA,MAAM,gEAS0B3E,EAAA,CAAhC2E,EAAAA,MAAM,0CAAgDnG,kDASvBwB,EAAA,CAA/B2E,EAAAA,MAAM,yHArDI6lG,EAAsBxqG,EAAA,CADlC4H,EAAAA,aACY4iG,qBCmBX,SAAAK,EAAoBC,EAAqB9rF,GAAzC,IAAA7Z,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAA2lG,aAAAA,EAElB3lG,EAAK8Z,UAAYD,EAAmB,UAAE,KAU1C,OAfwCrgB,EAAAksG,EAAAzlG,GAQtCylG,EAAA9rG,UAAA+I,SAAA,WACEjJ,KAAKksG,SAASlsG,KAAKumC,QAGbylE,EAAA9rG,UAAAgsG,SAAR,SAAiBC,GACfnsG,KAAKisG,aAAaC,SAASC,6CAVKC,EAAAA,aAAgB/rF,EAAAA,oBAHvC2rF,EAAkB7qG,EAAA,CAJ9B+E,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAA,gqBAKkCgmG,EAAAA,MAAgB/rF,EAAAA,oBAHvC2rF,IAA2BL,kBCLxC,SAAAU,IACUrsG,KAAA6rG,oBAA+B,EAazC,OAPkCrsG,OAAAqC,eAAIwqG,EAAAnsG,UAAA,qBAAkB,KAItD,WACE,OAAOF,KAAK6rG,yBALkB,SAAuB/oG,GACrD9C,KAAK6rG,oBAAsB3tE,OAAO4f,UAAUh7C,GAASA,EAAQ,mCAJ9B3B,EAAA,CAAhC2E,EAAAA,MAAM,0CAAgDnG,kDAGvBwB,EAAA,CAA/B2E,EAAAA,MAAM,yHAPIumG,EAA8BlrG,EAAA,CAL1C+E,EAAAA,UAAU,CACTC,SAAU,0BACVC,SAAA,2XACAgB,UAAW,CAACgS,OAEDizF,oBCHb,SAAAC,KAUA,OAHE9sG,OAAAqC,eAAIyqG,EAAApsG,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAK8rG,QAAU9rG,KAAK8rG,QAAQS,YAASpjG,mCAN1BhI,EAAA,CAAnB2E,EAAAA,MAAM,oEAGqB3E,EAAA,CAA3B2E,EAAAA,MAAM,qCAAsCnG,6CALlC2sG,EAAyBnrG,EAAA,CALrC+E,EAAAA,UAAU,CACTC,SAAU,qBACVC,SAAA,mtBACAgB,UAAW,CAACgS,OAEDkzF,oBCOb,SAAAE,KAA8B,OAAjBA,EAAerrG,EAAA,CAZ3BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAca,EAAgBqyB,IACxCjzB,aAAc,CACZgjG,GACAO,GACAK,GACAC,IAEF5jG,QAAS,CAACsjG,IACV5kG,UAAW,GACXu0B,QAAS,MAEE6wE,oBCNb,SAAAC,IACUzsG,KAAAwJ,OAAgC,GAChCxJ,KAAAywC,aAAuB,EAuCRzwC,KAAAyvC,UAAY,IAAI3nC,EAAAA,aAWjB9H,KAAA4F,SAAW,IAAIkC,EAAAA,aAWf9H,KAAA4f,SAAW,IAAI9X,EAAAA,aAWb9H,KAAA4vC,WAAa,IAAI9nC,EAAAA,aAsI3C,OAzMoBtI,OAAAqC,eAAI4qG,EAAAvsG,UAAA,QAAK,KAI3B,WACE,OAAOF,KAAKwJ,YALI,SAAU1G,GAC1B9C,KAAKwJ,OAAS7J,MAAMqW,QAAQlT,GAAS9C,KAAK0sG,mBAAmB5pG,GAAS,oCAgBjDtD,OAAAqC,eAAI4qG,EAAAvsG,UAAA,aAAU,KAIrC,WACE,OAAOF,KAAKywC,iBALS,SAAe3tC,GACpC9C,KAAKywC,YAAc7/B,EAAiB9N,oCAmD5B2pG,EAAAvsG,UAAAysG,aAAV,SAAuBC,GAGrB5sG,KAFc4sG,EAAahnG,SAAW,WAAa,aAEvCoC,KAAI5H,EAAA,GAAMwsG,KAGdH,EAAAvsG,UAAA2sG,aAAV,SAAuBD,GACrB,IAAM/lG,EAAQ+lG,EAAahtF,SAAW,WAAa,aAEnD5f,KAAK8sG,oBAAoBF,GAEzB5sG,KAAK6G,GAAOmB,KAAI5H,EAAA,GAAMwsG,KAGhBH,EAAAvsG,UAAA6sG,qBAAR,SAA6BC,EAA2BC,GACjDA,EAAWjb,WACdib,EAAWjb,SAAW,IAGxBib,EAAWjb,SAASxtF,KAAKwoG,IAQnBP,EAAAvsG,UAAAgtG,QAAR,SAAgBzjG,EAA8BujG,EAA2BC,GACnEA,GACFjtG,KAAKmtG,iBAAiBH,EAAWC,GACjCjtG,KAAK+sG,qBAAqBC,EAAWC,GACrCjtG,KAAKotG,qBAAqBH,GAE1BxjG,EAAMjF,KAAKyoG,IAEXxjG,EAAMjF,KAAKwoG,IAIPP,EAAAvsG,UAAAmtG,eAAR,SAAuB5jG,EAA8B8uF,GAArD,IAAAjyF,EAAAtG,KACEyJ,EAAMiW,SAAQ,SAAA7R,GACRA,EAAKmkF,UACP1rF,EAAK+mG,eAAex/F,EAAKmkF,SAAUuG,GAGrC1qF,EAAK+R,SAAW24E,MAIZkU,EAAAvsG,UAAAktG,qBAAR,SAA6Bv/F,GAC3BA,EAAK+R,SAAW5f,KAAKstG,kBAAkBz/F,EAAKmkF,WAOtCya,EAAAvsG,UAAAotG,kBAAR,SAA0B7jG,QAAA,IAAAA,IAAAA,EAAA,IACxB,IAAM8jG,EAAc9jG,EAAM9I,OAEpB6sG,EAAqB/jG,EAAMwW,QAAO,SAAApS,GAAQ,OAAAA,EAAK+R,YAAUjf,OAE/D,SAAI4sG,GAAeA,IAAgBC,MAIL/jG,EAAMwW,QAAO,SAAApS,GAAQ,OAAAA,EAAK+R,UAA8B,OAAlB/R,EAAK+R,YAAmBjf,QAGnF,MAOH8rG,EAAAvsG,UAAAitG,iBAAR,SAAyBH,EAA2BC,GAC9CD,EAAUpnG,WACZqnG,EAAWrnG,UAAW,IAIlB6mG,EAAAvsG,UAAAwsG,mBAAR,SACEjjG,EACAqvF,EACAmU,EACAQ,GAJF,IAAAnnG,EAAAtG,KA0BE,YAzBA,IAAAyJ,IAAAA,EAAA,SACA,IAAAqvF,IAAAA,EAAA,QAEA,IAAA2U,IAAAA,EAAA,IAEAhkG,EAAMiW,SAAQ,SAAA7R,GACJ,IAAAmkF,EAAAnkF,EAAAmkF,SAAU0b,EAAA5sG,EAAA+M,EAAA,CAAA,aArLG,IAuLjBirF,IAIAn5F,MAAMqW,QAAQg8E,KAEZ0b,EAAY9tF,UACdtZ,EAAK+mG,eAAerb,EAAU0b,EAAY9tF,UAG5CtZ,EAAKomG,mBAAmB1a,IAAY8G,EAAO4U,KACzC5U,GAGJxyF,EAAK4mG,QAAQO,EAAUC,EAAaT,OAG/BQ,GAGDhB,EAAAvsG,UAAAytG,2BAAR,SAAmClkG,EAAmCwjG,EAA6BQ,GAAnG,IAAAnnG,EAAAtG,KAWE,YAXiC,IAAAyJ,IAAAA,EAAA,SAAgE,IAAAgkG,IAAAA,EAAA,IACjGhkG,EAAMiW,SAAQ,SAAA7R,GACJ,IAAAmkF,EAAAnkF,EAAAmkF,SAAU0b,EAAA5sG,EAAA+M,EAAA,CAAA,aAEdlO,MAAMqW,QAAQg8E,IAChB1rF,EAAKqnG,2BAA2B3b,EAAU0b,GAG5CpnG,EAAK4mG,QAAQO,EAAUC,EAAaT,MAG/BQ,GAGDhB,EAAAvsG,UAAA4sG,oBAAR,SAA4B7mD,GACtBA,EAAa+rC,UACfhyF,KAAKqtG,eAAepnD,EAAa+rC,SAAU/rC,EAAarmC,UAG1D5f,KAAKwJ,OAASxJ,KAAK2tG,2BAA2B3tG,KAAKyJ,QAvMnCtI,EAAA,CAAjB2E,EAAAA,MAAM,2BAA4BnG,8BAAAA,mCAiBZwB,EAAA,CAAtB2E,EAAAA,MAAM,0GAiBgB3E,EAAA,CAAtB8G,EAAAA,OAAO,wEAWc9G,EAAA,CAArB8G,EAAAA,OAAO,sEAWc9G,EAAA,CAArB8G,EAAAA,OAAO,sEAWgB9G,EAAA,CAAvB8G,EAAAA,OAAO,0EA1EGwkG,EAAuBtrG,EAAA,CADnC4H,EAAAA,aACY0jG,oBCfb,SAAAmB,IACU5tG,KAAA6tG,cAAgB,IAAI1oG,EAAAA,QACpBnF,KAAA8tG,cAAgB,IAAI3oG,EAAAA,QAiB9B,OAfEyoG,EAAA1tG,UAAA6tG,kBAAA,SAAkBnB,GAChB,OAAO5sG,KAAK6tG,cAAc7qG,KAAK4pG,IAGjCgB,EAAA1tG,UAAA8tG,kBAAA,SAAkBpB,GAChB,OAAO5sG,KAAK8tG,cAAc9qG,KAAK4pG,IAGjCgB,EAAA1tG,UAAA+tG,SAAA,WACE,OAAOjuG,KAAK6tG,cAAcxoG,gBAG5BuoG,EAAA1tG,UAAAguG,SAAA,WACE,OAAOluG,KAAK8tG,cAAczoG,gBAjBjBuoG,EAAiBzsG,EAAA,CAD7BqE,EAAAA,cACYooG,qBCmCX,SAAAO,EAAoBC,GAApB,IAAA9nG,EACEC,EAAA3F,KAAAZ,OAAOA,YADWsG,EAAA8nG,gBAAAA,IAiBtB,OAtByCtuG,EAAAquG,EAAA5nG,GACvC/G,OAAAqC,eAAIssG,EAAAjuG,UAAA,WAAQ,KAAZ,WACE,SAAUF,KAAKyJ,QAASzJ,KAAKyJ,MAAM9I,yCAOrCwtG,EAAAjuG,UAAA+I,SAAA,WAAA,IAAA3C,EAAAtG,KACEA,KAAKouG,gBAAgBH,WAAWjnG,WAAU,SAAC4lG,GACzCtmG,EAAKqmG,aAAaC,MAGpB5sG,KAAKouG,gBAAgBF,WAAWlnG,WAAU,SAAC4lG,GACzCtmG,EAAKumG,aAAaD,OAItBuB,EAAAjuG,UAAAisC,gBAAA,SAAgBrwB,GACd,OAAOA,4CAf4B8xF,MAL1BO,EAAmBhtG,EAAA,CAN/B+E,EAAAA,UAAU,CACTC,SAAU,eACVC,SAAA,wQACA8B,gBAAiBC,EAAAA,wBAAwBC,OACzChB,UAAW,CAACwmG,6BAOyBA,MAL1BO,IAA4B1B,kBCMvC,SAAA4B,EAAoBD,GAAApuG,KAAAouG,gBAAAA,EAkBtB,OAtBE5uG,OAAAqC,eAAIwsG,EAAAnuG,UAAA,cAAW,KAAf,WACE,SAAUF,KAAK6N,KAAKmkF,WAAYhyF,KAAK6N,KAAKmkF,SAASrxF,yCAKrD0tG,EAAAnuG,UAAA6H,QAAA,SAAQlB,GACNA,EAAM+5B,iBACN/5B,EAAMm7B,kBAENhiC,KAAK6N,KAAKjI,UAAY5F,KAAK6N,KAAKjI,SAEhC5F,KAAKouG,gBAAgBL,kBAAiB3tG,EAAA,GAAMJ,KAAK6N,QAGnDwgG,EAAAnuG,UAAAguG,SAAA,SAASjoD,GACPjmD,KAAKouG,gBAAgBJ,kBAAiB5tG,EAAA,GAAM6lD,KAG9CooD,EAAAnuG,UAAAisC,gBAAA,SAAgBrwB,GACd,OAAOA,4CAhB4B8xF,MARpBzsG,EAAA,CAAhB2E,EAAAA,MAAM,8DAEgB3E,EAAA,CAAtB2E,EAAAA,MAAM,2EAHIuoG,EAAuBltG,EAAA,CA5BnC+E,EAAAA,UAAU,CACTC,SAAU,oBACVC,SAAA,yiBACA8B,gBAAiBC,EAAAA,wBAAwBC,OACzCb,WAAY,CACVC,EAAAA,QAAQ,aAAc,CACpB4wE,EAAAA,MACE,YACA1wE,EAAAA,MAAM,CACJqoF,aAAc,SACdue,WAAY,SACZ9jE,QAAS,EACT7iC,OAAQ,OAGZF,EAAAA,WAAW,wBAAyB,CAClCC,EAAAA,MAAM,CAAEC,OAAQ,MAChBC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAE8iC,QAAS,KAC9B5iC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,OAE/BF,EAAAA,WAAW,wBAAyB,CAClCC,EAAAA,MAAM,CAAEC,OAAQ,MAChBC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAE8iC,QAAS,KAC9B5iC,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEC,OAAQ,qCAcEimG,MAT1BS,oBCzBb,SAAAE,IAKyBvuG,KAAAswC,YAAsB,EAEvBtwC,KAAA4F,SAAW,IAAIkC,EAAAA,aAEf9H,KAAA4f,SAAW,IAAI9X,EAAAA,aAKvC,OAHEtI,OAAAqC,eAAI0sG,EAAAruG,UAAA,cAAW,KAAf,WACE,SAAUF,KAAK6N,KAAKmkF,WAAYhyF,KAAK6N,KAAKmkF,SAASrxF,yCAXzBQ,EAAA,CAA3B4E,EAAAA,UAAU,8EAEM5E,EAAA,CAAhB2E,EAAAA,MAAM,8DAEgB3E,EAAA,CAAtB2E,EAAAA,MAAM,2EAEe3E,EAAA,CAArB8G,EAAAA,OAAO,sEAEc9G,EAAA,CAArB8G,EAAAA,OAAO,sEATGsmG,EAA6BptG,EAAA,CALzC+E,EAAAA,UAAU,CACTC,SAAU,2BACVC,SAAA,w6BACA8B,gBAAiBC,EAAAA,wBAAwBC,UAE9BmmG,oBCsCb,SAAAC,KAA+B,OAAlBA,EAAgBrtG,EAAA,CAL5BmH,EAAAA,SAAS,CACRG,aAAc,CAAC0lG,GAAqBE,GAAyBE,IAC7D7lG,QAAS,CAACylG,IACV5lG,QAAS,CAACC,EAAAA,aAAcy4B,EAAAA,YAAavK,GAAmBgpD,OAE7C8uB,oBC7Bb,SAAAC,IAEUzuG,KAAAmY,WAAsB,EAGtBnY,KAAAw2B,WAAsB,EACtBx2B,KAAA0uG,UAAqB,EAI7B1uG,KAAAo9D,gBAA2B,OAqJRp9D,KAAAuY,MAAmC,IAAIzQ,EAAAA,aAGjC9H,KAAA2uG,WAAiC,IAAI7mG,EAAAA,aAGlC9H,KAAAuhC,cAAoC,IAAIz5B,EAAAA,aAGtC9H,KAAAoiC,gBAAsC,IAAIt6B,EAAAA,aAGnD9H,KAAA4uG,QAA8B,IAAI9mG,EAAAA,aAG7B9H,KAAA+tF,YAAkC,IAAIjmF,EAAAA,aAGlE,OA3JyBtI,OAAAqC,eAAI4sG,EAAAvuG,UAAA,aAAU,KAIrC,WACE,OAAOF,KAAK6uG,iBALS,SAAe/rG,GACpC9C,KAAK6uG,YAAc/rG,GAA0B,iBAAVA,EAAqBA,OAAQqG,mCAgB7C3J,OAAAqC,eAAI4sG,EAAAvuG,UAAA,WAAQ,KAMjC,WACE,OAAOF,KAAKmY,eAPO,SAAarV,GAChC9C,KAAKmY,UAAYvH,EAAiB9N,GAElC9C,KAAK2uG,WAAW3mG,KAAKhI,KAAK0Y,2CAiBTlZ,OAAAqC,eAAI4sG,EAAAvuG,UAAA,SAAM,KAK7B,WACE,OAAOF,KAAKmpB,aANK,SAAWrmB,GAC5B9C,KAAKmpB,QAAUjY,SAAcpO,EAAO,IACpC9C,KAAK+jG,UAAU/jG,KAAK2H,yCAcLnI,OAAAqC,eAAI4sG,EAAAvuG,UAAA,OAAI,KAKzB,WACE,OAAOF,KAAK8uG,WANG,SAAShsG,GACxB9C,KAAK8uG,MAAQ19F,EAAStO,EAAO,UAAYA,EAAQ,GACjD9C,KAAK+jG,UAAU/jG,KAAK2H,yCAgBAnI,OAAAqC,eAAI4sG,EAAAvuG,UAAA,WAAQ,KAKlC,WACE,OAAOF,KAAKw2B,eANQ,SAAa1zB,GACjC9C,KAAKw2B,UAA2B,KAAV1zB,GAAsB8N,EAAiB9N,GAC7D9C,KAAK+jG,UAAU/jG,KAAK2H,yCAgBFnI,OAAAqC,eAAI4sG,EAAAvuG,UAAA,UAAO,KAI/B,WACE,OAAOF,KAAK0uG,cALM,SAAY5rG,GAC9B9C,KAAK0uG,SAA0B,KAAV5rG,GAAsB8N,EAAiB9N,oCAgBpCtD,OAAAqC,eAAI4sG,EAAAvuG,UAAA,eAAY,KAK1C,WACE,OAAOF,KAAK+uG,mBANY,SAAiBjsG,GACzC9C,KAAK+uG,cAAgB39F,EAAStO,EAAO,UAAYA,EAAQ,GACzD9C,KAAK+jG,UAAU/jG,KAAK2H,yCAmBJnI,OAAAqC,eAAI4sG,EAAAvuG,UAAA,QAAK,KAK3B,WACE,OAAOF,KAAKu8D,YANI,SAAUz5D,GAC1B9C,KAAKu8D,OAASnrD,EAAStO,EAAO,UAAYA,EAAQ,GAClD9C,KAAK+jG,UAAU/jG,KAAK2H,yCAjICxG,EAAA,CAAtB2E,EAAAA,MAAM,wGAiBc3E,EAAA,CAApB2E,EAAAA,MAAM,sGAoBY3E,EAAA,CAAlB2E,EAAAA,MAAM,gGAgBU3E,EAAA,CAAhB2E,EAAAA,MAAM,4FAkBe3E,EAAA,CAArB2E,EAAAA,MAAM,uGAkBa3E,EAAA,CAAnB2E,EAAAA,MAAM,oGAiBmB3E,EAAA,CAAzB2E,EAAAA,MAAM,6GAUqB3E,EAAA,CAA3B2E,EAAAA,MAAM,mFAWW3E,EAAA,CAAjB2E,EAAAA,MAAM,8FAUY3E,EAAA,CAAlB8G,EAAAA,OAAO,2BAAmBH,EAAAA,2CAGF3G,EAAA,CAAxB8G,EAAAA,OAAO,iCAA8BH,EAAAA,gDAGV3G,EAAA,CAA3B8G,EAAAA,OAAO,oCAAoCH,EAAAA,mDAGd3G,EAAA,CAA7B8G,EAAAA,OAAO,sCAAwCH,EAAAA,qDAG3B3G,EAAA,CAApB8G,EAAAA,OAAO,6BAAuBH,EAAAA,6CAGL3G,EAAA,CAAzB8G,EAAAA,OAAO,kCAAgCH,EAAAA,iDA9KpB2mG,EAAqBttG,EAAA,CAD1C4H,EAAAA,aACqB0lG,qBCqBpB,SAAAO,EAAY7uF,UACV5Z,EAAA3F,KAAAZ,OAAOA,KAmFX,OAzFuCF,EAAAkvG,EAAAzoG,GACrC/G,OAAAqC,eAAImtG,EAAA9uG,UAAA,kBAAe,KAAnB,WACE,QAASF,KAAK+tF,YAAYvqD,UAAU,oCAOtCwrE,EAAA9uG,UAAA+I,SAAA,WACEjJ,KAAK+jG,UAAU/jG,KAAK2H,SAGtBqnG,EAAA9uG,UAAA+uG,sBAAA,WACE,QAASjvG,KAAKumC,SAAWvmC,KAAKkvG,QAAUlvG,KAAK4uG,QAAQprE,UAAU,IAGjEwrE,EAAA9uG,UAAA6H,QAAA,SAAQlB,GACD7G,KAAK0Y,UACR1Y,KAAKuY,MAAMvQ,KAAKnB,IAIpBmoG,EAAA9uG,UAAAivG,SAAA,SAAStoG,GACF7G,KAAK0Y,WACR7R,EAAMm7B,kBACN9uB,OAAOmB,KAAKrU,KAAKkvG,KAAM,YAI3BF,EAAA9uG,UAAAkvG,iBAAA,SAAiBvoG,GACV7G,KAAK0Y,WACR7R,EAAMm7B,kBACNhiC,KAAKuhC,cAAcv5B,SAIvBgnG,EAAA9uG,UAAAmvG,mBAAA,SAAmBxoG,GACZ7G,KAAK0Y,WACR7R,EAAMm7B,kBACNhiC,KAAKoiC,gBAAgBp6B,SAIzBgnG,EAAA9uG,UAAAuuF,eAAA,SAAe5nF,GACR7G,KAAK0Y,WACR7R,EAAMm7B,kBACNhiC,KAAK+tF,YAAY/lF,SAIrBgnG,EAAA9uG,UAAA6jG,UAAA,SAAUp8F,GACR,GAAIA,EAAQ,CACV,IAAI2nG,EAAa3nG,EACX4nG,EAAmBvvG,KAAK4uG,QAAQprE,UAAU7iC,OAAS,GAAKX,KAAKkvG,KAO/DlvG,KAAKwvG,WACPF,GAJmB,GAOjBC,IAAqBvvG,KAAKumC,QAC5B+oE,GAToB,IAYlBtvG,KAAKumC,QACP+oE,GAXkB,IAchBtvG,KAAKmmC,eACPmpE,GAAcr3D,IAGhBj4C,KAAKo9D,gBAAqBkyC,EAAU,UAEpCtvG,KAAKo9D,gBAAkB,QAI3B4xC,EAAA9uG,UAAAuvG,cAAA,SAAc5oG,GACP7G,KAAK0Y,WACR7R,EAAMm7B,kBACNhiC,KAAK4uG,QAAQ5mG,kDAjFIqY,EAAAA,oBALV2uF,EAAiB7tG,EAAA,CAJ7B+E,EAAAA,UAAU,CACTC,SAAU,YACVC,SAAA,qxDAOqBia,EAAAA,oBALV2uF,IAA0BP,kBClBvC,SAAAiB,KAA6B,OAAhBA,EAAcvuG,EAAA,CAL1BmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAckuB,IACxBhuB,QAAS,CAACsmG,IACVvmG,aAAc,CAACumG,OAEJU,oBCkGb,SAAAC,KAAiC,OAApBA,EAAkBxuG,EAAA,CA7E9BmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,CACPF,EACAgB,EACA+F,EACAwJ,GACA0H,GACAsI,GACAwN,GACAM,GACAuC,GACA5B,GACA+B,GACAgD,GACAguD,GACA1K,GACA+N,GACApN,GACA2P,GACAh4E,GACA0hF,GACAW,GACAx3D,GACA47D,GACAyD,GACAr3D,GACAnP,GACAsI,GACA2gE,GACAyE,GACAzvD,GACA6xD,GACAjqB,GACAirB,GACAgC,GACAkB,IAEFhnG,QAAS,CACPL,EACAgB,EACA+F,EACAwJ,GACA0H,GACAsI,GACAwN,GACAM,GACAuC,GACA5B,GACA+B,GACAgD,GACAguD,GACA1K,GACA+N,GACApN,GACA2P,GACAh4E,GACA0hF,GACAW,GACAx3D,GACA47D,GACAyD,GACAr3D,GACAnP,GACAsI,GACA2gE,GACAyE,GACAzvD,GACA6xD,GACAjqB,GACAirB,GACAgC,GACAkB,IAEFtoG,UAAW,GACX0b,UAAW,MAEA6sF,oBCvGb,SAAAC,KAAiC,OAApBA,EAAkBzuG,EAAA,CAP9BmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,CAACwW,IACVrW,QAAS,CAACqW,IACV3X,UAAW,GACX0b,UAAW,MAEA8sF,oBCFb,SAAAC,KAA6B,OAAhBA,EAAc1uG,EAAA,CAP1BmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,GACTG,QAAS,GACTtB,UAAW,GACX0b,UAAW,MAEA+sF,MCTAC,GAAyC,CACpDj5F,GAAS,CACPk5F,YAAa,QACbC,QAAS,UACT37D,OAAQ,SACRvvC,MAAO,QACP+jE,QAAS,UACTnlC,KAAM,cACN+kC,QAAS,WAEX1xD,GAAS,CACPg5F,YAAa,SACbC,QAAS,WACT37D,OAAQ,UACRvvC,MAAO,QACP+jE,QAAS,cACTnlC,KAAM,cACN+kC,QAAS,SAEXzxD,GAAS,CACP+4F,YAAa,SACbC,QAAS,WACT37D,OAAQ,UACRvvC,MAAO,OACP+jE,QAAS,QACTnlC,KAAM,aACN+kC,QAAS,WAEXxxD,GAAS,CACP84F,YAAa,SACbC,QAAS,SACT37D,OAAQ,SACRvvC,MAAO,SACP+jE,QAAS,iBACTnlC,KAAM,aACN+kC,QAAS,UC1BA16C,GAAS,CAAE06C,QAAS,WAAY3jE,MAAO,WAAY+jE,QAAS,WAAYnlC,KAAM,kBAa3F,SAAAusE,IAAA,IAAA3pG,EAAAtG,KAGEA,KAAAkwG,OAAS,IAAIpoG,EAAAA,aACb9H,KAAAgwG,QAA0C,GAC1ChwG,KAAAmQ,SAAWX,IACXxP,KAAA43B,SAAWk4E,GAAuC9vG,KAAKmQ,UAEvDnQ,KAAAuhC,cAA+B,CAC7BjH,OAAQ,WAAM,OAAAh0B,EAAK0wB,SACnBrzB,MAAO3D,KAAK43B,SAASm4E,aAiDzB,OA5CEvwG,OAAAqC,eAAIouG,EAAA/vG,UAAA,SAAM,KAAV,SAAW8vG,GACLA,GAAWA,EAAQrvG,SACrBX,KAAKgwG,QAAUhwG,KAAKmwG,qBAAqBH,IAG3ChwG,KAAKumC,MAAQvmC,KAAKowG,YAAYpwG,KAAKgwG,0CAGrCC,EAAA/vG,UAAA82B,MAAA,WACEh3B,KAAKs0E,MAAMt9C,QACXh3B,KAAKkwG,OAAOloG,QAGdioG,EAAA/vG,UAAAmwG,sBAAA,SAAsBh8D,GACpB,OAAOA,EAAOi8D,KAAUj8D,EAAOi8D,KAAI,MAAMj8D,EAAO7N,QAAY6N,EAAO7N,SAGrEypE,EAAA/vG,UAAAmU,KAAA,WACErU,KAAKs0E,MAAMjgE,QAGb47F,EAAA/vG,UAAAqwG,UAAA,SAAUj/F,GACR,OAAOyc,GAAOzc,IAGhB2+F,EAAA/vG,UAAAswG,UAAA,SAAUl/F,GACR,OAAOw+F,GAAuC9vG,KAAKmQ,UAAUmB,IAASA,GAGhE2+F,EAAA/vG,UAAAuwG,eAAR,SAAuBC,EAA4Cr8D,GACjE,OAAOA,EAAO7N,QAAUkqE,EAAW1rG,OAAOhF,KAAK2wG,yBAAyBt8D,IAAWq8D,GAG7ET,EAAA/vG,UAAAywG,yBAAR,SAAiC76F,GAC/B,MAAO,CAAEw6F,KADwBx6F,EAAAw6F,KAClB9pE,QADwB1wB,EAAA0wB,QACfoqE,gBADwB96F,EAAA86F,gBACPt/F,KADwBwE,EAAAxE,OAI3D2+F,EAAA/vG,UAAAiwG,qBAAR,SAA6BH,GAA7B,IAAA1pG,EAAAtG,KACE,OAAOgwG,EAAQ1jG,QAAO,SAACokG,EAAYr8D,GAAW,OAAA/tC,EAAKmqG,eAAeC,EAAYr8D,KAAS,KAGjF47D,EAAA/vG,UAAAkwG,YAAR,SAAoBJ,GAClB,OAAOA,EAAQrvG,OAAS,EAAOX,KAAK43B,SAASo4E,QAAO,KAAKA,EAAQrvG,OAAM,IAAMX,KAAK43B,SAASyc,QAxD9ClzC,EAAA,CAA9C4E,EAAAA,UAAU07B,GAAkB,CAAEx7B,QAAQ,oBAAew7B,iCAD3CwuE,EAAgC9uG,EAAA,CAJ5C+E,EAAAA,UAAU,CACTC,SAAU,6BACVC,SAAA,qmBAEW6pG,oBCiIX,SAAAY,EAAoBC,EAAuDpoC,GAAvD1oE,KAAA8wG,kBAAAA,EAAuD9wG,KAAA0oE,aAAAA,EAJ3E1oE,KAAA+wG,kBAAoB,CAAC,UAAW,UAAW,QAAS,eAE5C/wG,KAAAgxG,oCAAiF7nG,EA8I3F,OA1IE0nG,EAAA3wG,UAAA+wG,UAAA,SAAU9lC,EAA2BnoE,GAArC,IAAAsD,EAAAtG,KACQkxG,EAAe/lC,EAAQgmC,QAI7B,OAFAhmC,EAAUA,GAAWnrE,KAAKoxG,cAAcjmC,GAAWnrE,KAAKqxG,8BAA8BlmC,GAAWA,EAE1FnoE,EAAKsuG,OAAOnmC,GAASpoB,KAC1BkC,EAAAA,KACE,SAACjC,GACKA,aAAoB4oB,EAAAA,cACtBtlE,EAAKirG,gBAAgBvuD,EAAUkuD,MAGnC,SAACpsG,GACCwB,EAAKkrG,qBAAqB1sG,EAAOosG,QAMzCL,EAAA3wG,UAAAqxG,gBAAA,SAAgBvuD,EAA6BmoB,GAA7C,IAAA7kE,EAAAtG,KAGE,IAF0BA,KAAKyxG,kBAAkBtmC,IAEvBnoB,EAAS1/C,MAAQ0/C,EAAS1/C,KAAKouG,UAAW,CAClE,IAAMC,EAAW3uD,EAAS1/C,KAAKouG,UAE3BC,aAAoBhyG,MACtBgyG,EAASjyF,SAAQ,SAAC8mB,GAChBlgC,EAAKslG,iBAAiBplE,MAGxBxmC,KAAK4rG,iBAAiB+F,KAK5Bd,EAAA3wG,UAAAsxG,qBAAA,SAAqBxuD,EAA6BmoB,GAChD,IAAMymC,EACgB,IAApB5uD,EAAS/0C,OACL+0C,EAASl+C,MACT,CAAEwrG,KAAM,EAAG9pE,QAAS,iCAAkCoqE,gBAAiB5tD,EAASxc,SAEhFqrE,EAAkB7xG,KAAK6xG,gBAAgB1mC,GACvCsmC,EAAoBzxG,KAAKyxG,kBAAkBtmC,GAE7CymC,GAAiBA,EAAcprE,UAAYqrE,IAAoBJ,GACjEzxG,KAAK4rG,iBAAgBxrG,EAAAA,EAAA,GAAMwxG,GAAa,CAAEtgG,KAAM,YAI5Cu/F,EAAA3wG,UAAAmxG,8BAAR,SAAsClmC,GACpC,IAAM2mC,EAAU3mC,EAAQ2mC,QAAQC,OAzLN,iBAyLoCA,OAxLlC,mBA0L5B,OAAO5mC,EAAQgmC,MAAM,CAAEW,QAAOA,KAGxBjB,EAAA3wG,UAAA8xG,YAAR,SAAoBC,GAApB,IAAA3rG,EAAAtG,KACQgwG,EAAUiC,EAAgBjC,QAAOjrG,EAAA,CAAIktG,GAAoBA,EAAgBjC,SAAW,CAACiC,GAE3FjyG,KAAKgxG,+BAAiChxG,KAAK8wG,kBAAkBhsE,6BAC3DmrE,IAEFjwG,KAAKgxG,+BAA+Bz8E,SAAS8f,OAAS27D,EACtDhwG,KAAKgxG,+BAA+Bz8E,SAAS27E,OAAOlpG,WAAU,WAAM,OAAAV,EAAK4rG,kBACzElyG,KAAKgxG,+BAA+Bz8E,SAASlgB,QAGvCw8F,EAAA3wG,UAAAgyG,aAAR,WACMlyG,KAAKgxG,iCACPhxG,KAAK8wG,kBAAkB1rE,8BAA8BplC,KAAKgxG,gCAC1DhxG,KAAKgxG,oCAAiC7nG,IAIlC0nG,EAAA3wG,UAAAiyG,WAAR,SAAmBF,GACjB,IAAMG,EAAuBH,EAAgBzrE,QAE7C,OAAOyrE,GAAmBG,GAGpBvB,EAAA3wG,UAAA2xG,gBAAR,SAAwB1mC,GACtB,IAAMknC,EAAelnC,GAAWA,EAAQ2mC,QAAQzjG,IAvNtB,iBAyN1B,OAAOgkG,GAAgE,SAAhDA,EAAat/F,WAAWkzE,qBAGzC4qB,EAAA3wG,UAAAuxG,kBAAR,SAA0BtmC,GACxB,IAAMmnC,EAAiBnnC,GAAWA,EAAQ2mC,QAAQzjG,IA5NtB,mBA8N5B,OAAOikG,GAAoE,SAAlDA,EAAev/F,WAAWkzE,qBAG7C4qB,EAAA3wG,UAAAkxG,cAAR,SAAsBjmC,GACpB,OAAOA,EAAQ2mC,QAAQS,IAnOG,kBAmO2BpnC,EAAQ2mC,QAAQS,IAlOzC,oBAqOtB1B,EAAA3wG,UAAA0rG,iBAAR,SAAyB5oD,GACvB,GAAKhjD,KAAKmyG,WAAWnvD,GAArB,CAIA,IAAMwvD,EAAmBxyG,KAAK+wG,kBAAkBjoG,SAASk6C,EAAS1xC,MAAQ0xC,EAAS1xC,KAAO,cAEpFmhG,EAAqBzyG,KAAK0yG,2BAA2B1vD,GAE3DhjD,KAAK0oE,aAAa8pC,GAAkB,CAClChsE,QAASwc,EAASxc,QAClB0C,YAAaupE,EAAmB9uG,MAChC22B,OAAQm4E,EAAmBn4E,WAIvBu2E,EAAA3wG,UAAAyyG,oBAAR,SAA4BV,GAA5B,IAAA3rG,EAAAtG,KACE,OAAO,WACAsG,EAAK0qG,gCACR1qG,EAAK0rG,YAAYC,KAKfpB,EAAA3wG,UAAAwyG,2BAAR,SAAmCT,GACjC,IAAIQ,EACAG,EASJ,OAPIX,EAAgBY,SAAaZ,EAAgBrB,iBAAmBqB,EAAgBjC,SAGzEiC,EAAgBrB,iBAAmBqB,EAAgBjC,WAC5D4C,EAAoB,WACpBH,EAAqBzyG,KAAK2yG,oBAAoBV,KAJ9CW,EAAoB,QACpBH,EAAqBzyG,KAAK8yG,wBAAwBb,EAAgBY,UAK7D,CAAElvG,MAAOivG,EAAmBt4E,OAAQm4E,IAGrC5B,EAAA3wG,UAAA4yG,wBAAR,SAAgCD,GAC9B,OAAO,WACL3/F,OAAOmB,KAAKw+F,EAAS,YAG3BhC,oBCjRE,SAAAkC,EAAYrqC,EAAqCooC,UAC/CvqG,EAAA3F,KAAAZ,KAAM8wG,EAAmBpoC,IAAa1oE,KAE1C,OAJ8CF,EAAAizG,EAAAxsG,4CAClB2iE,UAA0CxkC,MADzDquE,EAAwB5xG,EAAA,CADpCqE,EAAAA,oCAE2B0jE,GAA0CxkC,MADzDquE,IAAiClC,kBCS9C,SAAAmC,KAAsC,OAAzBA,EAAuB7xG,EAAA,CAbnCmH,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAmBw6B,GAAe+G,GAAsB23C,IAChF94E,aAAc,CAACwnG,IACf7oG,UAAW,CACT2rG,GACA7pC,GACA,CACElkD,QAASiuF,EAAAA,kBACTC,SAAUH,GACV1tF,OAAO,OAIA2tF,oBCfb,SAAAG,IACEnzG,KAAAozG,mBAAsC,IAAIjuG,EAAAA,QAS5C,OAPEguG,EAAAjzG,UAAAmzG,sBAAA,WACE,OAAOrzG,KAAKozG,mBAAmB/tG,gBAGjC8tG,EAAAjzG,UAAAozG,KAAA,SAAKxwG,QAAA,IAAAA,IAAAA,EAAA,GACH9C,KAAKozG,mBAAmBpwG,KAAKF,IARpBqwG,EAA2BhyG,EAAA,CADvCqE,EAAAA,cACY2tG,oBC+FX,SAAAI,EACUH,EACA9rE,GADAtnC,KAAAozG,mBAAAA,EACApzG,KAAAsnC,oBAAAA,EAPFtnC,KAAAwzG,6BAAmErqG,EAEnEnJ,KAAAyzG,gBAA0B,EAC1BzzG,KAAA0zG,gBAA0B,SAOlCH,EAAArzG,UAAA+wG,UAAA,SAAU9lC,EAA2BnoE,GAArC,IAAAsD,EAAAtG,KACQ2zG,EAAexoC,EAAQgmC,QAO7B,OALAhmC,EAAUnrE,KAAK4zG,+BAA+B,CAvGnB,iCACZ,oBAsGqEzoC,GAEpFnrE,KAAK6zG,yBAAwB,EAAMF,GACnC3zG,KAAK8zG,yBAAwB,EAAMH,GAE5B3wG,EAAKsuG,OAAOnmC,GAASpoB,KAC1BkC,EAAAA,KAAI,SAACjC,GACCA,aAAoB4oB,EAAAA,eACtBtlE,EAAKutG,yBAAwB,EAAOF,GACpCrtG,EAAKwtG,yBAAwB,EAAOH,OAGxC5L,EAAAA,YAAW,SAAAjjG,GAIT,OAHAwB,EAAKutG,yBAAwB,EAAOF,GACpCrtG,EAAKwtG,yBAAwB,EAAOH,GAE7B3L,EAAAA,WAAWljG,QAKxByuG,EAAArzG,UAAA6zG,wBAAA,WACE,OAAO/zG,KAAKozG,mBAAmBC,yBAGzBE,EAAArzG,UAAA8zG,aAAR,WACOh0G,KAAKwzG,0BACRxzG,KAAKwzG,wBAA0BxzG,KAAKsnC,oBAAoBxC,6BAA6BttB,IACrFxX,KAAKwzG,wBAAwBj/E,SAASjd,YAAa,EACnDtX,KAAKwzG,wBAAwBj/E,SAAS9c,eAAeqc,kBAIjDy/E,EAAArzG,UAAA+zG,eAAR,WACMj0G,KAAKwzG,0BACPxzG,KAAKsnC,oBAAoBlC,8BAA8BplC,KAAKwzG,yBAC5DxzG,KAAKwzG,6BAA0BrqG,IAI3BoqG,EAAArzG,UAAA0zG,+BAAR,SAAuCM,EAA8B/oC,GACnE,IAAIgpC,GAAiB,EASrB,OAPAD,EAAcx0F,SAAQ,SAAA00F,GAChBjpC,EAAQ2mC,QAAQS,IAAI6B,KACtBjpC,EAAQ2mC,QAAQC,OAAOqC,GACvBD,GAAiB,MAIdA,EAAiBhpC,EAAQgmC,MAAM,CAAEW,QAAS3mC,EAAQ2mC,UAAa3mC,GAGhEooC,EAAArzG,UAAA2zG,wBAAR,SAAgCQ,EAAsBlpC,GACpD,IAAMmpC,EAAoCnpC,EAAQ2mC,QAAQS,IA7J/B,kCA8JrB6B,EAAcjpC,EAAQ2mC,QAAQzjG,IA9JT,kCAgKvBimG,GAA8E,SAAzCF,EAAYrhG,WAAWxC,gBAIhEvQ,KAAKyzG,iBAAmBY,EAAc,GAAK,EAC3Cr0G,KAAKozG,mBAAmBE,KAAKtzG,KAAKyzG,mBAG5BF,EAAArzG,UAAA4zG,wBAAR,SAAgCO,EAAsBlpC,GAGpD,GAFqCA,EAAQ2mC,QAAQS,IAxKtC,oBA0KmB,CAGhC,GAA6C,UAFzBpnC,EAAQ2mC,QAAQzjG,IA3KvB,oBA6KG0E,WAAWxC,cACzB,OAGFvQ,KAAK0zG,iBAAmBW,EAAc,GAAK,EAC3Cr0G,KAAK0zG,gBAAkB,EAAI1zG,KAAKg0G,eAAiBh0G,KAAKi0G,4DAnF5Bd,UACCzuE,gIARpB6uE,EAA+BpyG,EAAA,CAH3CqE,EAAAA,WAAW,CACVmR,WAAY,gCASkBw8F,GACCzuE,MARpB6uE,oBC9Eb,SAAAgB,KAAkC,OAArBA,EAAmBpzG,EAAA,CAb/BmH,EAAAA,SAAS,CACRC,QAAS,CAACyP,IACV5Q,UAAW,CACT+rG,GACAI,GACA7uE,GACA,CACE1f,QAASiuF,EAAAA,kBACTC,SAAUK,GACVluF,OAAO,OAIAkvF,oBCVb,SAAAC,KAAmC,OAAtBA,EAAoBrzG,EAAA,CAPhCmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,CAACyqG,GAAyBuB,IACnC7rG,QAAS,CAACsqG,GAAyBuB,IACnCntG,UAAW,GACX0b,UAAW,MAEA0xF,oBCDb,SAAAC,KAA4B,OAAfA,EAAatzG,EAAA,CAPzBmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,CAACkjC,IACV/iC,QAAS,CAAC+iC,IACVrkC,UAAW,GACX0b,UAAW,MAEA2xF,oBCoBb,SAAAC,KAAuB,OAAVA,EAAQvzG,EAAA,CArBpBmH,EAAAA,SAAS,CACRG,aAAc,GACdF,QAAS,CACPonG,GACAC,GACAC,GACA2E,GACAC,GACA5qE,IAEFnhC,QAAS,CACPinG,GACAC,GACA4E,GACA3E,GACA4E,GACA5qE,IAEFziC,UAAW,CAAC8hE,IACZpmD,UAAW,MAEA4xF,MC3BAC,GAAc,IAAIC,EAAAA,eAA6B,6BCuJ1D,SAAAC,EAC+BC,EACDvnG,EACpB4J,GAFqBnX,KAAA80G,OAAAA,EACD90G,KAAAuN,KAAAA,EACpBvN,KAAAmX,gBAAAA,EAXFnX,KAAA+0G,QAAe,GAIf/0G,KAAAg1G,UAAoB,EAEpBh1G,KAAAi1G,gBAAuB,GAO7Bj1G,KAAKk1G,UAAUJ,GAoVnB,OAhUED,EAAA30G,UAAAoW,YAAA,WACE,OAAOtW,KAAKmX,gBAAgBb,eAW9Bu+F,EAAA30G,UAAAoQ,iBAAA,WACE,OAAOtQ,KAAKmX,gBAAgB7G,oBAsB9BukG,EAAA30G,UAAAuW,YAAA,SAAYtG,EAAkBglG,GACvB1kG,EAAWN,KAIhBnQ,KAAKmX,gBAAgBV,YAAYtG,GAE7BglG,GhU3INjiG,OAAO4mF,SAASz5F,OAAOy5F,SAAS72B,QgUgJxB4xC,EAAA30G,UAAAg1G,UAAR,SAAkBJ,GAUhB,GARIA,EAAgB,UAClB90G,KAAKmX,gBAAgBT,mBAAmBo+F,EAAgB,QAAY,UAEpE90G,KAAKo1G,eAAiBN,EAAgB,QAAW,QAAIA,EAAgB,QAAW,QAAI,GACpF90G,KAAKg1G,WAAWF,EAAgB,QAAS,OAAIA,EAAgB,QAAS,OAIpEA,EAAiB,WACnB90G,KAAKq1G,WAAWP,EAAiB,WAI5B90G,KAAKo1G,gBACR,IAAK,IAAM3jG,KAAWqjG,EAAiB,SACrC,GAAI90G,KAAK80G,OAAiB,SAAEj1G,eAAe4R,GAAU,CACnDzR,KAAKo1G,eAAiB3jG,EACtB,QAOVojG,EAAA30G,UAAAo1G,YAAA,SAAYh2E,GAAZ,IAAAh5B,EAAAtG,UAAY,IAAAs/B,IAAAA,EAAA,IACV,IAAMnvB,EAAWmvB,EAAkB,SAAIA,EAAkB,SAAE/uB,cAAgBvQ,KAAKsW,cAC1E7E,EAAU6tB,EAAiB,QAAIA,EAAiB,QAAIt/B,KAAKo1G,eACzDx9E,EAA0B0H,EAAkB,SAAIA,EAAkB,SAAI,GAE5E,OAAO,IAAIsoE,EAAAA,YAAW,SAAA2N,GAChBjvG,EAAK2uG,gBAAgBxjG,GAEvBnL,EAAKkvG,8BAA8BrlG,EAAUsB,EAASmmB,EAAU29E,GAGhEjvG,EAAKmvG,+BAA+BtlG,EAAUsB,EAASmmB,EAAU29E,OAU/DV,EAAA30G,UAAAs1G,8BAAR,SACErlG,EACAsB,EACAmmB,EACA29E,EACAG,EACAC,QADA,IAAAD,IAAAA,EAAA,SACA,IAAAC,IAAAA,EAAA,MAGA,IAAMC,EAAiBD,GAA4CxlG,EAEnEulG,EAAe11G,KAAK61G,YAAYH,EAAc11G,KAAK81G,gBAAgBF,EAAgBnkG,EAASmmB,IAExF53B,KAAK+1G,YAAYL,GAAgB,GACnCH,EAASvyG,KAAK0yG,GAIhB11G,KAAKg2G,gCACHJ,EACAnkG,EACAmmB,EACA29E,EACAG,EACAC,IAMId,EAAA30G,UAAA81G,gCAAR,SACE7lG,EACAsB,EACAmmB,EACA29E,EACAG,EACAC,GANF,IAAArvG,EAAAtG,UAME,IAAA21G,IAAAA,EAAA,MAEA,IACIM,EADEL,EAAiBD,GAA4CxlG,EAG/DnQ,KAAKg1G,WACPiB,EAAkBj2G,KAAKk2G,qBAAqBN,EAAgBnkG,EAASmmB,GACjE53B,KAAK+1G,YAAYE,GAAmB,IACtCj2G,KAAKm2G,cAAchmG,EAAUsB,EAASwkG,GACtCP,EAAe11G,KAAK61G,YAAYI,EAAiBP,GACjDH,EAASvyG,KAAK0yG,KAKlB11G,KAAKo2G,eAAep2G,KAAKi1G,gBAAgBxjG,GAAUmkG,EAAgBh+E,GAAU5wB,WAAU,SAAAg8C,GACjFA,IACF18C,EAAK+vG,mBAAmBlmG,EAAUsB,EAASuxC,GAC3C18C,EAAK6vG,cAAchmG,EAAUsB,EAASuxC,GACtCizD,EAAkB3vG,EAAKwvG,gBAAgB3lG,EAAUsB,EAASmmB,GAC1D89E,EAAepvG,EAAKuvG,YAAYI,EAAiBP,GACjDH,EAASvyG,KAAK0yG,IAKZ99E,EAASj3B,OAAS2F,EAAKyvG,YAAYL,KACT,UAAxBC,GAEFD,EAAepvG,EAAKgwG,sBAAsBnmG,EAAUsB,EAASmmB,EAAU89E,GACvEpvG,EAAK+vG,mBAAmBlmG,EAAUsB,EAASikG,GAC3CpvG,EAAK6vG,cAAchmG,EAAUsB,EAASikG,GACtCH,EAASvyG,KAAK0yG,IAEdpvG,EAAKkvG,8BAA8BrlG,EAAUsB,EAASmmB,EAAU29E,EAAUG,EAAc,cAQxFb,EAAA30G,UAAAu1G,+BAAR,SACEtlG,EACAsB,EACAmmB,EACA29E,EACAG,QAAA,IAAAA,IAAAA,EAAA,IAEAA,EAAe11G,KAAK61G,YAAYH,EAAc11G,KAAK81G,gBAAgB3lG,EAAUsB,EAASmmB,IAClF53B,KAAK+1G,YAAYL,GAAgB,GACnCH,EAASvyG,KAAK0yG,GAIZ99E,EAASj3B,OAAS,EAEhBi3B,EAASj3B,OAASX,KAAK+1G,YAAYL,KACpB,UAAbvlG,GAEFulG,EAAe11G,KAAKs2G,sBAAsBnmG,EAAUsB,EAASmmB,EAAU89E,GACvEH,EAASvyG,KAAK0yG,IAEd11G,KAAKy1G,+BAA+B,QAAShkG,EAASmmB,EAAU29E,EAAUG,KAKvC,IAAnC11G,KAAK+1G,YAAYL,IAAoC,UAAbvlG,GAC1CnQ,KAAKy1G,+BAA+B,QAAShkG,EAASmmB,EAAU29E,EAAUG,GAI5EH,EAASvyG,KAAK0yG,GACdH,EAASgB,aAKL1B,EAAA30G,UAAAg2G,qBAAR,SAA6B/lG,EAAkBsB,EAAiBmmB,GAC9D,IAAM89E,EAAoB,GAE1B,GAAI99E,EAASj3B,OAAS,EACpB,IAAK,IAAIH,EAAI,EAAGA,EAAIo3B,EAASj3B,OAAQH,IAAK,CACxC,IAAMg2G,EAAU5+E,EAASp3B,GACnBi2G,EAActgG,aAAaC,QAAQjG,EAAW,IAAMsB,EAAU,IAAM+kG,GACtEC,IACFf,EAAac,GAAWC,GAI9B,OAAOf,GAIDb,EAAA30G,UAAA41G,gBAAR,SAAwB3lG,EAAkBsB,EAAiBmmB,GACzD,IAAI89E,EAAoB,GAExB,GAAI11G,KAAK+0G,QAAQ5kG,IAAanQ,KAAK+0G,QAAQ5kG,GAAUsB,GAAU,CAC7D,IAAMilG,EAAU12G,KAAK+0G,QAAQ5kG,GAAUsB,GAEvC,GAAImmB,EAASj3B,OAAS,EAEpB,IAAK,IAAIH,EAAI,EAAGA,EAAIo3B,EAASj3B,OAAQH,IAAK,CACxC,IAAMg2G,EAAU5+E,EAASp3B,GACrBk2G,EAAQ72G,eAAe22G,KACzBd,EAAac,GAAWE,EAAQF,SAKpCd,EAAYt1G,EAAA,GAAQs2G,GAGxB,OAAOhB,GAIDb,EAAA30G,UAAAm2G,mBAAR,SAA2BlmG,EAAkBsB,EAAiBkrD,WAC5D,GAAI38D,KAAKg1G,aACP,IAAsB,IAAA5mE,EAAA3pC,EAAAjF,OAAOsqB,KAAK6yC,IAAKuhB,EAAA9vC,EAAAprC,QAAAk7E,EAAA/6E,KAAA+6E,EAAA9vC,EAAAprC,OAAE,CAApC,IAAMwzG,EAAOt4B,EAAAp7E,MAChBqT,aAAaE,QAAQlG,EAAW,IAAMsB,EAAU,IAAM+kG,EAAS75C,EAAK65C,wGAMlE3B,EAAA30G,UAAAm1G,WAAR,SAAmBsB,mBAEjB,IAAsB,IAAAz4B,EAAAz5E,EAAAjF,OAAOsqB,KAAK6sF,IAASC,EAAA14B,EAAAl7E,QAAA4zG,EAAAzzG,KAAAyzG,EAAA14B,EAAAl7E,OAAE,CAAxC,IAAMyO,EAAOmlG,EAAA9zG,MACV+zG,EAAiBF,EAASllG,OAEhC,IAAuB,IAAAqlG,GAAAC,OAAA,EAAAtyG,EAAAjF,OAAOsqB,KAAK+sF,KAAeG,EAAAF,EAAA9zG,QAAAg0G,EAAA7zG,KAAA6zG,EAAAF,EAAA9zG,OAAE,CAA/C,IAAMmN,EAAQ6mG,EAAAl0G,MACXm0G,EAAkBJ,EAAe1mG,GACtB,QAAbA,EACFnQ,KAAKi1G,gBAAgBxjG,GAAWwlG,EAEhCj3G,KAAKm2G,cAAchmG,EAAUsB,EAASwlG,0MAOtCpC,EAAA30G,UAAAi2G,cAAR,SAAsBhmG,EAAkBsB,EAAiBkrD,SACvDxsD,EAAWA,EAASI,cAEfvQ,KAAK+0G,QAAQ5kG,KAChBnQ,KAAK+0G,QAAQ5kG,KAAS2F,EAAA,IAAMrE,GAAU,GAAEqE,IAErC9V,KAAK+0G,QAAQ5kG,GAAUsB,KAC1BzR,KAAK+0G,QAAQ5kG,GAAUsB,GAAW,IAIpCzR,KAAK+0G,QAAQ5kG,GAAUsB,GAAWzR,KAAK61G,YAAYl5C,EAAM38D,KAAK+0G,QAAQ5kG,GAAUsB,KAG1EojG,EAAA30G,UAAAk2G,eAAR,SAAuBzoG,EAAawC,EAAkBynB,GACpD,IAAIlmB,EAAQ,aAAevB,EAQ3B,OAPIynB,EAASj3B,OAAS,IACpB+Q,GAAS,aAAekmB,EAASnK,QAInC9f,EAAMA,EAAI6G,QAAQ,MAAO,IAElBxU,KAAKuN,KAAKc,IAAI,GAAGV,EAAM+D,IAIxBmjG,EAAA30G,UAAAo2G,sBAAR,SAA8BnmG,EAAkBsB,EAAiBmmB,EAAyB89E,GACxF,IAAK,IAAIl1G,EAAI,EAAGA,EAAIo3B,EAASj3B,OAAQH,IAAK,CACxC,IAAMg2G,EAAU5+E,EAASp3B,GACpBk1G,EAAac,KAChBd,EAAac,GAAWA,GAG5B,OAAOd,GAIDb,EAAA30G,UAAA61G,YAAR,SAAoBh+B,GAClB,OAAOv4E,OAAOsqB,KAAKiuD,GAAKp3E,QAIlBk0G,EAAA30G,UAAA21G,YAAR,SAAoBqB,EAAmBn/B,GACrC,OAAA33E,EAAAA,EAAA,GAAY23E,GAAQm/B,IAhWXrC,EAAiB1zG,EAAA,CAUzBW,EAAA,EAAAq1G,EAAAA,OAAOxC,KACP7yG,EAAA,EAAAq1G,EAAAA,OAAO5oG,EAAAA,2CAA2BA,EAAAA,WACT2H,MAZjB2+F,qBCrIb,SAAAuC,mDAAsD,OAAnBt3G,EAAAs3G,EAAA7wG,GAAtB6wG,EAAaj2G,EAAA,CADzBqE,EAAAA,cACY4xG,IAAsBvC,aAGnBwC,GAAoBvC,EAAsBvnG,EAAkB4J,GAC1E,OAAO,IAAIigG,GAActC,EAAQvnG,EAAM4J,qBC4IzC,SAAAmgG,WAuBA,SAvBaA,EACJA,EAAAxC,OAAP,SAAcA,GACZ,MAAO,CACLyC,SAAUC,EACVpwG,UAAW,CACT,CACE4d,QAAS2vF,GACT8C,SAAU3C,GAEZ,CACE9vF,QAAS0yF,EAAAA,gBACTC,WAAYC,GACZvyF,OAAO,EACPwyF,KAAM,CAAClD,GAAaz+F,KAEtB,CACE8O,QAASoyF,GACTO,WAAYN,GACZQ,KAAM,CAAClD,GAAapmG,EAAAA,WAAY2H,QAlB7BohG,EAAYE,EAAAr2G,EAAA,CAHxBmH,EAAAA,SAAS,CACRC,QAAS,CAACo3E,EAAAA,iBAAkB5nE,OAEjBu/F,eAyBGM,GAA0B9C,EAAsB39F,GAO9D,OAL2B,WACrB29F,EAAOgD,QAAQ3nG,UACjBgH,EAAgBT,mBAAmBo+F,EAAOgD,QAAQ3nG","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @description\n *\n * Componente utilizado para agrupar visualmente uma lista de conteÃºdos, mostrando-os individualmente\n * ao clicar no tÃ­tulo de cada item.\n *\n * Para utilizÃ¡-lo, Ã© necessÃ¡rio envolver cada item no componente [`po-accordion-item`](/documentation/po-accordion-item),\n * como no exemplo abaixo:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"PO Accordion 1\">\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"PO Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * O componente jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente.\n *\n * Caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript\n * acesse a [documentaÃ§Ã£o do PoAccordionItem](/documentation/po-accordion-item).\n */\nexport class PoAccordionBaseComponent {}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o para poder notificar o componente `po-accordion` quando um `po-accordion-item` for\n * expandido/colapsado.\n */\n@Injectable()\nexport class PoAccordionService {\n  private subjectChild = new Subject<any>();\n\n  // Recebe o accordionItem\n  receiveFromChildAccordionClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia accordionItem colapsado/expadido do accordion\n  sendToParentAccordionItemClicked(accordionItem: object) {\n    this.subjectChild.next(accordionItem);\n  }\n}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\nimport { PoAccordionService } from '../services/po-accordion.service';\n\n/**\n * @description\n *\n * Componente utilizado para renderizar os itens do `po-accordion`.\n *\n * O componente `po-accordion` jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente,\n * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"PO Accordion 1\" #item1>\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"PO Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * e no typescript pode-se utilizar o `@ViewChild`:\n *\n * ```\n *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;\n *\n *  ngAfterContentInit() {\n *    // ou utilizar o mÃ©todo collapse()\n *    this.item1.expand();\n *  }\n * ```\n */\n@Component({\n  selector: 'po-accordion-item',\n  templateUrl: 'po-accordion-item.component.html'\n})\nexport class PoAccordionItemComponent {\n  expanded: boolean;\n\n  /** TÃ­tulo do item. */\n  @Input('p-label') label: string;\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor(private accordionService: PoAccordionService) {}\n\n  /**\n   * MÃ©todo para colapsar o `po-accordion-item`.\n   */\n  collapse() {\n    this.expanded = false;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n\n  /**\n   * MÃ©todo para expandir o `po-accordion-item`.\n   */\n  expand() {\n    this.expanded = true;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n}\n","import { Component, ContentChildren, QueryList, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoAccordionBaseComponent } from './po-accordion-base.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionService } from './services/po-accordion.service';\n\n/**\n * @docsExtends PoAccordionBaseComponent\n *\n * @example\n *\n * <example name=\"po-accordion-basic\" title=\"PO Accordion Basic\" >\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.html\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-labs\" title=\"PO Accordion Labs\" >\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.html\"> </file>\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-faq\" title=\"PO Accordion - FAQs\" >\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.html\"> </file>\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-accordion',\n  templateUrl: 'po-accordion.component.html',\n  providers: [PoAccordionService]\n})\nexport class PoAccordionComponent extends PoAccordionBaseComponent implements OnDestroy {\n  private accordionServiceSubscription: Subscription;\n  private expandedActiveAccordionItem: PoAccordionItemComponent;\n\n  @ContentChildren(PoAccordionItemComponent) poAccordionItems: QueryList<PoAccordionItemComponent>;\n\n  constructor(private accordionService: PoAccordionService) {\n    super();\n    this.receiveFromChildAccordionSubscription();\n  }\n\n  ngOnDestroy() {\n    this.accordionServiceSubscription.unsubscribe();\n  }\n\n  headerToggle(event: boolean, poAccordionItem: PoAccordionItemComponent) {\n    poAccordionItem.expanded = event;\n\n    this.toggle(poAccordionItem);\n  }\n\n  private receiveFromChildAccordionSubscription() {\n    this.accordionServiceSubscription = this.accordionService\n      .receiveFromChildAccordionClicked()\n      .subscribe(poAccordionItem => this.toggle(poAccordionItem));\n  }\n\n  private toggle(poAccordionItem: PoAccordionItemComponent) {\n    const isCurrentAccordionCollapsed = !poAccordionItem.expanded;\n\n    if (isCurrentAccordionCollapsed) {\n      this.expandedActiveAccordionItem = null;\n      return;\n    }\n\n    if (this.expandedActiveAccordionItem) {\n      this.expandedActiveAccordionItem.collapse();\n    }\n\n    this.expandedActiveAccordionItem = poAccordionItem;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'po-accordion-item-body',\n  templateUrl: 'po-accordion-item-body.component.html',\n  animations: [\n    trigger('toggleBody', [\n      transition('* => void', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      transition('void => *', [style({ height: '0' }), animate(200, style({ height: '*' }))])\n    ])\n  ]\n})\nexport class PoAccordionItemBodyComponent {\n  @Input('p-expanded') expanded: boolean = false;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-accordion-item-header',\n  templateUrl: 'po-accordion-item-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoAccordionItemHeaderComponent {\n  @Input('p-expanded') expanded: boolean = false;\n\n  @Input('p-label') label: string;\n\n  @Output('p-toggle') toggle = new EventEmitter<boolean>();\n\n  onClick() {\n    this.expanded = !this.expanded;\n\n    this.toggle.emit(this.expanded);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAccordionComponent } from './po-accordion.component';\nimport { PoAccordionItemBodyComponent } from './po-accordion-item-body/po-accordion-item-body.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionItemHeaderComponent } from './po-accordion-item-header/po-accordion-item-header.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-accordion`.\n *\n * > Para o correto funcionamento do componente `po-accordion`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    PoAccordionComponent,\n    PoAccordionItemBodyComponent,\n    PoAccordionItemComponent,\n    PoAccordionItemHeaderComponent\n  ],\n  exports: [PoAccordionComponent, PoAccordionItemComponent]\n})\nexport class PoAccordionModule {}\n","import { Input, Directive } from '@angular/core';\n\nconst PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst PO_AVATAR_SIZE_DEFAULT = 'md';\n\n/**\n * @description\n *\n * O componente `po-avatar` Ã© um container para imagens em miniatura, possui um formato redondo e cinco opÃ§Ãµes de\n * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuÃ¡rio, entre outras possibilidades.\n *\n * AlÃ©m de poder ser utilizado separadamente, Ã© possÃ­vel usar o `po-avatar` juntamente com outros componentes e criar\n * layouts ricos e bem interessantes para os usuÃ¡rios, como por exemplo, uma lista de itens ou produtos.\n */\n@Directive()\nexport class PoAvatarBaseComponent {\n  private _size: string = 'md';\n\n  /**\n   * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)\n   * ou um servidor externo (`https://po-ui.io/assets/images/logo-black-small.png`).\n   */\n  @Input('p-src') src: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Tamanho de exibiÃ§Ã£o do componente.\n   *\n   * Valores vÃ¡lidos:\n   *  - `xs` (24x24)\n   *  - `sm` (32x32)\n   *  - `md` (64x64)\n   *  - `lg` (96x96)\n   *  - `xl` (144x144)\n   *\n   * @default `md`\n   */\n  @Input('p-size') set size(value: string) {\n    this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;\n  }\n  get size(): string {\n    return this._size;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { PoAvatarBaseComponent } from './po-avatar-base.component';\n\n/**\n * @docsExtends PoAvatarBaseComponent\n *\n * @example\n *\n * <example name=\"po-avatar-basic\" title=\"PO Avatar Basic\" >\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.html\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-labs\" title=\"PO Avatar Labs\" >\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.html\"> </file>\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-business-card\" title=\"PO Avatar - Business Card\" >\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.html\"> </file>\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-avatar',\n  templateUrl: './po-avatar.component.html'\n})\nexport class PoAvatarComponent extends PoAvatarBaseComponent implements OnInit {\n  ngOnInit(): void {\n    if (!this.src) {\n      this.src = undefined;\n    }\n  }\n\n  onError(): void {\n    this.src = undefined;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAvatarComponent } from './po-avatar.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-avatar.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoAvatarComponent],\n  exports: [PoAvatarComponent]\n})\nexport class PoAvatarModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @description\n *\n * Este componente gera uma estrutura de navegaÃ§Ã£o que apresenta ao usuÃ¡rio a localizaÃ§Ã£o\n * da URL atual, exibindo as antecessoras conforme Ã© realizado a navegaÃ§Ã£o na aplicaÃ§Ã£o.\n *\n * Quando nÃ£o houver espaÃ§amento suficiente para exibi-lÃ¡s, o componente se encarrega tambÃ©m\n * de agrupar as URLs antecessoras, gerando assim um Ã­cone que permite a visualizaÃ§Ã£o em cascata.\n *\n * Caso um endereÃ§o seja especificado na propriedade `p-favorite-service`, o componente permite ao usuÃ¡rio\n * favoritar a URL.\n *\n * Havendo necessidade de incluir parÃ¢metros na requisiÃ§Ã£o do serviÃ§o,\n * o componente dispÃµe da propriedade `p-params-service` que recebe um objeto contendo as informaÃ§Ãµes.\n */\n@Directive()\nexport class PoBreadcrumbBaseComponent {\n  itemsView: Array<PoBreadcrumbItem> = [];\n  private _items: Array<PoBreadcrumbItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite definir uma URL no componente `po-breadcrumb` para favoritar ou desfavoritar.\n   * > Para utilizar esta propriedade, o Ãºltimo `PoBreadcrumbItem` da lista de items da propriedade `p-items` deve ter um link informado.\n   *\n   * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.\n   *\n   * Ao iniciar, o `po-breadcrumb` faz um GET na URL definida na propriedade `p-favorite-service` e deve retornar a propriedade\n   * `{ isFavorite: boolean }` do Ãºltimo `PoBreadcrumbItem` definido na lista de itens da propriedade `p-items`.\n   *\n   * Ao clicar em favoritar ou desfavoritar o `po-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`\n   * definidos no Ãºltimo item da propriedade `p-items`.\n   *\n   * > Caso algum parÃ¢metro seja definido na propriedade `p-params-service`, o mesmo serÃ¡ enviado para a API e retornarÃ¡\n   * apÃ³s fazer um GET ou POST.\n   *\n   * Exemplo de URL contendo o serviÃ§o de favoritar ou desfavoritar:\n   *\n   * ```\n   * https://po-ui.io/sample/api/favorite\n   * ```\n   *\n   * Ao fazer o GET o `po-breadcrumb` concatena o link com a URL de serviÃ§o. Exemplo:\n   *\n   * ```\n   * GET http://<domain>/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * GET http://po.com.br/sample/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: '/example' }\n   * ```\n   *\n   * Caso possua parÃ¢metros definidos na propriedade `p-params-service`:\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: \"/example\", params: \"{ id: 14, user: 'dev.po' }\" }\n   * ```\n   *\n   * Exemplos de retorno:\n   *\n   * ```\n   * { isFavorite: true, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\", params: \"{ id: 14, user: 'dev.po' }\" }\n   * ```\n   */\n  @Input('p-favorite-service') favoriteService?: string;\n\n  /**\n   * @description\n   *\n   * Lista de itens do _breadcrumb_.\n   *\n   * **Exemplo:**\n   * ```\n   * { label: 'Po Portal', link: 'portal' }\n   * ```\n   */\n  @Input('p-items') set items(items: Array<PoBreadcrumbItem>) {\n    this._items = items;\n    this.itemsView = [].concat(items);\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que possibilita o envio de parÃ¢metros adicionais Ã  requisiÃ§Ã£o.\n   */\n  @Input('p-params-service') paramsService?: object;\n\n  protected clickoutListener: () => void;\n\n  protected resizeListener: () => void;\n}\n","import {\n  AfterViewInit,\n  Component,\n  DoCheck,\n  ElementRef,\n  IterableDiffers,\n  OnDestroy,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @docsExtends PoBreadcrumbBaseComponent\n *\n * @example\n *\n * <example name=\"po-breadcrumb-basic\" title=\"PO Breadcrumb Basic\">\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-breadcrumb-labs\" title=\"PO Breadcrumb Labs\">\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-breadcrumb',\n  templateUrl: './po-breadcrumb.component.html'\n})\nexport class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n  showDropdown: boolean = false;\n  showDropdownToggle: boolean = false;\n  dropdownItems: Array<PoBreadcrumbItem>;\n\n  private _breadcrumbItemsLenght: number = 0;\n  private calculatedElement = false;\n  private differ;\n  private hiddenWithoutResize = false;\n  private initialized = false;\n  private timeoutResize;\n\n  @ViewChild('breadcrumb', { read: ElementRef, static: true }) breadcrumbElement: ElementRef;\n  @ViewChild('dropdownIcon', { read: ElementRef }) dropdownIcon: ElementRef;\n\n  constructor(differs: IterableDiffers, private element: ElementRef, public renderer: Renderer2) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    this.initializeResizeListener();\n  }\n\n  ngDoCheck() {\n    const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;\n\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (breadcrumbWidth && !this.calculatedElement && this.initialized) {\n      this.initBreadcrumbSize();\n    }\n\n    if (this.hiddenWithoutResize) {\n      this.debounceResize();\n      this.hiddenWithoutResize = false;\n    }\n\n    this.checkChangeOnItems();\n  }\n\n  ngOnDestroy() {\n    this.removeClickoutListener();\n    this.removeResizeListener();\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n    this.initializeClickoutListener();\n  }\n\n  private wasClickedonDropdown = (event: MouseEvent) => {\n    const clickedOutIconDropdown = this.checkClickOutElement(event, this.dropdownIcon);\n\n    if (clickedOutIconDropdown) {\n      this.showDropdown = false;\n      this.removeClickoutListener();\n    }\n  };\n\n  private checkClickOutElement(event, element) {\n    return element && !element.nativeElement.contains(event.target);\n  }\n\n  private checkChangeOnItems() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.items);\n      if (changes) {\n        this.calcBreadcrumbItemsWidth();\n        this.calculatedElement = false;\n      }\n    }\n  }\n\n  private calcBreadcrumb() {\n    const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();\n    const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite);\n\n    if (breadcrumb <= this._breadcrumbItemsLenght) {\n      this.enableBreadcrumbResponsive();\n    } else {\n      this.disableBreadcrumbResponsive();\n    }\n  }\n\n  private getBreadcrumbFavoriteWidth() {\n    return this.favoriteService\n      ? this.element.nativeElement.querySelector('.po-breadcrumb-favorite').offsetWidth + 20\n      : 0;\n  }\n\n  private getBreadcrumbWidth(breadcrumbFavorite) {\n    return this.element.nativeElement.querySelector('.po-breadcrumb').offsetWidth - breadcrumbFavorite;\n  }\n\n  private calcBreadcrumbItemsWidth() {\n    const breadcrumbItem = this.element.nativeElement.querySelectorAll(\n      '.po-breadcrumb-item, .po-breadcrumb-item-unclickable'\n    );\n\n    this._breadcrumbItemsLenght = Array.from(breadcrumbItem)\n      .map(breadcrumb => breadcrumb['offsetWidth'])\n      .reduce((a, b) => a + b, 16);\n  }\n\n  private enableBreadcrumbResponsive() {\n    this.showDropdownToggle = true;\n    this.itemsView = this.items.slice(-2);\n    this.dropdownItems = this.items.slice(0, -2).reverse();\n  }\n\n  private disableBreadcrumbResponsive() {\n    this.showDropdownToggle = false;\n    this.itemsView = [].concat(this.items);\n    this.showDropdown = false;\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      if (\n        this.calculatedElement &&\n        !this.hiddenWithoutResize &&\n        this.breadcrumbElement.nativeElement.offsetWidth === 0\n      ) {\n        this.hiddenWithoutResize = true;\n      } else {\n        this.calcBreadcrumb();\n      }\n    }, 50);\n  }\n\n  private initBreadcrumbSize() {\n    this.calcBreadcrumbItemsWidth();\n    this.calcBreadcrumb();\n    this.calculatedElement = true;\n  }\n\n  private initializeClickoutListener() {\n    this.clickoutListener = this.renderer.listen('document', 'click', this.wasClickedonDropdown);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeClickoutListener() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o dropdown do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-dropdown',\n  templateUrl: './po-breadcrumb-dropdown.component.html'\n})\nexport class PoBreadcrumbDropdownComponent {\n  // Itens a serem apresentados na lista do dropdown.\n  @Input('p-items') items: Array<PoBreadcrumbItem>;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.\n * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os mÃ©todos, GET e POST este\n * objeto deve ser retornado.\n * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.\n * No mÃ©todo POST, existe a possibilidade de ser enviado parÃ¢metros junto com a requisiÃ§Ã£o. Neste caso, o objeto enviado\n * para a API terÃ¡ o formato: { isFavorite: booleano, url: string, params: {} }, onde params Ã© o objeto que pode ser enviado\n * junto com a requisiÃ§Ã£o.\n *\n */\n@Injectable()\nexport class PoBreadcrumbFavoriteService {\n  private _url: string;\n  private _bodyParams: object;\n\n  get url(): string {\n    return this._url;\n  }\n\n  get bodyParams(): object {\n    return this._bodyParams;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  configService(url, params, item) {\n    this._url = url;\n    this._bodyParams = {\n      isFavorite: false,\n      url: item.link,\n      params: params\n    };\n  }\n\n  sendStatusFavorite(status): Observable<any> {\n    this.bodyParams['isFavorite'] = status;\n    return this.http.post(this.url, this.bodyParams);\n  }\n\n  getFavorite(): Observable<any> {\n    return this.http.get(this.url, { responseType: 'json', params: { url: this.bodyParams['url'] } });\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\nimport { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o serviÃ§o de favoritar do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-favorite',\n  templateUrl: './po-breadcrumb-favorite.component.html',\n  providers: [PoBreadcrumbFavoriteService]\n})\nexport class PoBreadcrumbFavoriteComponent implements OnInit, OnDestroy {\n  favorite: boolean = false;\n  private getSubscription: Subscription;\n  private setSubscription: Subscription;\n\n  // URL do serviÃ§o.\n  @Input('p-favorite-service') favoriteService: string;\n\n  // Item do breadcrumb ativo.\n  @Input('p-item-active') itemActive: PoBreadcrumbItem;\n\n  // ParÃ¢metro que serÃ¡ enviado junto com o serviÃ§o de favoritar.\n  @Input('p-params-service') paramsService: object;\n\n  constructor(private service: PoBreadcrumbFavoriteService) {}\n\n  ngOnInit() {\n    this.service.configService(this.favoriteService, this.paramsService, this.itemActive);\n    this.getStatusFavorite();\n  }\n\n  ngOnDestroy(): void {\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n\n    if (this.setSubscription) {\n      this.setSubscription.unsubscribe();\n    }\n  }\n\n  toggleFavoriteAction() {\n    this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);\n  }\n\n  private getStatusFavorite() {\n    this.getSubscription = this.service.getFavorite().subscribe(result => (this.favorite = result.isFavorite));\n  }\n\n  private setStatusFavorite(status) {\n    this.setSubscription = this.service\n      .sendStatusFavorite(status)\n      .subscribe(result => (this.favorite = result.isFavorite));\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza cada item do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-item',\n  templateUrl: './po-breadcrumb-item.component.html'\n})\nexport class PoBreadcrumbItemComponent {\n  // AÃ§Ã£o que serÃ¡ executada ao clicar sobre o item.\n  @Input('p-action') action: Function;\n\n  // Label do item.\n  @Input('p-label') label: string;\n\n  // Link do item.\n  @Input('p-link') link: string;\n\n  // Especifica se item Ã© o link ativo.\n  @Input('p-item-active') itemActive: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbComponent } from './po-breadcrumb.component';\nimport { PoBreadcrumbDropdownComponent } from './po-breadcrumb-dropdown/po-breadcrumb-dropdown.component';\nimport { PoBreadcrumbFavoriteComponent } from './po-breadcrumb-favorite/po-breadcrumb-favorite.component';\nimport { PoBreadcrumbItemComponent } from './po-breadcrumb-item/po-breadcrumb-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-breadcrumb.\n *\n */\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [\n    PoBreadcrumbComponent,\n    PoBreadcrumbDropdownComponent,\n    PoBreadcrumbFavoriteComponent,\n    PoBreadcrumbItemComponent\n  ],\n  exports: [PoBreadcrumbComponent]\n})\nexport class PoBreadcrumbModule {}\n","// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Converte e formata os bytes em formato mais legÃ­vel para o usuÃ¡rio.\n *\n * Por exemplo:\n * - 31457280 em 30 MB.\n * - 21474836480 em 20 GB.\n * - 12.5666666 em 12.57 Bytes (duas casas decimais).\n *\n * @param bytes {number} Valor em bytes\n * @param decimals {number} Quantidade de casas decimais que terÃ¡ apÃ³s a conversÃ£o.\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (!bytes) {\n    return undefined;\n  }\n\n  const multiplier = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const result = Math.floor(Math.log(bytes) / Math.log(multiplier));\n  decimals = decimals < 0 ? 0 : decimals;\n\n  return `${parseFloat((bytes / Math.pow(multiplier, result)).toFixed(decimals))} ${sizes[result]}`;\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  const language = navigator.language || navigator['userLanguage'];\n  const shortLanguage = getShortLanguage(language);\n\n  return poLocales.includes(shortLanguage) ? language : poLocaleDefault;\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  return getShortLanguage(getBrowserLanguage());\n}\n\n/**\n * Retorna o idioma com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n * Por exemplo: \"pt\" ou \"es\".\n *\n * @param language {string} linguagem.\n *\n * @returns sigla do idioma padrÃ£o {string}.\n *\n * @default pt\n */\nexport function getShortLanguage(language: string): string {\n  return (language || poLocaleDefault).toLowerCase().substring(0, 2);\n}\n\nexport function isLanguage(value) {\n  const languageRegex = new RegExp('^[a-z]{2}(-[a-z]{2})?$', 'i');\n\n  return languageRegex.test(value);\n}\n\n/* istanbul ignore next */\nexport function reloadCurrentPage() {\n  window.location.assign(location.href);\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return val === 'true' || val === 'on' || val === '';\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string, start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISODate(date: Date) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    return year + '-' + month + '-' + day;\n  } else {\n    return null;\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    const dateString = date.toString();\n\n    if (time !== null) {\n      return year + '-' + month + '-' + day + time;\n    } else {\n      return (\n        year +\n        '-' +\n        month +\n        '-' +\n        day +\n        'T' +\n        dateString.substring(16, 24) +\n        dateString.substring(28, 31) +\n        ':' +\n        dateString.substring(31, 33)\n      );\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n}\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer ou Edge\nexport function isIEOrEdge() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident\\/|edge\\//i.test(userAgent);\n}\n\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer\nexport function isIE() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident/i.test(userAgent);\n}\n\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Firefox\nexport function isFirefox() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.toLowerCase().indexOf('firefox') > -1;\n}\n\n// Verifica qual o dispositivo que estÃ¡ sendo usado\nexport function isMobile() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i);\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\nexport function isKeyCodeEnter(event: any): boolean {\n  return event.keyCode === 13 || event.which === 13;\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) {\n      continue;\n    }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  const left = isTypeof(leftSide, 'string') ? leftSide.toLowerCase() : leftSide;\n  const right = isTypeof(rightSide, 'string') ? rightSide.toLowerCase() : rightSide;\n\n  if (ascending) {\n    if (left < right) {\n      return -1;\n    } else if (left > right) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (left < right) {\n      return 1;\n    } else if (left > right) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return date >= dateStart && date <= dateEnd;\n  } else if (dateStart && !dateEnd) {\n    return date >= dateStart;\n  } else if (!dateStart && dateEnd) {\n    return date <= dateEnd;\n  } else {\n    return true;\n  }\n}\n\nexport function uuid() {\n  function hex4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  return hex4() + hex4() + '-' + hex4() + '-' + hex4() + '-' + hex4() + '-' + hex4() + hex4() + hex4();\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({\n    ...selectedProperties,\n    [property]: object[property]\n  });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * Converte um arquivo em base64.\n *\n * @param file arquivo que serÃ¡ convertido.\n */\nexport function convertImageToBase64(file: File): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    /* istanbul ignore next */\n    reader.onerror = error => reject(error);\n  });\n}\n\n/**\n * Converte um nÃºmero em decimal baseado na quantidade de casas decimais.\n *\n * Caso o valor seja invÃ¡lido, serÃ¡ retornado o valor `undefined`.\n * Valores invÃ¡lidos sÃ£o: `false`, `NaN`, `strings` que nÃ£o numÃ©ricas, `undefined` e `null`.\n *\n * @param number valor que serÃ¡ convertido\n * @param decimalsPlace quantidade de casas decimais\n */\nexport function convertNumberToDecimal(number: any, decimalsPlace: number): number {\n  const isValidValue = (number || number === 0) && !isNaN(number);\n\n  const floatValue = isValidValue ? parseFloat(number) : undefined;\n\n  try {\n    return parseFloat(floatValue.toFixed(decimalsPlace));\n  } catch {\n    return floatValue;\n  }\n}\n\n/**\n * Retorna uma copia do objeto sujo, sem as propriedades nulas ou indefinidas.\n * Retorna o objeto sem as propriedades que contÃ©m valores nulos ou indefinidos.\n *\n * @param dirtyObject\n */\nexport function clearObject(dirtyObject: object): any {\n  const cleanObject = {};\n\n  Object.keys(dirtyObject).forEach(key => {\n    if (dirtyObject[key] !== null && dirtyObject[key] !== undefined) {\n      cleanObject[key] = dirtyObject[key];\n    }\n  });\n\n  return cleanObject;\n}\n\nexport function validateObjectType(value: any) {\n  return isTypeof(value, 'object') && !Array.isArray(value) ? value : undefined;\n}\n","import { Injectable } from '@angular/core';\n\nimport { getBrowserLanguage, getShortLanguage, isLanguage, poLocaleDefault, poLocales } from '../../utils/util';\n\nconst poDefaultLanguage = 'PO_DEFAULT_LANGUAGE';\nconst poLocaleKey = 'PO_USER_LOCALE';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar as linguagens da aplicaÃ§Ã£o.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoLanguageService {\n  set languageDefault(language: string) {\n    if (language && isLanguage(language)) {\n      localStorage.setItem(poDefaultLanguage, language);\n    }\n  }\n\n  get languageDefault(): string {\n    return localStorage.getItem(poDefaultLanguage);\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma ativo.\n   *\n   * A busca do idioma serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo `setLanguage()` utilizado pelo i18n.\n   *\n   *   2 - o valor inserido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido\n   * na propriedade `language` da interface `PoI18nConfigDefault`.\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:** `string` com a sigla do idioma ativo.\n   */\n  getLanguage(): string {\n    const language = localStorage.getItem(poLocaleKey) || this.languageDefault || getBrowserLanguage();\n\n    return language && language.toLowerCase();\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma *default* da aplicaÃ§Ã£o definido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s\n   * do parÃ¢metro `config`.\n   *\n   * **Retorno:** `string` com a sigla do idioma *default*.\n   */\n  getLanguageDefault(): string {\n    return this.languageDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar a abreviaÃ§Ã£o do idioma ativo na aplicaÃ§Ã£o.\n   *\n   * @default `pt`\n   *\n   * **Retorno:** `string` com a sigla abreviada do idioma ativo.\n   */\n  getShortLanguage(): string {\n    const language = this.getLanguage();\n    const shortLanguage = getShortLanguage(language);\n\n    return poLocales.includes(shortLanguage) ? shortLanguage : poLocaleDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo para salvar o idioma da aplicaÃ§Ã£o no *storage*, utilizado pelo serviÃ§o do i18n.\n   *\n   * > Ao definir um idioma por este mÃ©todo, todos os mÃ³dulos da aplicaÃ§Ã£o utilizarÃ£o o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguage(language: string): void {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    localStorage.setItem(poLocaleKey, language.toLowerCase());\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo que define o idioma configurado a partir do parÃ¢metro `config` utilizado pelo mÃ³dulo do i18n.\n   *\n   * > Ao definir um idioma por este serviÃ§o, apenas o mÃ³dulo do i18n referente a esta configuraÃ§Ã£o utilizarÃ¡ o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguageDefault(language: string): void {\n    this.languageDefault = language;\n  }\n}\n","/**\n * @usedBy PoButtonGroupComponent\n *\n * @description\n *\n * Define o tipo de seleÃ§Ã£o dos botÃµes do `po-button-group`.\n */\nexport enum PoButtonGroupToggle {\n  /** SeleÃ§Ã£o mÃºltipla. */\n  Multiple = 'multiple',\n\n  /** SeleÃ§Ã£o desabilitada. */\n  None = 'none',\n\n  /** SeleÃ§Ã£o Ãºnica. */\n  Single = 'single'\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from './../../../utils/util';\n\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayLiterals } from './interfaces/po-loading-overlay-literals.interface';\n\nexport const poLoadingOverlayLiteralsDefault = {\n  en: <PoLoadingOverlayLiterals>{\n    loading: 'Loading'\n  },\n  es: <PoLoadingOverlayLiterals>{\n    loading: 'Cargando'\n  },\n  pt: <PoLoadingOverlayLiterals>{\n    loading: 'Carregando'\n  },\n  ru: <PoLoadingOverlayLiterals>{\n    loading: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°'\n  }\n};\n\n/**\n *\n * @description\n *\n * Este componente mostra ao usuÃ¡rio uma imagem de _loading_ e bloqueia a pÃ¡gina inteira ou o container escolhido,\n * enquanto aguarda a resposta de alguma requisiÃ§Ã£o.\n */\n@Directive()\nexport class PoLoadingOverlayBaseComponent {\n  private _screenLock?: boolean = false;\n  private _text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o *overlay* serÃ¡ aplicado a um *container* ou a pÃ¡gina inteira.\n   *\n   * Para utilizar o componente como um *container*, o elemento pai deverÃ¡ receber uma posiÃ§Ã£o relativa, por exemplo:\n   *\n   * ```\n   * <div style=\"position: relative\">\n   *\n   *  <po-chart [p-series]=\"[{ value: 10, category: 'Example' }]\">\n   *  </po-chart>\n   *\n   *  <po-loading-overlay>\n   *  </po-loading-overlay>\n   * </div>\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('p-screen-lock') set screenLock(screenLock: boolean) {\n    this._screenLock = convertToBoolean(screenLock);\n  }\n\n  get screenLock() {\n    return this._screenLock;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto a ser exibido no componente.\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido acordo com o idioma configurado no [**PoI18n**](/documentation/po-i18n) ou navegador.\n   *\n   * @default `Carregando`\n   */\n  @Input('p-text') set text(value: string) {\n    this._text = value || this.getTextDefault();\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  constructor(private languageService: PoLanguageService) {\n    this.text = this.getTextDefault();\n  }\n\n  private getTextDefault(): string {\n    const language = this.languageService.getShortLanguage();\n\n    return poLoadingOverlayLiteralsDefault[language].loading;\n  }\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\n\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';\n\n/**\n *\n * @docsExtends PoLoadingOverlayBaseComponent\n *\n * @example\n *\n * <example name=\"po-loading-overlay-basic\" title=\"PO Loading Overlay Basic\">\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-labs\" title=\"PO Loading Overlay Labs\">\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-connection-test\" title=\"PO Loading Overlay - Connection Test\">\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-loading-overlay',\n  templateUrl: 'po-loading-overlay.component.html'\n})\nexport class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {\n  constructor(public changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\n    super(languageService);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que exibe um Ã­cone de carregamento de conteÃºdo. A cor padrÃ£o para ele Ã© a primÃ¡ria conforme o tema utilizado.\n * Ã possÃ­vel alterÃ¡-la para um tom cinza conforme a necessidade.\n */\n@Component({\n  selector: 'po-loading-icon',\n  templateUrl: 'po-loading-icon.component.html'\n})\nexport class PoLoadingIconComponent {\n  private _neutralColor: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o para cor neutra (cinza) para o Ã­cone de carregamento.\n   *\n   * @default `false`\n   */\n  @Input('p-neutral-color') set neutralColor(value: boolean) {\n    this._neutralColor = convertToBoolean(value);\n  }\n\n  get neutralColor(): boolean {\n    return this._neutralColor;\n  }\n}\n","import { Input, Directive } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este componente tem o objetivo de mostrar visualmente aos usuÃ¡rios que a aplicaÃ§Ã£o estÃ¡ processando\n * ou aguardando a resposta de alguma requisiÃ§Ã£o.\n */\n@Directive()\nexport class PoLoadingBaseComponent {\n  /**\n   * Texto a ser exibido no componente.\n   */\n  @Input('p-text') text?: string = 'Carregando';\n}\n","import { Component } from '@angular/core';\n\nimport { PoLoadingBaseComponent } from './po-loading-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLoadingBaseComponent\n */\n@Component({\n  selector: 'po-loading',\n  templateUrl: 'po-loading.component.html'\n})\nexport class PoLoadingComponent extends PoLoadingBaseComponent {}\n","import { NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './po-language.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-language`.\n */\n@NgModule({\n  providers: [PoLanguageService]\n})\nexport class PoLanguageModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\n\nimport { PoLoadingComponent } from './po-loading.component';\nimport { PoLoadingIconComponent } from './po-loading-icon/po-loading-icon.component';\nimport { PoLoadingOverlayComponent } from './po-loading-overlay/po-loading-overlay.component';\n\n/**\n *\n * @description\n *\n * MÃ³dulo do componente po-loading-overlay.\n */\n@NgModule({\n  imports: [CommonModule, PoLanguageModule],\n  declarations: [PoLoadingComponent, PoLoadingIconComponent, PoLoadingOverlayComponent],\n  exports: [PoLoadingComponent, PoLoadingIconComponent, PoLoadingOverlayComponent]\n})\nexport class PoLoadingModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];\nconst PO_BUTTON_TYPE_DEFAULT = 'default';\n\n/**\n * @description\n *\n * O `po-button` permite que o usuÃ¡rio execute aÃ§Ãµes predefinidas pelo desenvolvedor.\n *\n * AtravÃ©s dos tipos, Ã© possÃ­vel identificar a importÃ¢ncia de cada aÃ§Ã£o, sendo ela primÃ¡ria (`primary`) ou atÃ© mesmo uma\n * aÃ§Ã£o irreversÃ­vel (`danger`), como a exclusÃ£o de um registro.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-button`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-button` configurado como `primary` por pÃ¡gina.\n * - Para aÃ§Ãµes irreversÃ­veis use sempre o tipo `danger`.\n */\n@Directive()\nexport class PoButtonBaseComponent {\n  private _disabled?: boolean = false;\n  private _loading?: boolean = false;\n  private _small?: boolean = false;\n  private _type?: string = 'default';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Label do botÃ£o.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um Ã­cone de carregamento Ã  esquerda do _label_ do botÃ£o.\n   *\n   * > Quando esta propriedade estiver habilitada, desabilitarÃ¡ o botÃ£o.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * Ãcone exibido ao lado esquerdo do label do botÃ£o.\n   *\n   * Ã possÃ­vel usar qualquer uma dos Ã­cones da [Biblioteca de Ã­cones](/guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deixa o botÃ£o menor.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estilo do `po-button`.\n   *\n   * Valore vÃ¡lidos:\n   *  - `default`: estilo padrÃ£o do `po-button`.\n   *  - `primary`: deixa o `po-button` com destaque, deve ser usado para aÃ§Ãµes primÃ¡rias.\n   *  - `danger`: deve ser usado para aÃ§Ãµes que o usuÃ¡rio precisa ter cuidado ao executa-lÃ¡.\n   *  - `link`: o `po-button` recebe o estilo de um link.\n   *\n   * @default `default`\n   */\n  @Input('p-type') set type(value: string) {\n    this._type = PO_BUTTON_TYPES.includes(value) ? value : PO_BUTTON_TYPE_DEFAULT;\n  }\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o `po-button` e nÃ£o permite que o usuÃ¡rio interaja com o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre o `po-button`. */\n  @Output('p-click') click = new EventEmitter<null>();\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { PoButtonBaseComponent } from './po-button-base.component';\n\n/**\n * @docsExtends PoButtonBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-basic\" title=\"PO Button Basic\">\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-labs\" title=\"PO Button Labs\">\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.po.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button',\n  templateUrl: './po-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoButtonComponent extends PoButtonBaseComponent {\n  @ViewChild('button', { static: true }) buttonElement: ElementRef;\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoButtonComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoButtonComponent, { static: true }) button: PoButtonComponent;\n   *\n   * focusButton() {\n   *   this.button.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.buttonElement.nativeElement.focus();\n    }\n  }\n\n  onClick() {\n    this.click.emit(null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLoadingModule } from './../po-loading/index';\n\nimport { PoButtonComponent } from './po-button.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button.\n */\n@NgModule({\n  imports: [CommonModule, PoLoadingModule],\n  declarations: [PoButtonComponent],\n  exports: [PoButtonComponent]\n})\nexport class PoButtonModule {}\n","// Array de posiÃ§Ãµes.\nexport const PO_CONTROL_POSITIONS = [\n  'right',\n  'right-top',\n  'right-bottom',\n  'top',\n  'top-left',\n  'top-right',\n  'left',\n  'left-top',\n  'left-bottom',\n  'bottom',\n  'bottom-left',\n  'bottom-right'\n];\n","import { Input, Directive } from '@angular/core';\n\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst CONTENT_MAX_LENGTH = 140;\nconst PO_TOOLTIP_POSITION_DEFAULT = 'bottom';\n\n/**\n * @description\n *\n * A diretiva po-tooltip deve ser utilizada para oferecer informaÃ§Ãµes adicionais quando os usuÃ¡rios\n * passam o mouse sobre o elemento alvo ao qual ela estÃ¡ atribuÃ­da.\n *\n * O conteÃºdo Ã© formado por um pequeno texto que deve contribuir para uma tomada de decisÃ£o ou\n * orientaÃ§Ã£o do usuÃ¡rio. A ativaÃ§Ã£o dele pode estar em qualquer componente ou tag HTML.\n *\n * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\n * conteÃºdo deve-se utilizar o [**po-popover**](https://po-ui.io/documentation/po-popover?view=doc).\n */\n\n@Directive()\nexport class PoTooltipBaseDirective {\n  private _tooltip: string = '';\n  protected _tooltipPosition?: string = 'bottom';\n\n  /**\n   * @description\n   *\n   * Habilita e atribui um texto ao po-tooltip, com limitaÃ§Ã£o de 140 caracteres.\n   */\n  @Input('p-tooltip') set tooltip(tooltip: string) {\n    if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {\n      this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);\n    } else {\n      this._tooltip = tooltip;\n    }\n  }\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-tooltip abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"bottom\" (abaixo), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-tooltip no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-tooltip no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-tooltip no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-tooltip abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-tooltip abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-tooltip abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-tooltip no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-tooltip no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-tooltip no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-tooltip acima do componente alvo.\n   * - `top-right`: Posiciona o po-tooltip acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-tooltip acima e Ã  esquerda do componente alvo.\n   *\n   * @default bottom\n   */\n  @Input('p-tooltip-position') set tooltipPosition(position: string) {\n    this._tooltipPosition = PO_CONTROL_POSITIONS.includes(position) ? position : PO_TOOLTIP_POSITION_DEFAULT;\n  }\n  get tooltipPosition(): string {\n    return this._tooltipPosition;\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\n/**\n * @docsPrivate\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar as posiÃ§Ãµes de um elemento em relaÃ§Ã£o a um elemento alvo. Ele pode receber as\n * seguintes posiÃ§Ãµes:\n *\n * - `right`: Posiciona o elemento no lado direito do componente alvo.\n * - `right-bottom`: Posiciona o elemento no lado direito inferior do componente alvo.\n * - `right-top`: Posiciona o elemento no lado direito superior do componente alvo.\n * - `bottom`: Posiciona o elemento abaixo do componente alvo.\n * - `bottom-left`: Posiciona o elemento abaixo e Ã  esquerda do componente alvo.\n * - `bottom-right`: Posiciona o elemento abaixo e Ã  direita do componente alvo.\n * - `left`: Posiciona o elemento no lado esquerdo do componente alvo.\n * - `left-top`: Posiciona o elemento no lado esquerdo superior do componente alvo.\n * - `left-bottom`: Posiciona o elemento no lado esquerdo inferior do componente alvo.\n * - `top`: Posiciona o elemento acima do componente alvo.\n * - `top-right`: Posiciona o elemento acima e Ã  direita do componente alvo.\n * - `top-left`: Posiciona o elemento acima e Ã  esquerda do componente alvo.\n *\n * Caso o elemento nÃ£o caiba na tela na posiÃ§Ã£o indicada ele serÃ¡ rotacionado automaticamente para se adequar,\n * inicialmente no lado definido como padrÃ£o e em seguida seguindo o sentido horÃ¡rio.\n */\n\nconst poControlPositionSidesDefault: Array<string> = [\n  'bottom',\n  'bottom-left',\n  'bottom-right',\n  'left',\n  'left-top',\n  'left-bottom',\n  'top',\n  'top-right',\n  'top-left',\n  'right',\n  'right-bottom',\n  'right-top'\n];\n\n@Injectable()\nexport class PoControlPositionService {\n  private arrowDirection: string;\n  private customPositions: Array<string>;\n  private differenceDiagonalToWidthArrow: number = 3;\n  private element: HTMLElement;\n  private elementOffset: number;\n  private isCornerAligned: boolean;\n  private isSetElementWidth: boolean = false;\n  // offset da seta em relaÃ§Ã£o ao canto do componente\n  private offsetArrow: number = 12;\n  private targetElement: HTMLElement;\n\n  /**\n   * @description Ajusta a posiÃ§Ã£o do elemento, caso nÃ£o couber em tela irÃ¡ para prÃ³xima posiÃ§Ã£o.\n   *\n   * @param value posiÃ§Ã£o para exibiÃ§Ã£o do elemento\n   */\n  adjustPosition(value: string) {\n    const position = value || 'bottom';\n    this.elementPosition(position);\n    this.customPositions && this.customPositions.length\n      ? this.adjustCustomPosition(position)\n      : this.adjustDefaultPosition(position);\n  }\n\n  /**\n   * @description Retorna a direÃ§Ã£o da seta, conforme a posiÃ§Ã£o do elemento.\n   */\n  getArrowDirection() {\n    return this.arrowDirection;\n  }\n\n  /**\n   * @description MÃ©todo responsÃ¡vel por definir as propriedades utilizadas para exibir o elemento na posiÃ§Ã£o correta.\n   *\n   * @param element elemento que serÃ¡ exibido\n   * @param elementOffset offSet do elemento\n   * @param targetElement elemento de onde deve partir a exibiÃ§Ã£o\n   * @param customPositions posiÃ§Ãµes que sobrescreve as posiÃ§Ãµes padrÃµes\n   * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro serÃ¡ igual do targetElement\n   * @param isCornerAligned indica se o elemento filho serÃ¡ alinhado nos cantos do elemneto pai.\n   */\n  setElements(\n    element: ElementRef | HTMLElement,\n    elementOffset: number,\n    targetElement: ElementRef | HTMLElement,\n    customPositions?: Array<string>,\n    isSetElementWidth: boolean = false,\n    isCornerAligned: boolean = false\n  ) {\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n    this.targetElement = targetElement instanceof ElementRef ? targetElement.nativeElement : targetElement;\n\n    this.elementOffset = elementOffset;\n\n    this.customPositions = customPositions;\n    this.isSetElementWidth = isSetElementWidth;\n    this.isCornerAligned = isCornerAligned;\n  }\n\n  private adjustCustomPosition(position: string) {\n    const positionLength = this.customPositions.length;\n\n    let sidesCount = 0;\n\n    while (sidesCount++ < positionLength) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, this.customPositions);\n        this.elementPosition(position);\n      }\n    }\n  }\n\n  private adjustDefaultPosition(position: string) {\n    const mainPositions = this.getMainPositions();\n    const mainPositionLength = mainPositions.length;\n\n    let mainSidesCount = 0;\n\n    while (mainSidesCount++ < mainPositionLength) {\n      const mainPosition = this.getMainPosition(position);\n      this.elementPosition(position);\n\n      if (this.overflowMain(mainPosition)) {\n        position = this.nextPosition(mainPosition, mainPositions);\n        continue;\n      } else if (this.overflowAllSides(position)) {\n        this.verifySubPositions(position);\n        return;\n      }\n\n      return;\n    }\n  }\n\n  private elementPosition(position: string) {\n    this.isCornerAligned ? this.setAlignedElementPosition(position) : this.setElementPosition(position);\n  }\n\n  private getMainPosition(position: string) {\n    return position.indexOf('-') > -1 ? position.substring(0, position.indexOf('-')) : position;\n  }\n\n  private getMainPositions() {\n    const defaultMainPositions = ['top', 'right', 'bottom', 'left'];\n\n    return this.customPositions && this.customPositions.length\n      ? this.getMainPositionsByCustomPositions(this.customPositions)\n      : defaultMainPositions;\n  }\n\n  private getMainPositionsByCustomPositions(customPositions: Array<string>) {\n    const mainPositions = [];\n    const customPositionsLength = customPositions.length;\n\n    for (let i = 0; i < customPositionsLength; i++) {\n      const position = customPositions[i];\n\n      const mainPosition = this.getMainPosition(position);\n\n      if (!mainPositions.includes(mainPosition)) {\n        mainPositions.push(mainPosition);\n      }\n    }\n\n    return mainPositions;\n  }\n\n  private getOverflows() {\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    return {\n      right: sizesAndPositions.element.right > sizesAndPositions.window.innerWidth,\n      top: sizesAndPositions.element.top <= 0,\n      left: sizesAndPositions.element.left <= 0,\n      bottom: sizesAndPositions.element.bottom > sizesAndPositions.window.innerHeight\n    };\n  }\n\n  private getSizesAndPositions() {\n    return {\n      window: {\n        scrollY: window.scrollY,\n        scrollX: window.scrollX,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      },\n      element: this.element.getBoundingClientRect(),\n      target: this.targetElement ? this.targetElement.getBoundingClientRect() : { top: 0, bottom: 0, right: 0, left: 0 }\n    };\n  }\n\n  private nextPosition(position: string, positions: Array<string> = []): string {\n    const index = positions.indexOf(position);\n    const nextIndex = index + 1;\n\n    if (index > -1 && nextIndex < positions.length) {\n      return positions[nextIndex];\n    } else {\n      return positions[0];\n    }\n  }\n\n  private overflowAllSides(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top':\n        return overflows.top || overflows.right || overflows.left;\n      case 'top-right':\n        return overflows.top || overflows.right;\n      case 'top-left':\n        return overflows.top || overflows.left;\n      case 'right':\n        return overflows.right || overflows.top || overflows.bottom;\n      case 'right-top':\n        return overflows.right || overflows.top;\n      case 'right-bottom':\n        return overflows.right || overflows.bottom;\n      case 'bottom':\n        return overflows.bottom || overflows.right || overflows.left;\n      case 'bottom-right':\n        return overflows.bottom || overflows.right;\n      case 'bottom-left':\n        return overflows.bottom || overflows.left;\n      case 'left':\n        return overflows.left || overflows.top || overflows.bottom;\n      case 'left-top':\n        return overflows.left || overflows.top;\n      case 'left-bottom':\n        return overflows.left || overflows.bottom;\n    }\n  }\n\n  private overflowMain(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top':\n        return overflows.top;\n      case 'right':\n        return overflows.right;\n      case 'bottom':\n        return overflows.bottom;\n      case 'left':\n        return overflows.left;\n    }\n  }\n\n  private setAlignedArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top-left':\n        return 'bottom-left';\n      case 'top-right':\n        return 'bottom-right';\n      case 'bottom-right':\n        return 'top-right';\n      case 'bottom-left':\n        return 'top-left';\n    }\n  }\n\n  private setAlignedBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setAlignedElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions: any = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'bottom-left':\n        this.setAlignedBottomPositions(0, sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setAlignedBottomPositions(\n          sizesAndPositions.element.width - sizesAndPositions.target.width,\n          sizesAndPositions\n        );\n        break;\n      case 'top-left':\n        this.setAlignedTopPositions(0, sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setAlignedTopPositions(\n          sizesAndPositions.element.width - sizesAndPositions.target.width,\n          sizesAndPositions\n        );\n        break;\n    }\n\n    this.arrowDirection = this.setAlignedArrowDirection(position);\n  }\n\n  private setAlignedTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top =\n      sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top':\n        return 'bottom';\n      case 'top-left':\n        return 'bottom-right';\n      case 'top-right':\n        return 'bottom-left';\n      case 'right':\n        return 'left';\n      case 'right-top':\n        return 'left-bottom';\n      case 'right-bottom':\n        return 'left-top';\n      case 'bottom':\n        return 'top';\n      case 'bottom-right':\n        return 'top-left';\n      case 'bottom-left':\n        return 'top-right';\n      case 'left':\n        return 'right';\n      case 'left-bottom':\n        return 'right-top';\n      case 'left-top':\n        return 'right-bottom';\n    }\n  }\n\n  private setBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + sizesAndPositions.target.width / 2 - displacement + 'px';\n  }\n\n  private setElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'top':\n        this.setTopPositions(sizesAndPositions.element.width / 2, sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setTopPositions(\n          sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow,\n          sizesAndPositions\n        );\n        break;\n      case 'top-right':\n        this.setTopPositions(this.offsetArrow + this.differenceDiagonalToWidthArrow, sizesAndPositions);\n        break;\n      case 'right':\n        this.setRightPositions(sizesAndPositions.element.height / 2, sizesAndPositions);\n        break;\n      case 'right-top':\n        this.setRightPositions(\n          sizesAndPositions.element.height - this.offsetArrow - this.differenceDiagonalToWidthArrow,\n          sizesAndPositions\n        );\n        break;\n      case 'right-bottom':\n        this.setRightPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'bottom':\n        this.setBottomPositions(sizesAndPositions.element.width / 2, sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setBottomPositions(this.offsetArrow + this.differenceDiagonalToWidthArrow, sizesAndPositions);\n        break;\n      case 'bottom-left':\n        this.setBottomPositions(\n          sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow,\n          sizesAndPositions\n        );\n        break;\n      case 'left':\n        this.setLeftPositions(sizesAndPositions.element.height / 2, sizesAndPositions);\n        break;\n      case 'left-bottom':\n        this.setLeftPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'left-top':\n        this.setLeftPositions(sizesAndPositions.element.height - this.offsetArrow, sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setArrowDirection(position);\n  }\n\n  private setElementWidth() {\n    if (this.isSetElementWidth && this.targetElement) {\n      this.element.style.width = `${this.targetElement.clientWidth}px`;\n    }\n  }\n\n  private setLeftPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + sizesAndPositions.target.height / 2 + 'px';\n    this.element.style.left =\n      sizesAndPositions.target.left - sizesAndPositions.element.width - this.elementOffset + 'px';\n  }\n\n  private setRightPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + sizesAndPositions.target.height / 2 + 'px';\n    this.element.style.left = sizesAndPositions.target.right + this.elementOffset + 'px';\n  }\n\n  private setTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top =\n      sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + sizesAndPositions.target.width / 2 - displacement + 'px';\n  }\n\n  private verifySubPositions(position: string) {\n    if (position.indexOf('-') > -1) {\n      position = position.substring(0, position.indexOf('-'));\n      this.elementPosition(position);\n    }\n\n    let align = 0;\n    while (align++ < 3) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, poControlPositionSidesDefault);\n        this.elementPosition(position);\n      } else {\n        return null;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\n\n@Injectable()\nexport class PoTooltipControlPositionService extends PoControlPositionService {}\n","import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\n\nimport { PoTooltipBaseDirective } from './po-tooltip-base.directive';\nimport { PoTooltipControlPositionService } from './po-tooltip-control-position.service';\n\n/**\n * @docsExtends PoTooltipBaseDirective\n *\n * @example\n *\n * <example name=\"po-tooltip-basic\" title=\"PO Tooltip Basic\" >\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-labs\" title=\"PO Tooltip Labs\" >\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-new-user\" title=\"PO Tooltip - New User\" >\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts\"> </file>\n * </example>\n *\n */\n@Directive({\n  selector: '[p-tooltip]',\n  providers: [PoTooltipControlPositionService]\n})\nexport class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {\n  private arrowDirection: string;\n  private divArrow;\n  private divContent;\n  private isHidden: boolean;\n  private lastTooltipText: string;\n  private textContent;\n  private tooltipContent;\n  private tooltipOffset: number = 8;\n\n  private eventListenerFunction: () => void;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private poControlPosition: PoTooltipControlPositionService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.initScrollEventListenerFunction();\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    setTimeout(() => {\n      if (this.tooltip) {\n        this.tooltipContent ? this.showTooltip() : this.createTooltip();\n\n        this.removeArrow(this.arrowDirection);\n\n        this.poControlPosition.adjustPosition(this.tooltipPosition);\n        this.arrowDirection = this.poControlPosition.getArrowDirection();\n\n        this.addArrow(this.arrowDirection);\n\n        this.lastTooltipText = this.tooltip;\n      }\n    });\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    // necessita do timeout para conseguir adicionar \".po-invisible\", pois quando tem alguns elementos\n    // prÃ³ximos com tooltips e ficar passando o mouse em cima, os mesmos nÃ£o estavam ficando invisiveis.\n    setTimeout(() => {\n      this.hideTooltip();\n    });\n  }\n\n  private addArrow(arrowDirection) {\n    this.renderer.addClass(this.divArrow, `po-arrow-${arrowDirection}`);\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  // Monta a estrutura do tooltip\n  private createTooltip() {\n    this.tooltipContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipContent, 'po-tooltip');\n\n    this.divArrow = this.renderer.createElement('div');\n    this.renderer.addClass(this.divArrow, 'po-tooltip-arrow');\n\n    this.divContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.divContent, 'po-tooltip-content');\n\n    this.textContent = this.renderer.createText(this.tooltip);\n\n    this.renderer.appendChild(this.divContent, this.textContent);\n    this.renderer.appendChild(this.tooltipContent, this.divArrow);\n    this.renderer.appendChild(this.tooltipContent, this.divContent);\n    this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipContent);\n\n    this.poControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);\n\n    this.addScrollEventListener();\n  }\n\n  private initScrollEventListenerFunction() {\n    this.eventListenerFunction = () => {\n      if (!this.isHidden) {\n        setTimeout(() => {\n          this.poControlPosition.adjustPosition(this.tooltipPosition);\n        });\n      }\n    };\n  }\n\n  private hideTooltip() {\n    if (this.tooltipContent) {\n      this.renderer.addClass(this.tooltipContent, 'po-invisible');\n      this.isHidden = true;\n\n      this.removeScrollEventListener();\n    }\n  }\n\n  private removeArrow(arrowDirection) {\n    if (this.elementRef.nativeElement.querySelector(`.po-arrow-${arrowDirection}`)) {\n      this.renderer.removeClass(this.divArrow, `po-arrow-${arrowDirection}`);\n    }\n  }\n\n  private removeScrollEventListener() {\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipContent, 'po-invisible');\n    this.updateTextContent();\n    this.isHidden = false;\n\n    this.addScrollEventListener();\n  }\n\n  private updateTextContent() {\n    if (this.lastTooltipText !== this.tooltip) {\n      this.renderer.removeChild(this.divContent, this.textContent);\n      this.textContent = this.renderer.createText(this.tooltip);\n      this.renderer.appendChild(this.divContent, this.textContent);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTooltipDirective } from './po-tooltip.directive';\n\n/**\n * @description\n *\n * MÃ³dulo da diretiva Po-Tooltip.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoTooltipDirective],\n  exports: [PoTooltipDirective]\n})\nexport class PoTooltipModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoButtonGroupItem } from './po-button-group-item.interface';\nimport { PoButtonGroupToggle } from './po-button-group-toggle.enum';\n\nconst PO_TOGGLE_TYPE_DEFAULT = 'none';\n\n/**\n * @description\n *\n * O componente `po-button-group` Ã© formado por um conjunto de botÃµes distribuÃ­dos horizontalmente.\n * Cada botÃ£o do grupo Ã© tratado de forma individual, recebendo assim um rÃ³tulo, uma aÃ§Ã£o bem como se deverÃ¡ estar habilitado ou nÃ£o.\n *\n * Este componente alÃ©m de servir como um agrupador de botÃµes para aÃ§Ã£o, tambÃ©m permite que sejam utilizados\n * para seleÃ§Ãµes multiplas e Ãºnicas.\n *\n * O grupo de botÃµes deve ser utilizado para organizar as aÃ§Ãµes de maneira uniforme e transmitir a ideia de que os botÃµes fazem\n * parte de um mesmo contexto.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite usar o `po-button-group` com apenas 1 aÃ§Ã£o, para isso utilize o `po-button`.\n * - Procure utilizar no mÃ¡ximo 3 aÃ§Ãµes para cada `po-button-group`.\n *\n * > As recomendaÃ§Ãµes do `po-button` tambÃ©m valem para o `po-button-group`.\n */\n@Directive()\nexport class PoButtonGroupBaseComponent {\n  private _small?: boolean = false;\n  private _toggle?: string = PO_TOGGLE_TYPE_DEFAULT;\n\n  /** Lista de botÃµes. */\n  @Input('p-buttons') buttons: Array<PoButtonGroupItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Torna o grupo de botÃµes com tamanho minificado.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de seleÃ§Ã£o de botÃµes.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoMultiselectFilterMode`.\n   *\n   * @default `none`\n   */\n  @Input('p-toggle') set toggle(value: string) {\n    this._toggle = (<any>Object).values(PoButtonGroupToggle).includes(value) ? value : PO_TOGGLE_TYPE_DEFAULT;\n\n    this.checkSelecteds(this._toggle);\n  }\n\n  get toggle(): string {\n    return this._toggle;\n  }\n\n  onButtonClick(buttonClicked: PoButtonGroupItem, buttonIndex: number) {\n    if (this.toggle === PoButtonGroupToggle.Single) {\n      this.buttons.forEach(\n        (button, index) => (button.selected = index === buttonIndex ? !buttonClicked.selected : false)\n      );\n    } else if (this.toggle === PoButtonGroupToggle.Multiple) {\n      buttonClicked.selected = !buttonClicked.selected;\n    }\n  }\n\n  private checkSelecteds(toggleMode: string) {\n    if (toggleMode === PoButtonGroupToggle.None) {\n      this.deselectAllButtons();\n    } else if (toggleMode === PoButtonGroupToggle.Single) {\n      const hasMoreOneSelected = this.buttons.filter(button => button.selected).length > 1;\n      if (hasMoreOneSelected) {\n        this.deselectAllButtons();\n      }\n    }\n  }\n\n  private deselectAllButtons() {\n    this.buttons.forEach(button => (button.selected = false));\n  }\n}\n","/**\n * @usedBy PoChartComponent\n *\n * @description\n *\n * *Enum* `PoChartType` para especificaÃ§Ã£o dos tipos de grÃ¡ficos.\n */\nexport enum PoChartType {\n  /**\n   * Exibe os dados em formato de rosca, dividindo em partes proporcionais.\n   */\n  Donut = 'donut',\n\n  /**\n   * O grÃ¡fico de *gauge* fornece como opÃ§Ã£o uma melhor relaÃ§Ã£o de intensidade de dados que nos grÃ¡ficos de pizza padrÃ£o ou rosca, uma vez\n   * que o centro em branco pode ser usado para exibir dados adicionais relacionados.\n   */\n  Gauge = 'gauge',\n\n  /**\n   * Exibe os dados em formato circular, dividindo proporcionalmente em fatias.\n   */\n  Pie = 'pie'\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoButtonGroupBaseComponent } from './po-button-group-base.component';\n\n/**\n * @docsExtends PoButtonGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-group-basic\" title=\"PO Button Group Basic\">\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-labs\" title=\"PO Button Group Labs\">\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.ts\"> </file>\n * </example>\n *\n *\n * <example name=\"po-button-group-attendance\" title=\"PO Button Group - Attendance\">\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.html\"> </file>\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-post\" title=\"PO Button Group - Post\">\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.html\"> </file>\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button-group',\n  templateUrl: './po-button-group.component.html'\n})\nexport class PoButtonGroupComponent extends PoButtonGroupBaseComponent {\n  parentRef: any;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n\n    // Get instance of parent to execute the actions\n    this.parentRef = viewRef['_hostView'][8];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoButtonModule } from './../po-button/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoButtonGroupComponent } from './po-button-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button-group.\n */\n@NgModule({\n  imports: [CommonModule, PoButtonModule, PoTooltipModule],\n  declarations: [PoButtonGroupComponent],\n  exports: [PoButtonGroupComponent]\n})\nexport class PoButtonGroupModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n  private language = 'pt';\n\n  private months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  private shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  private monthLabel = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  private yearLabel = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  getMonth(month: number) {\n    return this.months[month][this.language];\n  }\n\n  getMonthLabel() {\n    return this.monthLabel[this.language];\n  }\n\n  getMonthsArray() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.language]);\n    }\n    return arrMonths;\n  }\n\n  getWeekDays(day: number) {\n    return this.shortWeekDays[day][this.language];\n  }\n\n  getWeekDaysArray() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.language]);\n    }\n    return arrWeekDays;\n  }\n\n  getYearLabel() {\n    return this.yearLabel[this.language];\n  }\n\n  setLanguage(language: string) {\n    if (language && language.length >= 2) {\n      language = language.toLowerCase().slice(0, 2);\n      this.language = language === 'pt' || language === 'en' || language === 'es' ? language : 'pt';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { sortValues } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar o tratamento dos formatos de data e hora.\n */\n@Injectable()\nexport class PoDateService {\n  private readonly dateRegex = new RegExp(\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' + '(?:0[1-9]|1[0-2])-' + '(?:0[1-9]|[12]\\\\d|3[01])$'\n  );\n\n  private readonly isoRegex = new RegExp(\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n      '(?:0[1-9]|1[0-2])-' +\n      '(?:0[1-9]|[12]\\\\d|3[01])' +\n      'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n      '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n      '(?:|:?[0-5]\\\\d)$'\n  );\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter datas do formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` para o formato `Date`.\n   *\n   * @param dateString Data no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param minDate Definir `true` caso seja `minDate`.\n   * @param maxDate Definir `true` caso seja `maxDate`.\n   */\n  convertIsoToDate(dateString: string, minDate: boolean, maxDate: boolean): Date {\n    if (dateString) {\n      const { year, month, day } = this.getDateFromIso(dateString);\n\n      if (minDate) {\n        const date = new Date(year, month - 1, day, 0, 0, 0);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else if (maxDate) {\n        const date = new Date(year, month - 1, day, 23, 59, 59);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else {\n        const miliseconds = Date.parse(dateString);\n        const timezone = new Date().getTimezoneOffset() * 60000;\n        return new Date(miliseconds + timezone);\n      }\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter data do formato `Date` para o formato `yyyy-mm-dd`.\n   *\n   * @param date Data no formato `Date`.\n   */\n  convertDateToISO(date: Date) {\n    if (date) {\n      const fullYear = date.getFullYear();\n      const getMonth = date.getMonth() + 1;\n      const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n      const month = getMonth < 10 ? '0' + getMonth : getMonth;\n      const year = this.formatYear(fullYear);\n      return year + '-' + month + '-' + day;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por adicionar zeros a esquerda do anos em formato string.\n   *\n   * @param year Ano a ser validado.\n   */\n  formatYear(year: number) {\n    if (year > 999) {\n      return year.toString();\n    }\n\n    if (year > 99 && year < 1000) {\n      return `0${year}`;\n    }\n\n    if (year > 9 && year < 100) {\n      return `00${year}`;\n    }\n\n    if (year >= 0 && year < 10) {\n      return `000${year}`;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia, mÃªs e ano separados em formato de objeto.\n   *\n   * @param isoDate Ano em formato string.\n   */\n  getDateFromIso(isoDate: string): { year: number; month: number; day: number } {\n    const day = parseInt(isoDate.substring(8, 10), 10);\n    const month = parseInt(isoDate.substring(5, 7), 10);\n    const year = parseInt(isoDate.substring(0, 4), 10);\n\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar a data com a hora definida para `00:00:00` caso `isMinDate` for igual a `true` ou `23:59:59`\n   * caso `isMindate` seja igual a `false` .\n   *\n   * @param date Data no formato `Date` ou `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param isMinDate Caso `true` aplica `00:00:00`, caso `false` aplica `23:59:59` a hora da data informada.\n   */\n  getDateForDateRange(date: any, isMinDate: boolean) {\n    const lastHour = isMinDate ? [0, 0, 0] : [23, 59, 59];\n    if (date instanceof Date) {\n      const { year, month, day } = this.splitDate(date);\n      const validDate = new Date(year, month, day, ...lastHour);\n      this.setYearFrom0To100(validDate, year);\n      return validDate;\n    } else if (this.isValidIso(date)) {\n      return this.convertIsoToDate(date, isMinDate, !isMinDate);\n    }\n  }\n\n  /**\n   * Retorna `true` caso o perÃ­odo seja vÃ¡lido, para isso a primeira data deve ser maior que a segunda data.\n   * @param dateA primeira data\n   * @param dateB segunda data\n   */\n  isDateRangeValid(dateA: string = '', dateB: string = ''): boolean {\n    const dateASplitted = dateA.split('-').map(item => parseInt(item, 10));\n    const dateBSplitted = dateB.split('-').map(item => parseInt(item, 10));\n\n    for (let index = 0; index <= dateASplitted.length; index++) {\n      if (dateASplitted[index] > dateBSplitted[index]) {\n        return true;\n      } else if (dateASplitted[index] < dateBSplitted[index]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` ou `yyyy-mm-dd`.\n   *\n   * @param stringDate Data.\n   */\n  isValidIso(stringDate: string) {\n    return this.dateRegex.test(stringDate) || this.isoRegex.test(stringDate);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por corrigir a data caso a mesma esteja entre os anos 0 e 99.\n   *\n   * @param date Data.\n   * @param year .\n   */\n  setYearFrom0To100(date: Date, year: number) {\n    if (year >= 0 && year < 100) {\n      date.setFullYear(year);\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por ordenar duas datas.\n   *\n   * @param leftSide Primeira data a ser comparada.\n   * @param rightSide Segunda data a ser comparada.\n   * @param ascending Determina se serÃ¡ em ordem crescente ou decrescente.\n   */\n  sortDate(leftSide: string | Date, rightSide: string | Date, ascending: boolean): number {\n    return sortValues(this.validateDate(leftSide), this.validateDate(rightSide), ascending);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia , mÃªs e ano de uma data informada.\n   *\n   * @param date Valor da data.\n   */\n  splitDate(date: Date) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ entre a `minDate` e `maxDate`.\n   *\n   * @param date Data a ser validada.\n   * @param minDate Data inicial.\n   * @param maxDate Data final.\n   */\n  validateDateRange(date: Date, minDate: Date, maxDate: Date) {\n    if (minDate && maxDate) {\n      return date >= minDate && date <= maxDate;\n    } else if (minDate && !maxDate) {\n      return date >= minDate;\n    } else if (!minDate && maxDate) {\n      return date <= maxDate;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se a data foi informada nos padrÃµes 'yyyy-mm-dd', 'yyyy-mm-ddThh:mm:ss+|-hh:mm' ou\n   * 'Date' padrÃ£o do javascript.\n   *\n   * @param date Data que serÃ¡ validada.\n   */\n  private validateDate(date: string | Date) {\n    const validDate = date instanceof Date ? this.convertDateToISO(date) : date;\n\n    return this.isValidIso(validDate) ? validDate : undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoDateService } from './po-date.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-date`.\n */\n@NgModule({\n  providers: [PoDateService],\n  bootstrap: []\n})\nexport class PoDateTimeModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoDateService } from '../../services/po-date';\n\nconst poCalendarLocales = ['pt', 'en', 'es'];\nconst poCalendarLocaleDefault = 'pt';\n\n/**\n * @description\n *\n * O `po-calendar` Ã© um componente para seleÃ§Ã£o de datas. Ele permite uma fÃ¡cil navegaÃ§Ã£o clicando nas setas\n * de direcionamento e nos *labels* do ano ou mÃªs.\n *\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * this.date = '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * this.date = '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * this.date = new Date(2017, 10, 28);\n * ```\n *\n * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\n * formato **Data (E8601DAw.): yyyy-mm-dd**.\n *\n * Importante:\n *\n * - Caso seja definida uma data fora do range da data mÃ­nima e data mÃ¡xima via *ngModel* o componente mostrarÃ¡\n * a data desabilitada porÃ©m o *model* nÃ£o serÃ¡ alterado.\n * - Caso seja definida uma data invÃ¡lida a mesma nÃ£o serÃ¡ atribuÃ­da ao calendÃ¡rio porÃ©m o *model* manterÃ¡ a data invÃ¡lida.\n */\n@Directive()\nexport class PoCalendarBaseComponent {\n  private _locale: string;\n  private _maxDate: Date;\n  private _minDate: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeekDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  yearVisible: boolean = false;\n\n  protected currentMonthNumber: number;\n  protected date: Date;\n  protected dateIso: string;\n  protected lastDisplay: string;\n  protected onTouched: any = null;\n  protected propagateChange: any = null;\n  protected today: Date = new Date();\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   *\n   * @default `pt`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ¡xima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-max-date') set maxDate(maxDate: any) {\n    this._maxDate = this.poDate.getDateForDateRange(maxDate, false);\n  }\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ­nima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-min-date') set minDate(minDate: any) {\n    this._minDate = this.poDate.getDateForDateRange(minDate, true);\n  }\n  get minDate() {\n    return this._minDate;\n  }\n\n  /** Evento disparado ao selecionar um dia do calendÃ¡rio. */\n  @Output('p-change') change = new EventEmitter<string>();\n\n  constructor(public poDate: PoDateService, public poCalendarLangService: PoCalendarLangService) {}\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeekDays = this.poCalendarLangService.getWeekDaysArray();\n    this.displayMonths = this.poCalendarLangService.getMonthsArray();\n    this.displayMonth = this.displayMonths[this.displayMonthNumber];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst poCalendarServiceFirstWeekDayDefault: number = 0;\n\n@Injectable()\nexport class PoCalendarService {\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if (typeof month !== 'number' || month < 0 || month > 11) {\n      throw Error('month must be a number (Jan is 0)');\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n\n    if (year >= 0 && year < 100) {\n      date.setFullYear(year);\n    }\n\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while (date.getMonth() <= month && date.getFullYear() === year);\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function (date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== poCalendarServiceFirstWeekDayDefault) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCalendarBaseComponent } from './po-calendar-base.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\n/* istanbul ignore next */\nconst providers = [\n  PoCalendarService,\n  PoCalendarLangService,\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoCalendarComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoCalendarComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoCalendarBaseComponent\n *\n * @example\n *\n * <example name=\"po-calendar-basic\" title=\"PO Calendar Basic\" >\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.html\"> </file>\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-labs\" title=\"PO Calendar Labs\" >\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.html\"> </file>\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-ticket-sales\" title=\"PO Calendar - Ticket Sales\" >\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html\"> </file>\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers\n})\nexport class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit {\n  constructor(\n    private poCalendarService: PoCalendarService,\n    poCalendarLangService: PoCalendarLangService,\n    poDate: PoDateService\n  ) {\n    super(poDate, poCalendarLangService);\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return displayValue === propertyValue ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    return this.getDayColor(date, 'background');\n  }\n\n  getDayForegroundColor(date: Date) {\n    return this.getDayColor(date, 'foreground');\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return displayValue === propertyValue ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getMonthLabel() {\n    return this.poCalendarLangService.getMonthLabel();\n  }\n\n  getYearLabel() {\n    return this.poCalendarLangService.getYearLabel();\n  }\n\n  onNextMonth() {\n    this.displayMonthNumber < 11\n      ? this.updateDisplay(this.displayYear, this.displayMonthNumber + 1)\n      : this.updateDisplay(this.displayYear + 1, 0);\n  }\n\n  onPreviousMonth() {\n    this.displayMonthNumber > 0\n      ? this.updateDisplay(this.displayYear, this.displayMonthNumber - 1)\n      : this.updateDisplay(this.displayYear - 1, 11);\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    this.date = date;\n    this.dateIso = this.poDate.convertDateToISO(date);\n    if (this.propagateChange) {\n      this.propagateChange(this.dateIso);\n    }\n    this.change.emit(this.dateIso);\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.writeDate(value);\n    } else {\n      this.date = undefined;\n      this.updateDate(this.today);\n    }\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return (\n        date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  private getDecadeArray(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  private getColorForDate(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\n      ? `po-calendar-box-${local}-selected`\n      : `po-calendar-box-${local}-selected-disabled`;\n  }\n\n  private getColorForDateRange(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\n      ? `po-calendar-box-${local}`\n      : `po-calendar-box-${local}-disabled`;\n  }\n\n  private getColorForToday(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\n      ? `po-calendar-box-${local}-today`\n      : `po-calendar-box-${local}-today-disabled`;\n  }\n\n  private getDayColor(date: Date, local: string) {\n    if (this.equalsDate(date, this.date)) {\n      return this.getColorForDate(date, local);\n    } else if (this.equalsDate(date, this.today)) {\n      return this.getColorForToday(date, local);\n    } else {\n      return this.getColorForDateRange(date, local);\n    }\n  }\n\n  private init() {\n    this.date && this.poDate.isValidIso(this.poDate.convertDateToISO(this.date))\n      ? this.updateDate(this.date)\n      : this.updateDate(this.today);\n    this.initializeLanguage();\n    this.selectDay();\n  }\n\n  private selectDateFromDate(date: Date) {\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private selectDateFromIso(stringDate: string) {\n    const { year, month, day } = this.poDate.getDateFromIso(stringDate);\n    const date = new Date(year, month - 1, day);\n    this.poDate.setYearFrom0To100(date, year);\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private updateDate(date: Date) {\n    if (date) {\n      this.currentMonthNumber = date.getMonth();\n      this.currentYear = date.getFullYear();\n      this.updateDisplay(this.currentYear, this.currentMonthNumber);\n    }\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getDecadeArray(year);\n  }\n\n  private writeDate(value: any) {\n    value instanceof Date ? this.selectDateFromDate(value) : this.writeDateIso(value);\n    this.updateDate(this.date);\n  }\n\n  private writeDateIso(value: any) {\n    this.poDate.isValidIso(value) ? this.selectDateFromIso(value) : (this.date = undefined);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoCalendarComponent } from './po-calendar.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\n\n/**\n * @description\n * MÃ³dulo do componente `po-calendar`.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoCalendarComponent],\n  exports: [PoCalendarComponent],\n  providers: [PoCalendarLangService, PoCalendarService]\n})\nexport class PoCalendarModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToInt, isTypeof } from '../../utils/util';\n\nimport { PoChartGaugeSerie } from './po-chart-types/po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from './enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-types/po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-types/po-chart-pie/po-chart-pie-series.interface';\n\nconst poChartDefaultHeight = 400;\nconst poChartMinHeight = 200;\nconst poChartTypeDefault = PoChartType.Pie;\n\nexport type PoChartSeries = Array<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>;\n\n/**\n * @description\n *\n * O `po-chart` Ã© um componente para renderizaÃ§Ã£o de dados atravÃ©s de grÃ¡ficos, com isso facilitando a compreensÃ£o e tornando a\n * visualizaÃ§Ã£o destes dados mais agradÃ¡vel.\n *\n * AtravÃ©s de suas principais propriedades Ã© possÃ­vel definir o tipo de grÃ¡fico, uma altura e um tÃ­tulo.\n *\n * AlÃ©m disso, tambÃ©m Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada ao clicar em determinado elemento do grÃ¡fico\n * e outra que serÃ¡ executada ao passar o *mouse* sobre o elemento.\n *\n * #### Boas prÃ¡ticas\n *\n * - Para que o grÃ¡fico nÃ£o fique ilegÃ­vel e incompreensÃ­vel, evite uma quantia excessiva de sÃ©ries.\n * - Para exibir a intensidade de um Ãºnico dado dÃª preferÃªncia ao tipo `gauge`.\n */\n@Directive()\nexport abstract class PoChartBaseComponent {\n  private _height: number;\n  private _series: Array<PoDonutChartSeries | PoPieChartSeries> | PoChartGaugeSerie;\n  private _type: PoChartType = poChartTypeDefault;\n\n  // manipulaÃ§Ã£o das sÃ©ries tratadas internamente para preservar 'p-series';\n  protected chartSeries: PoChartSeries;\n\n  public readonly poChartType = PoChartType;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do grÃ¡fico.\n   *\n   * O valor padrÃ£o dos grÃ¡ficos sÃ£o:\n   * - para o tipo *gauge*: `200px`;\n   * - para os demais tipos: `400px`.\n   *\n   * > O valor mÃ­nimo aceito nesta propriedade Ã© 200.\n   *\n   * @default `400px`\n   */\n  @Input('p-height') set height(value: number) {\n    const intValue = convertToInt(value);\n    let height: number;\n\n    if (isTypeof(value, 'number')) {\n      height = intValue <= poChartMinHeight ? poChartMinHeight : intValue;\n    } else {\n      height = this.setDefaultHeight();\n    }\n\n    this._height = height;\n\n    this.rebuildComponent();\n  }\n\n  get height(): number {\n    return this._height || this.setDefaultHeight();\n  }\n\n  /**\n   * @description\n   *\n   * Define os elementos do grÃ¡fico que serÃ£o criados dinamicamente.\n   *\n   * > A coleÃ§Ã£o de objetos deve implementar alguma das interfaces abaixo:\n   * - `PoDonutChartSeries`\n   * - `PoPieChartSeries`\n   * - `PoChartGaugeSerie`\n   */\n  @Input('p-series') set series(value: PoChartGaugeSerie | Array<PoDonutChartSeries | PoPieChartSeries>) {\n    this._series = value || [];\n\n    this.chartSeries = Array.isArray(this._series)\n      ? [...this._series]\n      : this.transformObjectToArrayObject(this._series);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  /** Define o tÃ­tulo do grÃ¡fico. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de grÃ¡fico.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoChartType`.\n   *\n   * @default `PoChartType.Pie`\n   */\n  @Input('p-type') set type(value: PoChartType) {\n    this._type = (<any>Object).values(PoChartType).includes(value) ? value : poChartTypeDefault;\n\n    this.rebuildComponent();\n  }\n\n  get type(): PoChartType {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento executado quando o usuÃ¡rio clicar sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-click')\n  seriesClick = new EventEmitter<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento executado quando o usuÃ¡rio passar o *mouse* sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-hover')\n  seriesHover = new EventEmitter<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>();\n\n  onSeriesClick(event: any): void {\n    this.seriesClick.emit(event);\n  }\n\n  onSeriesHover(event: any): void {\n    this.seriesHover.emit(event);\n  }\n\n  private setDefaultHeight() {\n    return this.type === PoChartType.Gauge ? poChartMinHeight : poChartDefaultHeight;\n  }\n\n  private transformObjectToArrayObject(serie: PoChartGaugeSerie) {\n    return typeof serie === 'object' && Object.keys(serie).length ? [{ ...serie }] : [];\n  }\n\n  abstract rebuildComponent(): void;\n}\n","// Array de cores para grÃ¡ficos definido pela equipe de UX PO.\nexport const PoChartColors = [\n  ['#29B6C5'],\n  ['#0C6C94', '#29B6C5'],\n  ['#0C6C94', '#29B6C5', '#C9ECF0'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2', '#C9ECF0'],\n  ['#0C6C94', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],\n  ['#0C6C94', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],\n  ['#0C6C94', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],\n  [\n    '#0C6C94',\n    '#00BAD5',\n    '#00A7C7',\n    '#0197B8',\n    '#0088AC',\n    '#23789F',\n    '#2B6992',\n    '#315C87',\n    '#364E7C',\n    '#36436F',\n    '#32285C'\n  ],\n  [\n    '#0C6C94',\n    '#00BAD5',\n    '#00A7C7',\n    '#0197B8',\n    '#0088AC',\n    '#23789F',\n    '#2B6992',\n    '#315C87',\n    '#364E7C',\n    '#36436F',\n    '#333565',\n    '#32285C'\n  ]\n];\n\n// Cores que serÃ¡ utilizado texto preto\nexport const PoSeriesTextBlack = ['#94DAE2', '#C9ECF0'];\n","const poChartAnimationDurationTime = 1500;\n\nexport const poChartAngleStepInterval = (Math.PI * 2) / Math.floor(poChartAnimationDurationTime / 60);\nexport const poChartCompleteCircle = 0.0001;\nexport const poChartGaugeStartAngle = -Math.PI;\nexport const poChartPadding: number = 24;\nexport const poChartStartAngle = -Math.PI / 2;\n\n// tamanho da largura da serie proporcional ao grafico do tipo Donut, o valor 0.27 fica proximo de 32px\nexport const poChartDonutSerieWidth = 0.27;\n\n// tamanho da largura da serie proporcional ao grafico do tipo Gauge, o valor 0.04 fica proximo de 8px\nexport const poChartGaugeSerieWidth = 0.06;\n","import { ElementRef, ViewChild, Directive } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartGaugeSerie } from './po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from '../enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-pie/po-chart-pie-series.interface';\n\nconst Padding: number = 24;\n\n/* tslint:disable:directive-class-suffix */\n@Directive()\nexport abstract class PoChartDynamicTypeComponent {\n  protected windowResizeListener: () => void;\n  protected windowScrollListener: () => void;\n\n  centerX: number;\n  chartElementCategory: any;\n  chartElementDescription: any;\n  chartElementValue: any;\n  chartHeader: number;\n  chartLegend: number;\n  chartWrapper: number;\n  colors: Array<string>;\n  height: number;\n  innerRadius: number = 0;\n  onSerieClick: Subject<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie> = new Subject();\n  onSerieHover: Subject<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie> = new Subject();\n  series: Array<any> = [];\n  svgElement: HTMLObjectElement;\n  svgHeight: number;\n  target: HTMLInputElement & EventTarget;\n  tooltipElement: HTMLObjectElement;\n  tooltipText: string;\n  totalValue: number;\n  type: PoChartType;\n\n  @ViewChild('chartBody', { static: true }) chartBody: ElementRef;\n\n  @ViewChild('svgContainer', { static: true }) svgContainer: ElementRef;\n\n  get isChartGaugeType(): boolean {\n    return this.type === PoChartType.Gauge;\n  }\n\n  calculateSVGContainerDimensions(chartWrapperElement: number, chartHeaderElement: number, chartLegendElement: number) {\n    const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - Padding * 2;\n\n    this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;\n    this.centerX = chartWrapperElement / 2;\n  }\n\n  calculateTotalValue() {\n    this.totalValue =\n      this.type === PoChartType.Gauge\n        ? 100\n        : this.series.reduce((previousValue, serie) => previousValue + serie.value, 0);\n  }\n}\n","import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { convertNumberToDecimal } from '../../../../utils/util';\n\nimport {\n  poChartAngleStepInterval,\n  poChartCompleteCircle,\n  poChartDonutSerieWidth,\n  poChartGaugeSerieWidth,\n  poChartPadding,\n  poChartStartAngle\n} from './po-chart-circular.constant';\nimport { PoChartDynamicTypeComponent } from '../po-chart-dynamic-type.component';\nimport { PoChartGaugeSerie } from '../po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from '../../enums/po-chart-type.enum';\nimport { PoCircularChartSeries } from './po-chart-circular-series.interface';\nimport { PoDonutChartSeries } from '../po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from '../po-chart-pie/po-chart-pie-series.interface';\nimport { PoSeriesTextBlack } from '../../po-chart-colors.constant';\n\nconst poChartBlackColor = '#000000';\nconst poChartWhiteColor = '#ffffff';\n\nexport class PoChartCircular extends PoChartDynamicTypeComponent implements OnDestroy, OnInit {\n  chartItemStartAngle = poChartStartAngle;\n  windowResizeEmitter: Subject<any> = new Subject();\n\n  // tslint:disable-next-line: use-type-alias\n  protected _series: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>;\n\n  private animationRunning: boolean;\n  private chartItemEndAngle: number;\n  private chartItemsEndAngleList: Array<number> = [];\n  private svgPathElementsList: Array<string> = [];\n  private svgTextElementsList: Array<string> = [];\n\n  set series(value: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>) {\n    this._series = this.getSeriesWithValue(value);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  constructor(protected el: ElementRef, private ngZone: NgZone, private renderer: Renderer2) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n    this.removeWindowScrollListener();\n    this.animationRunning = false;\n  }\n\n  ngOnInit() {\n    this.chartInitSetup();\n    this.setEventListeners();\n  }\n\n  removeTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.addClass(this.tooltipElement, 'po-invisible');\n    }\n  }\n\n  protected drawPath(path, chartItemStartAngle, chartItemEndAngle) {\n    const largeArc = chartItemEndAngle - chartItemStartAngle > Math.PI;\n\n    const sinAlpha = Math.sin(chartItemStartAngle);\n    const cosAlpha = Math.cos(chartItemStartAngle);\n\n    const sinBeta = Math.sin(chartItemEndAngle);\n    const cosBeta = Math.cos(chartItemEndAngle);\n\n    const startX = this.centerX + cosAlpha * this.centerX;\n    const startY = this.centerX + sinAlpha * this.centerX;\n\n    const endX = this.centerX + cosBeta * this.centerX;\n    const endY = this.centerX + sinBeta * this.centerX;\n\n    const startInnerX = this.centerX + cosAlpha * this.innerRadius;\n    const startInnerY = this.centerX + sinAlpha * this.innerRadius;\n\n    const endInnerX = this.centerX + cosBeta * this.innerRadius;\n    const endInnerY = this.centerX + sinBeta * this.innerRadius;\n\n    const halfGaugeCoordinates = [\n      'M',\n      startX,\n      startY,\n      'A',\n      this.centerX,\n      this.centerX,\n      0,\n      '0,1',\n      endX,\n      endY,\n      'A',\n      1,\n      1,\n      0,\n      '0,1',\n      endInnerX,\n      endInnerY,\n      'A',\n      this.innerRadius,\n      this.innerRadius,\n      0,\n      '0,0',\n      startInnerX,\n      startInnerY,\n      'A',\n      1,\n      1,\n      0,\n      '0,1',\n      startX,\n      startY,\n      'Z'\n    ].join(' ');\n\n    const pathCoordinates = [\n      'M',\n      startX,\n      startY,\n      'A',\n      this.centerX,\n      this.centerX,\n      0,\n      largeArc ? '1,1' : '0,1',\n      endX,\n      endY,\n      'L',\n      endInnerX,\n      endInnerY,\n      'A',\n      this.innerRadius,\n      this.innerRadius,\n      0,\n      largeArc ? '1,0' : '0,0',\n      startInnerX,\n      startInnerY,\n      'Z'\n    ].join(' ');\n\n    return path.setAttribute('d', this.isChartGaugeType ? halfGaugeCoordinates : pathCoordinates);\n  }\n\n  protected getSeriesWithValue(series: Array<PoCircularChartSeries | PoChartGaugeSerie>) {\n    const newSeries = [];\n\n    series.forEach((serie, index) => {\n      if (serie.value > 0) {\n        newSeries.push({ ...serie, color: this.colors[index] });\n      }\n    });\n\n    return newSeries;\n  }\n\n  private animationSetup() {\n    this.chartItemEndAngle = this.chartItemsEndAngleList[0];\n    this.animationRunning = true;\n    this.drawPathInit();\n  }\n\n  private appendGaugeBackgroundPathElement(svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n    this.renderer.setAttribute(svgPath, 'class', 'po-chart-gauge-base-path');\n    svgPathsWrapper.appendChild(svgPath);\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n  }\n\n  private calculateAngleRadians() {\n    this.series.forEach(\n      (serie, index) => (this.chartItemsEndAngleList[index] = this.calculateEndAngle(serie.value, this.totalValue))\n    );\n  }\n\n  private calculateCurrentEndAngle(angleCurrentPosition: number) {\n    const isSerieDrawCompleted =\n      this.chartItemStartAngle + angleCurrentPosition > this.chartItemStartAngle + this.chartItemEndAngle;\n\n    if (isSerieDrawCompleted) {\n      return this.chartItemStartAngle + this.chartItemEndAngle - poChartCompleteCircle;\n    } else {\n      return this.chartItemStartAngle + angleCurrentPosition;\n    }\n  }\n\n  private calculateEndAngle(value: number, totalValue: number): number {\n    const endAngle = (value / totalValue) * (Math.PI * 2);\n\n    return this.isChartGaugeType ? endAngle / 2 : endAngle;\n  }\n\n  private calculateSVGDimensions() {\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\n\n    this.innerRadius = this.setInnerRadius(this.type);\n  }\n\n  private changeTooltipPosition(event: MouseEvent) {\n    if (this.tooltipElement && this.tooltipElement.classList.contains('po-invisible')) {\n      this.showTooltip();\n    }\n\n    const tooltipPositions = this.setTooltipPositions(event);\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\n  }\n\n  private chartInitSetup() {\n    this.calculateSVGDimensions();\n    this.calculateTotalValue();\n    this.calculateAngleRadians();\n    this.createSVGElements();\n    this.animationSetup();\n  }\n\n  private checkingIfScrollsWithPoPage() {\n    const poPageContent = document.getElementsByClassName('po-page-content');\n\n    return poPageContent.length ? poPageContent[0] : window;\n  }\n\n  private createPath(serie: PoCircularChartSeries | PoChartGaugeSerie, svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n\n    this.renderer.setAttribute(svgPath, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgPath, 'fill', serie.color);\n\n    this.setElementAttributes(svgPath, serie);\n\n    svgPathsWrapper.appendChild(svgPath);\n\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n\n    this.svgPathElementsList.push(svgPath);\n  }\n\n  private createPaths() {\n    const svgPathsWrapper = this.renderer.createElement('svg:g', 'svg');\n\n    if (this.isChartGaugeType) {\n      this.appendGaugeBackgroundPathElement(svgPathsWrapper);\n      // Tratamento para evitar que o path desenhe os arcos referentes ao border radius do path.\n      if (this.isSerieValueEqualZero()) {\n        return;\n      }\n    }\n\n    this.series.forEach(serie => this.createPath(serie, svgPathsWrapper));\n  }\n\n  private createText(serie: PoCircularChartSeries | PoChartGaugeSerie) {\n    const { value } = serie;\n\n    const svgG = this.renderer.createElement('svg:g', 'svg');\n    const svgText = this.renderer.createElement('svg:text', 'svg');\n\n    const fontSize = this.getFontSize();\n    const textColor = this.getTextColor(serie.color);\n\n    svgText.textContent = this.getPercentValue(value, this.totalValue) + '%';\n\n    this.renderer.setAttribute(svgText, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgText, 'fill', textColor);\n    this.renderer.setAttribute(svgText, 'font-size', fontSize);\n    this.renderer.setAttribute(svgText, 'fill-opacity', '0');\n\n    this.setElementAttributes(svgText, serie);\n\n    this.renderer.appendChild(svgG, svgText);\n\n    this.renderer.appendChild(this.svgElement, svgG);\n    this.svgTextElementsList.push(svgText);\n  }\n\n  private createTexts() {\n    if (this.type === PoChartType.Donut) {\n      this.series.forEach(serie => this.createText(serie));\n    }\n  }\n\n  private createSVGElements() {\n    const viewBoxHeight = this.isChartGaugeType\n      ? this.centerX + this.centerX * poChartGaugeSerieWidth\n      : this.chartWrapper;\n    const preserveAspectRatio = this.isChartGaugeType ? 'xMidYMax' : 'xMidYMin';\n\n    this.svgElement = this.renderer.createElement('svg:svg', 'svg');\n\n    this.renderer.setAttribute(this.svgElement, 'viewBox', `0 0 ${this.chartWrapper} ${viewBoxHeight}`);\n    this.renderer.setAttribute(this.svgElement, 'preserveAspectRatio', `${preserveAspectRatio} meet`);\n    this.renderer.setAttribute(this.svgElement, 'class', 'po-chart-svg-element');\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n\n    this.svgContainer.nativeElement.appendChild(this.svgElement);\n\n    this.createPaths();\n    this.createTexts();\n  }\n\n  private drawPathInit() {\n    if (!this.animationRunning) {\n      return;\n    } else {\n      this.ngZone.runOutsideAngular(() => this.drawSeries());\n    }\n  }\n\n  private drawSeries(currentSerieIndex: number = 0, angleCurrentPosition: number = 0) {\n    const isFinishedDrawingCurrentSeries = angleCurrentPosition > this.chartItemEndAngle;\n    const isFinishedDrawingAllSeries = currentSerieIndex === this.svgPathElementsList.length;\n\n    if (isFinishedDrawingAllSeries) {\n      return;\n    }\n\n    if (isFinishedDrawingCurrentSeries) {\n      this.chartItemStartAngle = this.chartItemStartAngle + this.chartItemEndAngle;\n      currentSerieIndex++;\n      this.chartItemEndAngle = this.chartItemsEndAngleList[currentSerieIndex];\n      angleCurrentPosition = 0;\n    } else {\n      angleCurrentPosition += poChartAngleStepInterval;\n\n      this.drawPath(\n        this.svgPathElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n\n      this.setTextProperties(\n        this.svgTextElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n    }\n\n    window.requestAnimationFrame(this.drawSeries.bind(this, currentSerieIndex, angleCurrentPosition));\n  }\n\n  private emitEventOnEnter(event: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie) {\n    this.onSerieHover.next(event);\n  }\n\n  private getFontSize() {\n    const fontSizePorcent = 0.04;\n\n    const fontSize = fontSizePorcent * this.chartWrapper;\n\n    return `${fontSize.toFixed(0)}px`;\n  }\n\n  private getPercentValue(value: number, totalValue: number) {\n    const percentValue = (value / totalValue) * 100;\n\n    const floatPercentValue = convertNumberToDecimal(percentValue, 2);\n\n    return String(floatPercentValue).replace('.', ',');\n  }\n\n  private getTextColor(color: string) {\n    if (PoSeriesTextBlack.includes(color)) {\n      return poChartBlackColor;\n    }\n\n    return poChartWhiteColor;\n  }\n\n  private getTooltipValue(value: number) {\n    if (this.type === PoChartType.Pie) {\n      return value.toString();\n    }\n\n    return this.getPercentValue(value, this.totalValue) + '%';\n  }\n\n  private isSerieValueEqualZero(): boolean {\n    return this.series.length && this.series[0].value === 0;\n  }\n\n  private onMouseClick() {\n    let serieOnClick: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie;\n\n    if (this.isChartGaugeType) {\n      const { color, ...serie } = this.series[0];\n      serieOnClick = serie;\n    } else {\n      serieOnClick = { category: this.chartElementCategory, value: this.chartElementValue };\n    }\n\n    this.onSerieClick.next(serieOnClick);\n  }\n\n  private onMouseEnter(event) {\n    let serieOnEnter: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie;\n\n    if (!this.isChartGaugeType) {\n      this.tooltipElement = this.chartBody.nativeElement.querySelector('.po-chart-tooltip');\n      this.chartElementCategory = event.target.getAttributeNS(null, 'data-tooltip-category');\n      this.chartElementValue = event.target.getAttributeNS(null, 'data-tooltip-value');\n      this.tooltipText = event.target.getAttributeNS(null, 'data-tooltip-text');\n      this.showTooltip();\n      this.changeTooltipPosition(event);\n\n      serieOnEnter = { category: this.chartElementCategory, value: this.chartElementValue };\n    } else {\n      const { color, ...serie } = this.series[0];\n\n      this.chartElementDescription = event.target.getAttributeNS(null, 'data-tooltip-category');\n      serieOnEnter = serie;\n    }\n\n    this.emitEventOnEnter(serieOnEnter);\n  }\n\n  private onWindowResize() {\n    this.calculateSVGDimensions();\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n    this.windowResizeEmitter.next();\n  }\n\n  private removeWindowResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n    }\n  }\n\n  private removeWindowScrollListener() {\n    if (this.windowScrollListener) {\n      this.windowScrollListener();\n    }\n  }\n\n  private setEventListeners() {\n    let chartSeries: Array<string> = this.el.nativeElement.querySelectorAll('.po-path-item');\n    chartSeries = Array.from(chartSeries);\n    chartSeries.forEach(serie => {\n      this.renderer.listen(serie, 'click', this.onMouseClick.bind(this));\n      this.renderer.listen(serie, 'mouseenter', this.onMouseEnter.bind(this));\n\n      if (!this.isChartGaugeType) {\n        this.renderer.listen(serie, 'mousemove', this.changeTooltipPosition.bind(this));\n        this.renderer.listen(serie, 'mouseleave', this.removeTooltip.bind(this));\n      }\n    });\n\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\n    this.windowScrollListener = this.renderer.listen(\n      this.checkingIfScrollsWithPoPage(),\n      'scroll',\n      this.removeTooltip.bind(this)\n    );\n  }\n\n  private setInnerRadius(type: PoChartType) {\n    let serieWidth;\n\n    switch (type) {\n      case PoChartType.Donut: {\n        serieWidth = poChartDonutSerieWidth;\n\n        break;\n      }\n      case PoChartType.Gauge: {\n        serieWidth = poChartGaugeSerieWidth;\n        break;\n      }\n      case PoChartType.Pie: {\n        return 0;\n      }\n    }\n\n    return this.centerX - this.centerX * serieWidth;\n  }\n\n  private setTextProperties(text, startAngle: number, endAngle: number) {\n    // necessÃ¡rio text.getClientRects().length para contornar erro de console causado no Firefox\n    if (this.type === PoChartType.Donut && text.getClientRects().length) {\n      // utilizado para recuperar o angulo do meio, entre o inicio e fim para centralizar o texto\n      const centerAngle = (startAngle + endAngle) / 2;\n      const textBox = text.getBBox();\n\n      const halfTextWidth = textBox.width / 2;\n      const halfTextHeight = textBox.height / 2;\n\n      // radius interno (circulo branco) + a metade da diferenÃ§a entre tamanho do centro e radius interno\n      const radius = this.innerRadius + (this.centerX - this.innerRadius) / 2;\n\n      const xCoordinate = radius * Math.cos(centerAngle) + this.centerX - halfTextWidth;\n      const yCoordinate = radius * Math.sin(centerAngle) + this.centerX + halfTextHeight / 2;\n      text.setAttribute('x', xCoordinate);\n      text.setAttribute('y', yCoordinate);\n      text.setAttribute('fill-opacity', '1');\n    }\n  }\n\n  private setTooltipPositions(event: MouseEvent) {\n    const displacement: number = 8;\n\n    return {\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\n    };\n  }\n\n  private setElementAttributes(svgElement, serie) {\n    const { value, category, tooltip, description } = serie;\n\n    this.renderer.setAttribute(svgElement, 'data-tooltip-value', `${value}`);\n\n    if (this.isChartGaugeType) {\n      this.renderer.setAttribute(svgElement, 'data-tooltip-description', description);\n    } else {\n      const tooltipValue = this.getTooltipValue(value);\n\n      this.renderer.setAttribute(svgElement, 'data-tooltip-category', category);\n      this.renderer.setAttribute(svgElement, 'data-tooltip-text', tooltip || `${category}: ${tooltipValue}`);\n    }\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipElement, 'po-invisible');\n  }\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { poChartStartAngle } from '../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-donut',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartDonutComponent extends PoChartCircular {\n  chartItemStartAngle: number = poChartStartAngle;\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  ViewChild\n} from '@angular/core';\n\nimport { convertNumberToDecimal } from '../../../../../utils/util';\n\nimport { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';\nimport { poChartGaugeSerieWidth } from '../../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-gauge-text-content',\n  templateUrl: './po-chart-gauge-text-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoChartGaugeTextContentComponent implements AfterViewInit {\n  serieValueConverted: string;\n  tooltip: string;\n\n  private _gaugeWidth: number;\n  private _serie: PoChartGaugeSerie;\n\n  @Input('p-gauge-width') set gaugeWidth(value: number) {\n    this._gaugeWidth = value;\n\n    this.checkTextDescriptionSize();\n  }\n\n  get gaugeWidth() {\n    return this._gaugeWidth;\n  }\n\n  @Input('p-serie') set serie(serie: PoChartGaugeSerie) {\n    if (serie) {\n      this.serieValueConverted = this.convertValueInPercentFormat(serie.value);\n      this._serie = { ...serie };\n    } else {\n      this._serie = undefined;\n    }\n  }\n\n  get serie() {\n    return this._serie;\n  }\n\n  @ViewChild('description', { read: ElementRef }) descriptionElement: ElementRef;\n\n  constructor(private changeDetection: ChangeDetectorRef) {}\n\n  get hasSerieDescription() {\n    return this.serie && this.serie.description;\n  }\n\n  get hasSerieValue() {\n    return this.serie && this.serie.value >= 0;\n  }\n\n  get maxDescriptionWidth() {\n    // DiferenÃ§a contemplando a largura do path base e padding interno.\n    const subtractionArea = this.gaugeWidth * poChartGaugeSerieWidth * 2 * 2;\n    const descriptionWidth = this.gaugeWidth - subtractionArea;\n\n    return { 'max-width': `${descriptionWidth}px` };\n  }\n\n  ngAfterViewInit() {\n    this.checkTextDescriptionSize();\n  }\n\n  private checkTextDescriptionSize() {\n    if (this.descriptionElement) {\n      // tooltip necessÃ¡rio para contornar comportamento inesperado do tooltip.\n      setTimeout(() => {\n        this.tooltip = this.isEllipsisActive();\n      });\n      this.changeDetection.detectChanges();\n    }\n  }\n\n  private convertValueInPercentFormat(value: number): string {\n    const decimalValue = String(convertNumberToDecimal(value, 1)).replace('.', ',');\n    return `${decimalValue}%`;\n  }\n\n  private isEllipsisActive() {\n    const isExceededWidth =\n      this.descriptionElement.nativeElement.offsetWidth < this.descriptionElement.nativeElement.scrollWidth;\n\n    return isExceededWidth ? this.serie.description : undefined;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  NgZone,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { PoChartGaugeSerie } from './po-chart-gauge-series.interface';\nimport { poChartGaugeStartAngle } from '../po-chart-circular/po-chart-circular.constant';\nimport { PoChartGaugeTextContentComponent } from './po-chart-gauge-text-content/po-chart-gauge-text-content.component';\n\n@Component({\n  selector: 'po-chart-gauge',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartGaugeComponent extends PoChartCircular implements AfterViewInit {\n  chartItemStartAngle: number = poChartGaugeStartAngle;\n\n  protected _series: Array<PoChartGaugeSerie> = [];\n\n  set series(series: Array<PoChartGaugeSerie>) {\n    this._series = this.getGaugeSerie(series);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  @ViewChild('svgContainer', { static: true, read: ViewContainerRef }) svgContainerRef: ViewContainerRef;\n\n  /* istanbul ignore next */\n  constructor(\n    private changeDetection: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    el: ElementRef,\n    ngZone: NgZone,\n    renderer: Renderer2\n  ) {\n    super(el, ngZone, renderer);\n  }\n\n  ngAfterViewInit() {\n    this.drawBasePath();\n    this.createComponent();\n  }\n\n  private createComponent() {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(PoChartGaugeTextContentComponent);\n\n    const componentRef = this.svgContainerRef.createComponent(factory);\n    const instance = componentRef.instance;\n\n    instance.serie = this.series.length && this.series[0];\n    instance.gaugeWidth = this.getGaugeBaseWidth();\n\n    this.resizeListenerSubscription(instance);\n  }\n\n  private checkGaugeValueLimits(value: number) {\n    if (value <= 0) {\n      return 0;\n    } else if (value >= 100) {\n      return 100;\n    } else {\n      return value;\n    }\n  }\n\n  private drawBasePath() {\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\n\n    this.drawPath(basePath, this.chartItemStartAngle, 0);\n  }\n\n  private getGaugeBaseWidth() {\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\n\n    if (basePath) {\n      return basePath.getBoundingClientRect().width;\n    }\n  }\n\n  private getGaugeSerie(series: Array<PoChartGaugeSerie> = []) {\n    const [serie] = series;\n\n    if (serie && typeof serie === 'object') {\n      return [\n        {\n          ...serie,\n          color: this.colors[0],\n          value: this.checkGaugeValueLimits(serie.value)\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  private resizeListenerSubscription(instance: PoChartGaugeTextContentComponent) {\n    this.windowResizeEmitter.subscribe(() => {\n      instance.gaugeWidth = this.getGaugeBaseWidth();\n      this.changeDetection.detectChanges();\n    });\n  }\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { poChartStartAngle } from '../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-pie',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartPieComponent extends PoChartCircular {\n  chartItemStartAngle: number = poChartStartAngle;\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  DoCheck,\n  ElementRef,\n  HostListener,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartBaseComponent } from './po-chart-base.component';\nimport { PoChartColors } from './po-chart-colors.constant';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartDynamicTypeComponent } from './po-chart-types/po-chart-dynamic-type.component';\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\nimport { PoChartType } from './enums/po-chart-type.enum';\n\n/**\n * @docsExtends PoChartBaseComponent\n *\n * @example\n *\n * <example name=\"po-chart-basic\" title=\"PO Chart Basic\">\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.html\"> </file>\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-labs\" title=\"PO Chart Labs\">\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.html\"> </file>\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-coffee-ranking\" title=\"PO Chart - Coffee Ranking\">\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html\"> </file>\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-chart',\n  templateUrl: './po-chart.component.html'\n})\nexport class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\n  private calculatedElement: boolean = false;\n  private componentRef: ComponentRef<{}>;\n  private differ: any;\n  private initialized: boolean = false;\n  private windowResizeListener: Subject<any> = new Subject();\n\n  private mappings = {\n    [PoChartType.Donut]: PoChartDonutComponent,\n    [PoChartType.Gauge]: PoChartGaugeComponent,\n    [PoChartType.Pie]: PoChartPieComponent\n  };\n\n  colors: Array<string> = [];\n\n  @ViewChild('chartContainer', { read: ViewContainerRef, static: true })\n  chartContainer: ViewContainerRef;\n\n  @ViewChild('chartHeader', { static: true }) chartHeader: ElementRef;\n\n  @ViewChild('chartLegend', { read: ElementRef }) chartLegend: ElementRef;\n\n  @ViewChild('chartWrapper', { static: true }) chartWrapper: ElementRef;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private differs: IterableDiffers\n  ) {\n    super();\n\n    this.differ = this.differs.find([]).create(null);\n  }\n\n  get isChartGaugeType(): boolean {\n    return this.type === PoChartType.Gauge;\n  }\n\n  @HostListener('window:resize')\n  onResize = () => this.windowResizeListener.next();\n\n  ngAfterViewInit() {\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const charWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\n\n    // Permite que o chart seja calculado na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (charWrapperWidth && !this.calculatedElement && this.initialized) {\n      this.calculatedElement = true;\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n\n    this.checkingForSerieChanges();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n  }\n\n  ngOnInit() {\n    this.getSeriesColor();\n  }\n\n  rebuildComponent() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n  }\n\n  private chartLegendHeight(chartLegend: ElementRef) {\n    return chartLegend ? chartLegend.nativeElement.offsetHeight : 0;\n  }\n\n  private checkingForSerieChanges() {\n    if (this.componentRef && this.differ) {\n      const changeSeries = this.differ.diff(this.chartSeries);\n      if (changeSeries) {\n        this.getSeriesColor();\n        this.rebuildComponent();\n      }\n    }\n  }\n\n  private createComponent() {\n    const componentType = this.getComponentType(this.type);\n    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    this.componentRef = this.chartContainer.createComponent(factory);\n\n    const instance = <PoChartDynamicTypeComponent>this.componentRef.instance;\n\n    this.setChartProperties(instance);\n\n    return instance;\n  }\n\n  private dynamicComponentSetting() {\n    const instance = this.createComponent();\n\n    this.setResizeListenerSubscribe(instance);\n    this.changeDetector.detectChanges();\n    this.setClickSubscribe(instance);\n    this.setHoverSubscribe(instance);\n  }\n\n  private getComponentType(typeName) {\n    return this.mappings[typeName];\n  }\n\n  private getSeriesColor() {\n    const colorsLength = PoChartColors.length - 1;\n\n    if (!this.chartSeries) {\n      return (this.colors = PoChartColors[colorsLength]);\n    }\n    if (this.type === PoChartType.Gauge) {\n      return (this.colors = PoChartColors[0]);\n    }\n\n    const seriesLength = this.chartSeries.length - 1;\n\n    if (seriesLength > colorsLength) {\n      let colors = PoChartColors[colorsLength];\n\n      // recupera o resultado da divisao entre tamanho das series e o numero de cores disponiveis\n      const quantityDuplicates = seriesLength / colorsLength;\n\n      for (let i = 1; i <= quantityDuplicates; i++) {\n        colors = colors.concat(PoChartColors[colorsLength]);\n      }\n\n      return (this.colors = colors);\n    }\n\n    return (this.colors = PoChartColors[seriesLength]);\n  }\n\n  private removeWindowResizeListener() {\n    if (this.onResize) {\n      this.onResize = () => {};\n    }\n  }\n\n  private setChartProperties(instance: PoChartDynamicTypeComponent) {\n    instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n    instance.chartLegend = this.chartLegendHeight(this.chartLegend);\n    instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    instance.colors = Array.isArray(this.colors) ? [...this.colors] : [];\n    instance.height = this.height;\n    instance.type = this.type;\n    instance.series = this.chartSeries || [];\n  }\n\n  private setClickSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieClick.subscribe(event => {\n      this.onSeriesClick(event);\n    });\n  }\n\n  private setHoverSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieHover.subscribe(event => {\n      this.onSeriesHover(event);\n    });\n  }\n\n  private setResizeListenerSubscribe(instance: PoChartDynamicTypeComponent) {\n    this.windowResizeListener.subscribe(() => {\n      instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n      instance.chartLegend = this.chartLegendHeight(this.chartLegend);\n      instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoCircularChartSeries } from '../po-chart-types/po-chart-circular/po-chart-circular-series.interface';\n\n@Component({\n  selector: 'po-chart-legend',\n  templateUrl: './po-chart-legend.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoChartLegendComponent {\n  @Input('p-colors') colors: Array<string>;\n\n  @Input('p-series') series: PoCircularChartSeries;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTooltipModule } from '../../directives/po-tooltip/po-tooltip.module';\n\nimport { PoChartComponent } from './po-chart.component';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\nimport { PoChartGaugeTextContentComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component';\nimport { PoChartLegendComponent } from './po-chart-legend/po-chart-legend.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-chart`.\n */\n@NgModule({\n  imports: [CommonModule, PoTooltipModule],\n  declarations: [\n    PoChartComponent,\n    PoChartDonutComponent,\n    PoChartGaugeComponent,\n    PoChartGaugeTextContentComponent,\n    PoChartPieComponent,\n    PoChartLegendComponent\n  ],\n  exports: [PoChartComponent]\n})\nexport class PoChartModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\n/**\n * @description\n *\n * O `po-container` Ã© um componente que visa facilitar o agrupamento de conteÃºdos.\n * Por padrÃ£o o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaÃ§amento em sua parte interna, os quais\n * podem ser desabilitados. Ao remover sua borda a sombra tambÃ©m serÃ¡ removida. AlÃ©m disso, sua altura acompanha a\n * quantidade do conteÃºdo, porÃ©m pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\n * assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\n@Directive()\nexport class PoContainerBaseComponent {\n  private _height?: number;\n  private _noBorder?: boolean = false;\n  private _noPadding?: boolean = false;\n  private _noShadow?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-container`.\n   *\n   * > Caso nÃ£o seja definido um valor, a altura se ajustarÃ¡ de acordo com o conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a borda e a sombra em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-border') set noBorder(value: boolean) {\n    this._noBorder = convertToBoolean(value);\n  }\n\n  get noBorder(): boolean {\n    return this._noBorder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o espaÃ§amento interno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-padding') set noPadding(value: boolean) {\n    this._noPadding = convertToBoolean(value);\n  }\n\n  get noPadding(): boolean {\n    return this._noPadding;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o sombreamento em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = convertToBoolean(value);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { PoContainerBaseComponent } from './po-container-base.component';\n\n/**\n * @docsExtends PoContainerBaseComponent\n *\n * @example\n *\n * <example name=\"po-container-basic\" title=\"PO Container Basic\">\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.html\"> </file>\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-labs\" title=\"PO Container Labs\">\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.html\"> </file>\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-dashboard\" title=\"PO Container - Dashboard\">\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-container',\n  templateUrl: './po-container.component.html'\n})\nexport class PoContainerComponent extends PoContainerBaseComponent {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoContainerComponent } from './po-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-container`.\n */\n@NgModule({\n  imports: [CommonModule],\n  exports: [PoContainerComponent],\n  declarations: [PoContainerComponent]\n})\nexport class PoContainerModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_DISCLAIMER_TYPES = ['default', 'danger'];\nconst PO_DISCLAIMER_DEFAULT_TYPE = 'default';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-disclaimer Ã© responsÃ¡vel por representar tags.\n * Seu uso Ã© recomendado em buscas e em campos onde Ã© necessÃ¡rio representar objetos selecionados,\n * como por exemplo, no po-multi-select.\n *\n */\n@Directive()\nexport class PoDisclaimerBaseComponent {\n  private _type: string = 'default';\n  private _hideClose?: boolean = false;\n\n  showDisclaimer = true;\n\n  /**\n   * Label que aparecerÃ¡ dentro do po-disclaimer.\n   * Quando nÃ£o for definido um label serÃ¡ apresentada a propriedade p-value.\n   */\n  @Input('p-label') label?: string;\n\n  /** Valor do po-disclaimer. */\n  @Input('p-value') value: string;\n\n  /** Nome da propriedade vinculada Ã  este po-disclaimer. */\n  @Input('p-property') property?: string;\n\n  /**\n   * @description\n   *\n   * Esta propriedade esconde o botÃ£o para fechamento do po-disclaimer, ao utilizar esta propriedade\n   * sem passar valor a mesma Ã© setada como false, onde o botÃ£o de fechamento estÃ¡ visÃ­vel.\n   *\n   * @default false\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideClose(): boolean {\n    return this._hideClose;\n  }\n\n  /**\n   * Evento disparado ao fechar o disclaimer.\n   * Para este evento serÃ¡ passado como parÃ¢metro um objeto com value, label e property.\n   */\n  @Output('p-close-action') closeAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @description\n   *\n   * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.\n   *\n   * @default default\n   * @optional\n   */\n  @Input('p-type') set type(type: string) {\n    this._type = PO_DISCLAIMER_TYPES.includes(type) ? type : PO_DISCLAIMER_DEFAULT_TYPE;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  close(): void {\n    this.showDisclaimer = false;\n    this.closeAction.emit({ value: this.value, label: this.label, property: this.property });\n  }\n\n  getLabel() {\n    return this.label ? this.label : this.value;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { isKeyCodeEnter } from '../../utils/util';\n\nimport { PoDisclaimerBaseComponent } from './po-disclaimer-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoDisclaimerBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-disclaimer\" title=\"PO Disclaimer\">\n *   <file name=\"sample-po-disclaimer.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-disclaimer',\n  templateUrl: './po-disclaimer.component.html'\n})\nexport class PoDisclaimerComponent extends PoDisclaimerBaseComponent {\n  onKeyPress(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.close();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerComponent } from './po-disclaimer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-disclaimer.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoDisclaimerComponent],\n  exports: [PoDisclaimerComponent]\n})\nexport class PoDisclaimerModule {}\n","import { DoCheck, EventEmitter, Input, IterableDiffers, Output, Directive } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { browserLanguage, convertToBoolean, isKeyCodeEnter, poLocaleDefault } from '../../utils/util';\n\nimport { PoDisclaimer } from '../po-disclaimer/po-disclaimer.interface';\n\nexport const poDisclaimerGroupLiteralsDefault = {\n  en: { removeAll: 'Remove all' },\n  es: { removeAll: 'Eliminar todos' },\n  pt: { removeAll: 'Remover todos' }\n};\n\n/**\n * @description\n *\n * O componente `po-disclaimer-group` Ã© recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n *\n * Ã partir de dois *disclaimers* com o botÃ£o **fechar** habilitado, o componente renderiza de forma automÃ¡tica um novo e destacado\n * *disclaimer* que possibilita **remover todos**, mas que tambÃ©m pode ser desabilitado.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *disclaimers* atravÃ©s do teclado utilizando a tecla *tab* e, para remoÃ§Ã£o do *disclaimer* selecionado,\n * basta pressionar a tecla *enter*. Esta funcionalidade nÃ£o se aplica caso a propriedade `hideClose` estiver habilitada.\n *\n * > Veja a integraÃ§Ã£o destas funcionalidade no componente [po-page-list](/documentation/po-page-list).\n */\n@Directive()\nexport class PoDisclaimerGroupBaseComponent implements DoCheck {\n  private _disclaimers: Array<PoDisclaimer> = [];\n  private _hideRemoveAll: boolean = false;\n\n  private differ;\n  private previousDisclaimers: Array<PoDisclaimer> = [];\n\n  readonly literals = {\n    ...poDisclaimerGroupLiteralsDefault[poLocaleDefault],\n    ...poDisclaimerGroupLiteralsDefault[browserLanguage()]\n  };\n\n  /** Lista de *disclaimers*. */\n\n  /**\n   * @description\n   *\n   * Lista de *disclaimers*.\n   *\n   * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referÃªncia do array de `PoDisclaimer`.\n   *\n   * Exemplo adicionando um *disclaimer* no array:\n   *\n   * ```\n   * this.disclaimers = [...this.disclaimers, disclaimer];\n   * ```\n   *\n   * ou\n   *\n   * ```\n   * this.disclaimers = this.disclaimers.concat(disclaimer);\n   * ```\n   */\n  @Input('p-disclaimers') set disclaimers(value: Array<PoDisclaimer>) {\n    this.previousDisclaimers = [...this.disclaimers];\n    this._disclaimers = this.checkDisclaimers(value);\n  }\n\n  get disclaimers() {\n    return this._disclaimers;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botÃ£o para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrÃ£o, o mesmo Ã© exibido Ã  partir de dois ou mais *disclaimers* com a opÃ§Ã£o `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remove-all')\n  set hideRemoveAll(value: boolean) {\n    this._hideRemoveAll = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideRemoveAll() {\n    return this._hideRemoveAll;\n  }\n\n  /** TÃ­tulo do grupo de *disclaimers*. */\n  @Input('p-title') title?: string;\n\n  /** FunÃ§Ã£o que serÃ¡ disparada quando a lista de *disclaimers* for modificada. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(differs: IterableDiffers) {\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    this.checkChanges();\n  }\n\n  closeItem(disclaimer: any, emitChange: boolean = true) {\n    const itemIndex = this.disclaimers.findIndex(d => d['$id'] === disclaimer['$id']);\n    this.disclaimers.splice(itemIndex, 1);\n\n    if (emitChange) {\n      this.emitChangeDisclaimers();\n    }\n  }\n\n  isRemoveAll() {\n    return !this.hideRemoveAll && this.disclaimers.filter(c => !c.hideClose).length > 1;\n  }\n\n  onKeyPress(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.removeAllItems();\n    }\n  }\n\n  removeAllItems() {\n    const removeItems = [];\n\n    this.disclaimers.forEach(disclaimer => {\n      if (!disclaimer.hideClose) {\n        removeItems.push(disclaimer);\n      }\n    });\n\n    removeItems.forEach(disclaimer => this.closeItem(disclaimer, false));\n\n    this.emitChangeDisclaimers();\n  }\n\n  private checkChanges() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.disclaimers);\n\n      if (changes && this.disclaimersAreChanged(this.disclaimers)) {\n        this.emitChangeDisclaimers();\n      }\n    }\n  }\n\n  private checkDisclaimers(disclaimers: Array<PoDisclaimer>) {\n    if (Array.isArray(disclaimers)) {\n      for (let i = 0; i < disclaimers.length; i++) {\n        const disclaimer = disclaimers[i];\n\n        if (disclaimer.value || disclaimer.value === 0 || disclaimer.value === false) {\n          disclaimer['$id'] = uuid();\n        } else {\n          disclaimers.splice(i, 1);\n          i--;\n        }\n      }\n\n      return disclaimers;\n    }\n\n    return [];\n  }\n\n  private disclaimersAreChanged(disclaimers: Array<PoDisclaimer>): boolean {\n    const currentValues: Array<PoDisclaimer> = disclaimers;\n\n    if (currentValues.length !== this.previousDisclaimers.length) {\n      return true;\n    }\n\n    return currentValues.some(\n      (disclaimer, index) =>\n        disclaimer.value !== this.previousDisclaimers[index].value ||\n        disclaimer.property !== this.previousDisclaimers[index].property\n    );\n  }\n\n  private emitChangeDisclaimers() {\n    setTimeout(() => {\n      this.change.emit(this.disclaimers);\n    });\n    this.previousDisclaimers = [...this._disclaimers];\n  }\n}\n","import { Component, IterableDiffers } from '@angular/core';\n\nimport { PoDisclaimerGroupBaseComponent } from './po-disclaimer-group-base.component';\n\n/**\n * @docsExtends PoDisclaimerGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-disclaimer-group-basic\" title=\"PO Disclaimer Group Basic\">\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-labs\" title=\"PO Disclaimer Group Labs\">\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-sw-planets\" title=\"PO Disclaimer Group - Star Wars Planets\">\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.ts\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.service.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-disclaimer-group',\n  templateUrl: './po-disclaimer-group.component.html'\n})\nexport class PoDisclaimerGroupComponent extends PoDisclaimerGroupBaseComponent {\n  constructor(differs: IterableDiffers) {\n    super(differs);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este Ã© um componente interno utilizado pelo po-disclaimer-group, se comporta como um botÃ£o e recebe uma aÃ§Ã£o para remover todos os\n * po-disclaimers do grupo.\n */\n@Component({\n  selector: 'po-disclaimer-remove',\n  templateUrl: './po-disclaimer-remove.component.html'\n})\nexport class PoDisclaimerRemoveComponent {\n  /** Texto exibido.  */\n  @Input('p-label') label?: string;\n\n  /** AÃ§Ã£o para remover todos.  */\n  @Output('p-remove-all-action') removeAllAction = new EventEmitter();\n\n  // Emite a aÃ§Ã£o de remover todos.\n  removeAction() {\n    this.removeAllAction.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerModule } from '../po-disclaimer/po-disclaimer.module';\n\nimport { PoDisclaimerGroupComponent } from './po-disclaimer-group.component';\nimport { PoDisclaimerRemoveComponent } from './po-disclaimer-remove/po-disclaimer-remove.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-disclaimer-group.\n */\n@NgModule({\n  imports: [CommonModule, PoDisclaimerModule],\n  declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent],\n  exports: [PoDisclaimerGroupComponent]\n})\nexport class PoDisclaimerGroupModule {}\n","import { Input, Directive } from '@angular/core';\n\n/**\n * @description\n *\n * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso Ã© indicado para definiÃ§Ã£o\n * e organizaÃ§Ã£o de informaÃ§Ãµes em uma tela e sua caracterÃ­stica Ã© semelhante Ã  tag `<hr>`.\n */\n@Directive()\nexport class PoDividerBaseComponent {\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label?: string;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { PoDividerBaseComponent } from './po-divider-base.component';\n\n/**\n * @docsExtends PoDividerBaseComponent\n *\n * @example\n *\n * <example name=\"po-divider-basic\" title=\"PO Divider Basic\" >\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.html\"> </file>\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-labs\" title=\"PO Divider Labs\" >\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.html\"> </file>\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-user-detail\" title=\"PO Divider - User Detail\" >\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.html\"> </file>\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-divider',\n  templateUrl: './po-divider.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoDividerComponent extends PoDividerBaseComponent {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerComponent } from './po-divider.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-divider.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoDividerComponent],\n  exports: [PoDividerComponent]\n})\nexport class PoDividerModule {}\n","import { ElementRef, Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nimport { PoPopupAction } from './po-popup-action.interface';\n\nconst poPopupDefaultPosition = 'bottom-left';\n\n/**\n * @description\n *\n * O componente `po-popup` Ã© um container pequeno recomendado para aÃ§Ãµes de navegaÃ§Ã£o:\n * Ele abre sobreposto aos outros componentes.\n *\n * Ã possÃ­vel escolher as posiÃ§Ãµes do `po-popup` em relaÃ§Ã£o ao componente alvo, para isto veja a propriedade `p-position`.\n *\n * TambÃ©m Ã© possÃ­vel informar um _template_ _header_ para o `po-popup`, que serÃ¡ exibido acima das aÃ§Ãµes.\n * Para funcionar corretamente Ã© preciso adicionar a propriedade `p-popup-header-template` no elemento que servirÃ¡ de template, por exemplo:\n *\n * ```\n * <po-popup [p-target]=\"target\">\n *   <div p-popup-header-template>\n *     <div>\n *       Dev PO\n *     </div>\n *     <div>\n *       dev.po@po-ui.com.br\n *     </div>\n *   </div>\n * </po-popup >\n * ```\n */\n@Directive()\nexport class PoPopupBaseComponent {\n  private _actions: Array<PoPopupAction>;\n  private _customPositions?: Array<string>;\n  private _hideArrow: boolean = false;\n  private _isCornerAlign: boolean = false;\n  private _position?: string = poPopupDefaultPosition;\n  private _target: any;\n\n  arrowDirection: string = 'top-right';\n  showPopup: boolean = false;\n\n  protected oldTarget;\n  protected param;\n  protected parentRef;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoPopupAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a seta do componente *popup*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  // Define se o `po-popup` serÃ¡ alinhado pelos cantos do elemento target.\n  @Input('p-is-corner-align') set isCornerAlign(value: boolean) {\n    this._isCornerAlign = convertToBoolean(value);\n  }\n\n  get isCornerAlign(): boolean {\n    return this._isCornerAlign;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o inicial que o `po-popup` abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o `bottom-left` (abaixo e a esquerda), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * > Caso seja definido um `p-custom-positions` o componente irÃ¡ abrir na posiÃ§Ã£o definida na propriedade `p-position`\n   * e caso nÃ£o caiba na posiÃ§Ã£o inicial ele irÃ¡ rotacionar seguindo a ordem de posiÃ§Ãµes definidas no `p-custom-positions`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   *\n   * @default `bottom-left`\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : poPopupDefaultPosition;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as posiÃ§Ãµes e a sequÃªncia que o `po-popup` poderÃ¡ rotacionar. A sequÃªncia serÃ¡ definida pela ordem passada\n   * no *array*. Caso nÃ£o seja definido, o `po-popup` irÃ¡ rotacionar em todas as posiÃ§Ãµes vÃ¡lidas.\n   *\n   * > O componente sempre irÃ¡ abrir na posiÃ§Ã£o definida no `p-position` e caso nÃ£o caiba na posiÃ§Ã£o definida o mesmo\n   * irÃ¡ rotacionar seguindo a ordem definida pelo `p-custom-position`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   */\n  @Input('p-custom-positions') set customPositions(value: Array<string>) {\n    this._customPositions = Array.isArray(value) ? value : [];\n  }\n\n  get customPositions() {\n    return this._customPositions;\n  }\n\n  /**\n   * @description\n   *\n   * Para utilizar o `po-popup` deve-se colocar uma variÃ¡vel local no componente que dispararÃ¡ o evento\n   * de abertura no mesmo e com isso, invocarÃ¡ a funÃ§Ã£o `toggle`, por exemplo:\n   *\n   * ```\n   * <span #icon class=\"po-icon po-icon-credit-payment\" (click)=\"popup.toggle()\">\n   *   Credit Actions\n   * </span>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"icon\">\n   * </po-popup>\n   * ```\n   *\n   * Caso o elemento alvo for um componente, serÃ¡ preciso obter o `ElementRef` do mesmo e passÃ¡-lo Ã  propriedade, por exemplo:\n   *\n   * ```\n   * // component.html\n   *\n   * <po-button #poButton\n   *   p-label=\"Open Popover\"\n   *   (p-click)=\"popup.toggle()\">\n   * </po-button>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"poButtonRef\">\n   * </po-popup>\n   *\n   * // component.ts\n   *\n   * @ViewChild('poButton', { read: ElementRef }) poButtonRef: ElementRef;\n   * ```\n   */\n  @Input('p-target') set target(value: any) {\n    this._target = value instanceof ElementRef ? value.nativeElement : value;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  protected clickoutListener: () => void;\n  protected resizeListener: () => void;\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\n\nimport { PoPopupAction } from './po-popup-action.interface';\nimport { PoPopupBaseComponent } from './po-popup-base.component';\n\n/**\n *\n * @docsExtends PoPopupBaseComponent\n *\n * @example\n *\n * <example name=\"po-popup-basic\" title=\"PO Popup - Basic\">\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.html\"> </file>\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-labs\" title=\"PO Popup - Labs\">\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.html\"> </file>\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-email\" title=\"PO Popup Email\">\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.html\"> </file>\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-popup',\n  templateUrl: './po-popup.component.html',\n  providers: [PoControlPositionService]\n})\nexport class PoPopupComponent extends PoPopupBaseComponent {\n  @ViewChild('popupRef', { read: ElementRef }) popupRef: ElementRef;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private poControlPosition: PoControlPositionService,\n    public changeDetector: ChangeDetectorRef\n  ) {\n    super();\n    this.parentRef = viewContainerRef['_hostView'][8];\n  }\n\n  /**\n   * Fecha o componente *popup*.\n   *\n   * > Por padrÃ£o, este comportamento Ã© acionado somente ao clicar fora do componente ou em determinada aÃ§Ã£o / url.\n   */\n  close() {\n    this.removeListeners();\n\n    this.showPopup = false;\n  }\n\n  onActionClick(popupAction: PoPopupAction) {\n    const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');\n\n    if (popupAction && popupAction.action && actionNoDisabled) {\n      this.close();\n      return callFunction(popupAction.action, this.parentRef, this.param || popupAction);\n    }\n\n    if (popupAction && popupAction.url && actionNoDisabled) {\n      this.close();\n      return this.openUrl(popupAction.url);\n    }\n  }\n\n  /**\n   * Abre o componente *popup*.\n   *\n   * > Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  open(param?) {\n    this.oldTarget = this.target;\n    this.param = param;\n    this.showPopup = true;\n    this.changeDetector.detectChanges();\n    this.validateInitialContent();\n  }\n\n  returnBooleanValue(popupAction: any, property: string) {\n    return isTypeof(popupAction[property], 'function')\n      ? popupAction[property](this.param || popupAction)\n      : popupAction[property];\n  }\n\n  /**\n   * ResponsÃ¡vel por abrir e fechar o *popup*.\n   *\n   * Quando disparado abrirÃ¡ o *popup* e caso o mesmo jÃ¡ estiver aberto e possuir o mesmo `target` irÃ¡ fecha-lo.\n   *\n   * Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  toggle(param?) {\n    this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);\n  }\n\n  private clickedOutDisabledItem(event) {\n    const containsItemDisabled =\n      this.elementContains(event.target, 'po-popup-item-disabled') ||\n      this.elementContains(event.target.parentElement, 'po-popup-item-disabled');\n\n    return !containsItemDisabled;\n  }\n\n  private clickedOutHeaderTemplate(event) {\n    const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');\n    return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));\n  }\n\n  private clickedOutTarget(event) {\n    return this.target && !this.target.contains(event.target);\n  }\n\n  private closePopupOnClickout(event: MouseEvent) {\n    if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {\n      this.close();\n    }\n  }\n\n  private elementContains(element: HTMLElement, className: string) {\n    return element && element.classList.contains(className);\n  }\n\n  private hasContentToShow() {\n    return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.close();\n    });\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.closePopupOnClickout(event);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.showPopup) {\n      this.close();\n    }\n  };\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPosition() {\n    this.poControlPosition.setElements(\n      this.popupRef.nativeElement,\n      8,\n      this.target,\n      this.customPositions,\n      false,\n      this.isCornerAlign\n    );\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  private validateInitialContent() {\n    if (this.hasContentToShow()) {\n      this.setPosition();\n      this.initializeListeners();\n    } else {\n      this.close();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoPopupComponent } from './po-popup.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-popup.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoPopupComponent],\n  exports: [PoPopupComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoPopupModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\n\nimport { PoDropdownAction } from './po-dropdown-action.interface';\n\n/**\n * @description\n *\n * O componente `po-dropdown` pode ser utilizado como um agrupador de aÃ§Ãµes e / ou opÃ§Ãµes.\n *\n * > Caso nÃ£o haja configuraÃ§Ã£o de rotas em sua aplicaÃ§Ã£o, se faz necessÃ¡rio importar o `RouterModule`\n * no mÃ³dulo principal para o correto funcionamento deste componente:\n *\n * ```\n * import { RouterModule } from '@angular/router';\n *\n * @NgModule({\n *   imports: [\n *     ...\n *     RouterModule.forRoot([]),\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   exports: [],\n *   providers: [],\n *   bootstrap: [\n *     AppComponent\n *   ]\n * })\n * export class AppModule { }\n * ```\n * > Para maiores dÃºvidas referente Ã  configuraÃ§Ã£o de rotas, acesse em nosso portal /Guias /ComeÃ§ando\n * [/Configurando as rotas do po-menu](/guides/getting-started).\n */\n\n@Directive()\nexport class PoDropdownBaseComponent {\n  private _actions: Array<PoDropdownAction>;\n  private _disabled: boolean = false;\n\n  icon: string = 'po-icon-arrow-down';\n  open: boolean = false;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoDropdownAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Adiciona um rÃ³tulo ao `dropdown`. */\n  @Input('p-label') label: string;\n}\n","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { isKeyCodeEnter } from './../../utils/util';\n\nimport { PoDropdownBaseComponent } from './po-dropdown-base.component';\n\n/**\n * @docsExtends PoDropdownBaseComponent\n *\n * @example\n *\n * <example name=\"po-dropdown-basic\" title=\"PO Dropdown Basic\" >\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-labs\" title=\"PO Dropdown Labs\" >\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-social-network\" title=\"PO Dropdown - Social Network\" >\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dropdown',\n  templateUrl: './po-dropdown.component.html'\n})\nexport class PoDropdownComponent extends PoDropdownBaseComponent {\n  private clickoutListener: () => void;\n  private resizeListener: () => void;\n\n  @ViewChild('dropdownRef', { read: ElementRef, static: true }) dropdownRef: ElementRef;\n  @ViewChild('popupRef') popupRef: any;\n\n  constructor(private renderer: Renderer2) {\n    super();\n  }\n\n  onKeyDown(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();\n  }\n\n  private checkClickArea(event: MouseEvent) {\n    return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);\n  }\n\n  private hideDropdown() {\n    this.icon = 'po-icon-arrow-down';\n    this.removeListeners();\n    this.popupRef.close();\n    this.open = false;\n  }\n\n  private initializeListeners() {\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnDropdown(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropdown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.open) {\n      this.hideDropdown();\n    }\n  };\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private showDropdown() {\n    this.icon = 'po-icon-arrow-up';\n    this.initializeListeners();\n    this.popupRef.open();\n    this.open = true;\n  }\n\n  private wasClickedOnDropdown(event: MouseEvent) {\n    const clickedOnDropdown = this.checkClickArea(event);\n\n    if (!clickedOnDropdown) {\n      this.hideDropdown();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoDropdownComponent } from './po-dropdown.component';\n/**\n * @description\n * MÃ³dulo do componente po-dropdown.\n */\n@NgModule({\n  imports: [CommonModule, PoPopupModule],\n  declarations: [PoDropdownComponent],\n  exports: [PoDropdownComponent]\n})\nexport class PoDropdownModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de uso interno, responsÃ¡vel por gerar uma margem inferior nos componentes que utilizam o po-field-container.\n * Essa margem inferior pode conter uma mensagem de erro.\n */\n@Component({\n  selector: 'po-field-container-bottom',\n  templateUrl: './po-field-container-bottom.component.html'\n})\nexport class PoFieldContainerBottomComponent {\n  /**\n   * Mensagem que serÃ¡ apresentada quando o pattern ou a mÃ¡scara nÃ£o for satisfeita.\n   * Obs: Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n}\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * Componente de uso interno, responsÃ¡vel por atribuir uma label para o campo\n */\n@Component({\n  selector: 'po-field-container',\n  templateUrl: './po-field-container.component.html'\n})\nexport class PoFieldContainerComponent {\n  private _optional: boolean = false;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help: string;\n\n  /** Indica se o campo serÃ¡ opcional. */\n  @Input('p-optional') set optional(value: boolean) {\n    this._optional = convertToBoolean(value);\n  }\n\n  get optional() {\n    return this._optional;\n  }\n\n  getOptionalText() {\n    const browserLanguage = getShortBrowserLanguage();\n\n    const optional = {\n      pt: '(Opcional)',\n      en: '(Optional)',\n      es: '(Opcional)'\n    };\n\n    return optional[browserLanguage];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerBottomComponent } from './po-field-container-bottom/po-field-container-bottom.component';\nimport { PoFieldContainerComponent } from './po-field-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-field-container`.\n */\n@NgModule({\n  imports: [CommonModule],\n  exports: [PoFieldContainerBottomComponent, PoFieldContainerComponent],\n  declarations: [PoFieldContainerBottomComponent, PoFieldContainerComponent]\n})\nexport class PoFieldContainerModule {}\n","import { PropertyDecoratorInterface } from './property-decorator.interface';\n\n/**\n * FunÃ§Ã£o utilizada pela fÃ¡brica de decoradores para validar uma propriedade de uma classe durante\n * o ciclo de vida do Angular.\n *\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\n * @param lifecycleName clico de vida que se deseja executar com a validaÃ§Ã£o.\n * @param callback funÃ§Ã£o que serÃ¡ executada para validadar a propriedade.\n */\nexport function validatePropertyOnLifeCycle(\n  decoratorProperties: PropertyDecoratorInterface,\n  lifecycleName: string,\n  callback: Function\n) {\n  const { target, property } = decoratorProperties;\n  const emptyFunction = () => {};\n  const lifecycleFunctionClone: Function | null = target[lifecycleName] || emptyFunction;\n\n  Object.defineProperty(target, lifecycleName, {\n    value: function () {\n      callback.call(this, property, target);\n      lifecycleFunctionClone.call(this);\n    }\n  });\n}\n\n/**\n * FunÃ§Ã£o utilizada pela fÃ¡brica de decoradores para alterar/manipular o valor de uma propriedade.\n *\n * > Este decorator irÃ¡ criar os mÃ©todos get e set internamente. Portanto,\n * Ã© importante **nÃ£o** criar nomes privados para as propriedades utilizando\n * `$$__nomeDaPropriedade` ao utilizar este decorator, pois ela serÃ¡ sobrescrita pela propriedade privada\n * criada pelo decorator.\n *\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\n * @param decoratorName nome do decorator\n * @param callback funÃ§Ã£o que serÃ¡ executada para alterar o valor da propriedade\n */\nexport function changeValueByCallback(\n  decoratorProperties: PropertyDecoratorInterface,\n  decoratorName: string,\n  callback: Function\n) {\n  const { target, property, originalDescriptor } = decoratorProperties;\n  const privatePropertyName = createPrivateProperty(target, property, decoratorName);\n\n  return {\n    get: getter(originalDescriptor, privatePropertyName),\n    set: setter(originalDescriptor, callback, privatePropertyName)\n  };\n}\nfunction setter(originalDescriptor, callback: Function, privatePropertyName: string) {\n  return function (value): void {\n    if (originalDescriptor && originalDescriptor.set) {\n      originalDescriptor.set.bind(this)(callback(value));\n    }\n\n    this[privatePropertyName] = callback(value);\n  };\n}\n\nfunction getter(originalDescriptor: TypedPropertyDescriptor<any>, privatePropName: string) {\n  return function () {\n    return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n  };\n}\n\nexport function createPrivateProperty(target: any, propertyName: string, decoratorName: string) {\n  const privatePropName = `$$__${propertyName}`;\n\n  if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n    console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${decoratorName} decorator.`);\n  }\n\n  Object.defineProperty(target, privatePropName, {\n    configurable: true,\n    writable: true\n  });\n\n  return privatePropName;\n}\n","import { convertToBoolean } from '../../utils/util';\nimport { changeValueByCallback } from '../utils-decorators';\nimport { PropertyDecoratorInterface } from '../property-decorator.interface';\n\n/**\n * Converte o valor de um campo de entrada para booleano.\n *\n * Forma de utilizaÃ§Ã£o:\n *\n * ```\n * @Input('p-loading') @InputBoolean() loading: boolean;\n * ```\n */\n\nexport function InputBoolean(): any {\n  return function (target: any, property: string, originalDescriptor?) {\n    const decoratorProperties: PropertyDecoratorInterface = { target, property, originalDescriptor };\n\n    return changeValueByCallback(decoratorProperties, 'InputBoolean', convertToBoolean);\n  };\n}\n","export function requiredFailed(required: boolean, disabled: boolean, value: string | Array<any> | number | boolean) {\n  const valid =\n    (typeof value === 'string' && value) ||\n    (typeof value === 'object' && value && value.length) ||\n    (typeof value === 'number' && (value || value === 0)) ||\n    (typeof value === 'boolean' && value);\n  return required && !disabled && !valid;\n}\n\nexport function maxlengpoailed(maxlength: number, value: string | number) {\n  const validMaxlength = maxlength || maxlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMaxlength && validValue && validValue.length > Number(maxlength);\n}\n\nexport function minlengpoailed(minlength: number, value: string | number) {\n  const validMinlength = minlength || minlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMinlength && validValue && validValue.length < Number(minlength);\n}\n\nexport function patternFailed(pattern: string, value: string) {\n  let reg;\n  try {\n    reg = new RegExp(pattern);\n  } catch (e) {\n    return true;\n  }\n  return pattern && value && !reg.test(value);\n}\n\nexport function minFailed(min: number, value: number) {\n  const validValue = value || value === 0;\n  const validMin = min || min === 0;\n  return validValue && validMin && value < min;\n}\n\nexport function maxFailed(max: number, value: number) {\n  const validValue = value || value === 0;\n  const validMax = max || max === 0;\n  return validValue && validMax && value > max;\n}\n\nexport function dateFailed(value: string) {\n  return value && isNaN(Date.parse(value));\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, uuid } from './../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\nimport { PoCheckboxGroupOptionView } from './interfaces/po-checkbox-group-option-view.interface';\n\nconst poCheckboxGroupColumnsDefaultLength: number = 6;\nconst poCheckboxGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-checkbox-group` exibe uma lista de mÃºltipla escolha onde o usuÃ¡rio pode marcar e desmarcar,\n * utilizando a tecla de espaÃ§o ou o clique do mouse, vÃ¡rias opÃ§Ãµes.\n *\n * > Para seleÃ§Ã£o Ãºnica, utilize o [**PO Radio Group**](/documentation/po-radio-group).\n *\n * Por padrÃ£o, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\n *\n * ```\n * favorites = ['PO', 'Angular'];\n * ```\n *\n * Na maioria das situaÃ§Ãµes, o array com os objetos setados jÃ¡ atende as necessidades mas, caso o desenvolvedor\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\n * deve setar a propriedade `p-indeterminate` como `true`.\n *\n * Nesse caso, o po-checkbox-group vai retornar um objeto com todas as opÃ§Ãµes disponÃ­veis e seus valores.\n *\n * ```\n * favorites = {\n *  PO: true,\n *  Angular: true,\n *  VueJS: false,\n *  React: null // indeterminado\n * };\n * ```\n */\n@Directive()\nexport class PoCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\n  checkboxGroupOptionsView: Array<PoCheckboxGroupOptionView>;\n  checkedOptions: any = {};\n  checkedOptionsList: any = [];\n  mdColumns: number = poCheckboxGroupColumnsDefaultLength;\n  propagateChange: any;\n  validatorChange: any;\n\n  private _columns: number = poCheckboxGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _indeterminate?: boolean = false;\n  private _options?: Array<PoCheckboxGroupOption>;\n  private _required?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Nome dos checkboxes */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita definir a quantidade de colunas para exibiÃ§Ã£o dos itens do *checkbox*.\n   * - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   * - Para resoluÃ§Ã£o `sm` a colunagem invariavelmente passa para `1` coluna.\n   * - Quando se trata de resoluÃ§Ã£o `md` e o valor estabelecido para colunas for superior a `2`,\n   * o *grid system* serÃ¡ composto por `2` colunas.\n   * - Para evitar a quebra de linha, prefira a utilizaÃ§Ã£o de `1` coluna para opÃ§Ãµes com textos grandes.\n   *\n   * @default `2`\n   *\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poCheckboxGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todos os itens do checkbox.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de apoio do campo */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opÃ§Ãµes, Ã© necessÃ¡rio setar\n   * a propriedade `p-indeterminate` como `true`, por padrÃ£o essa propriedade vem desabilitada (`false`).\n   *\n   * Quando essa propriedade Ã© setada como `true`, o *po-checkbox-group* passa a devolver um objeto completo para o\n   * `ngModel`, diferente do array que contÃ©m apenas os valores selecionados.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Label do campo */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Lista de opÃ§Ãµes que serÃ£o exibidas\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoCheckboxGroupOption\n   */\n  @Input('p-options') set options(value: Array<PoCheckboxGroupOption>) {\n    this._options = Array.isArray(value) ? value : [];\n    this.removeDuplicatedOptions();\n    this.setCheckboxGroupOptionsView(this.options);\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  // FunÃ§Ã£o para atualizar o `ngModel` do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n    const value = this.checkIndeterminate();\n\n    if (this.propagateChange) {\n      this.propagateChange(value);\n    } else {\n      this.ngModelChange.emit(value);\n    }\n\n    this.change.emit(value);\n  }\n\n  checkIndeterminate() {\n    return this.indeterminate ? this.checkedOptions : this.checkedOptionsList;\n  }\n\n  checkOption(value: PoCheckboxGroupOption) {\n    if (!this._disabled && !value.disabled) {\n      this.checkOptionModel(value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  writeValue(optionsModel: any) {\n    if (optionsModel && this.checkedOptions !== optionsModel) {\n      this.generateCheckOptions(optionsModel);\n    } else {\n      this.checkedOptionsList = [];\n      this.checkedOptions = {};\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (\n      (!this.indeterminate && requiredFailed(this.required, this.disabled, abstractControl.value)) ||\n      this.isInvalidIndeterminate()\n    ) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private checkOptionModel(optionChecked: PoCheckboxGroupOption) {\n    this.checkedOptions[optionChecked.value] = !this.checkedOptions[optionChecked.value];\n\n    if (!this.indeterminate && this.checkedOptionsList.includes(optionChecked.value)) {\n      this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(optionChecked.value), 1);\n    } else if (!this.indeterminate) {\n      this.checkedOptionsList.push(optionChecked.value);\n    }\n  }\n\n  private generateCheckOptions(optionsModel: any) {\n    this.checkedOptions = {};\n\n    if (optionsModel instanceof Array) {\n      this.checkedOptionsList = optionsModel;\n\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        this.checkedOptions[option.value] = optionsModel.includes(option.value);\n      });\n    } else {\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        optionsModel[option.value] = optionsModel[option.value] === undefined ? false : optionsModel[option.value];\n        this.checkedOptions = optionsModel;\n      });\n    }\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poCheckboxGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poCheckboxGroupColumnsDefaultLength;\n  }\n\n  private isInvalidIndeterminate() {\n    if (this.indeterminate && this.required && this.checkedOptions) {\n      return (<any>Object).values(this.checkedOptions).every(value => value === false);\n    }\n    return false;\n  }\n\n  private removeDuplicatedOptions() {\n    this.options.forEach((option, index) => {\n      const duplicatedIndex = this.options.findIndex((optionFind: any) => optionFind.value === option.value) === index;\n      if (!duplicatedIndex) {\n        this.options.splice(this.options.indexOf(option), 1);\n      }\n    });\n  }\n\n  private setCheckboxGroupOptionsView(optionsList: Array<PoCheckboxGroupOption>) {\n    this.checkboxGroupOptionsView = optionsList.map(option => {\n      return { ...option, id: uuid() };\n    });\n  }\n}\n","/**\n * @usedBy PoProgressComponent\n *\n * @description\n *\n * *Enum* `PoProgressStatus` para os status de barra de progresso.\n */\nexport enum PoProgressStatus {\n  /** Define o status `default` para a barra de progresso. */\n  Default = 'default',\n\n  /** Define o status de `error` para a barra de progresso. */\n  Error = 'error',\n\n  /** Define o status de `success` para a barra de progresso. */\n  Success = 'success'\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\n\n/**\n * @docsExtends PoCheckboxGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-group-basic\" title=\"PO Checkbox Group Basic\">\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-labs\" title=\"PO Checkbox Group Labs\">\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-password-policy\" title=\"PO Checkbox Group â Security policy\">\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-checkbox-group',\n  templateUrl: './po-checkbox-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent implements AfterViewChecked, AfterViewInit {\n  @ViewChildren('checkboxLabel') checkboxLabels: QueryList<ElementRef>;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoCheckboxGroupComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;\n   *\n   * focusCheckbox() {\n   *   this.checkbox.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.checkboxLabels && !this.disabled) {\n      const checkboxLabel = this.checkboxLabels.find((_, index) => !this.options[index].disabled);\n\n      if (checkboxLabel) {\n        checkboxLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent, option: PoCheckboxGroupOption) {\n    const spaceBar = 32;\n\n    if (event.which === spaceBar || event.keyCode === spaceBar) {\n      this.checkOption(option);\n\n      event.preventDefault();\n    }\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerModule } from '../po-field-container/po-field-container.module';\n\nimport { PoCheckboxGroupComponent } from './po-checkbox-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-checkbox-group`.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, PoFieldContainerModule],\n  exports: [PoCheckboxGroupComponent],\n  declarations: [PoCheckboxGroupComponent]\n})\nexport class PoCheckboxGroupModule {}\n","import { Input, EventEmitter, Directive } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\nimport { PoModalAction } from './po-modal-action.interface';\n\n/**\n * @description\n *\n * O componente `po-modal` Ã© utilizado para incluir conteÃºdos rÃ¡pidos e informativos.\n *\n * No cabeÃ§alho do componente Ã© possÃ­vel definir um tÃ­tulo e como tambÃ©m permite ocultar o Ã­cone de fechamento da modal.\n *\n * Em seu corpo Ã© possÃ­vel definir um conteÃºdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\n * `po-table` e os demais componentes do PO.\n *\n * No rodapÃ© encontram-se os botÃµes de aÃ§Ã£o primÃ¡ria e secundÃ¡ria, no qual permitem definir uma aÃ§Ã£o e um rÃ³tulo, bem como\n * definir um estado de carregando e / ou desabilitado. TambÃ©m Ã© possÃ­vel definir o botÃ£o com o tipo *danger*.\n *\n * > Ã possÃ­vel fechar a modal atravÃ©s da tecla *ESC*, quando a propriedade `p-hide-close` nÃ£o estiver habilitada.\n */\n@Directive()\nexport class PoModalBaseComponent {\n  private _hideClose?: boolean = false;\n  private _size?: string = 'md';\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') title: string;\n\n  /**\n   * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da primeira aÃ§Ã£o.\n   * Caso esta propriedade nÃ£o seja definida ou esteja incompleta, automaticamente serÃ¡ adicionado um botÃ£o de aÃ§Ã£o com\n   * a funÃ§Ã£o de fechar a modal.\n   */\n  @Input('p-primary-action') primaryAction?: PoModalAction;\n\n  /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-action') secondaryAction?: PoModalAction;\n\n  /**\n   * Define o tamanho da modal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `sm` (pequeno)\n   *  - `md` (mÃ©dio)\n   *  - `lg` (grande)\n   *  - `xl` (extra grande)\n   *  - `auto` (automÃ¡tico)\n   *\n   * > Quando informado `auto` a modal calcularÃ¡ automaticamente seu tamanho baseado em seu conteÃºdo.\n   * Caso nÃ£o seja informado um valor, a modal terÃ¡ o tamanho definido como `md`.\n   *\n   * > Todas as opÃ§Ãµes de tamanho possuem uma largura mÃ¡xima de **768px**.\n   */\n  @Input('p-size') set size(value: string) {\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Define o fechamento da modal ao clicar fora da mesma.\n   * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\n   */\n  clickOut?: boolean = false;\n  @Input('p-click-out') set setClickOut(value: boolean | string) {\n    this.clickOut = value === '' ? false : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o Ã­cone de fechar do cabeÃ§alho da modal.\n   *\n   * > Caso a propriedade estiver habilitada, nÃ£o serÃ¡ possÃ­vel fechar a modal atravÃ©s da tecla *ESC*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = convertToBoolean(value);\n  }\n\n  get hideClose() {\n    return this._hideClose;\n  }\n\n  // Controla se a modal fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto\n  isHidden = true;\n\n  // Event emmiter para quando a modal Ã© fechada pelo 'X'.\n  public onXClosed = new EventEmitter<boolean>();\n\n  /** FunÃ§Ã£o para fechar a modal. */\n  close(xClosed = false): void {\n    this.isHidden = true;\n    if (xClosed) {\n      this.onXClosed.emit(xClosed);\n    }\n  }\n\n  /** FunÃ§Ã£o para abrir a modal. */\n  open(): void {\n    this.validPrimaryAction();\n\n    this.isHidden = false;\n  }\n\n  validPrimaryAction() {\n    if (!this.primaryAction) {\n      this.primaryAction = {\n        action: () => this.close(),\n        label: 'Ok'\n      };\n    }\n\n    if (!this.primaryAction['action']) {\n      this.primaryAction['action'] = () => this.close();\n    }\n    if (!this.primaryAction['label']) {\n      this.primaryAction['label'] = 'Ok';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoModalService {\n  modalActive: string;\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { PoModalBaseComponent } from './po-modal-base.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @docsExtends PoModalBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-basic\" title=\"PO Modal Basic\">\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-labs\" title=\"PO Modal Labs\">\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-fruits-salad\" title=\"PO Modal - Fruits Salad\">\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html\"> </file>\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal',\n  templateUrl: './po-modal.component.html'\n})\nexport class PoModalComponent extends PoModalBaseComponent {\n  @ViewChild('modalContent', { read: ElementRef }) modalContent: ElementRef;\n\n  private firstElement;\n  private focusFunction;\n  private focusableElements = 'input, select, textarea, button:not([disabled]), a';\n  private id: string = uuid();\n  private sourceElement;\n\n  onResizeListener: () => void;\n\n  constructor(\n    private poModalService: PoModalService,\n    private renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  close(xClosed = false) {\n    this.poModalService.modalActive = undefined;\n\n    super.close(xClosed);\n\n    this.removeEventListeners();\n\n    if (this.sourceElement) {\n      this.sourceElement.focus();\n    }\n  }\n\n  closeModalOnEscapeKey(event) {\n    if (!this.hideClose) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.close();\n    }\n  }\n\n  getPrimaryActionButtonType() {\n    return this.primaryAction.danger ? 'danger' : 'primary';\n  }\n\n  getSecondaryActionButtonType() {\n    return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';\n  }\n\n  onClickOut(event) {\n    if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open() {\n    this.sourceElement = document.activeElement;\n\n    super.open();\n\n    this.handleFocus();\n  }\n\n  private handleFocus(): any {\n    this.poModalService.modalActive = this.id;\n\n    setTimeout(() => {\n      if (this.modalContent) {\n        this.initFocus();\n        document.addEventListener('focus', this.focusFunction, true);\n      }\n    });\n  }\n\n  private initFocus() {\n    this.focusFunction = (event: any) => {\n      this.poModalService.modalActive = this.poModalService.modalActive || this.id;\n      const modalElement = this.modalContent.nativeElement;\n\n      if (!modalElement.contains(event.target) && this.poModalService.modalActive === this.id) {\n        event.stopPropagation();\n        this.firstElement.focus();\n      }\n    };\n\n    this.setFirstElement();\n\n    if (this.hideClose) {\n      this.firstElement.focus();\n    } else {\n      const firstFieldElement =\n        this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] || this.modalContent.nativeElement;\n      firstFieldElement.focus();\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('focus', this.focusFunction, true);\n  }\n\n  private setFirstElement() {\n    this.firstElement =\n      this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoModalComponent } from './po-modal.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @description\n * MÃ³dulo do componente po-modal\n */\n@NgModule({\n  imports: [CommonModule, PoButtonModule],\n  declarations: [PoModalComponent],\n  exports: [PoModalComponent],\n  providers: [PoModalService]\n})\nexport class PoModalModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-progress-bar',\n  templateUrl: './po-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressBarComponent {\n  @Input('p-indeterminate') indeterminate: boolean;\n\n  @Input('p-value') value: number;\n\n  get valueScale() {\n    return `${this.value / 100}`;\n  }\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\nconst poProgressMaxValue = 100;\nconst poProgressMinValue = 0;\n\n/**\n * @description\n *\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\n *\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualizaÃ§Ã£o no sistema ou o processamento de uma imagem.\n */\n@Directive()\nexport class PoProgressBaseComponent {\n  private _indeterminate?: boolean;\n  private _value?: number = 0;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita o modo indeterminado na barra de progresso, que mostra uma animaÃ§Ã£o fixa sem um valor estabelecido.\n   *\n   * Esta opÃ§Ã£o pode ser utilizada quando nÃ£o souber quanto tempo levarÃ¡ para que um processo seja concluÃ­do.\n   *\n   * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` serÃ¡ ignorada.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * InformaÃ§Ã£o adicional que aparecerÃ¡ abaixo da barra de progresso ao lado direito.\n   */\n  @Input('p-info') info?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ãcone que aparecerÃ¡ ao lado do texto da propriedade `p-info`.\n   *\n   * Exemplo: `po-icon-ok`.\n   */\n  @Input('p-info-icon') infoIcon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Status da barra de progresso que indicarÃ¡ visualmente ao usuÃ¡rio\n   * o andamento, por exemplo, se a mesma foi concluÃ­da com sucesso.\n   *\n   * @default `PoProgressStatus.Default`\n   */\n  @Input('p-status') status: PoProgressStatus = PoProgressStatus.Default;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto principal que aparecerÃ¡ abaixo da barra de progresso no lado esquerdo.\n   */\n  @Input('p-text') text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que representarÃ¡ o progresso.\n   *\n   * > Os valores aceitos sÃ£o nÃºmeros inteiros de `0` Ã  `100`.\n   *\n   * @default `0`\n   */\n  @Input('p-value') set value(value: number) {\n    const integerValue = convertToInt(value, poProgressMinValue);\n    const isProgressRangeValue = this.isProgressRangeValue(integerValue);\n\n    this._value = isProgressRangeValue ? integerValue : poProgressMinValue;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de cancelamento (\"x\") na parte inferior da barra de progresso.\n   *\n   * Ao ser disparado, a funÃ§Ã£o receberÃ¡ como parÃ¢metro o status atual da barra de progresso.\n   *\n   * > Se nenhuma funÃ§Ã£o for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\n   * o Ã­cone de cancelamento nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-cancel') cancel: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de tentar novamente na parte inferior da barra de progresso.\n   *\n   * > o Ã­cone serÃ¡ exibido apenas se informar uma funÃ§Ã£o neste evento e o status da barra de progresso for\n   * `PoProgressStatus.Error`.\n   */\n  @Output('p-retry') retry: EventEmitter<any> = new EventEmitter();\n\n  private isProgressRangeValue(value: number): boolean {\n    return value >= poProgressMinValue && value <= poProgressMaxValue;\n  }\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m paleta de 12 cores.\n */\nexport enum PoColorPaletteEnum {\n  /** #0c9abe */\n  Color01 = 'color-01',\n\n  /** #2c85c8 */\n  Color02 = 'color-02',\n\n  /** #2c43c8 */\n  Color03 = 'color-03',\n\n  /** #5843c8 */\n  Color04 = 'color-04',\n\n  /** #ab43c8 */\n  Color05 = 'color-05',\n\n  /** #ab4391 */\n  Color06 = 'color-06',\n\n  /** #c64840 */\n  Color07 = 'color-07',\n\n  /** #ea9b3e */\n  Color08 = 'color-08',\n\n  /** #abc249 */\n  Color09 = 'color-09',\n\n  /** #56b96b */\n  Color10 = 'color-10',\n\n  /** #00b28e */\n  Color11 = 'color-11',\n\n  /** #06a6a5 */\n  Color12 = 'color-12'\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { PoProgressBaseComponent } from './po-progress-base.component';\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\n/**\n * @docsExtends PoProgressBaseComponent\n *\n * @example\n * <example name=\"po-progress-basic\" title=\"PO Progress Basic\">\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.html\"> </file>\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-labs\" title=\"PO Progress Labs\">\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.html\"> </file>\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-publication\" title=\"PO Progress - Publication\">\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.html\"> </file>\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-progress',\n  templateUrl: './po-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressComponent extends PoProgressBaseComponent {\n  get isAllowCancel(): boolean {\n    return !!this.cancel.observers.length && this.status !== PoProgressStatus.Success;\n  }\n\n  get isAllowProgressInfo(): boolean {\n    return !!(this.info || this.infoIcon || this.isAllowCancel || this.isAllowRetry);\n  }\n\n  get isAllowRetry(): boolean {\n    return !!this.retry.observers.length && this.status === PoProgressStatus.Error;\n  }\n\n  get statusClass(): string {\n    if (this.status === PoProgressStatus.Success) {\n      return 'po-progress-success';\n    }\n\n    if (this.status === PoProgressStatus.Error) {\n      return 'po-progress-error';\n    }\n\n    return 'po-progress-default';\n  }\n\n  emitCancellation() {\n    this.cancel.emit(this.status);\n  }\n\n  emitRetry() {\n    this.retry.emit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoProgressBarComponent } from './po-progress-bar/po-progress-bar.component';\nimport { PoProgressComponent } from './po-progress.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-progress`.\n */\n@NgModule({\n  imports: [CommonModule],\n  exports: [PoProgressComponent],\n  declarations: [PoProgressBarComponent, PoProgressComponent]\n})\nexport class PoProgressModule {}\n","/**\n * @docsPrivate\n *\n * @usedBy PoDialogService\n *\n * @description\n * Enums para as aÃ§Ãµes do componente po-dialog-base.service.\n */\nexport enum PoDialogType {\n  // Enum para alert\n  Alert,\n  // Enum para confirm\n  Confirm\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\n@Injectable()\nexport class PoColorPaletteService {\n  getColor(value: { color?: string; type?: string }): string {\n    return (<any>Object).values(PoColorPaletteEnum).includes(value.color)\n      ? value.color\n      : this.getColorFromType(value.type || value.color);\n  }\n\n  private getColorFromType(type: string): PoColorPaletteEnum {\n    switch (type) {\n      case 'danger':\n        return PoColorPaletteEnum.Color07;\n      case 'success':\n        return PoColorPaletteEnum.Color11;\n      case 'warning':\n        return PoColorPaletteEnum.Color08;\n      default:\n        return PoColorPaletteEnum.Color01;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteService } from './po-color-palette.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-color-palette`.\n */\n@NgModule({\n  providers: [PoColorPaletteService],\n  bootstrap: []\n})\nexport class PoColorPaletteModule {}\n","import { Injectable, ComponentRef, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoComponentInjectorService {\n  constructor(\n    private componentResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {}\n\n  // Cria um dinamicamente no ApplicationRef\n  createComponentInApplication(component: any): ComponentRef<any> {\n    const componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);\n    this.applicationRef.attachView(componentRef.hostView);\n    const domElem = (<any>componentRef.hostView).rootNodes[0];\n    document.body.appendChild(domElem);\n    return componentRef;\n  }\n\n  // DestrÃ³i o componente e remove do ApplicationRef\n  destroyComponentInApplication(componentRef: any) {\n    this.applicationRef.detachView(componentRef.hostView);\n    componentRef.destroy();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentInjectorService } from './po-component-injector.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [PoComponentInjectorService],\n  bootstrap: []\n})\nexport class PoComponentInjectorModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoControlPositionService } from './po-control-position.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o po-control-position.\n */\n@NgModule({\n  providers: [PoControlPositionService]\n})\nexport class PoControlPositionModule {}\n","/**\n * @docsPrivate\n *\n * Enums para a orientaÃ§Ã£o da notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterOrientation {\n  /** OrientÃ§Ã£o do componente fica no rodapÃ© */\n  Bottom,\n  /** OrientÃ§Ã£o do componente fica no topo */\n  Top\n}\n","import { Component, ComponentRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';\nimport { PoDialogType } from './po-dialog.enum';\nimport { PoModalAction } from '../../components/po-modal/po-modal-action.interface';\nimport { PoModalComponent } from '../../components/po-modal/po-modal.component';\n\nexport const poDialogAlertLiteralsDefault = {\n  en: <PoDialogAlertLiterals>{ ok: 'Ok' },\n  es: <PoDialogAlertLiterals>{ ok: 'Ok' },\n  pt: <PoDialogAlertLiterals>{ ok: 'Ok' },\n  ru: <PoDialogAlertLiterals>{ ok: 'ÐÐº' }\n};\n\nexport const poDialogConfirmLiteralsDefault = {\n  en: <PoDialogConfirmLiterals>{ cancel: 'Cancel', confirm: 'Confirm' },\n  es: <PoDialogConfirmLiterals>{ cancel: 'Cancelar', confirm: 'Confirmar' },\n  pt: <PoDialogConfirmLiterals>{ cancel: 'Cancelar', confirm: 'Confirmar' },\n  ru: <PoDialogConfirmLiterals>{ cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ', confirm: 'Ð¿Ð¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÑ' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que serve como container do po-dialog.service\n */\n\n@Component({\n  templateUrl: './po-dialog.component.html'\n})\nexport class PoDialogComponent implements OnDestroy, OnInit {\n  // ViewChild para o uso do po-modal.component\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  // Title do poModal\n  title: string;\n\n  // Message do poModal\n  message: string;\n\n  // Objeto primary do poModal\n  primaryAction: PoModalAction = { label: 'ok', action: () => {} };\n\n  // Objeto secondary do poModal\n  secondaryAction: PoModalAction;\n\n  // Literais usadas nos botÃ£o de alerta do poModal\n  literalsAlert: PoDialogAlertLiterals;\n\n  // Literais usadas nos botÃµes de confirmaÃ§Ã£o do poModal\n  literalsConfirm: PoDialogConfirmLiterals;\n\n  // Atributo para armazenar a referencia do componente criado via serviÃ§o.\n  private componentRef: ComponentRef<PoDialogComponent>;\n  private closeSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.poModal.onXClosed.subscribe(close => this.destroy());\n  }\n\n  // Fecha o poModal\n  close(): void {\n    this.poModal.close();\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  // Insere os valores recebidos de this.open para o poModal\n  configDialog(primaryLabel?, primaryAction?, secondaryLabel?, secondaryAction?) {\n    this.primaryAction = {\n      label: primaryLabel,\n      action: () => {\n        if (primaryAction) {\n          primaryAction();\n        }\n        this.close();\n      }\n    };\n\n    if (secondaryLabel) {\n      this.secondaryAction = {\n        label: secondaryLabel,\n        action: () => {\n          if (secondaryAction) {\n            secondaryAction();\n          }\n          this.close();\n        }\n      };\n    }\n  }\n\n  // Insere os valores recebidos de po-dialog.service de acordo com o tipo de diÃ¡lago solicitado\n  open(\n    dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions,\n    dialogType: PoDialogType,\n    componentRef?: ComponentRef<PoDialogComponent>\n  ): void {\n    this.title = dialogOptions.title;\n    this.message = dialogOptions.message;\n\n    this.componentRef = componentRef;\n\n    this.setDialogLiterals(dialogOptions, dialogType);\n\n    switch (dialogType) {\n      case PoDialogType.Confirm: {\n        this.configDialog(\n          this.literalsConfirm.confirm,\n          (<PoDialogConfirmOptions>dialogOptions).confirm,\n          this.literalsConfirm.cancel,\n          (<PoDialogConfirmOptions>dialogOptions).cancel\n        );\n        break;\n      }\n      case PoDialogType.Alert: {\n        this.configDialog(this.literalsAlert.ok, (<PoDialogAlertOptions>dialogOptions).ok);\n        break;\n      }\n    }\n\n    this.poModal.open();\n  }\n\n  private setDialogLiterals(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType) {\n    const alertLiterals = poDialogAlertLiteralsDefault;\n    const confirmLiterals = poDialogConfirmLiteralsDefault;\n    const literals = dialogOptions.literals;\n\n    if (dialogType === PoDialogType.Alert) {\n      this.literalsAlert = { ...alertLiterals[poLocaleDefault], ...alertLiterals[browserLanguage()], ...literals };\n    } else {\n      this.literalsConfirm = {\n        ...confirmLiterals[poLocaleDefault],\n        ...confirmLiterals[browserLanguage()],\n        ...literals\n      };\n    }\n  }\n}\n","import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @description\n *\n * O po-dialog Ã© um serviÃ§o para exibiÃ§Ã£o de caixas de diÃ¡logo, Ã© possÃ­vel customiza-los passando alguns parÃ¢metros de acordo com a\n * necessidade do desenvolvedor.\n */\n\nexport abstract class PoDialogBaseService {\n  /** Exibe um diÃ¡logo de confirmaÃ§Ã£o, Ã© possÃ­vel definir aÃ§Ãµes para as opÃ§Ãµes de confirmaÃ§Ã£o e cancelamento. */\n  confirm(confirmOptions: PoDialogConfirmOptions): void {\n    this.openDialog(PoDialogType.Confirm, confirmOptions);\n  }\n\n  /** Exibe um diÃ¡logo de alerta. */\n  alert(alertOptions: PoDialogAlertOptions): void {\n    this.openDialog(PoDialogType.Alert, alertOptions);\n  }\n\n  // Usado para chamar um diÃ¡logo\n  abstract openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void;\n}\n","import { Injectable, ComponentRef } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogBaseService } from './po-dialog-base.service';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @docsExtends PoDialogBaseService\n *\n * @example\n *\n * <example name=\"po-dialog-basic\" title=\"PO Dialog Basic\">\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.html\"> </file>\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-labs\" title=\"PO Dialog Labs\">\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.html\"> </file>\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-cancel-credit-card\" title=\"PO Dialog - Cancel Credit Card\">\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.html\"> </file>\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.ts\"> </file>\n * </example>\n */\n@Injectable()\nexport class PoDialogService extends PoDialogBaseService {\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoDialogComponent);\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.open(dialogOptions, dialogType, componentRef);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogService } from './po-dialog.service';\n\n@NgModule({\n  declarations: [PoDialogComponent],\n  imports: [PoModalModule],\n  exports: [PoDialogComponent],\n  providers: [PoDialogService]\n})\nexport class PoDialogModule {}\n","import { PipeTransform } from '@angular/core';\n\n/**\n * @description\n *\n * O pipe po-i18n Ã© responsÃ¡vel por tratar literais parÃ¢metrizadas, dando mais flexibilidade as literais de traduÃ§Ã£o.\n * O nÃºmero de parÃ¢metros inseridos nas literais deve coincidir com a quantia de parÃ¢metros passados por parÃ¢metro,\n * os parÃ¢metros serÃ£o substituidos de acordo com a ordem informada.\n *\n * Para inserir um parÃ¢metro em uma literal, o mesmo deverÃ¡ ser inserido entre chaves dentro da literal e posicionado\n * de acordo como deve ser exibido apÃ³s a sua transformaÃ§Ã£o.\n *\n * ```\n * const i18nPT = {\n *   pagination: 'PÃ¡gina {1} de {2} pÃ¡ginas.',\n *   totalPages: 'Total de {totalPages} encontradas.'\n * };\n * ```\n *\n * Ã possÃ­vel passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem\n * informada na literal.\n *\n * ```\n * {{ i18nPT.pagination | poI18n:[1,10] }}\n * {{ i18nPT.totalPages | poI18n:10 }}\n * ```\n */\nexport class PoI18nBasePipe implements PipeTransform {\n  transform(value: string, args: any): string {\n    if (!value) {\n      return '';\n    }\n\n    if (!(args instanceof Array)) {\n      args = [args];\n    }\n\n    for (const arg of args) {\n      value = value.replace(/(\\{\\w*\\})+/, arg);\n    }\n\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { PoI18nBasePipe } from './po-i18n-base.pipe';\n\n/**\n * @docsExtends PoI18nBasePipe\n *\n * @example\n * <example name='po-i18n-pipe-labs' title='PO i18n Pipe Labs' >\n *  <file name='sample-po-i18n-pipe-labs.component.html'> </file>\n *  <file name='sample-po-i18n-pipe-labs.component.ts'> </file>\n *  <file name='sample-po-i18n-pipe.component.html'> </file>\n *  <file name='sample-po-i18n-pipe.component.ts'> </file>\n * </example>\n */\n@Pipe({\n  name: 'poI18n'\n})\nexport class PoI18nPipe extends PoI18nBasePipe implements PipeTransform {}\n","/**\n * @docsPrivate\n *\n * Enums para os tipos de notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterType {\n  /** Enum para informaÃ§Ãµes do tipo \"Erro\" */\n  Error,\n  /** Enum para informaÃ§Ãµes do tipo \"InformaÃ§Ã£o\" */\n  Information,\n  /** Enum para informaÃ§Ãµes do tipo \"Sucesso\" */\n  Success,\n  /** Enum para informaÃ§Ãµes do tipo \"AtenÃ§Ã£o\" */\n  Warning\n}\n","import { PoToasterOrientation } from './po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToaster } from './po-toaster.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-toaster foi construÃ­do para exibir notificaÃ§Ãµes para o usuÃ¡rio.\n */\nexport abstract class PoToasterBaseComponent {\n  /** Disponibiliza uma aÃ§Ã£o para a notificaÃ§Ã£o. */\n  action: Function;\n\n  /** Permite alterar o label do botÃ£o quando houver uma aÃ§Ã£o definida. */\n  actionLabel: string;\n\n  /** Mensagem a ser exibida na notificaÃ§Ã£o. */\n  message: string;\n\n  /** OrientaÃ§Ã£o da notificaÃ§Ã£o, a mesma pode ser exibida na parte superior ou inferior da pÃ¡gina. */\n  orientation: PoToasterOrientation = PoToasterOrientation.Bottom;\n\n  /** ComponentRef */\n  componentRef: any;\n\n  /** PosiÃ§Ã£o para notificaÃ§Ã£o aparecer na tela. */\n  position: number;\n\n  /** Tipo de notificaÃ§Ã£o. */\n  type: PoToasterType;\n\n  /** Fecha a notificaÃ§Ã£o. */\n  abstract close(): void;\n\n  /**\n   * Altera a posiÃ§Ã£o da notificaÃ§Ã£o.\n   * @param number value\n   */\n  abstract changePosition(value: number): void;\n\n  /**\n   * Configura o componente po-toaster de acordo com as definiÃ§Ãµes do usuÃ¡rio.\n   * @param PoToaster poToaster\n   * @param ComponentRef comp\n   */\n  abstract configToaster(poToaster: PoToaster): void;\n}\n","/**\n * @usedBy PoTableComponent\n *\n * @description\n * Tipos de ordenaÃ§Ã£o das colunas da tabela.\n */\nexport enum PoTableColumnSortType {\n  /** OrdenaÃ§Ã£o ascendente */\n  Ascending = 'ascending',\n\n  /** OrdenaÃ§Ã£o descendente */\n  Descending = 'descending'\n}\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoToasterBaseComponent } from './po-toaster-base.component';\nimport { PoToaster } from './po-toaster.interface';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToasterOrientation } from './po-toaster-orientation.enum';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToasterBaseComponent\n */\n@Component({\n  selector: 'po-toaster',\n  templateUrl: './po-toaster.component.html'\n})\nexport class PoToasterComponent extends PoToasterBaseComponent {\n  /* Ãcone do Toaster */\n  private icon: string;\n  /* Margem do Toaster referÃªnte Ã  sua orientaÃ§Ã£o e posiÃ§Ã£o*/\n  private margin: number = 20;\n  /* Observable para monitorar o Close to Toaster */\n  private observableOnClose = new Subject<any>();\n  /* Mostra ou oculta o Toaster */\n  private showToaster: boolean = true;\n  /* PosiÃ§Ã£o do Toaster*/\n  private toasterPosition: string = 'po-toaster-bottom';\n  /* Tipo do Toaster */\n  private toasterType: string;\n\n  /* Componente toaster */\n  @ViewChild('toaster') toaster: ElementRef;\n\n  constructor(public changeDetector: ChangeDetectorRef, private elementeRef?: ElementRef) {\n    super();\n  }\n\n  /* Muda a posiÃ§Ã£o do Toaster na tela*/\n  changePosition(position: number): void {\n    this.elementeRef.nativeElement.style.display = 'table';\n\n    this.margin = 6 + 44 * position + position * 6;\n\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toaster.nativeElement.style.top = this.margin + 'px';\n    } else {\n      this.toaster.nativeElement.style.bottom = this.margin + 'px';\n    }\n  }\n\n  /* Fecha o componente Toaster */\n  close(): void {\n    this.showToaster = false;\n    this.observableOnClose.next(true);\n  }\n\n  /* Configura o Toaster com os atributos passados para ele */\n  configToaster(poToaster: PoToaster) {\n    this.type = poToaster.type;\n    this.message = poToaster.message;\n    this.orientation = poToaster.orientation;\n    this.position = poToaster.position;\n    this.action = poToaster.action;\n    this.actionLabel = poToaster.actionLabel ? poToaster.actionLabel : 'Fechar';\n    this.componentRef = poToaster.componentRef;\n\n    /* Muda a orientaÃ§Ã£o do Toaster */\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toasterPosition = 'po-toaster-top';\n    }\n\n    /* Muda a posiÃ§Ã£o do Toaster */\n    this.changePosition(this.position);\n\n    /* Switch para o tipo de Toaster */\n    switch (this.type) {\n      case PoToasterType.Error: {\n        this.toasterType = 'po-toaster-error';\n        this.icon = 'po-icon-close';\n        break;\n      }\n      case PoToasterType.Information: {\n        this.toasterType = 'po-toaster-info';\n        this.icon = 'po-icon-info';\n        break;\n      }\n      case PoToasterType.Success: {\n        this.toasterType = 'po-toaster-success';\n        this.icon = 'po-icon-ok';\n        break;\n      }\n      case PoToasterType.Warning: {\n        this.toasterType = 'po-toaster-warning';\n        this.icon = 'po-icon-warning';\n        break;\n      }\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  getShowToaster() {\n    return this.showToaster;\n  }\n\n  getIcon() {\n    return this.icon;\n  }\n\n  getToasterPosition() {\n    return this.toasterPosition;\n  }\n\n  getToasterType() {\n    return this.toasterType;\n  }\n\n  /* Chama a funÃ§Ã£o passada pelo atributo `action` */\n  poToasterAction(): void {\n    this.action(this);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n@NgModule({\n  declarations: [PoToasterComponent],\n  imports: [CommonModule],\n  exports: [],\n  providers: [],\n  bootstrap: []\n})\nexport class PoNotificationModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteModule } from './po-color-palette/po-color-palette.module';\nimport { PoComponentInjectorModule } from './po-component-injector/po-component-injector.module';\nimport { PoControlPositionModule } from './po-control-position/po-control-position.module';\nimport { PoDateTimeModule } from './po-date/po-date.module';\nimport { PoDialogModule } from './po-dialog/po-dialog.module';\nimport { PoI18nPipe } from './po-i18n/po-i18n.pipe';\nimport { PoLanguageModule } from './po-language/po-language.module';\nimport { PoNotificationModule } from './po-notification/po-notification.module';\n\n@NgModule({\n  declarations: [PoI18nPipe],\n  imports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoLanguageModule,\n    PoNotificationModule\n  ],\n  exports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoI18nPipe,\n    PoNotificationModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoServicesModule {}\n","import { ElementRef, Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst PO_POPOVER_DEFAULT_POSITION = 'right';\nconst PO_POPOVER_DEFAULT_TRIGGER = 'click';\nconst PO_POPOVER_TRIGGERS = ['click', 'hover'];\n\n/**\n * @description\n *\n * O componente `po-popover` Ã© um container pequeno recomendado para incluir vÃ¡rios tipos de conteÃºdo como:\n * grÃ¡ficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n *\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\n * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).\n *\n * Para conteÃºdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).\n *\n * Ele contÃ©m um tÃ­tulo e tambÃ©m Ã© possÃ­vel escolher as posiÃ§Ãµes do popover em relaÃ§Ã£o ao componente pai,\n * as posiÃ§Ãµes permitidas sÃ£o: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n *\n * TambÃ©m Ã© possÃ­vel escolher entre os dois eventos que podem abrir o *popover*.\n * Os eventos permitidos sÃ£o: `click` e `hover`.\n *\n */\n@Directive()\nexport class PoPopoverBaseComponent {\n  // Controla se o popover fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto.\n  isHidden: boolean = true;\n\n  private _hideArrow: boolean = false;\n  private _position?: string = PO_POPOVER_DEFAULT_POSITION;\n  private _trigger?: string = PO_POPOVER_DEFAULT_TRIGGER;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a seta do componente *popover*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-popover abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"right\" (direita), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popover no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popover abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popover abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popover acima do componente alvo.\n   * - `top-right`: Posiciona o po-popover acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popover acima e Ã  esquerda do componente alvo.\n   *\n   *\n   * @default right\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @description\n   *\n   * ElementRef do componente de origem responsÃ¡vel por abrir o popover.\n   * Para utilizar o po-popover deve-se colocar uma variÃ¡vel no componente que vai disparar o evento\n   * de abertura, exemplo:\n   *\n   * ```\n   * <po-button\n   *   p-label=\"Open Popover\">\n   * </po-button>\n   *\n   * <po-popover\n   *   [p-origin]=\"poButton\"\n   *   [p-title]=\"PO Popover\">\n   * </po-popover>\n   * ```\n   *\n   * TambÃ©m deve-se criar um ViewChild para cada popover, passando como referÃªncia o elemento do\n   * HTML que irÃ¡ disparar o evento. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\n   * ```\n   */\n  @Input('p-target') target: ElementRef;\n\n  /** TÃ­tulo do popover. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @description\n   *\n   * Define o evento que abrirÃ¡ o po-popover.\n   *\n   * Valores vÃ¡lidos:\n   *  - `click`: Abre ao clicar no componente alvo.\n   *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\n   *\n   * @default click\n   * @optional\n   */\n  @Input('p-trigger') set trigger(value: string) {\n    this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;\n  }\n\n  get trigger(): string {\n    return this._trigger;\n  }\n\n  protected clickoutListener: () => void;\n  protected mouseEnterListener: () => void;\n  protected mouseLeaveListener: () => void;\n  protected resizeListener: () => void;\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';\nimport { PoPopoverBaseComponent } from './po-popover-base.component';\n\n/**\n *\n * @docsExtends PoPopoverBaseComponent\n *\n * @example\n *\n * <example name=\"po-popover-basic\" title=\"PO Popover Basic\">\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.html\"> </file>\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-labs\" title=\"PO Popover Labs\">\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.html\"> </file>\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-credit-card\" title=\"PO Popover - Credit Card\">\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.html\"> </file>\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-popover',\n  templateUrl: './po-popover.component.html',\n  providers: [PoControlPositionService]\n})\nexport class PoPopoverComponent extends PoPopoverBaseComponent implements AfterViewInit, OnDestroy {\n  arrowDirection = 'left';\n  timeoutResize;\n\n  eventListenerFunction: () => void;\n\n  @ViewChild('popoverElement', { read: ElementRef, static: true }) popoverElement: ElementRef;\n\n  constructor(private renderer: Renderer2, private poControlPosition: PoControlPositionService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    this.initEventListenerFunction();\n\n    this.setElementsControlPosition();\n\n    this.setRendererListenInit();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  close(): void {\n    this.isHidden = true;\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.setPopoverPosition();\n    }, 200);\n  }\n\n  open(): void {\n    this.addScrollEventListener();\n\n    this.isHidden = false;\n    this.setOpacity(0);\n\n    setTimeout(() => {\n      this.setElementsControlPosition();\n      this.setPopoverPosition();\n      this.setOpacity(1);\n    });\n  }\n\n  setOpacity(value: number): void {\n    this.popoverElement.nativeElement.style.opacity = value;\n  }\n\n  setPopoverPosition() {\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  setRendererListenInit() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: Event) => {\n      if (!this.isHidden) {\n        this.debounceResize();\n      }\n    });\n\n    if (this.trigger === 'hover') {\n      this.mouseEnterListener = this.renderer.listen(this.target.nativeElement, 'mouseenter', (event: MouseEvent) => {\n        this.open();\n      });\n\n      this.mouseLeaveListener = this.renderer.listen(this.target.nativeElement, 'mouseleave', (event: MouseEvent) => {\n        this.close();\n      });\n    } else {\n      this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n        this.togglePopup(event);\n      });\n    }\n  }\n\n  togglePopup(event): void {\n    if (\n      !this.isHidden &&\n      !this.popoverElement.nativeElement.contains(event.target) &&\n      !this.target.nativeElement.contains(event.target)\n    ) {\n      this.close();\n    } else if (this.target.nativeElement.contains(event.target)) {\n      this.popoverElement.nativeElement.hidden ? this.open() : this.close();\n    }\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private initEventListenerFunction() {\n    this.eventListenerFunction = () => {\n      this.setPopoverPosition();\n    };\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.resizeListener();\n\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private setElementsControlPosition() {\n    const popoverOffset = 8;\n    this.poControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverComponent } from './po-popover.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-popover.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoPopoverComponent],\n  exports: [PoPopoverComponent]\n})\nexport class PoPopoverModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Pipe responsÃ¡vel por apresentar um horÃ¡rio baseado no formato de entrada definido na API do PO UI.\n */\n@Pipe({\n  name: 'po_time'\n})\nexport class PoTimePipe implements PipeTransform {\n  transform(time: string, format?: string): string {\n    const hourRegex = /^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\\.]?([0-9]{1,6})?$/g;\n\n    if (isTypeof(time, 'string') && hourRegex.test(time)) {\n      const amountOfF = format ? format.lastIndexOf('f') - format.indexOf('f') + 1 : 0;\n\n      const miliseconds = this.addDotMiliseconds(time.substring(9, 9 + amountOfF), amountOfF);\n      const formatMiliseconds: string = this.getFormatMiliseconds(amountOfF);\n\n      return this.formatValue(time, format, formatMiliseconds, miliseconds);\n    }\n    return null;\n  }\n\n  private addDotMiliseconds(miliseconds: string, amountOfF: number): string {\n    if (miliseconds && amountOfF) {\n      miliseconds = '.' + miliseconds;\n    }\n    return miliseconds;\n  }\n\n  private formatValue(time: string, format: string, formatMiliseconds: string, miliseconds: string): string {\n    if (time && format) {\n      const hour = time.substring(0, 2);\n      const minutes = time.substring(3, 5);\n      const seconds = time.substring(6, 8);\n\n      format = format.replace('HH', hour);\n      format = format.replace('mm', minutes);\n      format = format.replace('ss', seconds);\n      format = format.replace(`.${formatMiliseconds}`, miliseconds);\n\n      return format;\n    } else {\n      return time;\n    }\n  }\n\n  private getFormatMiliseconds(amountOfF: number): string {\n    let formatMiliseconds: string = '';\n\n    for (let i = 0; i < amountOfF; i++) {\n      formatMiliseconds += 'f';\n    }\n\n    return formatMiliseconds;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoTimePipe } from './po-time.pipe';\n\n/**\n * @description\n *\n * MÃ³dulo do pipe `po-time`.\n */\n@NgModule({\n  declarations: [PoTimePipe],\n  imports: [],\n  exports: [PoTimePipe],\n  providers: [],\n  bootstrap: []\n})\nexport class PoTimeModule {}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\nimport { PoTableColumnIcon } from './po-table-column-icon.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir Ã­cones nas colunas.\n */\n@Component({\n  selector: 'po-table-column-icon',\n  templateUrl: './po-table-column-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableColumnIconComponent {\n  private _icons: Array<PoTableColumnIcon> = [];\n\n  /** DefiniÃ§Ã£o da coluna que utiliza os icones. */\n  @Input('p-column') column: PoTableColumn;\n\n  /** Lista de colunas com Ã­cones. */\n  @Input('p-icons') set icons(icons: Array<PoTableColumnIcon> | Array<string> | string) {\n    this._icons = this.convertToColumnIcon(icons);\n  }\n\n  get icons() {\n    return this._icons;\n  }\n\n  /** Dados da linha da tabela. */\n  @Input('p-row') row: any;\n\n  click(columnIcon: PoTableColumnIcon, event): void {\n    const isAbleAction = !this.isDisabled(columnIcon);\n\n    if (isAbleAction) {\n      if (columnIcon.action) {\n        columnIcon.action(this.row, columnIcon);\n      } else if (this.column.action) {\n        this.column.action(this.row, columnIcon);\n      }\n      event.stopPropagation();\n    }\n  }\n\n  getColor(column: PoTableColumnIcon): string {\n    const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;\n\n    if (color) {\n      return `po-text-${color}`;\n    }\n  }\n\n  getIcon(column: PoTableColumnIcon) {\n    return column.icon || column.value;\n  }\n\n  isClickable(columnIcon: PoTableColumnIcon): boolean {\n    return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));\n  }\n\n  isDisabled(column: PoTableColumnIcon): boolean {\n    return column.disabled ? column.disabled(this.row) : false;\n  }\n\n  trackByFunction(index) {\n    return index;\n  }\n\n  private convertToColumnIcon(rowIcons: Array<PoTableColumnIcon> | Array<string> | string): Array<PoTableColumnIcon> {\n    if (Array.isArray(rowIcons)) {\n      return (<any>rowIcons).map(rowIcon => (typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon));\n    }\n\n    if (typeof rowIcons === 'string') {\n      return [{ value: rowIcons }];\n    }\n\n    return [];\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableColumnLabel } from './po-table-column-label.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de texto .\n */\n\n@Component({\n  selector: 'po-table-column-label',\n  templateUrl: './po-table-column-label.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableColumnLabelComponent {\n  private _value: PoTableColumnLabel;\n\n  /** Objeto com os dados do label */\n  @Input('p-value') set value(value: PoTableColumnLabel) {\n    if (value) {\n      value.color = this.poColorPaletteService.getColor(value);\n    }\n\n    this._value = value;\n  }\n  get value(): PoTableColumnLabel {\n    return this._value;\n  }\n\n  constructor(private poColorPaletteService: PoColorPaletteService) {}\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { isExternalLink } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir link nas colunas.\n */\n@Component({\n  selector: 'po-table-column-link',\n  templateUrl: './po-table-column-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableColumnLinkComponent {\n  @Input('p-action') action: Function;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-link') link: string;\n\n  @Input('p-row') row;\n\n  @Input('p-value') value: string;\n\n  get type() {\n    if (this.disabled) {\n      return 'disabled';\n    }\n\n    if (this.action) {\n      return 'action';\n    }\n\n    if (isExternalLink(this.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToInt, poLocaleDefault } from '../../../utils/util';\nimport { PoCheckboxGroupOption } from '../../po-field/po-checkbox-group/interfaces/po-checkbox-group-option.interface';\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\n\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\n\nconst PoTableColumnManagerMaxColumnsDefault = 99999;\n\nexport const poTableColumnManagerLiteralsDefault = {\n  en: {\n    columnsManager: 'Columns manager',\n    restoreDefault: 'Restore default'\n  },\n  es: {\n    columnsManager: 'Gerente de columna',\n    restoreDefault: 'Restaurar por defecto'\n  },\n  pt: {\n    columnsManager: 'Gerenciador de colunas',\n    restoreDefault: 'Restaurar padrÃ£o'\n  },\n  ru: {\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº',\n    restoreDefault: 'ÑÐ±ÑÐ¾Ñ Ð½Ð°ÑÑÑÐ¾ÐµÐº'\n  }\n};\n\n@Component({\n  selector: 'po-table-column-manager',\n  templateUrl: './po-table-column-manager.component.html'\n})\nexport class PoTableColumnManagerComponent implements OnInit, OnChanges, OnDestroy {\n  private _maxColumns: number = PoTableColumnManagerMaxColumnsDefault;\n\n  columnsOptions: Array<PoCheckboxGroupOption> = [];\n  literals = {\n    ...poTableColumnManagerLiteralsDefault[poLocaleDefault],\n    ...poTableColumnManagerLiteralsDefault[browserLanguage()]\n  };\n  visibleColumns: Array<string> = [];\n\n  private defaultColumns: Array<PoTableColumn> = [];\n  private resizeListener: () => void;\n\n  @Input('p-columns') columns: Array<PoTableColumn> = [];\n\n  @Input('p-max-columns') set maxColumns(value: number) {\n    this._maxColumns = convertToInt(value, PoTableColumnManagerMaxColumnsDefault);\n  }\n\n  get maxColumns() {\n    return this._maxColumns;\n  }\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-visible-columns-change') visibleColumnsChange = new EventEmitter<Array<PoTableColumn>>();\n\n  @ViewChild(PoPopoverComponent) popover: PoPopoverComponent;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.updateColumnsOptions(this.columns);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { columns, maxColumns, target } = changes;\n\n    if (target && target.firstChange) {\n      this.initializeListeners();\n    }\n\n    if (columns) {\n      this.onChangeColumns(columns);\n    }\n\n    if (maxColumns) {\n      this.updateColumnsOptions(this.columns);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  onChangeVisibleColumns(checkedColumns: Array<string>) {\n    this.disableColumnsOptions(this.columnsOptions);\n\n    const visibleTableColumns = this.getVisibleTableColumns(checkedColumns);\n\n    this.visibleColumnsChange.emit(visibleTableColumns);\n  }\n\n  restore() {\n    this.updateColumnsOptions(this.defaultColumns);\n  }\n\n  // desabilitarÃ¡ as colunas, que nÃ£o estiverem selecionadas, apÃ³s exeder o numero maximo de colunas.\n  private disableColumnsOptions(columns: Array<PoCheckboxGroupOption> = []) {\n    // necessario timeout para que seja possivel atualizar os columnsOptions apos a mudanÃ§a do model\n    setTimeout(() => {\n      this.columnsOptions = columns.map(column => ({\n        ...column,\n        disabled: this.isDisableColumn(column.value)\n      }));\n    });\n  }\n\n  private getColumnTitleLabel(column: PoTableColumn) {\n    return column.label || capitalizeFirstLetter(column.property);\n  }\n\n  /** Retorna um Array de column.property das colunas que sÃ£o visiveis. */\n  private getVisibleColumns(columns: Array<PoTableColumn>): Array<string> {\n    const visibleColumns = [];\n\n    columns.forEach(column => {\n      if (column.visible !== false && visibleColumns.length < this.maxColumns && column.type !== 'detail') {\n        visibleColumns.push(column.property);\n      }\n    });\n\n    return visibleColumns;\n  }\n\n  /** Retorna um Array PoTableColumn a partir das colunas visiveis no gerenciador de colunas. */\n  private getVisibleTableColumns(visibleColumns: Array<string>): Array<PoTableColumn> {\n    return this.columns.map(column => ({\n      ...column,\n      visible: visibleColumns.includes(column.property) || column.type === 'detail'\n    }));\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      if (this.popover) {\n        this.popover.close();\n      }\n    });\n  }\n\n  private isDisableColumn(property: string): boolean {\n    return this.visibleColumns.length >= this.maxColumns ? !this.visibleColumns.includes(property) : false;\n  }\n\n  private mapTableColumnsToCheckboxOptions(columns: Array<PoTableColumn> = []) {\n    const columnsOptions = [];\n\n    columns.forEach(column => {\n      if (column.type !== 'detail') {\n        columnsOptions.push({\n          value: column.property,\n          label: this.getColumnTitleLabel(column),\n          disabled: this.isDisableColumn(column.property)\n        });\n      }\n    });\n\n    return columnsOptions;\n  }\n\n  private onChangeColumns(columns: SimpleChange) {\n    const { firstChange, currentValue = [], previousValue = [] } = columns;\n\n    // atualizara o defaultColumns, quando for a primeira vez ou quando o defaultColumns for diferente do currentValue\n    if (firstChange || this.defaultColumns.length !== currentValue.length) {\n      this.defaultColumns = currentValue;\n    }\n\n    // verifica se o valor anterior Ã© diferente do atual para atualizar as columnsOptions apenas quando for necessario\n    if (previousValue.length !== currentValue.length) {\n      this.updateColumnsOptions(currentValue);\n    }\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private updateColumnsOptions(columns: Array<PoTableColumn>) {\n    this.visibleColumns = this.getVisibleColumns(columns);\n    this.columnsOptions = this.mapTableColumnsToCheckboxOptions(columns);\n\n    this.onChangeVisibleColumns(this.visibleColumns);\n  }\n}\n","import { EventEmitter, Input, OnChanges, Output, Directive, SimpleChanges } from '@angular/core';\n\nimport {\n  browserLanguage,\n  capitalizeFirstLetter,\n  convertToBoolean,\n  isTypeof,\n  sortValues,\n  poLocaleDefault\n} from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnSort } from './interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from './enums/po-table-column-sort-type.enum';\nimport { PoTableLiterals } from './interfaces/po-table-literals.interface';\n\nexport const poTableContainer = ['border', 'shadow'];\nexport const poTableContainerDefault = 'border';\n\nexport const poTableLiteralsDefault = {\n  en: <PoTableLiterals>{\n    noColumns: 'Columns are not defined',\n    noData: 'No data found',\n    noVisibleColumn: 'No visible column',\n    loadingData: 'Loading',\n    loadMoreData: 'Load more data',\n    seeCompleteSubtitle: 'See complete subtitle',\n    completeSubtitle: 'Complete subtitle',\n    columnsManager: 'Columns manager'\n  },\n  es: <PoTableLiterals>{\n    noColumns: 'Columnas no definidas',\n    noData: 'Datos no encontrados',\n    noVisibleColumn: 'Sin columnas visibles',\n    loadingData: 'Cargando datos',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    seeCompleteSubtitle: 'Ver subtitulo completo',\n    completeSubtitle: 'Subtitulo completo',\n    columnsManager: 'Gerente de columna'\n  },\n  pt: <PoTableLiterals>{\n    noColumns: 'Nenhuma definiÃ§Ã£o de colunas',\n    noData: 'Nenhum dado encontrado',\n    noVisibleColumn: 'Nenhuma coluna visÃ­vel',\n    loadingData: 'Carregando',\n    loadMoreData: 'Carregar mais resultados',\n    seeCompleteSubtitle: 'Ver legenda completa',\n    completeSubtitle: 'Legenda completa',\n    columnsManager: 'Gerenciador de colunas'\n  },\n  ru: <PoTableLiterals>{\n    noColumns: 'ÐÐµÑ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ñ ÑÑÐ¾Ð»Ð±ÑÐ°',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    noVisibleColumn: 'Ð½ÐµÑ Ð²Ð¸Ð´Ð¸Ð¼ÑÑ ÑÑÐ¾Ð»Ð±ÑÐ¾Ð²',\n    loadingData: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°',\n    loadMoreData: 'Ð·Ð°Ð³ÑÑÐ·ÐºÐ°',\n    seeCompleteSubtitle: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð¿Ð¾Ð»Ð½ÑÐ¹ ÑÑÐ±ÑÐ¸ÑÑ',\n    completeSubtitle: 'ÐÐ¾Ð»Ð½ÑÐ¹ Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº',\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº'\n  }\n};\n\n/**\n * @description\n *\n * Este componente de tabela Ã© utilizado para exibiÃ§Ã£o de dados com diferentes tipos como por exemplo textos, data, horas e nÃºmeros com\n * formato personalizado.\n *\n * TambÃ©m Ã© possivel criar tabelas com ordenaÃ§Ã£o de dados, linhas com detalhes, coluna para seleÃ§Ã£o de linhas, coluna com aÃ§Ãµes e tambÃ©m\n * carregamento por demanda atravÃ©s do botÃ£o **Carregar mais resultados**.\n *\n * > As linhas de detalhes podem tambÃ©m ser customizadas atravÃ©s do [`p-table-row-template`](/documentation/po-table-row-template).\n *\n * O componente permite gerenciar a exibiÃ§Ã£o das colunas dinamicamente. Esta funcionalidade pode ser acessada atravÃ©s do Ã­cone de engrenagem\n * no canto superior direito do cabeÃ§alho da tabela.\n *\n * Caso a largura de todas as colunas forem definidas e o total ultrapassar o tamanho tabela, serÃ¡ exibido um *scroll* na horizontal para a\n * completa visualizaÃ§Ã£o dos dados.\n */\n@Directive()\nexport abstract class PoTableBaseComponent implements OnChanges {\n  private _actions?: Array<PoTableAction> = [];\n  private _columns: Array<PoTableColumn> = [];\n  private _container?: string;\n  private _height?: number;\n  private _hideDetail?: boolean = false;\n  private _hideTextOverflow?: boolean = false;\n  private _items: Array<PoTableColumn>;\n  private _literals: PoTableLiterals;\n  private _loading?: boolean = false;\n  private _selectable?: boolean;\n\n  allColumnsWidthPixels: boolean;\n  columnMasterDetail: PoTableColumn;\n  hasMainColumns: boolean = false;\n  mainColumns: Array<PoTableColumn> = [];\n  selectAll = false;\n  sortedColumn = { property: <PoTableColumn>null, ascending: true };\n  subtitleColumns: Array<PoTableColumn> = [];\n\n  /**\n   * @description\n   *\n   * Lista de itens da tabela.\n   * > Se falso, serÃ¡ inicializado como um *array* vazio.\n   */\n  @Input('p-items') set items(items: Array<any>) {\n    this._items = Array.isArray(items) ? items : [];\n\n    // when haven't items, selectAll should be unchecked.\n    if (!this.hasItems) {\n      this.selectAll = false;\n    } else if (!this.hasColumns) {\n      this.columns = this.getDefaultColumns(items[0]);\n    }\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista das colunas da tabela, deve receber um *array* de objetos que implementam a interface `PoTableColumn`.\n   * Por padrÃ£o receberÃ¡ como valor a primeira coluna da lista de itens da tabela.\n   * > Caso nÃ£o encontre valor, a mensagem 'Nenhuma definiÃ§Ã£o de colunas' serÃ¡ exibida.\n   *\n   */\n  @Input('p-columns') set columns(columns: Array<PoTableColumn>) {\n    this._columns = columns || [];\n\n    if (this._columns.length) {\n      this.setColumnLink();\n      this.calculateWidthHeaders();\n    } else if (this.hasItems) {\n      this._columns = this.getDefaultColumns(this.items[0]);\n    }\n\n    this.onChangeColumns();\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Adiciona um contorno arredondado ao `po-table`, as opÃ§Ãµes sÃ£o:\n   * - `border`: com bordas/linhas.\n   * - `shadow`: com sombras.\n   *\n   * @default `border`\n   */\n  @Input('p-container') set container(value: string) {\n    this._container = poTableContainer.includes(value) ? value : poTableContainerDefault;\n  }\n\n  get container(): string {\n    return this._container;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Se verdadeiro, habilita a quebra de texto ao transborda-lo dentro de qualquer coluna.\n   * > Quando ocorrer a quebra de texto, ao passar o mouse no conteÃºdo da cÃ©lula,\n   * o mesmo serÃ¡ exibido atravÃ©s do [`po-tooltip`](/documentation/po-tooltip).\n   */\n  @Input('p-hide-text-overflow') set hideTextOverflow(hideTextOverflow: boolean) {\n    this._hideTextOverflow = convertToBoolean(hideTextOverflow);\n  }\n\n  get hideTextOverflow() {\n    return this._hideTextOverflow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da tabela em *pixels* e fixa o cabeÃ§alho.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n    this.calculateWidthHeaders();\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita a visualizaÃ§Ã£o da lista de detalhes de cada linha da coluna.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-detail') set hideDetail(hideDetail: boolean) {\n    this._hideDetail = hideDetail != null && hideDetail.toString() === '' ? true : convertToBoolean(hideDetail);\n    this.calculateWidthHeaders();\n  }\n\n  get hideDetail() {\n    return this._hideDetail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-table`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    loadMoreData: 'Buscar mais dados',\n   *    loadingData: 'Processando',\n   *    noColumns: 'Sem colunas',\n   *    noData: 'Sem dados',\n   *    seeCompleteSubtitle: 'Mostrar legenda completa',\n   *    completeSubtitle: 'Todas legendas'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-table\n   *   [p-literals]=\"customLiterals\">\n   * </po-table>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoTableLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poTableLiteralsDefault[poLocaleDefault],\n        ...poTableLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poTableLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poTableLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Bloqueia interaÃ§Ã£o do usuÃ¡rio com os dados da _table_, apresentando um _loading_ ao centro da mesma.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(loading: boolean) {\n    this._loading = convertToBoolean(loading);\n    this.calculateWidthHeaders();\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 3.x.x\n   *\n   * @description\n   *\n   * ***Deprecated 3.x.x***\n   *\n   * > Esta propriedade estÃ¡ depreciada, utilize a propriedade `p-selectable`.\n   *\n   * Habilita na primeira coluna a opÃ§Ã£o de selecionar linhas,\n   * todos os itens da lista possuem a propriedade dinÃ¢mica `$selected` para identificar se a linha estÃ¡ selecionada.\n   * > Exemplo: `item.$selected` ou `item['$selected']`.\n   * > Os itens filhos possuem comportamento independente do item pai.\n   *\n   * @default `false`\n   */\n  @Input('p-checkbox') set checkbox(checkbox: boolean) {\n    this.selectable = checkbox;\n  }\n\n  get checkbox() {\n    return this.selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes.\n   *\n   * Quando houver apenas uma aÃ§Ã£o definida ela serÃ¡ exibida diretamente na coluna, caso contrÃ¡rio, o componente\n   * se encarrega de agrupÃ¡-las exibindo o Ã­cone [**po-icon-more**](/guides/icons) que listarÃ¡ as aÃ§Ãµes ao ser clicado.\n   *\n   * **A coluna de aÃ§Ãµes nÃ£o serÃ¡ exibida quando:**\n   *  - a lista conter valores invÃ¡lidos ou indefinidos.\n   *  - tenha uma Ãºnica aÃ§Ã£o e a mesma nÃ£o for visÃ­vel.\n   */\n  @Input('p-actions') set actions(actions: Array<PoTableAction>) {\n    this._actions = actions;\n    this.calculateWidthHeaders();\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite a seleÃ§Ã£o de linhas na tabela e, caso a propriedade `p-single-select` esteja definida serÃ¡ possÃ­vel\n   * selecionar apenas uma Ãºnica linha.\n   *\n   * **Importante:**\n   *  - As linhas de detalhe definidas em `PoTableDetail` possuem comportamento independente da linha mestre;\n   *  - Cada linha possui por padrÃ£o a propriedade dinÃ¢mica `$selected`, na qual Ã© possÃ­vel validar se a linha\n   * estÃ¡ selecionada, por exemplo: `item.$selected` ou `item['$selected']`.\n   *\n   * @default `false`\n   */\n  @Input('p-selectable') set selectable(value: boolean) {\n    this._selectable = <any>value === '' ? true : convertToBoolean(value);\n    this.calculateWidthHeaders();\n  }\n\n  get selectable() {\n    return this._selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita em todas as colunas a opÃ§Ã£o de ordenaÃ§Ã£o de dados. Caso a coluna seja do tipo 'data' ou 'dateTime' a\n   * mesma deve respeitar os tipos de entrada definidos para que sejam ordenadas.\n   *\n   * @default `false`\n   */\n  sort?: boolean;\n  @Input('p-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? false : convertToBoolean(sort);\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, torna habilitado o botÃ£o \"Carregar mais resultados\".\n   *\n   * @default `false`\n   */\n  showMoreDisabled?: boolean;\n  @Input('p-show-more-disabled') set setShowMoreDisabled(showMoreDisabled: string) {\n    this.showMoreDisabled = showMoreDisabled === '' ? false : convertToBoolean(showMoreDisabled);\n  }\n\n  /**\n   * @description\n   *\n   * Habilita ou desabilita o estilo listrado da tabela (`striped`).\n   * > Recomendado para tabelas com maior nÃºmero de dados, facilitando a sua visualizaÃ§Ã£o na tabela.\n   *\n   * @default `false`\n   */\n  striped?: boolean;\n  @Input('p-striped') set setStriped(striped: string) {\n    this.striped = striped === '' ? false : convertToBoolean(striped);\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todas as linhas.\n   *\n   * > Sempre receberÃ¡ *true* caso a seleÃ§Ã£o de apenas uma linha esteja ativa.\n   *\n   * @default `false`\n   */\n  hideSelectAll?: boolean;\n  @Input('p-hide-select-all') set setHideSelectAll(hideSelectAll: string) {\n    this.hideSelectAll = hideSelectAll === '' ? false : convertToBoolean(hideSelectAll);\n  }\n\n  /**\n   * @description\n   *\n   * Define que somente uma linha da tabela pode ser selecionada.\n   *\n   * > Esta definiÃ§Ã£o nÃ£o se aplica aos itens filhos, os mesmos possuem comportamento independente do item pai.\n   */\n  singleSelect?: boolean;\n  @Input('p-single-select') set setSingleSelect(value: string) {\n    this.singleSelect = value === '' ? true : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma quantidade mÃ¡xima de colunas que serÃ£o exibidas na tabela.\n   *\n   * Quando chegar no valor informado, as colunas que nÃ£o estiverem selecionadas ficarÃ£o\n   * desabilitadas e caso houver mais colunas visÃ­veis do que o permitido, as excedentes\n   * serÃ£o ignoradas por ordem de posiÃ§Ã£o.\n   */\n  @Input('p-max-columns') maxColumns?: number;\n\n  /** Evento executado quando todas as linhas sÃ£o selecionadas por meio do *checkbox* que seleciona todas as linhas. */\n  @Output('p-all-selected') allSelected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento executado quando a seleÃ§Ã£o das linhas Ã© desmarcada por meio do *checkbox* que seleciona todas as linhas. */\n  @Output('p-all-unselected') allUnselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado ao colapsar uma linha do `po-table`.\n   *\n   * > Como parÃ¢metro o componente envia o item colapsado.\n   */\n  @Output('p-collapsed') collapsed?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado ao expandir uma linha do `po-table`.\n   *\n   * > Como parÃ¢metro o componente envia o item expandido.\n   */\n  @Output('p-expanded') expanded?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento executado ao selecionar uma linha do `po-table`. */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Recebe uma aÃ§Ã£o de clique para o botÃ£o \"Carregar mais resultados\", caso nenhuma aÃ§Ã£o for definida o mesmo\n   * nÃ£o Ã© visÃ­vel.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que estÃ¡ ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /**\n   * Evento executado ao ordenar colunas da tabela.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-sort-by') sortBy?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /** Evento executado ao desmarcar a seleÃ§Ã£o de uma linha do `po-table`. */\n  @Output('p-unselected') unselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  get hasColumns(): boolean {\n    return this.columns && this.columns.length > 0;\n  }\n\n  get hasItems(): boolean {\n    return !!(this.items && this.items.length);\n  }\n\n  get nameColumnDetail() {\n    return this.columnMasterDetail ? this.columnMasterDetail.property : null;\n  }\n\n  get validColumns() {\n    const typesValid = [\n      'string',\n      'number',\n      'boolean',\n      'date',\n      'time',\n      'dateTime',\n      'currency',\n      'subtitle',\n      'link',\n      'label',\n      'icon'\n    ];\n    return this.columns.filter(col => !col.type || typesValid.includes(col.type));\n  }\n\n  private get sortType(): PoTableColumnSortType {\n    return this.sortedColumn.ascending ? PoTableColumnSortType.Ascending : PoTableColumnSortType.Descending;\n  }\n\n  constructor(private poDate: PoDateService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.singleSelect || this.hideSelectAll) {\n      this.selectAll = false;\n      this.hideSelectAll = true;\n    }\n\n    if (changes.height) {\n      this.calculateHeightTableContainer(this.height);\n    }\n  }\n\n  /**\n   * MÃ©todo que colapsa uma linha com detalhe quando executada.\n   *\n   * @param { number } rowIndex Ãndice da linha que serÃ¡ colapsada.\n   * > Ao reordenar os dados da tabela, o valor contido neste Ã­ndice serÃ¡ alterado conforme a ordenaÃ§Ã£o.\n   */\n  collapse(rowIndex: number) {\n    this.setShowDetail(rowIndex, false);\n  }\n\n  /**\n   * MÃ©todo que expande uma linha com detalhe quando executada.\n   *\n   * @param { number } rowIndex Ãndice da linha que serÃ¡ expandida.\n   * > Ao reordenar os dados da tabela, o valor contido neste Ã­ndice serÃ¡ alterado conforme a ordenaÃ§Ã£o.\n   */\n  expand(rowIndex: number) {\n    this.setShowDetail(rowIndex, true);\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que estÃ£o selecionadas.\n   */\n  getSelectedRows() {\n    return this.items.filter(item => item.$selected);\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que nÃ£o estÃ£o selecionadas.\n   */\n  getUnselectedRows() {\n    return this.items.filter(item => !item.$selected);\n  }\n\n  selectAllRows() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n\n      this.emitSelectAllEvents(this.selectAll, this.items);\n    }\n  }\n\n  selectRow(row: any) {\n    row.$selected = !row.$selected;\n\n    this.emitSelectEvents(row);\n\n    this.configAfterSelectRow(this.items, row);\n  }\n\n  selectDetailRow(row: any) {\n    this.emitSelectEvents(row);\n  }\n\n  getClassColor(row, column) {\n    return column.color ? `po-text-${this.getColumnColor(row, column)}` : '';\n  }\n\n  toggleDetail(row: any) {\n    this.setShowDetail(row, !row.$showDetail);\n    this.emitExpandEvents(row);\n  }\n\n  toggleRowAction(row: any) {\n    const toggleShowAction = row.$showAction;\n\n    this.items.forEach(item => {\n      if (item.$showAction) {\n        item.$showAction = false;\n      }\n    });\n    row.$showAction = !toggleShowAction;\n  }\n\n  sortColumn(column: PoTableColumn) {\n    if (!this.sort || column.type === 'detail') {\n      return;\n    }\n\n    this.sortedColumn.ascending = this.sortedColumn.property === column ? !this.sortedColumn.ascending : true;\n\n    this.sortArray(column, this.sortedColumn.ascending);\n    this.sortBy.emit({ column, type: this.sortType });\n\n    this.sortedColumn.property = column;\n  }\n\n  onShowMore(): void {\n    const sort = this.sortedColumn.property ? { column: this.sortedColumn.property, type: this.sortType } : undefined;\n\n    this.showMore.emit(sort);\n  }\n\n  protected abstract calculateHeightTableContainer(height);\n\n  protected abstract calculateWidthHeaders();\n\n  protected getDefaultColumns(item: any) {\n    const keys = Object.keys(item);\n\n    return keys\n      .filter(key => typeof item[key] !== 'object')\n      .map(key => {\n        return { label: capitalizeFirstLetter(key), property: key };\n      });\n  }\n\n  private configAfterSelectRow(rows: Array<any>, row) {\n    if (this.singleSelect) {\n      this.unselectOtherRows(rows, row);\n    } else if (!this.hideSelectAll) {\n      this.selectAll = this.isEverySelected(rows);\n    }\n  }\n\n  private emitExpandEvents(row: any) {\n    row.$showDetail ? this.expanded.emit(row) : this.collapsed.emit(row);\n  }\n\n  private emitSelectAllEvents(selectAll: boolean, rows: any) {\n    selectAll ? this.allSelected.emit(rows) : this.allUnselected.emit(rows);\n  }\n\n  private emitSelectEvents(row: any) {\n    row.$selected ? this.selected.emit(row) : this.unselected.emit(row);\n  }\n\n  private getColumnColor(row, column) {\n    const columnColor = column.color;\n\n    return isTypeof(columnColor, 'function') ? columnColor(row, column.property) : columnColor;\n  }\n\n  // Retorna a coluna da lista de colunas que Ã© do tipo detail\n  private getColumnMasterDetail() {\n    return this.columns.find(col => col.type === 'detail');\n  }\n\n  // Colunas que sÃ£o inseridas no <head> da tabela\n  private getMainColumns() {\n    return this.validColumns.filter(col => col.visible !== false);\n  }\n\n  // Retorna as colunas com status\n  private getSubtitleColumns() {\n    return this.columns.filter(col => col.type === 'subtitle');\n  }\n\n  private isEverySelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private onChangeColumns() {\n    this.setMainColumns();\n    this.setColumnMasterDetail();\n    this.setSubtitleColumns();\n  }\n\n  private setColumnLink() {\n    this.columns.forEach(column => {\n      if (column['type'] === 'link' && !column['link']) {\n        column['link'] = 'link';\n      }\n    });\n  }\n\n  private setColumnMasterDetail() {\n    this.columnMasterDetail = this.getColumnMasterDetail();\n  }\n\n  private setMainColumns() {\n    this.mainColumns = this.getMainColumns();\n\n    this.hasMainColumns = !!this.mainColumns.length;\n\n    this.allColumnsWidthPixels = this.verifyWidthColumnsPixels();\n  }\n\n  private setShowDetail(rowIdentifier: any | number, isShowDetail: boolean) {\n    const isRowIndex = typeof rowIdentifier === 'number' && this.items[rowIdentifier];\n\n    const row = isRowIndex ? this.items[rowIdentifier] : rowIdentifier;\n\n    row.$showDetail = isShowDetail;\n  }\n\n  private setSubtitleColumns() {\n    this.subtitleColumns = this.getSubtitleColumns();\n  }\n\n  private sortArray(column: PoTableColumn, ascending: boolean) {\n    this.items.sort((leftSide, rightSide): number => {\n      if (column.type === 'date' || column.type === 'dateTime') {\n        return this.poDate.sortDate(leftSide[column.property], rightSide[column.property], ascending);\n      } else {\n        return sortValues(leftSide[column.property], rightSide[column.property], ascending);\n      }\n    });\n  }\n\n  private unselectOtherRows(rows: Array<any>, row) {\n    rows.forEach(item => {\n      if (item !== row) {\n        item.$selected = false;\n      }\n    });\n  }\n\n  private verifyWidthColumnsPixels() {\n    return this.hasMainColumns ? this.mainColumns.every(column => column.width && column.width.includes('px')) : false;\n  }\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m os valores numÃ©ricos dos *keyCodes*.\n */\nexport enum PoKeyCodeEnum {\n  /** Seta para baixo */\n  arrowDown = 40,\n\n  /** Seta para cima */\n  arrowUp = 38,\n\n  /** Backspace */\n  backspace = 8,\n\n  /** Delete */\n  delete = 46,\n\n  /** Enter */\n  enter = 13,\n\n  /** Esc */\n  esc = 27,\n\n  /** Tecla K */\n  keyK = 75,\n\n  /** Tecla L */\n  keyL = 76,\n\n  /** EspaÃ§o */\n  space = 32,\n\n  /** Tab */\n  tab = 9\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoTableComponent\n *\n * @description\n *\n * Esta diretiva permite que seja apresentada informaÃ§Ãµes adicionais a respeito de uma determinada linha de\n * dados, de forma que possam ser exibidas e ocultadas atravÃ©s do botÃ£o de acionamento.\n *\n * > Quando utilizada, sobrepÃµe as funcionalidade bÃ¡sicas do *master-detail*.\n *\n * Em seu uso, deve-se utilizar como parÃ¢metro a referÃªncia da _linha_ e/ou _Ã­ndice_, sendo por padrÃ£o linha. Caso nÃ£o seja declarado,\n * o componente nÃ£o exibirÃ¡ conteÃºdo.\n *  - Linha: `row` determina o item da linha corrente.\n *  - Ãndice: `rowIndex` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isShow\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </ng-template>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <div *p-table-row-template=\"let rowItem, let i=rowIndex\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </div>\n * ...\n *\n * ```\n *\n * A diretiva **p-table-row-template**, possibilita tambÃ©m que determinada linha apresente ou nÃ£o seu _template_. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz esta verificaÃ§Ã£o, Ã  propriedade `p-table-row-template-show`,\n * a mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    templateUrl: `\n *      ...\n *      <po-table\n *        [p-columns]=\"columns\"\n *        [p-items]=\"items\">\n *          <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isUndelivered\">\n *            <detail-row [row]=\"rowItem\"> </detail-row>\n *          </div>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public dataTable = [{\n *      code: 1200,\n *      product: 'Rice',\n *      costumer: 'Supermarket 1',\n *      quantity: 3,\n *      status: 'delivered',\n *      license_plate: 'MDJD9191',\n *      batch_product: 18041822,\n *      driver: 'JosÃ© Oliveira'\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      costumer: 'Supermarket 2',\n *      quantity: 1,\n *      status: 'transport',\n *      license_plate: 'XXA5454',\n *      batch_product: 18041821,\n *      driver: 'Francisco Pereira'\n *    }];\n *\n *    isUndelivered(row, index: number) {\n *      return row.status !== 'delivered';\n *    }\n * }\n * ```\n * > No exemplo acima, somente serÃ¡ disponibilizado os detalhes de informaÃ§Ãµes nas linhas cujo o valor de `status`\n * nÃ£o correspondam Ã  *delivered*.\n */\n@Directive({\n  selector: '[p-table-row-template]'\n})\nexport class PoTableRowTemplateDirective {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor booleano, informando se apresentarÃ¡ o template da linha.\n   * SerÃ£o passados o objeto da linha e o indice da mesma por parÃ¢metro, para que seja possÃ­vel\n   * tomar uma decisÃ£o a partir do objeto da linha corrente.\n   *\n   * Caso nÃ£o ser utilizado esta propriedade, serÃ£o apresentados todos os detalhes das linhas.\n   *\n   * @default `true`\n   */\n  @Input('p-table-row-template-show') poTableRowTemplateShow: (row: any, index: number) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  IterableDiffers,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableBaseComponent } from './po-table-base.component';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsExtends PoTableBaseComponent\n *\n * @example\n *\n * <example name=\"po-table-basic\" title=\"PO Table Basic\">\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.ts\"> </file>\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.html\"> </file>\n * </example>\n *\n * <example name=\"po-table-labs\" title=\"PO Table Labs\">\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.html\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.po.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-transport\" title=\"PO Table - Transport\">\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.ts\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.html\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-airfare\" title=\"PO Table - Airfare\">\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.ts\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.html\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-components\" title=\"PO Table - Po Field Components\">\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.ts\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.html\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-table',\n  templateUrl: './po-table.component.html',\n  providers: [PoDateService]\n})\nexport class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n  private _columnManagerTarget: ElementRef;\n\n  heightTableContainer: number;\n  popupTarget;\n  tableOpacity: number = 0;\n  tooltipText: string;\n\n  private differ;\n  private footerHeight;\n  private initialized = false;\n  private parentRef: any;\n  private timeoutResize;\n  private visibleElement = false;\n\n  private clickListener: () => void;\n  private resizeListener: () => void;\n\n  @ContentChild(PoTableRowTemplateDirective, { static: true }) tableRowTemplate: PoTableRowTemplateDirective;\n\n  @ViewChild('columnManagerTarget') set columnManagerTarget(value: ElementRef) {\n    this._columnManagerTarget = value;\n\n    this.changeDetector.detectChanges();\n  }\n\n  get columnManagerTarget() {\n    return this._columnManagerTarget;\n  }\n\n  @ViewChild('noColumnsHeader', { read: ElementRef }) noColumnsHeader;\n  @ViewChild('popup') poPopupComponent: PoPopupComponent;\n\n  @ViewChild('tableFooter', { read: ElementRef, static: false }) tableFooterElement;\n  @ViewChild('tableWrapper', { read: ElementRef, static: false }) tableWrapperElement;\n\n  @ViewChildren('actionsIconElement', { read: ElementRef }) actionsIconElement: QueryList<any>;\n  @ViewChildren('actionsElement', { read: ElementRef }) actionsElement: QueryList<any>;\n  @ViewChildren('headersTable') headersTable: QueryList<any>;\n\n  constructor(\n    poDate: PoDateService,\n    differs: IterableDiffers,\n    viewRef: ViewContainerRef,\n    renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private decimalPipe: DecimalPipe,\n    private router: Router\n  ) {\n    super(poDate);\n\n    this.parentRef = viewRef['_hostView'][8];\n    this.differ = differs.find([]).create(null);\n\n    // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas nÃ£o sofrem\n    // alteraÃ§Ã£o de largura, pois o ngDoCheck nÃ£o Ã© executado.\n    this.clickListener = renderer.listen('document', 'click', () => {});\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n  }\n\n  get columnCount() {\n    const columnCount =\n      this.mainColumns.length +\n      (this.actions.length > 0 ? 1 : 0) +\n      (this.selectable ? 1 : 0) +\n      (!this.hideDetail && this.columnMasterDetail !== undefined ? 1 : 0);\n\n    return columnCount || 1;\n  }\n\n  get columnCountForMasterDetail() {\n    // caso tiver aÃ§Ãµes serÃ¡ utilizado a sua coluna para exibir o columnManager\n    const columnManager = this.actions.length ? 0 : 1;\n\n    return this.mainColumns.length + 1 + (this.actions.length > 0 ? 1 : 0) + (this.selectable ? 1 : 0) + columnManager;\n  }\n\n  get detailHideSelect() {\n    const masterDetail = this.columnMasterDetail;\n    return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;\n  }\n\n  get displayColumnManagerCell() {\n    return !this.visibleActions.length;\n  }\n\n  get firstAction(): PoTableAction {\n    return this.visibleActions && this.visibleActions[0];\n  }\n\n  get hasFooter(): boolean {\n    return this.hasItems && this.hasVisibleSubtitleColumns;\n  }\n\n  get hasMasterDetailColumn(): boolean {\n    return (\n      this.hasMainColumns && this.hasItems && !this.hideDetail && !!(this.columnMasterDetail || this.hasRowTemplate)\n    );\n  }\n\n  get hasRowTemplate(): boolean {\n    return !!this.tableRowTemplate;\n  }\n\n  get hasSelectableColumn(): boolean {\n    return this.selectable && this.hasItems && this.hasMainColumns;\n  }\n\n  get hasValidColumns() {\n    return !!this.validColumns.length;\n  }\n\n  get hasVisibleSubtitleColumns() {\n    return this.subtitleColumns.some(column => column.visible !== false);\n  }\n\n  get isSingleAction() {\n    return this.visibleActions.length === 1;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    this.checkChangesItems();\n    this.verifyCalculateHeightTableContainer();\n    // Permite que os cabeÃ§alhos sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (this.tableWrapperElement?.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {\n      this.debounceResize();\n      this.visibleElement = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  checkDisabled(row, column: PoTableColumn) {\n    return column.disabled ? column.disabled(row) : false;\n  }\n\n  containsMasterDetail(row) {\n    return row[this.nameColumnDetail] && row[this.nameColumnDetail].length;\n  }\n\n  executeTableAction(row: any, tableAction: any) {\n    if (!row.disabled && !this.validateTableAction(row, tableAction)) {\n      tableAction.action.call(this.parentRef, row);\n      this.toggleRowAction(row);\n    }\n  }\n\n  formatNumber(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string {\n    if (rowValue || rowValue === false || rowValue === 0) {\n      rowValue = convertToBoolean(rowValue);\n\n      if (columnBoolean.boolean) {\n        return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'NÃ£o';\n      } else {\n        return rowValue ? 'Sim' : 'NÃ£o';\n      }\n    }\n\n    return rowValue;\n  }\n\n  getColumnIcons(row: any, column: PoTableColumn) {\n    const rowIcons = row[column.property];\n\n    if (column.icons) {\n      if (Array.isArray(rowIcons)) {\n        return this.mergeCustomIcons(rowIcons, column.icons);\n      } else {\n        return this.findCustomIcon(rowIcons, column);\n      }\n    }\n\n    return rowIcons;\n  }\n\n  getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel {\n    return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);\n  }\n\n  getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn {\n    return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);\n  }\n\n  isShowMasterDetail(row) {\n    return (\n      !this.hideDetail &&\n      this.nameColumnDetail &&\n      row.$showDetail &&\n      this.containsMasterDetail(row) &&\n      !this.hasRowTemplate\n    );\n  }\n\n  isShowRowTemplate(row, index: number): boolean {\n    if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {\n      return this.tableRowTemplate.poTableRowTemplateShow(row, index);\n    }\n\n    return true;\n  }\n\n  onClickLink(event, row, column: PoTableColumn) {\n    if (!this.checkDisabled(row, column)) {\n      event.stopPropagation();\n    }\n  }\n\n  onVisibleColumnsChange(columns: Array<PoTableColumn>) {\n    this.columns = columns;\n\n    this.changeDetector.detectChanges();\n  }\n\n  tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any) {\n    this.tooltipText = undefined;\n\n    if (this.hideTextOverflow && event.target.offsetWidth < event.target.scrollWidth && event.target.innerText.trim()) {\n      return (this.tooltipText = event.target.innerText);\n    }\n\n    if (column) {\n      this.checkingIfColumnHasTooltip(column, row);\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltipText = undefined;\n  }\n\n  togglePopup(row, targetRef) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(row);\n  }\n\n  trackBy(index: number) {\n    return index;\n  }\n\n  validateTableAction(row: any, tableAction: any) {\n    if (typeof tableAction.disabled === 'function') {\n      return tableAction.disabled.call(this.parentRef, row);\n    } else {\n      return tableAction.disabled;\n    }\n  }\n\n  protected calculateHeightTableContainer(height) {\n    const value = parseFloat(height);\n    this.heightTableContainer = value ? value - this.getHeightTableFooter() : undefined;\n    this.setTableOpacity(1);\n    this.changeDetector.detectChanges();\n  }\n\n  protected calculateWidthHeaders() {\n    setTimeout(() => {\n      if (this.height) {\n        this.headersTable.forEach(header => {\n          const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');\n          if (divHeader) {\n            divHeader.style.width = `${header.nativeElement.offsetWidth}px`;\n          }\n        });\n      }\n    });\n  }\n\n  private checkChangesItems() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && !this.hasColumns && this.hasItems) {\n      this.columns = this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  private checkingIfColumnHasTooltip(column, row) {\n    if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {\n      return (this.tooltipText = column.tooltip);\n    }\n\n    if (column.type === 'label') {\n      const columnLabel = this.getColumnLabel(row, column);\n      return (this.tooltipText = columnLabel.tooltip);\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateWidthHeaders();\n\n      // show the table\n      this.setTableOpacity(1);\n    });\n  }\n\n  private findCustomIcon(rowIcons, column: PoTableColumn) {\n    const customIcon = column.icons.find(icon => rowIcons === icon.value);\n    return customIcon ? [customIcon] : undefined;\n  }\n\n  private getHeightTableFooter() {\n    return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;\n  }\n\n  private mergeCustomIcons(rowIcons: Array<string>, customIcons: Array<any>) {\n    const mergedIcons = [];\n\n    rowIcons.forEach(columnValue => {\n      const foundCustomIcon = customIcons.find(\n        customIcon => columnValue === customIcon.icon || columnValue === customIcon.value\n      );\n      foundCustomIcon ? mergedIcons.push(foundCustomIcon) : mergedIcons.push(columnValue);\n    });\n\n    return mergedIcons;\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n    }\n  }\n\n  private setTableOpacity(value: number) {\n    this.tableOpacity = value;\n  }\n\n  private verifyChangeHeightInFooter() {\n    return this.footerHeight !== this.getHeightTableFooter();\n  }\n\n  private verifyCalculateHeightTableContainer() {\n    if (this.height && this.verifyChangeHeightInFooter()) {\n      this.footerHeight = this.getHeightTableFooter();\n      this.calculateHeightTableContainer(this.height);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { capitalizeFirstLetter, isTypeof } from '../../../utils/util';\n\nimport { PoTableDetail } from './po-table-detail.interface';\nimport { PoTableDetailColumn } from './po-table-detail-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por apresentar o detalhe de cada linha da tabela.\n */\n@Component({\n  selector: 'po-table-detail',\n  templateUrl: './po-table-detail.component.html'\n})\nexport class PoTableDetailComponent {\n  private _detail: PoTableDetail;\n\n  /**\n   * ConfiguraÃ§Ã£o da linha de detalhes.\n   */\n  @Input('p-detail') set detail(value: PoTableDetail) {\n    this._detail = this.returnPoTableDetailObject(value);\n  }\n\n  get detail() {\n    return this._detail;\n  }\n\n  /**\n   * Lista de itens do _detail_ da tabela.\n   */\n  @Input('p-items') items: Array<any>;\n\n  /**\n   * Define se a tabela possui a opÃ§Ã£o de `selectable` habilitada.\n   */\n  @Input('p-selectable') isSelectable?: boolean = false;\n\n  /**\n   * AÃ§Ã£o executada ao selecionar ou desmarcar a seleÃ§Ã£o de uma linha de detalhe do `po-table`.\n   */\n  @Output('p-select-row') selectRow?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private decimalPipe: DecimalPipe) {}\n\n  get detailColumns(): Array<PoTableDetailColumn> {\n    return this.detail?.columns || [];\n  }\n\n  get typeHeaderInline(): boolean {\n    return (this.detail && !this.detail['typeHeader']) || this.detail['typeHeader'] === 'inline';\n  }\n\n  get typeHeaderTop(): boolean {\n    return this.detail && this.detail['typeHeader'] === 'top';\n  }\n\n  formatNumberDetail(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getColumnTitleLabel(detail: PoTableDetailColumn) {\n    return detail.label || capitalizeFirstLetter(detail.property);\n  }\n\n  onSelectRow(item) {\n    item.$selected = !item.$selected;\n    this.selectRow.emit(item);\n  }\n\n  private returnPoTableDetailObject(value: any) {\n    if (value && isTypeof(value, 'object')) {\n      if (value.columns) {\n        value.columns.forEach(column => (column.property = column.property || column.column));\n      }\n\n      if (Array.isArray(value)) {\n        return { columns: value };\n      }\n\n      if (value.columns) {\n        return value;\n      }\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir um Ã­cone na tabela.\n */\n@Component({\n  selector: 'po-table-icon',\n  templateUrl: './po-table-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableIconComponent {\n  tooltip: string;\n\n  /** Define se o Ã­cone Ã© clicÃ¡vel. */\n  @Input('p-clickable') clickable: boolean;\n\n  /** Cor do Ã­cone. */\n  @Input('p-color') color: string;\n\n  /** Desabilitado. */\n  @Input('p-disabled') disabled: boolean;\n\n  /** Classe css do Ã­cone. */\n  @Input('p-icon') icon: string;\n\n  /** Texto do tooltip. */\n  @Input('p-icon-tooltip') iconTooltip: string;\n\n  /** Output click. */\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter();\n\n  private get allowTooltip() {\n    return !this.disabled && this.iconTooltip;\n  }\n\n  onClick(event) {\n    if (this.clickable) {\n      this.click.emit(event);\n    }\n  }\n\n  tooltipMouseEnter() {\n    if (this.allowTooltip) {\n      this.tooltip = this.iconTooltip;\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltip = undefined;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from '../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um botÃ£o e modal para visualizaÃ§Ã£o de todas as legendas.\n */\n@Component({\n  selector: 'po-table-show-subtitle',\n  templateUrl: './po-table-show-subtitle.component.html'\n})\nexport class PoTableShowSubtitleComponent {\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableSubtitleColumn } from './../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de cÃ­rculo.\n */\n@Component({\n  selector: 'po-table-subtitle-circle',\n  templateUrl: './po-table-subtitle-circle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableSubtitleCircleComponent {\n  private _subtitle: PoTableSubtitleColumn;\n\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitle') set subtitle(subtitle: PoTableSubtitleColumn) {\n    if (subtitle) {\n      subtitle.color = this.poColorPaletteService.getColor(subtitle);\n    }\n    this._subtitle = subtitle;\n  }\n  get subtitle(): PoTableSubtitleColumn {\n    return this._subtitle;\n  }\n\n  /** Esconde a tooltip. */\n  @Input('p-hide-title')\n  hideTitle: boolean = false;\n\n  constructor(private poColorPaletteService: PoColorPaletteService) {}\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from './po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um conjunto de legendas.\n */\n@Component({\n  selector: 'po-table-subtitle-footer',\n  templateUrl: './po-table-subtitle-footer.component.html'\n})\nexport class PoTableSubtitleFooterComponent implements AfterViewInit, DoCheck, OnDestroy {\n  showSubtitle: boolean;\n\n  private isVisible: boolean;\n  private timeoutResize;\n  protected resizeListener: () => void;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n\n  /** Propriedade que recebe as legendas definidas no `PoTableSubtitleCircleComponent`. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  constructor(private element: ElementRef, public renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    this.initializeResizeListener();\n    this.debounceResize();\n  }\n\n  ngDoCheck() {\n    if (!this.isVisible && this.getContainerSize() > 0) {\n      this.toggleShowCompleteSubtitle();\n      this.isVisible = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeResizeListener();\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.toggleShowCompleteSubtitle();\n    });\n  }\n\n  private getContainerSize() {\n    return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;\n  }\n\n  private getItemsSize() {\n    const items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');\n\n    return Array.from(items)\n      .map(item => item['offsetWidth'])\n      .reduce((a, b) => a + b, 16);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n  private toggleShowCompleteSubtitle() {\n    const containerSize = this.getContainerSize();\n    const itemsSize = this.getItemsSize();\n\n    this.showSubtitle = itemsSize > containerSize;\n  }\n}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoCheckboxGroupModule } from '../po-field/po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/po-container.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\nimport { PoPopupModule } from './../po-popup/po-popup.module';\nimport { PoTimeModule } from '../../pipes/po-time/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoTableColumnIconComponent } from './po-table-column-icon/po-table-column-icon.component';\nimport { PoTableColumnLabelComponent } from './po-table-column-label/po-table-column-label.component';\nimport { PoTableColumnLinkComponent } from './po-table-column-link/po-table-column-link.component';\nimport { PoTableColumnManagerComponent } from './po-table-column-manager/po-table-column-manager.component';\nimport { PoTableComponent } from './po-table.component';\nimport { PoTableDetailComponent } from './po-table-detail/po-table-detail.component';\nimport { PoTableIconComponent } from './po-table-icon/po-table-icon.component';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableShowSubtitleComponent } from './po-table-show-subtitle/po-table-show-subtitle.component';\nimport { PoTableSubtitleCircleComponent } from './po-table-subtitle-circle/po-table-subtitle-circle.component';\nimport { PoTableSubtitleFooterComponent } from './po-table-subtitle-footer/po-table-subtitle-footer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-table\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoTimeModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoTableComponent,\n    PoTableColumnIconComponent,\n    PoTableColumnLabelComponent,\n    PoTableColumnLinkComponent,\n    PoTableColumnManagerComponent,\n    PoTableDetailComponent,\n    PoTableIconComponent,\n    PoTableRowTemplateDirective,\n    PoTableShowSubtitleComponent,\n    PoTableSubtitleCircleComponent,\n    PoTableSubtitleFooterComponent\n  ],\n  exports: [PoTableComponent, PoTableRowTemplateDirective],\n  providers: [DecimalPipe]\n})\nexport class PoTableModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n  months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  wordMonth = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  wordYear = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  lang = 'pt';\n\n  constructor() {}\n\n  setLanguage(lang: string) {\n    if (lang && lang.length >= 2) {\n      lang = lang.toLowerCase().slice(0, 2);\n      this.lang = lang === 'pt' || lang === 'en' || lang === 'es' ? lang : 'pt';\n    }\n  }\n\n  getWordMonth() {\n    return this.wordMonth[this.lang];\n  }\n\n  getWordYear() {\n    return this.wordYear[this.lang];\n  }\n\n  getMonth(month: number) {\n    return this.months[month][this.lang];\n  }\n\n  getArrayMonths() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.lang]);\n    }\n    return arrMonths;\n  }\n\n  getWeedDays(day: number) {\n    return this.shortWeekDays[day][this.lang];\n  }\n\n  getArrayWeekDays() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.lang]);\n    }\n    return arrWeekDays;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { setYearFrom0To100 } from '../../../../utils/util';\n\n@Injectable()\nexport class PoCalendarService {\n  firstWeekDay: number;\n\n  constructor() {\n    this.firstWeekDay = 0; // 0 = sunday\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== this.firstWeekDay) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if (typeof month !== 'number' || month < 0 || month > 11) {\n      throw Error('month must be a number (Jan is 0)');\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n    setYearFrom0To100(date, year);\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while (date.getMonth() <= month && date.getFullYear() === year);\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function (date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isMobile, setYearFrom0To100, validateDateRange } from '../../../../utils/util';\nimport { PoCalendarLangService } from './po-calendar.lang.service';\nimport { PoCalendarService } from './po-calendar.service';\n\nconst poCalendarLocaleDefault = 'pt';\nconst poCalendarLocales = ['pt', 'en', 'es'];\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de calendÃ¡rio de uso interno\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers: [PoCalendarService, PoCalendarLangService]\n})\nexport class PoCalendarComponent {\n  private _dateEnd: Date;\n  private _dateStart: Date;\n  private _locale: string;\n  private _selectedDate?: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeedDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  overlayInvisible: boolean = true;\n  visible: boolean = false;\n  yearVisible: boolean = false;\n\n  private currentMonthNumber: number;\n  private isMobile: any = isMobile;\n  private lastDisplay: string;\n  private today: Date = new Date();\n\n  @ViewChild('days', { read: ElementRef, static: true }) elDays: ElementRef;\n  @ViewChild('months', { read: ElementRef, static: true }) elMonths: ElementRef;\n  @ViewChild('years', { read: ElementRef, static: true }) elYears: ElementRef;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ¡xima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-end') set dateEnd(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._dateEnd = date;\n    } else {\n      this._dateEnd = undefined;\n    }\n  }\n  get dateEnd() {\n    return this._dateEnd;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data selecionada no calendÃ¡rio.\n   */\n  @Input('p-selected-date') set selectedDate(selectedDate: Date) {\n    this._selectedDate = selectedDate && selectedDate instanceof Date ? selectedDate : undefined;\n  }\n  get selectedDate(): Date {\n    return this._selectedDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ­nima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-start') set dateStart(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._dateStart = date;\n    } else {\n      this._dateStart = undefined;\n    }\n  }\n  get dateStart() {\n    return this._dateStart;\n  }\n\n  @Output('p-selected-dateChange') selectedDateChange = new EventEmitter<Date>();\n  @Output('p-submit') submit = new EventEmitter<Date>();\n\n  constructor(private poCalendarService: PoCalendarService, private poCalendarLangService: PoCalendarLangService) {}\n\n  close() {\n    this.overlayInvisible = true;\n    this.visible = false;\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  getArrayDecade(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return displayValue === propertyValue ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-background-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-background-today';\n    } else if (date) {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-background';\n      } else {\n        return 'po-calendar-box-background-disabled';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  getDayForegroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-foreground-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-foreground-today';\n    } else {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-foreground';\n      } else {\n        return 'po-calendar-box-foreground-disabled';\n      }\n    }\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return displayValue === propertyValue ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getWordMonth() {\n    return this.poCalendarLangService.getWordMonth();\n  }\n\n  getWordYear() {\n    return this.poCalendarLangService.getWordYear();\n  }\n\n  init() {\n    this.selectedDate ? this.updateDate(this.selectedDate) : this.updateDate(this.today);\n\n    this.initializeLanguage();\n\n    this.selectDay();\n\n    if (this.isMobile()) {\n      this.overlayInvisible = false;\n    }\n\n    this.visible = true;\n  }\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeedDays = this.poCalendarLangService.getArrayWeekDays();\n    this.displayMonths = this.poCalendarLangService.getArrayMonths();\n  }\n\n  onNextMonth() {\n    if (this.displayMonthNumber < 11) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber + 1);\n    } else {\n      this.updateDisplay(this.displayYear + 1, 0);\n    }\n  }\n\n  onPrevMonth() {\n    if (this.displayMonthNumber > 0) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber - 1);\n    } else {\n      this.updateDisplay(this.displayYear - 1, 11);\n    }\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n      this.selectedDate = date;\n      this.selectedDateChange.emit(date);\n      this.submit.emit(date);\n    }\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  setMobileVisualization() {\n    return this.isMobile() ? 'po-calendar po-calendar-mobile' : 'po-calendar';\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return (\n        date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private updateDate(date: Date) {\n    this.currentMonthNumber = date.getMonth();\n    this.currentYear = date.getFullYear();\n    this.updateDisplay(this.currentYear, this.currentMonthNumber);\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getArrayDecade(year);\n  }\n}\n","import { ElementRef, EventEmitter, Input, Output, Directive } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * Este componente Ã© de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informaÃ§Ãµes do model.\n *\n * Por padrÃ£o limpa o valor do campo e executa o mÃ©todo onChangePropagate, caso tenha a necessidade de tratar a funÃ§Ã£o de limpar o campo,\n * deve implementar a interface PoClean.\n */\n@Directive()\nexport abstract class PoCleanBaseComponent {\n  /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizarÃ¡ o po-clean. */\n  @Input('p-element-ref') inputRef: ElementRef;\n\n  /** Valor que serÃ¡ atribuÃ­do ao campo quando for clicado no po-clean. */\n  @Input('p-default-value') defaultValue?: string = '';\n\n  /**\n   * Evento disparado quando executada aÃ§Ã£o do po-clean.\n   * Este evento deve ser usado para avisar para o componente que estÃ¡ usando o po-clean, que o botÃ£o foi disparado,\n   * e provavelmente serÃ¡ preciso emitir o evento para atualizar o model.\n   */\n  @Output('p-change-event') changeEvent?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected parentComponent: any;\n\n  clear() {\n    this.setInputValue(this.defaultValue);\n    this.changeEvent.emit(this.defaultValue);\n  }\n\n  showIcon() {\n    return (\n      this.defaultValue !== this.getInputValue() && this.hasCleanAttr() && !this.isDisabled() && !this.isReadonly()\n    );\n  }\n\n  // Este mÃ©todo verifica se o componente pai possui a propriedade clean diferente de vazio,\n  // ou seja, se o po-clean deve ser usado.\n  private hasCleanAttr(): boolean {\n    return this.parentComponent.clean;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ desabilitado.\n  private isDisabled(): boolean {\n    return this.parentComponent.disabled;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ somente leitura.\n  private isReadonly(): boolean {\n    return this.parentComponent.readonly;\n  }\n\n  abstract setInputValue(value: string): void;\n\n  abstract getInputValue(): string;\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoCleanBaseComponent } from './po-clean-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoCleanBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-clean-labs\" title=\"PO Clean Labs\">\n *   <file name=\"sample-po-clean-labs.component.html\"> </file>\n *   <file name=\"sample-po-clean-labs.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-clean',\n  templateUrl: './po-clean.component.html'\n})\nexport class PoCleanComponent extends PoCleanBaseComponent {\n  constructor(private viewRef: ViewContainerRef) {\n    super();\n    this.parentComponent = this.viewRef['_hostView'][8];\n  }\n\n  setInputValue(value?: string) {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      this.inputRef.nativeElement.value = value;\n    }\n  }\n\n  getInputValue() {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      return this.inputRef.nativeElement.value;\n    }\n  }\n}\n","/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-combo.\n */\nexport enum PoComboFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. Caso nÃ£o seja especificado um tipo, serÃ¡ esse o utilizado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, uuid } from './../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * O componente `po-checkbox` exibe uma caixa de opÃ§Ã£o com um texto ao lado, na qual Ã© possÃ­vel marcar e desmarcar atravÃ©s tanto\n * no *click* do *mouse* quanto por meio da tecla *space* quando estiver com foco.\n *\n * Cada opÃ§Ã£o poderÃ¡ receber um estado de marcado, desmarcado, indeterminado e desabilitado, como tambÃ©m uma aÃ§Ã£o que serÃ¡ disparada quando\n * ocorrer mudanÃ§as do valor.\n *\n * > O *model* deste componente aceitarÃ¡ valores igual Ã  `true`, `false` ou `null` para quando for indeterminado.\n */\n@Directive()\nexport abstract class PoCheckboxBaseComponent implements ControlValueAccessor {\n  checkboxValue: boolean | null;\n  id = uuid();\n  propagateChange: any;\n\n  private _disabled?: boolean = false;\n\n  /** Define o nome do *checkbox*. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estado do *checkbox* como desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de exibiÃ§Ã£o do *checkbox*. */\n  @Input('p-label') label?: string;\n\n  /** Evento disparado quando o valor do *checkbox* for alterado. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n    if (this.propagateChange) {\n      this.propagateChange(this.checkboxValue);\n    }\n\n    this.change.emit(this.checkboxValue);\n  }\n\n  checkOption(value: boolean | null) {\n    if (!this.disabled) {\n      this.changeModelValue(!value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  writeValue(value: any) {\n    if (value !== this.checkboxValue) {\n      this.changeModelValue(value);\n    }\n  }\n\n  protected abstract changeModelValue(value: boolean | null);\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoCheckboxBaseComponent } from './po-checkbox-base.component';\n\n/**\n * @docsExtends PoCheckboxBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-basic\" title=\"PO Checkbox Basic\">\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-labs\" title=\"PO Checkbox Labs\">\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-acceptance-term\" title=\"PO Checkbox - Acceptance Term\">\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-checkbox',\n  templateUrl: './po-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoCheckboxComponent extends PoCheckboxBaseComponent implements AfterViewInit {\n  @ViewChild('checkboxLabel', { static: true }) checkboxLabel: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao *checkbox*.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio capturar a referÃªncia do componente no DOM atravÃ©s do `ViewChild`, como por exemplo:\n   *\n   * ```\n   * ...\n   * import { ViewChild } from '@angular/core';\n   * import { PoCheckboxComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoCheckboxComponent, { static: true }) checkbox: PoCheckboxComponent;\n   *\n   * focusCheckbox() {\n   *   this.checkbox.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.checkboxLabel && !this.disabled) {\n      this.checkboxLabel.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent, value: boolean) {\n    if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {\n      this.checkOption(value);\n\n      event.preventDefault();\n    }\n  }\n\n  protected changeModelValue(value: boolean | null) {\n    this.checkboxValue = typeof value === 'boolean' || value === null ? value : false;\n    this.changeDetector.detectChanges();\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnInit, Output, Directive } from '@angular/core';\n\nimport {\n  browserLanguage,\n  convertToBoolean,\n  isTypeof,\n  removeDuplicatedOptions,\n  poLocaleDefault,\n  validValue\n} from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\nimport { PoComboLiterals } from './interfaces/po-combo-literals.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionGroup } from './interfaces/po-combo-option-group.interface';\n\nconst PO_COMBO_DEBOUNCE_TIME_DEFAULT = 400;\nconst PO_COMBO_FIELD_LABEL_DEFAULT = 'label';\nconst PO_COMBO_FIELD_VALUE_DEFAULT = 'value';\n\nexport const poComboLiteralsDefault = {\n  en: <PoComboLiterals>{\n    noData: 'No data found'\n  },\n  es: <PoComboLiterals>{\n    noData: 'Datos no encontrados'\n  },\n  pt: <PoComboLiterals>{\n    noData: 'Nenhum dado encontrado'\n  },\n  ru: <PoComboLiterals>{\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O `po-combo` exibe uma lista de opÃ§Ãµes com fÃ¡cil seleÃ§Ã£o e filtragem.\n *\n * AlÃ©m da exibiÃ§Ã£o padrÃ£o, nele Ã© possÃ­vel listar as opÃµes em agrupamentos.\n *\n * Ã possÃ­vel selecionar e navegar entre as opÃ§Ãµes da lista tanto atravÃ©s do *mouse* quanto do teclado. No teclado navegue com\n * as setas e pressione *Enter* na opÃ§Ã£o que desejar.\n *\n * Com ele tambÃ©m Ã© possÃ­vel definir uma lista Ã  partir da requisiÃ§Ã£o de um serviÃ§o definido em `p-filter-service`.\n *\n * Em `p-filter-mode`, o filtro poderÃ¡ ser configurado para buscar opÃµes que correspondam ao inÃ­cio, fim ou que contenha o valor digitado.\n *\n * O `po-combo` guarda o Ãºltimo valor caso o usuÃ¡rio desista de uma busca, deixando o campo ou pressionando *Esc*. Caso seja digitado no\n * campo de busca a descriÃ§Ã£o completa de um item, entÃ£o a seleÃ§Ã£o serÃ¡ automaticamente efetuada ao deixar o campo ou pressionando *Enter*.\n */\n@Directive()\nexport abstract class PoComboBaseComponent implements ControlValueAccessor, OnInit, Validator {\n  private _changeOnEnter?: boolean = false;\n  private _debounceTime?: number = 400;\n  private _disabled?: boolean = false;\n  private _disabledInitFilter?: boolean = false;\n  private _fieldLabel?: string = 'label';\n  private _fieldValue?: string = 'value';\n  private _filterMinlength?: number = 0;\n  private _filterMode?: PoComboFilterMode = PoComboFilterMode.startsWith;\n  private _filterParams?: any;\n  private _literals?: PoComboLiterals;\n  private _options: Array<PoComboOption | PoComboOptionGroup> = [];\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  protected cacheStaticOptions: Array<PoComboOption | PoComboGroup> = [];\n  protected comboOptionsList: Array<PoComboOption | PoComboGroup> = [];\n\n  cacheOptions: Array<PoComboOption | PoComboGroup> = [];\n  defaultService: PoComboFilterService;\n  firstInWriteValue: boolean = true;\n  isFirstFilter: boolean = true;\n  isFiltering: boolean = false;\n  keyupSubscribe: any;\n  onModelChange: any;\n  onModelTouched: any;\n  previousSearchValue: string = '';\n  selectedOption: PoComboOption | PoComboGroup;\n  selectedValue: any;\n  selectedView: any;\n  service: PoComboFilterService;\n  visibleOptions: Array<PoComboOption | PoComboGroup> = [];\n\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ realizado o filtro para carregamento da lista de\n   * itens no componente.\n   * Caso haja a necessidade de customizaÃ§Ã£o, entÃ£o pode ser informado um serviÃ§o implementando a interface PoComboFilter.\n   *\n   * Caso utilizado uma URL, o serviÃ§o deve ser retornado no padrÃ£o API TOTVS e utiliza as propriedades\n   * `p-field-label` e `p-field-value` para a construÃ§Ã£o da lista de itens.\n   *\n   * Quando utilizada uma URL de serviÃ§o, entÃ£o serÃ¡ concatenada nesta URL o valor que deseja-se filtrar da seguinte forma:\n   * ```\n   * url + ?filter=Peter\n   * ```\n   *\n   * Se for definida a propriedade `p-filter-params`, a mesma tambÃ©m serÃ¡ concatenada. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   */\n  @Input('p-filter-service') filterService: PoComboFilter | string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro apÃ³s cada pressionamento de tecla.\n   * SerÃ¡ utilizada apenas quando houver serviÃ§o (`p-filter-service`).\n   *\n   * @default `400`\n   */\n  @Input('p-debounce-time') set debounceTime(value: number) {\n    const parsedValue = parseInt(<any>value, 10);\n\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : PO_COMBO_DEBOUNCE_TIME_DEFAULT;\n  }\n\n  get debounceTime(): number {\n    return this._debounceTime;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Desabilita o filtro inicial no serviÃ§o, que Ã© executado no primeiro clique no campo.\n   *\n   * @default `false`\n   *\n   */\n  @Input('p-disabled-init-filter') set disabledInitFilter(value: boolean) {\n    this._disabledInitFilter = convertToBoolean(value);\n  }\n\n  get disabledInitFilter(): boolean {\n    return this._disabledInitFilter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo valor de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `value`\n   */\n  @Input('p-field-value') set fieldValue(value: string) {\n    this._fieldValue = value || PO_COMBO_FIELD_VALUE_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldValue = this._fieldValue;\n    }\n  }\n\n  get fieldValue() {\n    return this._fieldValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo texto de apresentaÃ§Ã£o de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `label`\n   */\n  @Input('p-field-label') set fieldLabel(value: string) {\n    this._fieldLabel = value || PO_COMBO_FIELD_LABEL_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldLabel = this._fieldLabel;\n    }\n  }\n\n  get fieldLabel() {\n    return this._fieldLabel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Valor mÃ­nimo de caracteres para realizar o filtro no serviÃ§o.\n   *\n   * @default `0`\n   */\n  @Input('p-filter-minlength') set filterMinlength(value: number) {\n    const parseValue = typeof value === 'string' ? parseInt(value, 10) : value;\n\n    this._filterMinlength = Number.isInteger(parseValue) ? parseValue : 0;\n  }\n\n  get filterMinlength() {\n    return this._filterMinlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o evento `p-change` sÃ³ serÃ¡ disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opÃ§Ã£o selecionada.\n   *\n   * @default `false`\n   */\n  @Input('p-change-on-enter') set changeOnEnter(changeOnEnter: boolean) {\n    this._changeOnEnter = convertToBoolean(changeOnEnter);\n  }\n\n  get changeOnEnter() {\n    return this._changeOnEnter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /** Indica que a lista definida na propriedade p-options serÃ¡ ordenada pela descriÃ§Ã£o. */\n  @Input('p-sort') set sort(sort: boolean) {\n    this._sort = convertToBoolean(sort);\n    this.comboListDefinitions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * Nesta propriedade define a lista de opÃ§Ãµes do `po-combo`.\n   *\n   * > A lista pode ser definida em dois formatos, simples ou com agrupamentos.\n   * - Utilize `PoComboOption` para lista de opÃ§Ãµes simples.\n   * - Utilize `PoComboOptionGroup` para lista de opÃ§Ãµes com agrupamento.\n   *\n   * **Importante:**\n   * - A lista deve seguir as definiÃ§Ãµes descritas nas respectivas interfaces, caso contrÃ¡rio nÃ£o exibirÃ¡ a(as) opÃ§Ã£o(Ãµes) fora dos padrÃµes.\n   * - O componente interpretarÃ¡ o formato da lista de acordo com a interface utilizada e sÃ³ exibirÃ¡ as opÃ§Ãµes correspondentes Ã  ela.\n   * - Um agrupamento sÃ³ serÃ¡ exibido se houver pelo menos uma opÃ§Ã£o vÃ¡lida.\n   */\n  @Input('p-options') set options(options: Array<PoComboOption | PoComboOptionGroup>) {\n    this._options = Array.isArray(options) ? options : [];\n\n    this.comboListDefinitions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no filtro da lista de seleÃ§Ã£o: `startsWith`, `contains` ou `endsWith`.\n   *\n   * > Quando utilizar a propriedade `p-filter-service` esta propriedade serÃ¡ ignorada.\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoComboFilterMode) {\n    this._filterMode = filterMode in PoComboFilterMode ? filterMode : PoComboFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoComboFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoComboFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoComboFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode(): PoComboFilterMode {\n    return this._filterMode;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que serÃ¡ repassado como parÃ¢metro para a URL ou aos mÃ©todos do serviÃ§o que implementam a interface *PoComboFilter*.\n   *\n   * > Caso a lista contenha agrupamentos, os mesmos sÃ³ serÃ£o exibidos se houver no mÃ­nimo uma opÃ§Ã£o que corresponda Ã  pesquisa.\n   */\n  @Input('p-filter-params') set filterParams(filterParams: any) {\n    this._filterParams = filterParams || filterParams === 0 || filterParams === false ? filterParams : undefined;\n  }\n\n  get filterParams() {\n    return this._filterParams;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-combo`.\n   *\n   * Para utilizar basta passar a literal que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoComboLiterals = {\n   *    noData: 'Nenhum valor'\n   *  };\n   * ```\n   *\n   * E para carregar a literal customizada, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-combo\n   *   [p-literals]=\"customLiterals\">\n   * </po-combo>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoComboLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poComboLiteralsDefault[poLocaleDefault],\n        ...poComboLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poComboLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poComboLiteralsDefault[browserLanguage()];\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setInputValue(value: any): void;\n\n  abstract applyFilter(value: string): void;\n\n  abstract getObjectByValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n  abstract initInputObservable(): void;\n\n  get isOptionGroupList(): boolean {\n    return this._options.length && this._options[0].hasOwnProperty('options');\n  }\n\n  ngOnInit() {\n    this.updateComboList();\n  }\n\n  onInitService() {\n    if (this.filterService) {\n      this.setService(this.filterService);\n      this.initInputObservable();\n    }\n  }\n\n  setService(service: PoComboFilter | string) {\n    if (service) {\n      if (isTypeof(service, 'object')) {\n        this.service = <PoComboFilterService>service;\n      } else {\n        this.service = this.defaultService;\n        this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\n      }\n    }\n  }\n\n  compareMethod(search: string, option: PoComboOption | PoComboGroup, filterMode: PoComboFilterMode) {\n    switch (filterMode) {\n      case PoComboFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoComboFilterMode.contains:\n        return this.contains(search, option);\n      case PoComboFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  getOptionFromValue(value: any, options: any) {\n    return options ? options.find((option: any) => this.isEqual(option.value, value)) : null;\n  }\n\n  getOptionFromLabel(label: any, options: any) {\n    if (options) {\n      return options.find((option: any) => {\n        return option.label.toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  updateSelectedValue(option: PoComboOption | PoComboGroup, isUpdateModel: boolean = true, isWriteValue = false) {\n    const optionLabel = (option && option.label) || '';\n\n    this.updateInternalVariables(option);\n\n    // atualiza o valor do input quando for changeOnEnter apenas se for para atualizar o model.\n    if (this.changeOnEnter && isUpdateModel) {\n      this.setInputValue(optionLabel);\n    } else if (!this.changeOnEnter) {\n      this.setInputValue(optionLabel);\n    }\n\n    if (isUpdateModel) {\n      const optionValue = (option && option.value) || undefined;\n\n      this.updateModel(optionValue, isWriteValue);\n    }\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return this.onModelChange ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) || (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  searchForLabel(search: string, options: Array<PoComboOption | PoComboGroup>, filterMode: PoComboFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoComboOption | PoComboGroup> = [];\n      let addedOptionsGroupTitle: boolean = false;\n      let optionsGroupTitle: PoComboGroup;\n\n      options.forEach(option => {\n        if ('options' in option) {\n          addedOptionsGroupTitle = false;\n          return (optionsGroupTitle = option);\n        }\n\n        if (option.label && (this.compareMethod(search, option, filterMode) || this.service)) {\n          if (this.isOptionGroupList && !addedOptionsGroupTitle) {\n            newOptions.push(optionsGroupTitle);\n            addedOptionsGroupTitle = true;\n          }\n\n          newOptions.push(option);\n        }\n      });\n\n      this.selectedView = newOptions[this.isOptionGroupList ? 1 : 0];\n      this.updateComboList(newOptions);\n    } else {\n      this.updateComboList();\n    }\n  }\n\n  updateComboList(options?: Array<PoComboOption | PoComboGroup>) {\n    const copyOptions = options || [...this.comboOptionsList];\n\n    const newOptions = !options && this.selectedValue ? [{ ...this.selectedOption }] : copyOptions;\n\n    if (newOptions.length) {\n      this.visibleOptions = newOptions;\n\n      if (!this.selectedView && this.visibleOptions.length) {\n        this.selectedView = copyOptions.find(option => option.value !== undefined);\n      }\n    }\n  }\n\n  getNextOption(value: any, options: Array<PoComboOption | PoComboGroup>, reverse: boolean = false) {\n    const optionsList = reverse ? options.slice(0).reverse() : options.slice(0);\n    let optionFound = null;\n    let found = false;\n\n    for (const option of optionsList) {\n      if (option.value && !optionFound) {\n        optionFound = option;\n      }\n      if (option.value && found) {\n        return option;\n      }\n      if (this.isEqual(option.value, value)) {\n        found = true;\n      }\n    }\n\n    return optionFound;\n  }\n\n  getIndexSelectedView() {\n    for (let i = 0; i < this.visibleOptions.length; i++) {\n      if (this.compareObjects(this.visibleOptions[i], this.selectedView)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  compareObjects(obj1: any, obj2: any) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n  }\n\n  verifyValidOption() {\n    const inputValue = this.getInputValue();\n\n    const optionFound = this.getOptionFromLabel(inputValue, this.comboOptionsList);\n\n    if (optionFound && optionFound.value !== this.selectedValue) {\n      this.updateSelectedValue(optionFound);\n\n      this.previousSearchValue = optionFound.label;\n      return;\n    } else if (this.selectedValue && this.selectedOption && this.selectedOption.label !== inputValue) {\n      this.updateSelectedValueWithOldOption();\n\n      this.previousSearchValue = this.selectedOption.label;\n      return;\n    } else if (inputValue && !optionFound) {\n      const isInputValueDiffSelectedLabel = !!(this.selectedOption && this.selectedOption.label !== inputValue);\n\n      this.updateSelectedValue(null, isInputValueDiffSelectedLabel || this.changeOnEnter);\n\n      this.previousSearchValue = '';\n      return;\n    }\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n    if (validValue(value) && !this.service && this.comboOptionsList && this.comboOptionsList.length) {\n      const option = this.getOptionFromValue(value, this.comboOptionsList);\n      this.updateSelectedValue(option);\n      this.updateComboList();\n      return;\n    }\n\n    // Se houver serviÃ§o busca pelo model.\n    if (value && this.service) {\n      return this.getObjectByValue(value);\n    } else {\n      this.updateSelectedValue(null, true, true);\n      this.updateComboList();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  protected configAfterSetFilterService(service: PoComboFilter | string) {\n    if (service) {\n      this.comboOptionsList = [];\n      this.unsubscribeKeyupObservable();\n      this.onInitService();\n    } else {\n      this.service = undefined;\n      this.comboOptionsList = this.cacheStaticOptions;\n    }\n\n    this.visibleOptions = [];\n    this.isFirstFilter = true;\n  }\n\n  protected unsubscribeKeyupObservable() {\n    if (this.keyupSubscribe) {\n      this.keyupSubscribe.unsubscribe();\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private comboListDefinitions() {\n    this.comboOptionsList = this.options.length > 0 ? this.listingComboOptions(this.options) : this.options;\n    this.cacheStaticOptions = this.comboOptionsList;\n\n    this.updateComboList();\n  }\n\n  private compareOptions(optionA: any, optionB: any) {\n    const labelA = optionA.label.toString().toLowerCase();\n    const labelB = optionB.label.toString().toLowerCase();\n\n    return labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n  }\n\n  private hasDuplicatedOption(\n    options: Array<PoComboOption | PoComboGroup>,\n    currentOption: string,\n    accumulatedGroupOptions?: Array<PoComboGroup>\n  ) {\n    return (\n      options.some(option => option.label === currentOption) ||\n      (accumulatedGroupOptions && accumulatedGroupOptions.some(option => option.label === currentOption))\n    );\n  }\n\n  private listingComboOptions(comboOptions: Array<PoComboOption | PoComboOptionGroup>) {\n    const comboOptionsList = comboOptions.concat();\n    const verifiedComboOptionsList = this.verifyComboOptions(comboOptionsList);\n\n    this.sortOptions(verifiedComboOptionsList);\n\n    if (this.isOptionGroupList && verifiedComboOptionsList.length > 0) {\n      return this.verifyComboOptionsGroup(verifiedComboOptionsList);\n    }\n\n    return verifiedComboOptionsList;\n  }\n\n  private sortOptions(comboOptionsList: Array<PoComboGroup>) {\n    if (comboOptionsList.length > 0 && this.sort) {\n      return comboOptionsList.sort(this.compareOptions);\n    }\n  }\n\n  private validateValue(currentOption: PoComboGroup, verifyingOptionsGroup?: boolean) {\n    const { label, options, value } = currentOption;\n\n    if (this.isOptionGroupList) {\n      return (\n        (validValue(label) && options && options.length > 0) || (verifyingOptionsGroup === true && validValue(value))\n      );\n    }\n\n    return validValue(value) && !options;\n  }\n\n  private verifyComboOptions(\n    comboOptions: Array<PoComboOption | PoComboOptionGroup>,\n    verifyingOptionsGroup?: boolean,\n    accumulatedGroupOptions?: Array<PoComboGroup>\n  ) {\n    return comboOptions.reduce((accumulatedOptions, currentOption) => {\n      if (\n        !this.verifyIfHasLabel(currentOption) ||\n        this.hasDuplicatedOption(accumulatedOptions, currentOption.label, accumulatedGroupOptions) ||\n        !this.validateValue(currentOption, verifyingOptionsGroup)\n      ) {\n        return accumulatedOptions;\n      }\n\n      accumulatedOptions.push(currentOption);\n      return accumulatedOptions;\n    }, []);\n  }\n\n  private verifyComboOptionsGroup(comboOptionsList: Array<PoComboOptionGroup>) {\n    return comboOptionsList.reduce((accumulatedGroupOptions, currentOption) => {\n      const { options, label } = currentOption;\n      const verifiedComboOptionsGroupList = this.verifyComboOptions(options, true, accumulatedGroupOptions);\n\n      if (verifiedComboOptionsGroupList.length > 0) {\n        this.sortOptions(verifiedComboOptionsGroupList);\n\n        accumulatedGroupOptions.push({ label: label, options: true }, ...verifiedComboOptionsGroupList);\n      }\n\n      return accumulatedGroupOptions;\n    }, []);\n  }\n\n  private verifyIfHasLabel(currentOption: PoComboGroup) {\n    const { label, options, value } = currentOption;\n\n    if ((this.isOptionGroupList && options && !label) || (!label && !value) || (!this.isOptionGroupList && options)) {\n      return false;\n    }\n\n    if (!currentOption.label) {\n      currentOption.label = currentOption.value.toString();\n      return true;\n    }\n\n    return true;\n  }\n\n  private updateInternalVariables(option: PoComboOption | PoComboGroup) {\n    if (option) {\n      this.selectedView = option;\n      this.selectedOption = option;\n    } else {\n      this.selectedView = undefined;\n      this.selectedOption = undefined;\n    }\n  }\n\n  private updateModel(value: any, fromWriteValue = false): void {\n    if (value !== this.selectedValue) {\n      if (!fromWriteValue) {\n        this.callModelChange(value);\n      }\n\n      this.change.emit(value);\n    }\n\n    this.selectedValue = value;\n  }\n\n  private updateSelectedValueWithOldOption() {\n    const oldOption = this.getOptionFromValue(this.selectedValue, this.comboOptionsList);\n\n    if (oldOption && oldOption.label) {\n      return this.updateSelectedValue(oldOption);\n    }\n  }\n}\n","/**\n * @usedBy PoDatepickerComponent\n *\n * @description\n *\n * *Enum* que define o padrÃ£o de formataÃ§Ã£o das datas.\n *\n * > Caso um formato padrÃ£o seja definido, o mesmo nÃ£o serÃ¡ mais alterado de acordo com o formato de entrada.\n */\nexport enum PoDatepickerIsoFormat {\n  /** PadrÃ£o **E8601DAw** (*yyyy-mm-dd*). */\n  Basic = 'basic',\n\n  /** PadrÃ£o **E8601DZw** (*yyyy-mm-ddThh:mm:ss+|-hh:mm*). */\n  Extended = 'extended'\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoResponse } from './interfaces/po-response.interface';\nimport { validateObjectType } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-combo.\n */\n@Injectable()\nexport class PoComboFilterService implements PoComboFilter {\n  private _url: string;\n\n  fieldLabel: string = 'label';\n  fieldValue: string = 'value';\n\n  get url(): string {\n    return this._url;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  getFilteredData(param: any, filterParams?: any): Observable<Array<PoComboOption>> {\n    const value = param.value;\n    const filterParamsValidated = validateObjectType(filterParams);\n\n    const params = { ...filterParamsValidated, filter: value };\n\n    return this.http\n      .get(`${this.url}`, { responseType: 'json', params: params })\n      .pipe(map((response: PoResponse) => this.parseToArrayComboOption(response.items)));\n  }\n\n  getObjectByValue(value: string | number, filterParams?: any): Observable<PoComboOption> {\n    const filterParamsValidated = validateObjectType(filterParams);\n\n    return this.http\n      .get(`${this.url}/${value}`, { params: filterParamsValidated })\n      .pipe(map(item => this.parseToComboOption(item)));\n  }\n\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\n    this._url = url;\n    this.fieldLabel = fieldLabel;\n    this.fieldValue = fieldValue;\n  }\n\n  private parseToArrayComboOption(items: Array<any>): Array<PoComboOption> {\n    if (items && items.length > 0) {\n      return items.map(item => {\n        return this.parseToComboOption(item);\n      });\n    }\n\n    return [];\n  }\n\n  private parseToComboOption(item: any): PoComboOption {\n    if (item && item[this.fieldValue]) {\n      const label = item[this.fieldLabel];\n      const value = item[this.fieldValue];\n\n      return { label, value };\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista de opÃ§Ãµes do componente.\n *\n * > Quando utilizada em dispositivos *mobile* serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`\n * dentro da *tag* `po-combo`.\n *\n * Para obter a referÃªncia do item atual utilize `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <ng-template p-combo-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-combo>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <div *p-combo-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-combo>\n * ...\n *\n * ```\n * Para o caso de personalizaÃ§Ã£o de opÃ§Ãµes com agrupamentos, deve-se seguir a mesma orientaÃ§Ã£o acima. PorÃ©m, cabe ao desenvolvedor\n * a responsabilidade de estilizaÃ§Ã£o dos elementos da lista, tais como tÃ­tulo e links dos grupos. Abaixo hÃ¡ um exemplo de aplicaÃ§Ã£o:\n *\n * ```\n * ...\n * <ng-template p-combo-option-template let-option>\n *   <ng-container *ngIf=\"option.options; then optionsGroupTitle; else optionsGroupList\"></ng-container>\n *   <ng-template #optionsGroupTitle>\n *     <p class=\"po-combo-item-title\" [innerHtml]=\"option.label\"></p>\n *   </ng-template>\n *   <ng-template #optionsGroupList>\n *     <div class=\"po-combo-item\">\n *       <div class=\"po-row\">\n *         <po-avatar class=\"po-md-1\" p-size=\"sm\"></po-avatar>\n *         <div class=\"po-md-11\" [innerHtml]=\"option.label\"></div>\n *       </div>\n *     </div>\n *   </ng-template>\n * </ng-template>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-combo-option-template]'\n})\nexport class PoComboOptionTemplateDirective {\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  forwardRef,\n  IterableDiffers,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoComboBaseComponent } from './po-combo-base.component';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionTemplateDirective } from './po-combo-option-template/po-combo-option-template.directive';\n\nconst poComboContainerOffset = 8;\nconst poComboContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoComboBaseComponent\n *\n * @description\n * Utilizando po-combo com serviÃ§o, Ã© possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\n * faÃ§a uma requisiÃ§Ã£o Ã  URL informada passando o valor digitado no campo. Se encontrado o valor, entÃ£o o mesmo serÃ¡ selecionado, caso\n * nÃ£o seja encontrado, entÃ£o a lista de itens voltarÃ¡ para o estado inicial.\n *\n * @example\n *\n * <example name=\"po-combo-basic\" title=\"PO Combo Basic\">\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.html\"> </file>\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-labs\" title=\"PO Combo Labs\">\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.html\"> </file>\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-scheduling\" title=\"PO Combo - Scheduling\">\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.html\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.ts\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-transfer\" title=\"PO Combo - Banking Transfer\">\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.html\"> </file>\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes\" title=\"PO Combo - Heroes\">\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes-reactive-form\" title=\"PO Combo - Heroes Reactive Form\">\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-hotels\" title=\"PO Combo - Booking Hotel\">\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.html\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.ts\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-combo',\n  templateUrl: './po-combo.component.html',\n  providers: [\n    PoComboFilterService,\n    PoControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoComboComponent extends PoComboBaseComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private _isServerSearching: boolean = false;\n\n  comboIcon: string = 'po-icon-arrow-down';\n  comboOpen: boolean = false;\n  differ: any;\n  isProcessingGetObjectByValue: boolean = false;\n  scrollTop = 0;\n  service: PoComboFilterService;\n  shouldMarkLetters: boolean = true;\n\n  private clickoutListener: () => void;\n  private eventResizeListener: () => void;\n\n  private filterSubscription: Subscription;\n  private getSubscription: Subscription;\n\n  @ContentChild(PoComboOptionTemplateDirective, { static: true }) comboOptionTemplate: PoComboOptionTemplateDirective;\n\n  @ViewChild('containerElement', { read: ElementRef }) containerElement: ElementRef;\n  @ViewChild('contentElement', { read: ElementRef }) contentElement: ElementRef;\n  @ViewChild('iconArrow', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  constructor(\n    public element: ElementRef,\n    public differs: IterableDiffers,\n    public defaultService: PoComboFilterService,\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private sanitized: DomSanitizer\n  ) {\n    super();\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  set isServerSearching(value: boolean) {\n    if (value) {\n      this._isServerSearching = value;\n\n      this.changeDetector.detectChanges();\n\n      this.setContainerPosition();\n      this.initializeListeners();\n    } else {\n      this._isServerSearching = value;\n\n      this.removeListeners();\n    }\n  }\n\n  get isServerSearching() {\n    return this._isServerSearching;\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.debounceTime) {\n      this.unsubscribeKeyupObservable();\n      this.initInputObservable();\n    }\n\n    if (changes.filterService) {\n      this.configAfterSetFilterService(this.filterService);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoComboComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoComboComponent, { static: true }) combo: PoComboComponent;\n   *\n   * focusCombo() {\n   *   this.combo.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  onKeyDown(event?: any) {\n    const key = event.keyCode;\n    const inputValue = event.target.value;\n\n    // busca um registro quando acionar o tab\n    if (this.service && key === PoKeyCodeEnum.tab && inputValue) {\n      this.controlComboVisibility(false);\n      return this.getObjectByValue(inputValue);\n    }\n\n    // Teclas \"up\" e \"down\"\n    if (key === PoKeyCodeEnum.arrowUp || key === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n\n      if (this.comboOpen) {\n        if (key === PoKeyCodeEnum.arrowUp) {\n          this.selectPreviousOption();\n        } else {\n          this.selectNextOption();\n        }\n      }\n\n      this.controlComboVisibility(true);\n      this.isFiltering = this.changeOnEnter ? this.isFiltering : false;\n      this.shouldMarkLetters = this.changeOnEnter ? this.shouldMarkLetters : false;\n      return;\n    }\n\n    // Teclas \"tab\" ou \"esc\"\n    if (key === PoKeyCodeEnum.tab || key === PoKeyCodeEnum.esc) {\n      if (key === PoKeyCodeEnum.esc && this.comboOpen) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.controlComboVisibility(false);\n      this.verifyValidOption();\n\n      if (!this.service) {\n        // caso for changeOnEnter e nao ter selectedValue deve limpar o selectedView para reinicia-lo.\n        this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n        this.updateComboList();\n      }\n\n      return;\n    }\n\n    // Tecla \"enter\"\n    if (key === PoKeyCodeEnum.enter && this.selectedView && this.comboOpen) {\n      const isUpdateModel = this.selectedView.value !== this.selectedValue || inputValue !== this.selectedView.label;\n\n      this.controlComboVisibility(false);\n\n      this.updateSelectedValue(this.selectedView, isUpdateModel);\n      this.isFiltering = false;\n\n      this.updateComboList();\n      return;\n    }\n\n    if (key === PoKeyCodeEnum.enter) {\n      this.controlComboVisibility(true);\n    }\n  }\n\n  onKeyUp(event?: any) {\n    const key = event.keyCode || event.which;\n    const inputValue = event.target.value;\n\n    const isValidKey = key !== PoKeyCodeEnum.arrowUp && key !== PoKeyCodeEnum.arrowDown && key !== PoKeyCodeEnum.enter;\n\n    if (isValidKey) {\n      if (inputValue) {\n        if (!this.service && this.previousSearchValue !== inputValue) {\n          this.shouldMarkLetters = true;\n          this.isFiltering = true;\n          this.searchForLabel(inputValue, this.comboOptionsList, this.filterMode);\n        }\n      } else {\n        // quando apagar rapido o campo e conter serviÃ§o, valor, nÃ£o disparava o keyup observable\n        // necessario este tratamento para retornar a lista 'default'.\n        const useDefaultOptionsService =\n          this.service && this.selectedValue && this.selectedOption.label === this.previousSearchValue;\n\n        this.updateSelectedValue(null);\n\n        if (!this.service) {\n          this.updateComboList();\n        } else if (useDefaultOptionsService) {\n          this.updateComboList([...this.cacheOptions]);\n        }\n\n        this.isFiltering = false;\n      }\n\n      // caso o valor pesquisado for diferente do anterior deve abrir o combo\n      if (this.previousSearchValue !== inputValue) {\n        this.changeDetector.detectChanges();\n\n        this.controlComboVisibility(true);\n      }\n    }\n\n    this.previousSearchValue = inputValue;\n  }\n\n  initInputObservable() {\n    if (this.service) {\n      const keyupObservable = fromEvent(this.inputElement.nativeElement, 'keyup').pipe(\n        filter((e: any) => this.isValidCharacterToSearch(e.keyCode)),\n        map((e: any) => e.currentTarget.value),\n        distinctUntilChanged(),\n        tap(() => {\n          this.shouldMarkLetters = false;\n        }),\n        debounceTime(this.debounceTime)\n      );\n\n      this.keyupSubscribe = keyupObservable.subscribe(value => {\n        if (value.length >= this.filterMinlength || !value) {\n          this.controlApplyFilter(value);\n        }\n      });\n    }\n  }\n\n  controlApplyFilter(value) {\n    if (!this.isProcessingGetObjectByValue && (!this.selectedOption || value !== this.selectedOption.label)) {\n      this.applyFilter(value);\n    }\n  }\n\n  applyFilter(value: string) {\n    this.controlComboVisibility(false);\n    this.isServerSearching = true;\n\n    const param = { property: this.fieldLabel, value };\n\n    this.filterSubscription = this.service\n      .getFilteredData(param, this.filterParams)\n      .subscribe(items => this.setOptionsByApplyFilter(value, items));\n  }\n\n  setOptionsByApplyFilter(value, items) {\n    this.shouldMarkLetters = true;\n    this.isServerSearching = false;\n    this.options = items;\n\n    this.searchForLabel(value, items, this.filterMode);\n\n    this.changeDetector.detectChanges();\n\n    this.controlComboVisibility(true);\n\n    if (this.isFirstFilter) {\n      this.isFirstFilter = !this.isFirstFilter;\n\n      this.cacheOptions = this.comboOptionsList;\n    }\n  }\n\n  getObjectByValue(value) {\n    if (!this.selectedValue) {\n      this.isProcessingGetObjectByValue = true;\n\n      this.getSubscription = this.service\n        .getObjectByValue(value, this.filterParams)\n        .subscribe(item => this.updateOptionByFilteredValue(item));\n    }\n  }\n\n  updateOptionByFilteredValue(item) {\n    if (item) {\n      this.options = [item];\n      this.onOptionClick(item);\n    } else {\n      this.updateSelectedValue(null);\n    }\n\n    setTimeout(() => {\n      this.isProcessingGetObjectByValue = false;\n    }, this.debounceTime);\n  }\n\n  selectPreviousOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions, true);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const visibleOption = this.visibleOptions[this.visibleOptions.length - 1];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  selectNextOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const index = this.changeOnEnter ? 1 : 0;\n\n      const visibleOption = this.visibleOptions[index];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  toggleComboVisibility(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.service && !this.disabledInitFilter) {\n      this.applyFilterInFirstClick();\n    }\n\n    this.controlComboVisibility(!this.comboOpen);\n  }\n\n  applyFilterInFirstClick() {\n    if (this.isFirstFilter && !this.selectedValue) {\n      this.applyFilter('');\n    }\n  }\n\n  controlComboVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  onOptionClick(option: PoComboOption | PoComboGroup, event?: any) {\n    const inputValue = this.getInputValue();\n    const isUpdateModel =\n      option.value !== this.selectedValue || !!(this.selectedView && inputValue !== this.selectedView.label);\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.updateSelectedValue(option, isUpdateModel);\n    this.controlComboVisibility(false);\n    this.updateComboList([{ ...this.selectedView }]);\n\n    this.previousSearchValue = this.selectedView.label;\n  }\n\n  scrollTo(index) {\n    const selectedItem = this.element.nativeElement.querySelectorAll('.po-combo-item-selected');\n    const scrollTop = !selectedItem.length || index <= 1 ? 0 : selectedItem[0].offsetTop - 88;\n\n    this.setScrollTop(scrollTop);\n  }\n\n  getInputValue() {\n    return this.inputElement.nativeElement.value;\n  }\n\n  setInputValue(value: string): void {\n    this.inputElement.nativeElement.value = value;\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (\n      this.comboOpen &&\n      !this.inputElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target) &&\n      (!this.contentElement || !this.contentElement.nativeElement.contains(event.target))\n    ) {\n      // Esconde Content do Combo quando for clicado fora\n      this.controlComboVisibility(false);\n\n      this.verifyValidOption();\n\n      // caso for changeOnEnter deve limpar o selectedView para reinicia-lo\n      this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n      this.updateComboList();\n    } else {\n      if (this.service && !this.getInputValue() && !this.isFirstFilter) {\n        this.applyFilter('');\n      }\n    }\n  }\n\n  getLabelFormatted(label: string): SafeHtml {\n    const sanitizedLabel = this.sanitizeTagHTML(label);\n    let format: string = sanitizedLabel;\n\n    if (\n      this.isFiltering ||\n      (this.service &&\n        this.getInputValue() &&\n        !this.compareObjects(this.cacheOptions, this.visibleOptions) &&\n        this.shouldMarkLetters)\n    ) {\n      const labelInput = this.sanitizeTagHTML(this.getInputValue().toString().toLowerCase());\n      const labelLowerCase = sanitizedLabel.toLowerCase();\n\n      const openTagBold = '<span class=\"po-font-text-large-bold\">';\n      const closeTagBold = '</span>';\n\n      let startString;\n      let middleString;\n      let endString;\n\n      switch (this.filterMode) {\n        case PoComboFilterMode.startsWith:\n        case PoComboFilterMode.contains:\n          const indexOfLabelInput = labelLowerCase.indexOf(labelInput);\n\n          if (indexOfLabelInput > -1) {\n            startString = sanitizedLabel.substring(0, indexOfLabelInput);\n\n            middleString = sanitizedLabel.substring(indexOfLabelInput, indexOfLabelInput + labelInput.length);\n            endString = sanitizedLabel.substring(indexOfLabelInput + labelInput.length);\n\n            format = startString + openTagBold + middleString + closeTagBold + endString;\n          }\n\n          break;\n        case PoComboFilterMode.endsWith:\n          const lastIndexOfLabelInput = labelLowerCase.lastIndexOf(labelInput);\n\n          if (lastIndexOfLabelInput > -1) {\n            startString = sanitizedLabel.substring(0, lastIndexOfLabelInput);\n            middleString = sanitizedLabel.substring(lastIndexOfLabelInput);\n\n            format = startString + openTagBold + middleString + closeTagBold;\n          }\n          break;\n      }\n    }\n\n    return this.safeHtml(format);\n  }\n\n  safeHtml(value): SafeHtml {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n\n  isValidCharacterToSearch(keyCode) {\n    return (\n      keyCode !== 9 && // tab\n      keyCode !== 13 && // entet\n      keyCode !== 16 && // shift\n      keyCode !== 17 && // ctrl\n      keyCode !== 18 && // alt\n      keyCode !== 20 && // capslock\n      keyCode !== 27 && // esc\n      keyCode !== 37 && // seta\n      keyCode !== 38 && // seta\n      keyCode !== 39 && // seta\n      keyCode !== 40 && // seta\n      keyCode !== 93\n    ); // windows menu\n  }\n\n  searchOnEnter(value: string) {\n    if (this.service && !this.selectedView && value.length >= this.filterMinlength) {\n      this.controlApplyFilter(value);\n    }\n  }\n\n  private adjustContainerPosition() {\n    this.controlPosition.adjustPosition(poComboContainerPositionDefault);\n  }\n\n  private close() {\n    this.comboOpen = false;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-down';\n\n    this.removeListeners();\n\n    this.isFiltering = false;\n  }\n\n  private initializeListeners() {\n    this.removeListeners();\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      // timeout necessario pois a animaÃ§Ã£o do po-menu impacta no ajuste da posiÃ§Ã£o do container.\n      setTimeout(() => this.adjustContainerPosition(), 250);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  };\n\n  private open() {\n    this.comboOpen = true;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-up';\n\n    this.initializeListeners();\n\n    this.inputElement.nativeElement.focus();\n    this.scrollTo(this.getIndexSelectedView());\n\n    this.setContainerPosition();\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private sanitizeTagHTML(value: string = '') {\n    return value.replace(/\\</gm, '&lt;').replace(/\\>/g, '&gt;');\n  }\n\n  private setContainerPosition() {\n    this.controlPosition.setElements(\n      this.containerElement.nativeElement,\n      poComboContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n  private setScrollTop(scrollTop: number) {\n    if (this.contentElement) {\n      this.contentElement.nativeElement.scrollTop = scrollTop;\n    }\n  }\n}\n","/**\n * Para usar o po-mask Ã© preciso instanciar esta classe passando a mÃ¡scara como\n * primeiro parÃ¢metro, e no segundo parÃ¢metro, deve se informado true, caso queira\n * que o model seja formatado ou false para o que o model seja limpo.\n */\nexport class PoMask {\n  mask: string = '';\n  formatModel: boolean = false;\n  // controle de posiÃ§Ã£o\n  initialPosition: number = 0;\n  finalPosition: number = 0;\n\n  pattern: string = '';\n  get getPattern(): string {\n    return this.pattern;\n  }\n\n  valueToInput: string;\n  get getValueToInput(): string {\n    return this.valueToInput;\n  }\n  set setValueToInput(value: string) {\n    this.valueToInput = value;\n  }\n\n  valueToModel: string;\n  get getValueToModel(): string {\n    return this.valueToModel;\n  }\n  set setValueToModel(value: string) {\n    this.valueToModel = value;\n  }\n\n  formattingEnds: boolean;\n\n  constructor(mask: string, formatModel: boolean) {\n    this.mask = mask;\n    this.formatModel = formatModel;\n    this.pattern = this.getRegexFromMask(mask);\n  }\n\n  keyup($event: any) {\n    if (this.mask) {\n      const value = $event.target.value;\n      // formata o valor quando for colado com control + v e reposiciona o cursor\n      if ($event.keyCode === 17 || $event.keyCode === 91) {\n        $event.target.value = this.controlFormatting(value);\n        this.resetPositions($event);\n      }\n\n      $event.preventDefault();\n\n      switch ($event.keyCode) {\n        case 37: // seta esquerda\n          if (this.initialPosition > 0) {\n            this.initialPosition--;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 39: // seta direita\n          if (this.initialPosition < value.toString().length) {\n            this.initialPosition++;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 35: // end\n          this.finalPosition = value.toString().length;\n          if ($event.shiftKey) {\n            this.setPositions($event);\n          } else {\n            this.initialPosition = this.finalPosition;\n            this.setPositions($event);\n          }\n          break;\n\n        case 36: // HOME\n          if ($event.shiftKey) {\n            this.finalPosition = this.initialPosition;\n            this.initialPosition = 0;\n            this.setPositions($event);\n          } else {\n            this.initialPosition = 0;\n            this.finalPosition = 0;\n            this.setPositions($event);\n          }\n          break;\n      }\n    }\n  }\n\n  setPositionNotShiftKey($event: any) {\n    if (!$event.shiftKey) {\n      this.finalPosition = this.initialPosition;\n    }\n  }\n\n  setSelectionRange($event: any) {\n    if (this.initialPosition > this.finalPosition) {\n      $event.target.setSelectionRange(this.finalPosition, this.initialPosition);\n    } else {\n      $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n    }\n  }\n\n  keydown($event: any) {\n    if (this.mask) {\n      let value: string = $event.target.value;\n      if ($event.keyCode === 9) {\n        return;\n      }\n\n      if (!$event.ctrlKey && !$event.metaKey) {\n        $event.preventDefault();\n      }\n\n      // NÃ£o faz nada quando for digitado CTRL ou COMMAND e V\n      // JÃ¡ estÃ¡ sendo tratado no evento keyup\n      if (\n        $event.ctrlKey ||\n        ($event.metaKey && $event.keyCode !== 86) ||\n        ($event.keyCode >= 37 && $event.keyCode <= 40) ||\n        $event.keyCode === 16 ||\n        $event.keyCode === 9\n      ) {\n        return;\n      }\n\n      // Valida a tecla digitada\n      if (this.isKeyValid($event.keyCode)) {\n        if (this.finalPosition === null) {\n          this.finalPosition = this.initialPosition;\n        }\n        this.revertPositions(this.initialPosition, this.finalPosition);\n\n        switch ($event.keyCode) {\n          case 8: // backspace\n            this.getPosition($event);\n            if (this.initialPosition < 0) {\n              this.initialPosition = 0;\n              this.setPositions($event);\n            }\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskBefore($event, -1);\n              if (this.initialPosition !== 0) {\n                value = value.slice(0, this.initialPosition - 1) + value.slice(this.finalPosition);\n                value = this.controlFormatting(value);\n                $event.target.value = value;\n                this.changePosition($event, -1);\n                this.checkMaskBefore($event, -1);\n                this.setPositions($event);\n                this.resetPositions($event);\n              }\n            } else {\n              this.clearRangeSelection(value, $event, true);\n            }\n            this.setPositions($event);\n            break;\n\n          case 46: // delete\n            this.getPosition($event);\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskAfter($event, 1);\n              value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition + 1);\n              value = this.controlFormatting(value);\n              $event.target.value = value;\n              this.setPositions($event);\n              this.resetPositions($event);\n            } else {\n              this.clearRangeSelection(value, $event, false);\n            }\n            this.setPositions($event);\n            break;\n\n          default:\n            // qualquer outra tecla vÃ¡lida\n            value = value.slice(0, this.initialPosition) + $event.key + value.slice(this.finalPosition);\n            value = this.controlFormatting(value);\n            $event.target.value = value;\n            this.changePosition($event, 1);\n            this.checkMaskBefore($event, 1);\n            this.setPositions($event);\n            this.resetPositions($event);\n            this.setPositions($event);\n        }\n      }\n    }\n  }\n\n  clearRangeSelection(value: string, $event: any, isBackspace: boolean) {\n    value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition);\n    value = this.controlFormatting(value);\n    $event.target.value = value;\n\n    if (isBackspace) {\n      this.checkMaskBefore($event, -1);\n    }\n\n    this.setPositions($event);\n    this.resetPositions($event);\n  }\n\n  // passa a posiÃ§Ã£o do click para o controle de posiÃ§Ã£o\n  click($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n  }\n\n  blur($event: any) {\n    // Se houver algum valor definido na mÃ¡scara\n    if (this.mask) {\n      // pega o valor do campo, formata e passa para o model\n      let value = $event.target.value;\n      value = this.controlFormatting(value);\n      $event.target.value = value;\n    }\n  }\n\n  revertPositions(initialPosition: number, finalPosition: number) {\n    if (initialPosition > finalPosition) {\n      // inverte o controle de posiÃ§Ã£o caso o inicial esteja maior que o final\n      let tempPosition;\n      tempPosition = initialPosition;\n      this.initialPosition = finalPosition;\n      this.finalPosition = tempPosition;\n    }\n  }\n\n  // reseta o controle de posiÃ§Ã£o\n  resetPositions($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = this.initialPosition;\n  }\n\n  // posiciona o cursor de acordo com o controle de posiÃ§Ã£o\n  setPositions($event: any) {\n    $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n  }\n\n  // muda a posiÃ§Ã£o do cursor e atualiza o controle de posiÃ§Ã£o\n  changePosition($event: any, value: number) {\n    this.initialPosition = this.initialPosition + value;\n    this.finalPosition = this.finalPosition + value;\n    this.setPositions($event);\n  }\n\n  getPosition($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n    this.setPositions($event);\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar a formataÃ§Ã£o e aplicar todas as mÃ¡scara possÃ­veis\n  // quando houver valores opcionais (?)\n  controlFormatting(value: string) {\n    // Se o valor for vazio, retorna vazio\n    if (!value) {\n      this.valueToInput = '';\n      this.valueToModel = '';\n      return '';\n    }\n    let valueProcessed;\n    let maskTmp = this.mask;\n\n    // Array que serÃ¡ usado para armazenar todas as mÃ¡scaras possÃ­veis para\n    // quando houver um valor opcional (?)\n    const arrMasks: Array<any> = [];\n    let contMasks = 0;\n\n    // Enquanto houver algum 9? na mÃ¡scara\n    while (this.hasOptionalNumber(maskTmp)) {\n      arrMasks.push(maskTmp);\n      maskTmp = this.replaceOptionalNumber(maskTmp);\n    }\n    arrMasks.push(maskTmp);\n\n    // Inverte o array\n    arrMasks.reverse();\n\n    // Informa que a formataÃ§Ã£o ainda nÃ£o chegou ao fim\n    this.formattingEnds = false;\n\n    while (!this.formattingEnds) {\n      // Seta a formataÃ§Ã£o como terminada\n      // EntÃ£o o mÃ©todo formatValue irÃ¡ setar como nÃ£o terminado caso haja\n      this.formattingEnds = true;\n\n      // Se nÃ£o existe mais nenhuma mÃ¡scara possÃ­vel, entÃ£o encerra a formataÃ§Ã£o\n      if (!arrMasks[contMasks]) {\n        break;\n      }\n\n      // Chama a formataÃ§Ã£o passando a mÃ¡scara e o valor\n      valueProcessed = this.formatValue(value, arrMasks[contMasks]);\n      contMasks++;\n    }\n\n    return valueProcessed;\n  }\n\n  // FunÃ§Ã£o que formata a mÃ¡scara com o valor passado\n  formatValue(value: string, mask: string) {\n    // Remove as marcas de valor opciona (?)\n    mask = mask.replace(/\\?/g, '');\n\n    // Substitui todos os caracteres que nÃ£o sÃ£o fixos da mÃ¡scara por _\n    const guide = mask.replace(this.listValidKeys(), '_');\n\n    // Contador usado para percorrer o guide\n    let contGuide: number = 0;\n\n    // String final formatada\n    let valueProcessed: string = '';\n\n    // Remove do valor todos os caracteres fixos como ()/-+\n    value = this.removeFormattingValue(value);\n\n    // Percorre todo o valor e coloca a formataÃ§Ã£o de acordo com a mÃ¡scara\n    for (let i = 0; i < value.length; i++) {\n      const charValue = value[i];\n\n      // Se o guide acabou, seta a formataÃ§Ã£o como nÃ£o terminada para que o mÃ©todo controlFormatting\n      // tente formatar com outra possÃ­vel mÃ¡scara\n      if (!guide[contGuide]) {\n        this.formattingEnds = false;\n        break;\n      }\n\n      // Percorre o Guide enquanto tem caracteres fixos\n      while (this.isFixedCharacterGuide(guide[contGuide]) && guide[contGuide]) {\n        valueProcessed += guide[contGuide];\n        contGuide++;\n      }\n\n      // Ã um caracter vÃ¡lido de acordo com a mÃ¡scara\n      if (this.isKeyValidMask(charValue, mask[contGuide])) {\n        valueProcessed += charValue;\n        contGuide++;\n      } else {\n        // Se nÃ£o Ã© um caracter vÃ¡lido, deve interromper.\n        break;\n      }\n    }\n\n    if (this.formatModel) {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = valueProcessed;\n    } else {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = this.removeFormattingValue(valueProcessed);\n    }\n    return valueProcessed;\n  }\n  // verifica se tem algum caracter de mascara antes do cursor\n  checkMaskBefore($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition - 1))) {\n      this.changePosition($event, position);\n      this.checkMaskBefore($event, position);\n    }\n  }\n\n  // verifica se tem algum caracter de mascara depois do cursor\n  checkMaskAfter($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition))) {\n      this.changePosition($event, position);\n      this.checkMaskAfter($event, position);\n    }\n  }\n\n  // Retorna a mÃ¡scara sem um valor opcional\n  replaceOptionalNumber(mask: string) {\n    let i = 9;\n    while (i >= 0) {\n      if (mask.indexOf(i + '?') > -1) {\n        return mask.replace(i + '?', '');\n      }\n      i--;\n    }\n    return mask;\n  }\n\n  // Verifica se contÃ©m caracteres permitidos somente na mÃ¡scara \\/() +-\n  isFixedCharacterGuide(key: any) {\n    return this.testRegex(key, this.getFixedCharacterGuide());\n  }\n\n  // Retorna caracteres permitidos somente na mÃ¡scara \\/() +-\n  getFixedCharacterGuide() {\n    return /[\\\\\\/() +-.\\:]/g;\n  }\n\n  // Caracteres permitidos de serem digitados\n  listValidKeys() {\n    return /[a-zA-Z0-9]/g;\n  }\n\n  // Se Ã© um dÃ­gito vÃ¡lido\n  isKeyValid(keyCode: any) {\n    return this.isKeyCodeValid(keyCode);\n  }\n\n  // Verifica se a tecla digitada Ã© permitida\n  // Permite apenas nÃºmeros, letras, backspace e del\n  isKeyCodeValid(keyCode: number) {\n    return (\n      (keyCode >= 48 && keyCode <= 57) ||\n      (keyCode >= 65 && keyCode <= 90) ||\n      (keyCode >= 96 && keyCode <= 105) ||\n      keyCode === 8 ||\n      keyCode === 9 ||\n      keyCode === 46\n    );\n  }\n\n  // Se estÃ¡ de acordo com a mÃ¡scara\n  isKeyValidMask(key: any, keyMask: any) {\n    return this.testRegex(key, this.replaceMask(keyMask));\n  }\n\n  // Retorna se a chave foi aprovada pela expressÃ£o regular\n  testRegex(key: any, regex: any) {\n    return regex.test(key);\n  }\n\n  // Remove a formatacÃ£o do valor\n  // Ã possÃ­vel ser melhorado para remover pontualmente os caracteres fixos de acordo com a mÃ¡scara\n  removeFormattingValue(value: string) {\n    return value.replace(this.getFixedCharacterGuide(), '');\n  }\n\n  // Verifica se contÃ©m valor opcional na mÃ¡scara 0-9?\n  hasOptionalNumber(mask: string) {\n    return mask.match(/\\d\\?/g);\n  }\n\n  // Retorna a expressÃ£o regular correspondente ao comando passado\n  replaceMask(char: string) {\n    let regex = /./;\n    switch (char) {\n      case '0':\n        regex = /[0]/;\n        break;\n      case '1':\n        regex = /[0-1]/;\n        break;\n      case '2':\n        regex = /[0-2]/;\n        break;\n      case '3':\n        regex = /[0-3]/;\n        break;\n      case '4':\n        regex = /[0-4]/;\n        break;\n      case '5':\n        regex = /[0-5]/;\n        break;\n      case '6':\n        regex = /[0-6]/;\n        break;\n      case '7':\n        regex = /[0-7]/;\n        break;\n      case '8':\n        regex = /[0-8]/;\n        break;\n      case '9':\n        regex = /[0-9]/;\n        break;\n      case ' ':\n        regex = /\\s/;\n        break;\n      case '@':\n        regex = /[a-zA-Z]/;\n        break;\n      case 'w':\n        regex = /[a-zA-Z0-9]/;\n        break;\n    }\n    return regex;\n  }\n\n  getRegexFromMask(mask: string) {\n    if (mask) {\n      let pattern;\n      if (this.formatModel) {\n        pattern = mask.replace(/\\\\/g, '\\\\\\\\');\n        pattern = pattern.replace(/\\+/g, '\\\\+');\n        pattern = pattern.replace(/\\./g, '\\\\.');\n        pattern = pattern.replace(/-/g, '-');\n        pattern = pattern.replace(/\\(/g, '\\\\(');\n        pattern = pattern.replace(/\\)/g, '\\\\)');\n        pattern = pattern.replace(/\\//g, '\\\\/');\n        pattern = pattern.replace(/\\s/g, '\\\\s');\n        pattern = pattern.replace(/:/g, '\\\\:');\n        pattern = pattern.replace(/\\@(?!\\s)/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      } else {\n        pattern = mask.replace(/\\\\/g, '');\n        pattern = pattern.replace(/\\+/g, '');\n        pattern = pattern.replace(/\\./g, '');\n        pattern = pattern.replace(/-/g, '');\n        pattern = pattern.replace(/\\(/g, '');\n        pattern = pattern.replace(/\\)/g, '');\n        pattern = pattern.replace(/\\//g, '');\n        pattern = pattern.replace(/\\s/g, '');\n        pattern = pattern.replace(/:/g, '');\n        pattern = pattern.replace(/\\@/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      }\n      return pattern;\n    } else {\n      return null;\n    }\n  }\n}\n","import { EventEmitter, Input, OnInit, Output, Directive } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport {\n  convertDateToISODate,\n  convertDateToISOExtended,\n  convertIsoToDate,\n  convertToBoolean,\n  formatYear,\n  getShortBrowserLanguage,\n  isTypeof,\n  setYearFrom0To100,\n  validateDateRange\n} from '../../../utils/util';\nimport { dateFailed, requiredFailed } from './../validators';\nimport { InputBoolean } from '../../../decorators';\nimport { PoMask } from '../po-input/po-mask';\n\nimport { PoDatepickerIsoFormat } from './enums/po-datepicker-iso-format.enum';\n\nconst poDatepickerFormatDefault: string = 'dd/mm/yyyy';\n\n/**\n * @description\n *\n * O `po-datepicker` Ã© um componente especÃ­fico para manipulaÃ§Ã£o de datas permitindo a digitaÃ§Ã£o e / ou seleÃ§Ã£o.\n *\n * O formato de exibiÃ§Ã£o da data, ou seja, o formato que Ã© apresentado ao usuÃ¡rio Ã© o dd/mm/yyyy,\n * mas podem ser definidos outros padrÃµes (veja mais na propriedade `p-format`).\n *\n * O idioma padrÃ£o do calendÃ¡rio serÃ¡ exibido de acordo com o navegador, caso tenha necessidade de alterar\n * use a propriedade `p-locale`.\n *\n * O datepicker aceita trÃªs formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\n * Date padrÃ£o do Javascript.\n *\n * > Por padrÃ£o, o formato de saÃ­da do *model* se ajustarÃ¡ conforme o formato de entrada. Se por acaso precisar controlar o valor de saÃ­da,\n * a propriedade `p-iso-format` provÃª esse controle independentemente do formato de entrada. Veja abaixo os formatos disponÃ­veis:\n *\n * - Formato de entrada e saÃ­da (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\n *\n * - Formato de entrada e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * - Formato de entrada (Date) - `new Date(2017, 10, 28)` e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * **Importante:**\n *\n * - Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\n * e utilizar o mÃ©todo [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\n * - Caso a data esteja invÃ¡lida, o `model` receberÃ¡ **'Data invÃ¡lida'**.\n * - Caso o `input` esteja passando um `[(ngModel)]`, mas nÃ£o tenha um `name`, entÃ£o irÃ¡ ocorrer um erro\n * do prÃ³prio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\n *\n * Exemplo:\n *\n * ```\n * <po-datepicker\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\"\n * </po-datepicker>\n * ```\n *\n * > NÃ£o esqueÃ§a de importar o `FormsModule` em seu mÃ³dulo, tal como para utilizar o `input default`.\n */\n@Directive()\nexport abstract class PoDatepickerBaseComponent implements ControlValueAccessor, OnInit, Validator {\n  private _format?: string = poDatepickerFormatDefault;\n  private _isoFormat: PoDatepickerIsoFormat;\n  private _maxDate: Date;\n  private _minDate: Date;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected date: Date;\n  protected firstStart = true;\n  protected hour: string = 'T00:00:01-00:00';\n  protected isExtendedISO: boolean = false;\n  protected objMask: any;\n  protected onChangeModel: any = null;\n  protected onTouchedModel: any = null;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /* Nome do componente datepicker. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = isTypeof(placeholder, 'string') ? placeholder : '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Desabilita o campo. */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Torna o elemento somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /** Faz com que o campo seja obrigatÃ³rio. */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Habilita aÃ§Ã£o para limpar o campo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * Mensagem apresentada quando a data for invÃ¡lida ou fora do perÃ­odo.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja obrigatÃ³rio.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ­nima para o `po-datepicker`.\n   */\n  @Input('p-min-date') set minDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._minDate = date;\n    } else {\n      this._minDate = convertIsoToDate(value, true, false);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get minDate() {\n    return this._minDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ¡xima para o `po-datepicker`.\n   */\n  @Input('p-max-date') set maxDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._maxDate = date;\n    } else {\n      this._maxDate = convertIsoToDate(value, false, true);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o da data.\n   *\n   * Valores vÃ¡lidos:\n   *  - `dd/mm/yyyy`\n   *  - `mm/dd/yyyy`\n   *  - `yyyy/mm/dd`\n   *\n   * @default `dd/mm/yyyy`\n   */\n  @Input('p-format') set format(value: string) {\n    if (value) {\n      value = value.toLowerCase();\n      if (value.match(/dd/) && value.match(/mm/) && value.match(/yyyy/)) {\n        this._format = value;\n        this.objMask = this.buildMask();\n        this.refreshValue(this.date);\n        return;\n      }\n    }\n    this._format = poDatepickerFormatDefault;\n    this.objMask = this.buildMask();\n  }\n\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PadrÃ£o de formataÃ§Ã£o para saÃ­da do *model*, independentemente do formato de entrada.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoDatepickerIsoFormat`.\n   */\n  @Input('p-iso-format') set isoFormat(value: PoDatepickerIsoFormat) {\n    if (Object.values(PoDatepickerIsoFormat).includes(value)) {\n      this._isoFormat = value;\n      this.isExtendedISO = value === PoDatepickerIsoFormat.Extended;\n    }\n  }\n\n  get isoFormat() {\n    return this._isoFormat;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do Datepicker.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  _locale?: string;\n  @Input('p-locale') set locale(value: string) {\n    if (value) {\n      this._locale = value.length >= 2 ? value : 'pt';\n    } else {\n      this._locale = getShortBrowserLanguage();\n    }\n  }\n  get locale() {\n    return this._locale || getShortBrowserLanguage();\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') onblur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') onchange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {}\n\n  abstract writeValue(value: any): void;\n\n  abstract refreshValue(value: Date): void;\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.objMask = this.buildMask();\n  }\n\n  // Converte um objeto string em Date\n  getDateFromString(dateString: string) {\n    const day = parseInt(dateString.substring(this.format.indexOf('d'), this.format.indexOf('d') + 2), 10);\n    const month = parseInt(dateString.substring(this.format.indexOf('m'), this.format.indexOf('m') + 2), 10) - 1;\n    const year = parseInt(dateString.substring(this.format.indexOf('y'), this.format.indexOf('y') + 4), 10);\n\n    const date = new Date(year, month, day);\n\n    setYearFrom0To100(date, year);\n\n    return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day ? date : null;\n  }\n\n  // Formata a data.\n  formatToDate(value: Date) {\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar o modelo.\n  controlModel(date: Date) {\n    this.date = date;\n    if (date && this.isExtendedISO) {\n      this.callOnChange(convertDateToISOExtended(this.date, this.hour));\n    } else if (date && !this.isExtendedISO) {\n      this.callOnChange(convertDateToISODate(this.date));\n    } else {\n      date === undefined ? this.callOnChange('') : this.callOnChange('Data invÃ¡lida');\n    }\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  callOnChange(value: any, retry: boolean = true) {\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    } else if (retry) {\n      setTimeout(() => this.callOnChange(value, false));\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  protected buildMask() {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    // Verifica se jÃ¡ possui algum error pattern padrÃ£o.\n    this.errorPattern =\n      this.errorPattern !== 'Data invÃ¡lida' && this.errorPattern !== 'Data fora do perÃ­odo' ? this.errorPattern : '';\n\n    if (dateFailed(c.value)) {\n      this.errorPattern = this.errorPattern || 'Data invÃ¡lida';\n\n      return {\n        date: {\n          valid: false\n        }\n      };\n    }\n\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    if (this.date && !validateDateRange(this.date, this._minDate, this._maxDate)) {\n      this.errorPattern = this.errorPattern || 'Data fora do perÃ­odo';\n\n      return {\n        date: {\n          valid: false\n        }\n      };\n    }\n\n    return null;\n  }\n}\n","/**\n * @usedBy PoMultiselectComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-multiselect.\n */\nexport enum PoMultiselectFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { formatYear, isMobile, setYearFrom0To100 } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\n\nimport { PoCalendarComponent } from './po-calendar/po-calendar.component';\nimport { PoDatepickerBaseComponent } from './po-datepicker-base.component';\n\nconst poCalendarContentOffset = 8;\nconst poCalendarPositionDefault = 'bottom-left';\n\n/**\n * @docsExtends PoDatepickerBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-basic\" title=\"PO Datepicker Basic\">\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-labs\" title=\"PO Datepicker Labs\">\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare\" title=\"PO Datepicker - Airfare\">\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare-reactive-form\" title=\"PO Datepicker - Airfare Reactive Form\">\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker',\n  templateUrl: './po-datepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {\n  date;\n  el: ElementRef;\n  hour: string;\n\n  private clickListener;\n  private readonly dateRegex = new RegExp(\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' + '(?:0[1-9]|1[0-2])-' + '(?:0[1-9]|[12]\\\\d|3[01])$'\n  );\n  private readonly isoRegex = new RegExp(\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n      '(?:0[1-9]|1[0-2])-' +\n      '(?:0[1-9]|[12]\\\\d|3[01])' +\n      'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n      '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n      '(?:|:?[0-5]\\\\d)$'\n  );\n  private timeoutChange: any;\n  private valueBeforeChange: string;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ViewChild('calendar', { static: true }) calendar: PoCalendarComponent;\n  @ViewChild('dialogPicker', { read: ElementRef, static: true }) dialogPicker: ElementRef;\n  @ViewChild('iconDatepicker', { read: ElementRef, static: true }) iconDatepicker: ElementRef;\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  constructor(private controlPosition: PoControlPositionService, private renderer: Renderer2, el: ElementRef) {\n    super();\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.setDialogPickerStyleDisplay('none');\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;\n   *\n   * focusDatepicker() {\n   *   this.datepicker.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  togglePicker() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (!this.calendar.visible) {\n      this.calendar.init();\n      this.setCalendarPosition();\n      this.initializeListeners();\n    } else {\n      this.inputEl.nativeElement.disabled = false;\n      this.closeCalendar();\n    }\n  }\n\n  dateSelected() {\n    if (!this.verifyMobile()) {\n      this.inputEl.nativeElement.focus();\n    }\n\n    this.inputEl.nativeElement.value = this.formatToDate(this.date);\n    this.controlModel(this.date);\n    this.controlChangeEmitter();\n    this.closeCalendar();\n  }\n\n  // Esconde Picker quando for clicado fora\n  wasClickedOnPicker(event: any): void {\n    if (!this.dialogPicker || !this.iconDatepicker) {\n      return;\n    }\n\n    if (\n      (!this.dialogPicker.nativeElement.contains(event.target) || this.hasOverlayClass(event.target)) &&\n      !this.iconDatepicker.nativeElement.contains(event.target) &&\n      !this.hasAttrCalendar(event.target)\n    ) {\n      this.closeCalendar();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keyup($event);\n    // Controla a atualizaÃ§Ã£o do model, verificando se a data Ã© valida\n    if (this.objMask.valueToModel || this.objMask.valueToModel === '') {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value));\n        this.date = this.getDateFromString(this.inputEl.nativeElement.value);\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n    } else {\n      this.date = undefined;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown($event?: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keydown($event);\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== ''\n    );\n  }\n\n  getErrorPattern() {\n    return this.errorPattern !== '' && this.hasInvalidClass() ? this.errorPattern : '';\n  }\n\n  clear() {\n    this.valueBeforeChange = this.formatToDate(this.date);\n    this.date = undefined;\n    this.controlModel(this.date);\n\n    this.controlChangeEmitter();\n  }\n\n  eventOnBlur($event: any) {\n    const date = this.inputEl.nativeElement.value;\n    const newDate = date ? this.getDateFromString(date) : undefined;\n    this.objMask.blur($event);\n    this.onblur.emit();\n\n    if (this.objMask.valueToModel) {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(newDate);\n        this.date = newDate;\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n    } else {\n      this.date = undefined;\n      this.callOnChange(this.date);\n    }\n\n    this.controlChangeEmitter();\n  }\n\n  eventOnClick($event) {\n    if (this.verifyMobile()) {\n      $event.target.blur();\n\n      // abre o calendar quando clicar no input somente no mobile\n      setTimeout(() => this.togglePicker(), 0);\n    } else {\n      // Atualiza a posiÃ§Ã£o do cursor ao clicar\n      this.objMask.click($event);\n    }\n  }\n\n  formatToDate(value: Date) {\n    if (!value) {\n      return undefined;\n    }\n\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  refreshValue(value: Date) {\n    if (value) {\n      this.inputEl.nativeElement.value = this.formatToDate(value);\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    if (this.inputEl && value) {\n      if (value instanceof Date) {\n        const dateString = value.toString();\n        this.hour =\n          'T' + dateString.substring(16, 24) + dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n        this.date = value;\n        this.inputEl.nativeElement.value = this.formatToDate(value);\n      } else if (this.isValidDateIso(value) || this.isValidExtendedIso(value)) {\n        if (this.isValidExtendedIso(value)) {\n          this.hour = value.substring(10, 25);\n        }\n\n        if (this.isoFormat === undefined) {\n          this.isExtendedISO = this.isValidExtendedIso(value);\n        }\n\n        const day = parseInt(value.substring(8, 10), 10);\n        const month = parseInt(value.substring(5, 7), 10) - 1;\n        const year = parseInt(value.substring(0, 4), 10);\n\n        const dateTemp = new Date(year, month, day);\n\n        setYearFrom0To100(dateTemp, year);\n\n        this.date = dateTemp;\n        this.inputEl.nativeElement.value = this.formatToDate(dateTemp);\n      } else {\n        this.inputEl.nativeElement.value = '';\n        this.date = undefined;\n      }\n      this.controlModel(this.date);\n    } else if (this.inputEl) {\n      this.inputEl.nativeElement.value = '';\n      this.date = undefined;\n    }\n\n    this.valueBeforeChange = this.formatToDate(this.date);\n  }\n\n  isValidDateIso(value: string) {\n    return this.dateRegex.test(value);\n  }\n\n  isValidExtendedIso(value) {\n    return this.isoRegex.test(value);\n  }\n\n  hasOverlayClass(element: any) {\n    return element.classList.contains('po-calendar-overlay');\n  }\n\n  /* istanbul ignore next */\n  verifyMobile() {\n    return isMobile();\n  }\n\n  private closeCalendar() {\n    this.calendar.close();\n    this.removeListeners();\n    this.setDialogPickerStyleDisplay('none');\n  }\n\n  private controlChangeEmitter() {\n    const dateModelFormatted = this.formatToDate(this.date);\n\n    if (dateModelFormatted !== this.valueBeforeChange) {\n      this.valueBeforeChange = dateModelFormatted;\n\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.onchange.emit(dateModelFormatted);\n      }, 200);\n    }\n  }\n\n  private hasAttrCalendar(element: any) {\n    const attrCalendar = 'attr-calendar';\n\n    return (\n      (element && element.hasAttribute(attrCalendar)) ||\n      (element.parentElement && element.parentElement.hasAttribute(attrCalendar))\n    );\n  }\n\n  private initializeListeners() {\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnPicker(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.closeCalendar();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  };\n\n  private removeListeners() {\n    if (this.clickListener) {\n      this.clickListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setDialogPickerStyleDisplay(value) {\n    this.dialogPicker.nativeElement.style.display = value;\n  }\n\n  private setCalendarPosition() {\n    this.setDialogPickerStyleDisplay('block');\n\n    this.controlPosition.setElements(\n      this.dialogPicker.nativeElement,\n      poCalendarContentOffset,\n      this.inputEl,\n      ['top-left', 'bottom-left'],\n      false,\n      true\n    );\n\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  }\n}\n","import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { InputBoolean } from '../../../decorators';\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeLiterals } from './interfaces/po-datepicker-range-literals.interface';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\n\nexport const poDatepickerRangeLiteralsDefault = {\n  en: <PoDatepickerRangeLiterals>{\n    invalidFormat: 'Date in invalid format',\n    startDateGreaterThanEndDate: 'Start date greater than end date'\n  },\n  es: <PoDatepickerRangeLiterals>{\n    invalidFormat: 'Fecha en formato no vÃ¡lido',\n    startDateGreaterThanEndDate: 'Fecha de inicio mayor que fecha final'\n  },\n  pt: <PoDatepickerRangeLiterals>{\n    invalidFormat: 'Data no formato invÃ¡lido',\n    startDateGreaterThanEndDate: 'Data inicial maior que data final'\n  },\n  ru: <PoDatepickerRangeLiterals>{\n    invalidFormat: 'ÐÐ°ÑÐ° Ð² Ð½ÐµÐ²ÐµÑÐ½Ð¾Ð¼ ÑÐ¾ÑÐ¼Ð°ÑÐµ',\n    startDateGreaterThanEndDate: 'ÐÐ°ÑÐ° Ð½Ð°ÑÐ°Ð»Ð° Ð±Ð¾Ð»ÑÑÐµ Ð´Ð°ÑÑ Ð¾ÐºÐ¾Ð½ÑÐ°Ð½Ð¸Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O `po-datepicker-range` Ã© um componente para seleÃ§Ã£o de um perÃ­odo entre duas datas, onde Ã© possÃ­vel informar apenas\n * a data inicial ou a data final.\n *\n * O componente `[(ngModel)]` do `po-datepicker-range` trabalha com um objeto que implementa a interface\n * `PoDatepickerRange`, contendo as seguintes propriedades:\n * ```\n * { \"start\": '2017-11-28', \"end\": '2017-11-30' }\n * ```\n *\n * <a id=\"accepted-formats\"></a>\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * new Date(2017, 10, 28);\n * ```\n *\n * > O componente respeitarÃ¡ o formato passado para o *model* via codificaÃ§Ã£o. PorÃ©m, caso seja feita alteraÃ§Ã£o em algum\n * dos valores de data em tela, o componente atribuirÃ¡ o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\n *\n * Importante:\n *\n * - Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\n * - Ao passar uma data invÃ¡lida via codificaÃ§Ã£o, o valor serÃ¡ mantido no *model* e o `input` da tela aparecerÃ¡ vazio;\n * - Permite trabalhar com as duas datas separadamente atravÃ©s das propriedades `p-start-date` e `p-end-date` no lugar do\n * `[(ngModel)]`, no entanto sem a validaÃ§Ã£o do formulÃ¡rio;\n * - Para a validaÃ§Ã£o do formulÃ¡rio, utilize o `[(ngModel)]`.\n */\n@Directive()\nexport abstract class PoDatepickerRangeBaseComponent implements ControlValueAccessor, Validator {\n  errorMessage: string = '';\n\n  private _clean?: boolean = false;\n  private _disabled?;\n  private _endDate?;\n  private _literals?: any;\n  private _noAutocomplete?: boolean = false;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n  private _startDate?;\n  private onChangeModel: any;\n  private validatorChange: any;\n\n  protected dateRange: PoDatepickerRange = { start: '', end: '' };\n  protected format: any = 'dd/mm/yyyy';\n  protected isDateRangeInputFormatValid: boolean = true;\n  protected isStartDateRangeInputValid: boolean = true;\n  protected onTouchedModel: any;\n\n  get isDateRangeInputValid() {\n    return this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita aÃ§Ã£o para limpar o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-clean') set clean(clean: boolean) {\n    this._clean = convertToBoolean(clean);\n  }\n\n  get clean() {\n    return this._clean;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data final.\n   */\n  @Input('p-end-date') set endDate(date: string | Date) {\n    this._endDate = this.convertPatternDateFormat(date);\n    this.dateRange.end = this.endDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get endDate() {\n    return this._endDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-datepicker-range`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format',\n   *    startDateGreaterThanEndDate: 'End date less than start date'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-datepicker-range\n   *   [p-literals]=\"customLiterals\">\n   * </po-datepicker-range>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoDatepickerRangeLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poDatepickerRangeLiteralsDefault[poLocaleDefault],\n        ...poDatepickerRangeLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poDatepickerRangeLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poDatepickerRangeLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data inicial.\n   */\n  @Input('p-start-date') set startDate(date: string | Date) {\n    this._startDate = this.convertPatternDateFormat(date);\n    this.dateRange.start = this.startDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get startDate() {\n    return this._startDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao alterar valor do campo.\n   */\n  @Output('p-change') onChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected poDateService: PoDateService) {}\n\n  protected abstract resetDateRangeInputValidation(): void;\n\n  protected abstract updateScreenByModel(dateRange: PoDatepickerRange);\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    const value: PoDatepickerRange = control.value || {};\n    const startDate = value.start ? this.convertPatternDateFormat(value.start) : '';\n    const endDate = value.end ? this.convertPatternDateFormat(value.end) : '';\n\n    if (this.requiredDateRangeFailed(startDate, endDate)) {\n      this.errorMessage = '';\n\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    if (this.dateRangeObjectFailed(control.value) || this.dateRangeFormatFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.invalidFormat;\n\n      return {\n        date: {\n          valid: false\n        }\n      };\n    }\n\n    if (this.dateRangeFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.startDateGreaterThanEndDate;\n\n      return {\n        date: {\n          valid: false\n        }\n      };\n    }\n\n    return null;\n  }\n\n  writeValue(dateRange: PoDatepickerRange): void {\n    this.resetDateRangeInputValidation();\n\n    if (!dateRange || this.dateRangeObjectFailed(dateRange)) {\n      this.dateRange = { start: '', end: '' };\n    }\n\n    if (!dateRange) {\n      this.validateModel(this.dateRange);\n    }\n\n    if (this.dateRangeObjectFailed(dateRange)) {\n      this.updateModel(dateRange);\n    }\n\n    if (this.isDateRangeObject(dateRange)) {\n      this.dateRange = {\n        start: this.convertPatternDateFormat(dateRange.start),\n        end: this.convertPatternDateFormat(dateRange.end)\n      };\n\n      this.updateModel(this.dateRange);\n    }\n\n    this.updateScreenByModel(this.dateRange);\n  }\n\n  protected dateFormatFailed(value: string): boolean {\n    return value && !this.poDateService.isValidIso(value);\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    const model = typeof value === 'object' ? { ...value } : value;\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(model);\n    }\n  }\n\n  protected validateModel(value: any) {\n    const model = { ...value };\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private convertPatternDateFormat(value: any) {\n    if (value instanceof Date) {\n      return this.poDateService.convertDateToISO(value);\n    }\n\n    return value;\n  }\n\n  private dateRangeFailed(startDate: string, endDate: string): boolean {\n    return !this.poDateService.isDateRangeValid(endDate, startDate) || !this.isStartDateRangeInputValid;\n  }\n\n  private dateRangeFormatFailed(startDate: string, endDate: string): boolean {\n    return this.dateFormatFailed(endDate) || this.dateFormatFailed(startDate) || !this.isDateRangeInputFormatValid;\n  }\n\n  private dateRangeObjectFailed(value): boolean {\n    return value && !this.isDateRangeObject(value);\n  }\n\n  private isDateRangeObject(value): boolean {\n    return value && value.hasOwnProperty('start') && value.hasOwnProperty('end');\n  }\n\n  private requiredDateRangeFailed(startDate: string, endDate: string): boolean {\n    return (\n      this.isDateRangeInputValid &&\n      requiredFailed(this.required, this.disabled, startDate) &&\n      requiredFailed(this.required, this.disabled, endDate)\n    );\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, forwardRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\nimport { PoMask } from '../po-input/po-mask';\n\nconst arrowLeftKey = 37;\nconst arrowRightKey = 39;\nconst backspaceKey = 8;\nconst poDatepickerRangeDateLengthDefault = 10;\n\n/* istanbul ignore next */\nconst providers = [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true\n  }\n];\n/**\n * @docsExtends PoDatepickerRangeBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-range-basic\" title=\"PO Datepicker Range Basic\">\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-labs\" title=\"PO Datepicker Range Labs\">\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations\" title=\"PO Datepicker Range - Vacations Suggestion\">\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations-reactive-form\" title=\"PO Datepicker Range - Vacations Reactive Form\">\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html\">\n *  </file>\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts\">\n *  </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker-range',\n  templateUrl: './po-datepicker-range.component.html',\n  providers\n})\nexport class PoDatepickerRangeComponent extends PoDatepickerRangeBaseComponent implements AfterViewInit, OnInit {\n  private poDatepickerRangeElement: ElementRef<any>;\n  private poMaskObject: PoMask;\n\n  @ViewChild('dateRangeField', { read: ElementRef, static: true }) dateRangeField: ElementRef;\n  @ViewChild('endDateInput', { read: ElementRef, static: true }) endDateInput: ElementRef;\n  @ViewChild('startDateInput', { read: ElementRef, static: true }) startDateInput: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  get enableCleaner(): boolean {\n    return (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;\n  }\n\n  get endDateInputName(): string {\n    return 'end-date';\n  }\n\n  get endDateInputValue(): string {\n    return this.endDateInput.nativeElement.value;\n  }\n\n  get getErrorMessage(): string {\n    return this.errorMessage !== '' && this.hasInvalidClass() ? this.errorMessage : '';\n  }\n\n  get isDateRangeInputUncompleted(): boolean {\n    return (\n      this.endDateInputValue.length < poDatepickerRangeDateLengthDefault &&\n      this.startDateInputValue.length < poDatepickerRangeDateLengthDefault\n    );\n  }\n\n  get isDirtyDateRangeInput(): boolean {\n    return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;\n  }\n\n  get startDateInputName(): string {\n    return 'start-date';\n  }\n\n  get startDateInputValue(): string {\n    return this.startDateInput.nativeElement.value;\n  }\n\n  static getKeyCode(event: KeyboardEvent) {\n    return event.keyCode || event.which;\n  }\n\n  static getTargetElement(event: any) {\n    return event.target || event.srcElement;\n  }\n\n  static isValidKey(keyCode: number): boolean {\n    const isNumericKey = keyCode >= 48 && keyCode <= 57;\n    const isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;\n\n    return isNumericKey || isNumericNumpadKey;\n  }\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    poDateService: PoDateService,\n    poDatepickerRangeElement: ElementRef\n  ) {\n    super(poDateService);\n    this.poDatepickerRangeElement = poDatepickerRangeElement;\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.poMaskObject = this.buildMask();\n  }\n\n  clear() {\n    this.resetDateRangeInputValidation();\n    this.dateRange = { start: '', end: '' };\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerRangeComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;\n   *\n   * focusDatepickerRange() {\n   *   this.datepickerRange.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.startDateInput.nativeElement.focus();\n    }\n  }\n\n  onBlur() {\n    this.removeFocusFromDatePickerRangeField();\n  }\n\n  onFocus() {\n    this.applyFocusOnDatePickerRangeField();\n  }\n\n  onKeydown(event?: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    if (this.isSetFocusOnBackspace(event)) {\n      event.preventDefault();\n      this.setFocusOnBackspace();\n    } else {\n      this.poMaskObject.keydown(event);\n    }\n  }\n\n  onKeyup(event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\n\n    this.setFocus(event);\n    this.poMaskObject.keyup(event);\n    this.updateModelByScreen(isStartDateTargetEvent);\n  }\n\n  resetDateRangeInputValidation() {\n    this.isStartDateRangeInputValid = true;\n    this.isDateRangeInputFormatValid = true;\n  }\n\n  updateScreenByModel(model: PoDatepickerRange) {\n    const dateRange = { start: model.start as string, end: model.end as string };\n    const isStartDateValid = this.poDateService.isDateRangeValid(dateRange.end, dateRange.start);\n    const isDateValid = date => !this.dateFormatFailed(date) && isStartDateValid;\n\n    const endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';\n    const startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';\n\n    this.endDateInput.nativeElement.value = endDateFormated;\n    this.startDateInput.nativeElement.value = startDateFormated;\n    this.changeDetector.detectChanges();\n  }\n\n  private applyFocusOnDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.add('po-datepicker-range-field-focused');\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  private buildMask(): PoMask {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  private formatDate(format: string, day: string = '', month: string = '', year: string = ''): string {\n    let dateFormatted = format;\n\n    day = day && day.includes('T') ? day.slice(0, 2) : day;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + month).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', String(year));\n\n    return dateFormatted;\n  }\n\n  private formatScreenToModel(value: string = ''): string {\n    const [day, month, year] = value.split('/');\n\n    return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';\n  }\n\n  private formatModelToScreen(value: string = ''): string {\n    const [year, month, day] = value.split('-');\n\n    return value ? this.formatDate(this.format, day, month, year) : '';\n  }\n\n  private getDateRangeFormatValidation(\n    startDate: string,\n    endDate: string,\n    isStartDateTargetEvent: boolean\n  ): { isValid: boolean; dateRangeModel: PoDatepickerRange } {\n    this.setDateRangeInputValidation(startDate, endDate);\n\n    return {\n      isValid: this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid,\n      dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)\n    };\n  }\n\n  private getValidatedModel(startDate: string, endDate: string, isStartDateTargetEvent: boolean): PoDatepickerRange {\n    const dateRangeModel = { start: '', end: '' };\n\n    dateRangeModel.end =\n      (isStartDateTargetEvent || this.isStartDateRangeInputValid) && !this.dateFormatFailed(endDate) ? endDate : '';\n\n    dateRangeModel.start =\n      (!isStartDateTargetEvent || this.isStartDateRangeInputValid) && !this.dateFormatFailed(startDate)\n        ? startDate\n        : '';\n\n    return dateRangeModel;\n  }\n\n  private hasInvalidClass(): boolean {\n    return (\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-dirty')\n    );\n  }\n\n  private isEqualBeforeValue(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;\n  }\n\n  private isSetFocusOnBackspace(event: any) {\n    return (\n      event.target.name === this.endDateInputName &&\n      this.endDateInput.nativeElement.selectionStart === 0 &&\n      this.endDateInput.nativeElement.selectionEnd === 0 &&\n      event.keyCode === backspaceKey\n    );\n  }\n\n  private removeFocusFromDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.remove('po-datepicker-range-field-focused');\n  }\n\n  private setDateRangeInputValidation(startDate: string, endDate: string) {\n    this.isStartDateRangeInputValid = this.poDateService.isDateRangeValid(endDate, startDate);\n\n    this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);\n  }\n\n  private setFocus(event: any) {\n    const inputElement = PoDatepickerRangeComponent.getTargetElement(event);\n    const keyCode = PoDatepickerRangeComponent.getKeyCode(event);\n    const inputName = inputElement['name'];\n\n    this.setFocusOnArrowLeft(keyCode, inputName);\n    this.setFocusOnArrowRight(keyCode, inputName, inputElement);\n    this.setFocusOnStartDateCompleted(keyCode, inputName);\n  }\n\n  private setFocusAndPosition(position: number, inputElement: ElementRef, selectionRange: number) {\n    this.focusOnElement(inputElement);\n\n    setTimeout(() => {\n      inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);\n      this.poMaskObject.initialPosition = position;\n      this.poMaskObject.finalPosition = position;\n    });\n  }\n\n  private focusOnElement(inputElement: ElementRef) {\n    inputElement.nativeElement.focus();\n  }\n\n  private setFocusOnArrowLeft(keyCode: number, inputName: string) {\n    const isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;\n\n    if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {\n      const inputLength = this.startDateInput.nativeElement.value.length;\n      this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n    }\n  }\n\n  private setFocusOnArrowRight(keyCode: number, inputName: string, inputElement: any) {\n    const isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;\n\n    if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private setFocusOnBackspace() {\n    const inputLength = this.startDateInput.nativeElement.value.length;\n\n    this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);\n    this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n  }\n\n  private setFocusOnStartDateCompleted(keyCode: number, inputName: string) {\n    const isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === poDatepickerRangeDateLengthDefault;\n    const isNewDateCompleted =\n      this.startDateInputValue.length === poDatepickerRangeDateLengthDefault && isLastKeyPressed;\n    const isValidKey = PoDatepickerRangeComponent.isValidKey(keyCode);\n\n    if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private updateModelByScreen(isStartDateTargetEvent: boolean) {\n    const endDateFormatted = this.formatScreenToModel(this.endDateInputValue);\n    const startDateFormatted = this.formatScreenToModel(this.startDateInputValue);\n\n    if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {\n      this.updateModel(this.dateRange);\n      return;\n    }\n\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\n      this.resetDateRangeInputValidation();\n      this.validateModel(this.dateRange);\n      return;\n    }\n\n    const dateFormatValidation = this.getDateRangeFormatValidation(\n      startDateFormatted,\n      endDateFormatted,\n      isStartDateTargetEvent\n    );\n\n    if (dateFormatValidation.isValid) {\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\n      this.updateModel(this.dateRange);\n      this.onChange.emit({ ...this.dateRange });\n    }\n\n    if (!dateFormatValidation.isValid) {\n      this.dateRange = { ...dateFormatValidation.dateRangeModel };\n      this.updateModel(dateFormatValidation.dateRangeModel);\n    }\n  }\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed, maxlengpoailed, minlengpoailed, patternFailed } from './../validators';\nimport { InputBoolean } from '../../../decorators';\nimport { PoMask } from './po-mask';\n\n/**\n * @description\n *\n * Este Ã© um componente baseado em input, com vÃ¡rias propriedades do input nativo e outras\n * propriedades extras como: mÃ¡scara, pattern, mensagem de erro e etc.\n * VocÃª deve informar a variÃ¡vel que contÃ©m o valor como [(ngModel)]=\"variavel\", para que o\n * input receba o valor da variÃ¡vel e para que ela receba as alteraÃ§Ãµes do valor (two-way-databinding).\n * A propriedade name Ã© obrigatÃ³ria para que o formulÃ¡rio e o model funcionem corretamente.\n *\n * Importante:\n *\n * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o vocÃª precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * Exemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\"\n */\n@Directive()\nexport abstract class PoInputBaseComponent implements ControlValueAccessor, Validator {\n  private _maxlength?: number;\n  private _minlength?: number;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected passedWriteValue: boolean = false;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, desabilita o campo.\n   *\n   * @default `false`\n   */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  /** Indica que o campo serÃ¡ somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o input estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  /** Se verdadeiro, o campo receberÃ¡ um botÃ£o para ser limpo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo.\n   * Quando o campo possuir uma mÃ¡scara `(p-mask)` serÃ¡ automaticamente validado por ela, porÃ©m\n   * Ã© possÃ­vel definir um p-pattern para substituir a validaÃ§Ã£o da mÃ¡scara.\n   */\n  pattern?: string;\n  @Input('p-pattern') set setPattern(pattern: string) {\n    this.pattern = pattern;\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando o `pattern` ou a mÃ¡scara nÃ£o for satisfeita.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(value: number) {\n    if (!isNaN(parseInt(<any>value, 10))) {\n      this._maxlength = parseInt(<any>value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._maxlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get maxlength() {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(value: number) {\n    if (!isNaN(parseInt(<any>value, 10))) {\n      this._minlength = parseInt(<any>value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._minlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get minlength() {\n    return this._minlength;\n  }\n\n  /**\n   * @description\n   *\n   * Indica uma mÃ¡scara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.\n   * A mÃ¡scara gera uma validaÃ§Ã£o automÃ¡tica do campo, podendo esta ser substituÃ­da por um REGEX especÃ­fico\n   * atravÃ©s da propriedade p-pattern.\n   * O campo serÃ¡ sinalizado e o formulÃ¡rio ficarÃ¡ invÃ¡lido quando o valor informado estiver fora do padrÃ£o definido,\n   * mesmo quando desabilitado.\n   */\n  mask?: string = '';\n  @Input('p-mask') set setMask(mask: string) {\n    this.mask = mask;\n\n    // Atualiza MÃ¡scara do Campo\n    this.objMask = new PoMask(this.mask, this.maskFormatModel);\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Indica se o `model` receberÃ¡ o valor formatado pela mÃ¡scara ou apenas o valor puro (sem formataÃ§Ã£o).\n   *\n   * @default `false`\n   */\n  maskFormatModel?: boolean = false;\n  @Input('p-mask-format-model') set setMaskFormatModel(maskFormatModel: string) {\n    this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);\n\n    if (this.objMask instanceof PoMask) {\n      this.objMask.formatModel = this.maskFormatModel;\n\n      this.validateModel();\n    }\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  type: string;\n\n  onChangePropagate: any = null;\n  onTouched: any = null;\n  objMask: any;\n  modelLastUpdate: any;\n\n  callOnChange(value: any) {\n    this.updateModel(value);\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  callUpdateModelWithTimeout(value) {\n    setTimeout(() => this.updateModel(value));\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoNomeDoComponenteComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoNomeDoComponenteComponent, { static: true }) nomeDoComponente: PoNomeDoComponenteComponent;\n   *\n   * focusComponent() {\n   *   this.nomeDoComponente.focus();\n   * }\n   * ```\n   */\n  abstract focus(): void;\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  updateModel(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    if (maxlengpoailed(this.maxlength, this.getScreenValue())) {\n      return {\n        maxlength: {\n          valid: false\n        }\n      };\n    }\n\n    if (minlengpoailed(this.minlength, this.getScreenValue())) {\n      return {\n        minlength: {\n          valid: false\n        }\n      };\n    }\n\n    if (patternFailed(this.pattern, c.value)) {\n      this.validatePatternOnWriteValue(c.value);\n      return {\n        pattern: {\n          valid: false\n        }\n      };\n    }\n\n    return this.extraValidation(c);\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  // MÃ©todo que receberÃ¡ o valor do model\n  abstract writeValueModel(value: any): void;\n\n  // ValidaÃ§Ãµes do campo\n  abstract extraValidation(c: AbstractControl): { [key: string]: any };\n\n  // Deve retornar o valor do campo\n  abstract getScreenValue(): string;\n\n  // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).\n  private validatePatternOnWriteValue(value: string) {\n    if (value && this.passedWriteValue) {\n      setTimeout(() => {\n        this.updateModel(value);\n      });\n\n      this.passedWriteValue = false;\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { convertToInt } from '../../../utils/util';\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\nconst poDecimalDefaultDecimalsLength = 2;\nconst poDecimalDefaultThousandMaxlength = 13;\nconst poDecimalMaxDecimalsLength = 15;\nconst poDecimalTotalLengthLimit = 16;\n\n/**\n *\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * <br>\n * - O `po-decimal` Ã© um *input* especÃ­fico para receber apenas nÃºmeros decimais, por isso recebe as seguintes caracterÃ­sticas:\n *  + Aceita apenas nÃºmeros;\n *  + Utiliza ',' como separador de decimal;\n *  + Utiliza '.' para separaÃ§Ã£o de milhar;\n *  + Ã possÃ­vel configurar a quantidade de casas decimais e a quantidade de digitos do campo.\n *\n * > **Importante:**\n * Atualmente o JavaScript limita-se a um conjunto de dados de `32 bits`, e para que os valores comportem-se devidamente,\n * o `po-decimal` contÃ©m um tratamento que limita em 16 o nÃºmero total de casas antes e apÃ³s a vÃ­rgula.\n * Veja abaixo as demais regras nas documentaÃ§Ãµes de `p-decimals-length` e `p-thousand-maxlength`.\n *\n * @example\n *\n * <example name=\"po-decimal-basic\" title=\"PO Decimal Basic\">\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.html\"> </file>\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-labs\" title=\"PO Decimal Labs\">\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.html\"> </file>\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage\" title=\"PO Decimal - Hourly Wage\">\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage-reactive-form\" title=\"PO Decimal - Hourly Wage Reactive Form\">\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-decimal',\n  templateUrl: './po-decimal.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoDecimalComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoDecimalComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoDecimalComponent extends PoInputBaseComponent implements AfterViewInit {\n  private _decimalsLength?: number = poDecimalDefaultDecimalsLength;\n  private _thousandMaxlength?: number = poDecimalDefaultThousandMaxlength;\n\n  private decimalSeparator: string = ',';\n  private fireChange: boolean = false;\n  private isKeyboardAndroid: boolean = false;\n  private minusSign: string = '-';\n  private oldDotsLength = null;\n  private thousandSeparator: string = '.';\n  private valueBeforeChange: any;\n\n  private regex = {\n    thousand: new RegExp('\\\\' + '.', 'g'),\n    decimal: new RegExp('\\\\' + ',', 'g')\n  };\n\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de casas decimais.\n   *\n   * > **Importante:**\n   * - O valor mÃ¡ximo permitido Ã© 15;\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se Ã  16;\n   * - Esta propriedade sobrepÃµe apenas o valor **padrÃ£o** de `p-thousand-maxlength`;\n   * - Caso `p-thousand-maxlength` tenha um valor definido, esta propriedade poderÃ¡ receber apenas o valor restante do limite total (16).\n   *\n   * @default `2`\n   */\n  @Input('p-decimals-length') set decimalsLength(value: number) {\n    let decimalsLength = convertToInt(value);\n\n    decimalsLength = this.isValueBetweenAllowed(decimalsLength, poDecimalMaxDecimalsLength)\n      ? decimalsLength\n      : poDecimalDefaultDecimalsLength;\n\n    if (this.isGreaterThanTotalLengthLimit(decimalsLength, this.thousandMaxlength)) {\n      this.thousandMaxlength = poDecimalTotalLengthLimit - decimalsLength;\n    }\n\n    this._decimalsLength = decimalsLength;\n  }\n\n  get decimalsLength() {\n    return this._decimalsLength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de dÃ­gitos antes do separador decimal.\n   *\n   * > **Importante:**\n   * - O valor mÃ¡ximo permitido Ã© 13;\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se Ã  16;\n   * - Esta propriedade sobrepÃµe o valor definido em `p-decimals-length`.\n   *\n   * @default `13`\n   */\n  @Input('p-thousand-maxlength') set thousandMaxlength(value: number) {\n    let thousandMaxlength = convertToInt(value);\n\n    if (this.decimalsLength > poDecimalDefaultDecimalsLength && !thousandMaxlength) {\n      thousandMaxlength = poDecimalTotalLengthLimit - this.decimalsLength;\n    }\n\n    thousandMaxlength = this.isValueBetweenAllowed(thousandMaxlength, poDecimalDefaultThousandMaxlength)\n      ? thousandMaxlength\n      : poDecimalDefaultThousandMaxlength;\n\n    if (this.isGreaterThanTotalLengthLimit(this.decimalsLength, thousandMaxlength)) {\n      this.decimalsLength = poDecimalTotalLengthLimit - thousandMaxlength;\n    }\n\n    this._thousandMaxlength = thousandMaxlength;\n  }\n\n  get thousandMaxlength() {\n    return this._thousandMaxlength;\n  }\n\n  constructor(private el: ElementRef) {\n    super();\n    this.isKeyboardAndroid = !!navigator.userAgent.match(/Android/i);\n  }\n\n  ngAfterViewInit() {\n    this.verifyAutoFocus();\n    this.setPaddingInput();\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  getScreenValue() {\n    return this.inputEl ? this.inputEl.nativeElement.value : '';\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.getScreenValue() !== ''\n    );\n  }\n\n  hasLetters(value: string = '') {\n    return value.match(/[a-zA-Z:;+=_Â´`^~\"'?!@#$%Â¨&*()><{}Ã§Ã\\[\\]/\\\\|]+/);\n  }\n\n  isValidNumber(event: any): boolean {\n    // - event.key nÃ£o existia em alguns browsers, como Samsung browser e Firefox.\n    const keyValue = <any>String.fromCharCode(event.which);\n    const validKey = event.which !== 8 && event.which !== 0;\n\n    return !this.hasLetters(keyValue) && validKey;\n  }\n\n  // funÃ§Ã£o responsÃ¡vel por adicionar os zeroes com as casa decimais ao sair do campo.\n  onBlur(event: any) {\n    const value = event.target.value;\n\n    if (value) {\n      if (this.hasLetters(value) || this.containsMoreThanOneComma(value)) {\n        this.setViewValue('');\n        this.callOnChange(undefined);\n        return;\n      }\n\n      const valueWithoutThousandSeparator = this.formatValueWithoutThousandSeparator(value);\n      this.setViewValue(this.formatToViewValue(valueWithoutThousandSeparator));\n    }\n\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  onFocus(event: FocusEvent) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.getScreenValue();\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  onInput(event: any) {\n    const selectionStart = event.target.selectionStart;\n    const selectionEnd = event.target.selectionEnd;\n\n    let modelValue;\n    let viewValue;\n\n    // - Browsers nativos do Android ex: Samsung Browser.\n    if (this.isKeyboardAndroid) {\n      this.onInputKeyboardAndroid(event);\n    }\n\n    modelValue = this.formatValueWithoutThousandSeparator(event.target.value);\n    modelValue = this.addZeroBefore(modelValue);\n    viewValue = this.formatMask(modelValue);\n\n    // validaÃ§Ã£o para nÃ£o quebrar IE com placeholder definido e Input vazio\n    if (viewValue) {\n      this.setViewValue(viewValue);\n      this.setCursorInput(event, selectionStart, selectionEnd);\n    }\n\n    this.callOnChange(this.formatToModelValue(modelValue));\n  }\n\n  onInputKeyboardAndroid(event: any) {\n    const inputValue = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const hasLetters = this.hasLetters(inputValue);\n\n    if (hasLetters) {\n      this.setViewValue(inputValue.replace(hasLetters[0], ''));\n\n      return event.preventDefault();\n    } else {\n      const position = selectionStart - 1;\n      const key = inputValue.charAt(position);\n\n      this.setPositionValue(event);\n\n      if (this.isValidKey(event, key)) {\n        this.setViewValue(inputValue);\n      }\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent) {\n    this.isValidKey(event);\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        const formatedViewValue = this.formatToViewValue(value);\n        this.setViewValue(formatedViewValue);\n      } else {\n        this.setViewValue('');\n      }\n    }\n\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  // reponsÃ¡vel por adicionar 0 antes da virgula (decimalSeparator).\n  private addZeroBefore(value) {\n    const isDecimalSeparator = value === this.decimalSeparator;\n\n    return isDecimalSeparator ? `0${value}` : value;\n  }\n\n  private containsComma(value) {\n    return value.includes(this.decimalSeparator);\n  }\n\n  private containsMoreThanOneComma(value: string = '') {\n    const foundComma = value.match(/,/g);\n\n    return !!(foundComma && foundComma.length > 1);\n  }\n\n  private controlChangeEmitter() {\n    const elementValue = this.getScreenValue();\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      this.fireChange = true;\n      setTimeout(() => {\n        this.change.emit(elementValue);\n      }, 200);\n    }\n  }\n\n  private formatMask(value: string) {\n    // necessÃ¡rio para nÃ£o adicionar . nas casa decimais.\n    // por exemplo: 12.345,123.45 (errado)\n    // 12.345,12345 (correto)\n\n    if (value.match(this.regex.decimal)) {\n      const regex = new RegExp('(\\\\d)(?=(\\\\d{3})+(?!\\\\d),)', 'g');\n      return value.toString().replace(regex, '$1.');\n    }\n\n    return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n  }\n\n  private formatToModelValue(value: string) {\n    const formattedValue = this.replaceCommaToDot(value);\n    const parsedValue = formattedValue ? parseFloat(Number(formattedValue).toFixed(this.decimalsLength)) : undefined;\n\n    return parsedValue === 0 || parsedValue ? parsedValue : undefined;\n  }\n\n  private formatToViewValue(value: string) {\n    let formatedNumber;\n    let numberValue;\n    let valueBeforeDot;\n    let valueAfterDot;\n\n    // - NecessÃ¡rio para tratar valores que contenham decimalSeparator\n    value = this.replaceCommaToDot(value);\n\n    numberValue = Number(value).toFixed(this.decimalsLength);\n\n    valueBeforeDot = this.getValueBeforeSeparator(numberValue, this.thousandSeparator);\n    valueAfterDot = this.getValueAfterSeparator(numberValue, this.thousandSeparator);\n\n    formatedNumber = this.formatMask(valueBeforeDot);\n\n    if (this.decimalsLength === 0) {\n      return formatedNumber;\n    } else {\n      return formatedNumber + this.decimalSeparator + valueAfterDot;\n    }\n  }\n\n  private formatValueWithoutThousandSeparator(value: string = '') {\n    return value.toString().replace(this.regex.thousand, '');\n  }\n\n  private getValueAfterSeparator(value = '', separator) {\n    return value.split(separator)[1] || '';\n  }\n\n  private getValueBeforeSeparator(value = '', separator) {\n    return value.split(separator)[0] || '';\n  }\n\n  private hasLessDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength < this.oldDotsLength) {\n        this.oldDotsLength = dotsLength;\n        return true;\n      }\n    }\n\n    if (!value) {\n      this.oldDotsLength = null;\n    }\n\n    return false;\n  }\n\n  private hasMoreDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength > this.oldDotsLength) {\n        this.oldDotsLength = dotsLength;\n        return true;\n      }\n    }\n\n    if (!value) {\n      this.oldDotsLength = null;\n    }\n\n    return false;\n  }\n\n  private hasMinusSignInvalidPosition(event: any): boolean {\n    const keyIsMinusSign = event.key === this.minusSign;\n    const selectionStart = event.target.selectionStart;\n\n    return keyIsMinusSign && selectionStart !== 0;\n  }\n\n  private isInvalidKey(event: any, charCode: any) {\n    const isInvalidNumber = !this.isValidNumber(event);\n\n    return (\n      this.verifyInsertComma(event) ||\n      this.verifyThousandLength(event) ||\n      this.verifyValueAfterComma(event) ||\n      this.verifyInsertMinusSign(event) ||\n      this.hasMinusSignInvalidPosition(event) ||\n      isInvalidNumber ||\n      this.validateCursorPositionBeforeSeparator(event) ||\n      this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode)\n    );\n  }\n\n  private isGreaterThanTotalLengthLimit(decimalsMaxLength: number, thousandMaxlength: number) {\n    return decimalsMaxLength + thousandMaxlength > poDecimalTotalLengthLimit;\n  }\n\n  private isKeyDecimalSeparator(event) {\n    return event.key === this.decimalSeparator || event.char === this.decimalSeparator;\n  }\n\n  private isPositionAfterDecimalSeparator(positionCursor, value) {\n    const indexComma = value && value.indexOf(this.decimalSeparator);\n\n    if (indexComma && this.decimalsLength > 0) {\n      return positionCursor > indexComma;\n    }\n  }\n\n  private isSelectionStartDifferentSelectionEnd(target: any) {\n    return target.selectionStart !== target.selectionEnd;\n  }\n\n  private isValidKey(event: any, key?: string) {\n    const charCode = event.which || event.keyCode;\n    const validKey = event.which === 8 || event.which === 0;\n\n    if (validKey && !this.isKeyboardAndroid) {\n      return;\n    }\n\n    if (key) {\n      event.key = key;\n    }\n\n    if (this.isInvalidKey(event, charCode)) {\n      event.preventDefault();\n      return false;\n    }\n    return true;\n  }\n\n  private isValueBetweenAllowed(value: number, maxAllowed: number) {\n    return value >= 0 && value <= maxAllowed;\n  }\n\n  // Quando decimalsLength for 0 nÃ£o deve permitir informar vÃ­rgula (decimalSeparator)\n  private verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode: number) {\n    return charCode === 44 && this.decimalsLength === 0;\n  }\n\n  private verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  private setInitialSelectionRange(target: any, selectionStart, selectionEnd) {\n    if (selectionStart === 1 && selectionEnd === 1) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n    return target.setSelectionRange(selectionStart - 1, selectionEnd - 1);\n  }\n\n  private replaceAt(value, index, replace) {\n    return value.substring(0, index) + replace + value.substring(index + 1);\n  }\n\n  private replaceCommaToDot(value: string = '') {\n    return value.toString().replace(this.regex.decimal, '.');\n  }\n\n  private setCursorInput(event, selectionStart, selectionEnd) {\n    const target = event.target;\n    const viewValue = target.value;\n\n    // Caso houver mais . do que anteriormente soma o valor com 1.\n    if (this.hasMoreDot(viewValue) || viewValue === '0' + this.decimalSeparator) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n\n    // Caso houver menos . do que anteriormente subtrai o valor por 1.\n    if (this.hasLessDot(viewValue)) {\n      this.setInitialSelectionRange(target, selectionStart, selectionEnd);\n    }\n    return target.setSelectionRange(selectionStart, selectionEnd);\n  }\n\n  private setPositionValue(event: any) {\n    const value = event.target.value;\n    const position = event.target.selectionStart - 1;\n\n    if (position > 0 && event.key === this.minusSign) {\n      event.target.value = value.substring(0, position) + value.substr(position + 1);\n    }\n  }\n\n  private setViewValue(value: string) {\n    this.inputEl.nativeElement.value = value;\n  }\n\n  private validateCursorPositionBeforeSeparator(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparator = this.getValueBeforeSeparator(target.value, this.decimalSeparator);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return (\n      target.selectionStart <= valueBeforeSeparator.length &&\n      valueBeforeSeparatorOriginal.length === this.thousandMaxlength &&\n      !this.isKeyDecimalSeparator(event)\n    );\n  }\n\n  private verifyThousandLength(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return (\n      valueBeforeSeparatorOriginal.length >= this.thousandMaxlength &&\n      !this.isKeyDecimalSeparator(event) &&\n      this.isPositionAfterDecimalSeparator(target.selectionStart - this.decimalsLength, target.value)\n    );\n  }\n\n  private verifyInsertComma(e: any): boolean {\n    const hasComma = this.containsComma(e.target.value);\n\n    return hasComma && e.key === this.decimalSeparator;\n  }\n\n  private verifyInsertMinusSign(event: any): boolean {\n    const value = event.target.value;\n    const indexMinusSign = value.lastIndexOf(this.minusSign) !== -1;\n    const positionMinusSign = value.lastIndexOf('-');\n    const occurancesMinusSign = value.match(new RegExp('-', 'g'));\n\n    if (this.isKeyboardAndroid && indexMinusSign && occurancesMinusSign.length > 1) {\n      event.target.value = this.replaceAt(value, positionMinusSign, '');\n    }\n    return indexMinusSign && event.key === this.minusSign;\n  }\n\n  private verifyValueAfterComma(event: any): boolean {\n    const value = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const valueAfterSeparator = this.getValueAfterSeparator(value, this.decimalSeparator);\n\n    return (\n      this.isPositionAfterDecimalSeparator(selectionStart, value) && valueAfterSeparator.length >= this.decimalsLength\n    );\n  }\n}\n","import { AfterViewInit, ElementRef, HostListener, ViewChild, Directive } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\n/* tslint:disable:directive-class-suffix */\n@Directive()\nexport abstract class PoInputGeneric extends PoInputBaseComponent implements AfterViewInit {\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  type = 'text';\n\n  el: ElementRef;\n  valueBeforeChange: any;\n  timeoutChange: any;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(el: ElementRef) {\n    super();\n\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.afterViewInit();\n  }\n\n  afterViewInit() {\n    this.verifyAutoFocus();\n    if (this.type !== 'password') {\n      this.setPaddingInput();\n    }\n  }\n\n  focus() {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown(e: any) {\n    if (this.mask && !this.readonly && e.target.keyCode !== 229) {\n      this.eventOnBlur(e);\n      this.objMask.keydown(e);\n    }\n  }\n\n  @HostListener('keyup', ['$event']) onKeyup(e: any) {\n    if (this.mask && !this.readonly) {\n      if (e.target.keyCode !== 229) {\n        this.eventOnBlur(e);\n        this.objMask.keyup(e);\n      }\n      this.callOnChange(this.objMask.valueToModel);\n    }\n  }\n\n  eventOnInput(e: any) {\n    let value = '';\n    if (!this.mask) {\n      value = this.validMaxLength(this.maxlength, e.target.value);\n      this.inputEl.nativeElement.value = value;\n    } else {\n      this.objMask.blur(e);\n      this.inputEl.nativeElement.value = this.objMask.valueToInput;\n      value = this.objMask.valueToModel;\n    }\n    this.callOnChange(value);\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return (maxlength || maxlength === 0) && value.length > maxlength\n      ? value.toString().substring(0, maxlength)\n      : value;\n  }\n\n  eventOnFocus(e: any) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur(e: any) {\n    if (this.mask) {\n      this.objMask.blur(e);\n    }\n\n    if (e.type === 'blur') {\n      this.blur.emit();\n      this.controlChangeEmitter();\n    }\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(elementValue);\n      }, 200);\n    }\n  }\n\n  eventOnClick(e: any) {\n    // Atualiza a posiÃ§Ã£o do cursor ao clicar\n    if (this.mask) {\n      this.objMask.click(e);\n    }\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== ''\n    );\n  }\n\n  getErrorPattern() {\n    return this.errorPattern !== '' && this.hasInvalidClass() ? this.errorPattern : '';\n  }\n\n  validateClassesForPattern() {\n    const value = this.getScreenValue();\n    const element = this.el.nativeElement;\n\n    if (value && !this.verifyPattern(this.pattern, value)) {\n      element.classList.add('ng-invalid');\n      element.classList.add('ng-dirty');\n    } else {\n      element.classList.remove('ng-invalid');\n    }\n  }\n\n  verifyPattern(pattern: string, value: any) {\n    return new RegExp(pattern).test(value);\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  writeValueModel(value) {\n    this.passedWriteValue = true;\n    if (this.inputEl) {\n      if (value) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.callUpdateModelWithTimeout(this.objMask.valueToModel);\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else {\n        // Se o valor for indefinido, deve limpar o campo.\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.changeModel.emit(value);\n    }\n  }\n\n  getScreenValue() {\n    const screenValue = (this.inputEl && this.inputEl.nativeElement.value) || undefined;\n\n    if (this.type === 'number') {\n      const parsedValue = parseFloat(screenValue);\n      return parsedValue || parsedValue === 0 ? parsedValue : null;\n    } else {\n      return screenValue;\n    }\n  }\n\n  abstract extraValidation(c: AbstractControl): { [key: string]: any };\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/* istanbul ignore next */\nconst providers = [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoEmailComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoEmailComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-email Ã© um input especÃ­fico para receber E-mail, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-email-basic\" title=\"PO Email Basic\">\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.html\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-labs\" title=\"PO Email Labs\">\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.html\"> </file>\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-newsletter\" title=\"PO Email - Newsletter\">\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.html\"> </file>\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-email',\n  templateUrl: '../po-input/po-input.component.html',\n  providers\n})\nexport class PoEmailComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n  icon = 'po-icon-mail';\n\n  maxlength: number = 254;\n\n  type = 'email';\n\n  pattern = '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n    super.ngAfterViewInit();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/* istanbul ignore next */\nconst providers = [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-login Ã© um input especÃ­fico para login. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-login-basic\" title=\"PO Login Basic\">\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-labs\" title=\"PO Login Labs\">\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-confirm\" title=\"PO Login - Confirm Identity\">\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.html\"> </file>\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-login',\n  templateUrl: './po-login.component.html',\n  providers\n})\nexport class PoLoginComponent extends PoInputGeneric {\n  type = 'text';\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-lookup.\n */\n@Injectable()\nexport class PoLookupFilterService implements PoLookupFilter {\n  private url: string;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getFilteredItems(filteredItemsParams: PoLookupFilteredItemsParams): Observable<any> {\n    const { filterParams, ...restFilteredItemsParams } = filteredItemsParams;\n\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    const params = { ...restFilteredItemsParams, ...validatedFilterParams };\n\n    return this.httpClient.get(this.url, { params });\n  }\n\n  getObjectByValue(value: string, filterParams?: any): Observable<any> {\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    return this.httpClient.get(`${this.url}/${value}`, { params: validatedFilterParams });\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  private validateParams(params: any) {\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnDestroy, OnInit, Output, Directive } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoLookupColumn } from './interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from './interfaces/po-lookup-filter.interface';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupLiterals } from './interfaces/po-lookup-literals.interface';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviÃ§o. Nesta janela Ã© possÃ­vel buscar e\n * selecionar o registro que serÃ¡ enviado para o campo. O `po-lookup` permite que o usuÃ¡rio digite um valor e pressione a tecla *TAB* para\n * buscar um registro.\n *\n * > Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo serÃ¡ limpado.\n * No segundo caso ocorrerÃ¡ apÃ³s este perder o foco; ambos os casos o campo ficarÃ¡ invÃ¡lido quando requerido.\n *\n * Este componente nÃ£o Ã© recomendado quando a busca dos dados possuir poucas informaÃ§Ãµes, para isso utilize outros componentes como o\n * `po-select` ou o `po-combo`.\n */\n@Directive()\nexport abstract class PoLookupBaseComponent implements ControlValueAccessor, OnDestroy, OnInit, Validator {\n  private _disabled?: boolean = false;\n  private _filterService: PoLookupFilter | string;\n  private _noAutocomplete: boolean;\n  private _required?: boolean = false;\n\n  protected getSubscription: Subscription;\n  protected keysDescription: Array<any>;\n  protected oldValue: string = '';\n  protected valueToModel;\n\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  service: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * Label do campo.\n   *\n   * > Quando utilizar esta propriedade o seu valor serÃ¡ utilizado como tÃ­tulo da modal do componente caso nÃ£o tenha\n   * sido definido um `modalTitle` na propriedade `p-literals`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @description\n   *\n   * Objeto com as literais usadas no `po-lookup`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select',\n   *    modalSecondaryActionLabel: 'Cancel',\n   *    modalPlaceholder: 'Search Value',\n   *    modalTableNoColumns: 'No columns',\n   *    modalTableNoData: 'No data',\n   *    modalTableLoadingData: 'Loading data',\n   *    modalTableLoadMoreData: 'Load more',\n   *    modalTitle: 'Select a user'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-lookup\n   *   [p-literals]=\"customLiterals\">\n   * </po-lookup>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') literals?: PoLookupLiterals;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @description\n   *\n   * Indica a coluna que serÃ¡ utilizada como valor do campo.\n   *\n   * > AtenÃ§Ã£o: Caso nÃ£o seja passada ou tenha o conteÃºdo incorreto, nÃ£o irÃ¡ atualizar o model do formulÃ¡rio.\n   */\n  @Input('p-field-value') fieldValue: string;\n\n  /** Indica a coluna que serÃ¡ utilizada como descriÃ§Ã£o do campo e como filtro dentro da janela. */\n  @Input('p-field-label') fieldLabel: string;\n\n  /** Valor que serÃ¡ repassado como parÃ¢metro para a URL ou aos mÃ©todos do serviÃ§o que implementam a interface `PoLookupFilter`. */\n  @Input('p-filter-params') filterParams?: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o do campo.\n   *\n   * Recebe uma funÃ§Ã£o que deve retornar uma *string* com o/os valores do objeto formatados para exibiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   * fieldFormat(obj) {\n   *   return `${obj.id} - ${obj.name}`;\n   * }\n   * ```\n   * > Esta propriedade sobrepÃµe o valor da propriedade `p-field-label` na descriÃ§Ã£o do campo.\n   */\n  @Input('p-field-format') fieldFormat?: (value) => string;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns?: Array<PoLookupColumn>;\n\n  /**\n   * ServiÃ§o responsÃ¡vel por buscar os dados da tabela na janela. Pode ser informado um serviÃ§o que implemente a interface\n   * `PoLookupFilter` ou uma URL.\n   *\n   * Quando utilizada uma URL de um serviÃ§o, serÃ¡ concatenada nesta URL o valor que deseja-se filtrar, por exemplo:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&filter=Peter\n   * ```\n   *\n   * Caso utilizar ordenaÃ§Ã£o, a coluna ordenada serÃ¡ enviada atravÃ©s do parÃ¢metro `order`, por exemplo:\n   * - Coluna decrescente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=-name\n   * ```\n   *\n   * - Coluna ascendente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=name\n   * ```\n   *\n   * Se for definido a propriedade `p-filter-params`, o mesmo tambÃ©m serÃ¡ concatenado. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   *\n   * > Esta URL deve retornar e receber os dados no padrÃ£o de [API do PO UI](https://po-ui.io/guides/api) e utiliza os valores\n   * definidos nas propriedades `p-field-label` e `p-field-value` para a construÃ§Ã£o do `po-lookup`.\n   */\n  @Input('p-filter-service') set filterService(filterService: PoLookupFilter | string) {\n    this._filterService = filterService;\n    this.setService(this.filterService);\n  }\n\n  get filterService() {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.valueToModel);\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default false\n   * @optional\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro na requisiÃ§Ã£o de busca do item.\n   * SerÃ¡ passado por parÃ¢metro o objeto de erro retornado.\n   */\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer alguma seleÃ§Ã£o.\n   * SerÃ¡ passado por parÃ¢metro o objeto com o valor selecionado.\n   */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private defaultService: PoLookupFilterService) {}\n\n  ngOnDestroy() {\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.initializeColumn();\n  }\n\n  private initializeColumn(): void {\n    if (this.fieldLabel) {\n      this.keysDescription = [this.fieldLabel];\n    } else {\n      this.keysDescription = [];\n\n      this.keysDescription = this.columns.filter(element => element.fieldLabel).map(element => element.property);\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  // Seleciona o valor do model.\n  selectValue(valueSelected: any) {\n    this.valueToModel = valueSelected[this.fieldValue];\n\n    this.callOnChange(this.valueToModel);\n    this.selected.emit(valueSelected);\n  }\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada.\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  searchById(value: string) {\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (value !== '') {\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams).subscribe(\n        element => {\n          if (element) {\n            this.oldValue = element[this.fieldLabel];\n            this.selectValue(element);\n            this.setViewValue(this.getFormattedLabel(element), element);\n          } else {\n            this.cleanModel();\n          }\n        },\n        error => {\n          this.cleanModel();\n          this.onError.emit(error);\n        }\n      );\n    } else {\n      this.cleanModel();\n    }\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && value instanceof Object) {\n      // Esta condiÃ§Ã£o Ã© executada quando Ã© retornado o objeto selecionado do componente Po Lookup Modal.\n      this.oldValue = value[this.fieldLabel];\n      this.valueToModel = value[this.fieldValue];\n      this.setViewValue(this.getFormattedLabel(value), value);\n    } else if (value) {\n      // Esta condiÃ§Ã£o Ã© executada somente quando Ã© passado o ID para realizar a busca pelo ID.\n      this.searchById(value);\n    } else {\n      this.cleanViewValue();\n    }\n  }\n\n  // Atribui um ou mais valores ao campo.\n  abstract setViewValue(value: any, object: any): void;\n\n  // MÃ©todo com a implementaÃ§Ã£o para abrir o lookup.\n  abstract openLookup(): void;\n\n  protected cleanModel() {\n    this.cleanViewValue();\n    this.callOnChange(undefined);\n  }\n\n  protected cleanViewValue() {\n    this.setViewValue('', {});\n    this.oldValue = '';\n    this.valueToModel = null;\n  }\n\n  // Formata a label do campo.\n  protected getFormattedLabel(value: any): string {\n    return value ? this.keysDescription.map(column => value[column]).join(' - ') : '';\n  }\n\n  // Chama o mÃ©todo writeValue e preenche o model.\n  protected selectModel(value: any) {\n    this.writeValue(value);\n    if (value && value instanceof Object) {\n      this.selectValue(value);\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private setService(service: PoLookupFilter | string) {\n    if (isTypeof(service, 'object')) {\n      this.service = <PoLookupFilterService>service;\n    }\n\n    if (service && isTypeof(service, 'string')) {\n      this.service = this.defaultService;\n      this.service.setUrl(service);\n    }\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, Directive } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { browserLanguage, isTypeof, poLocaleDefault } from '../../../../utils/util';\nimport { PoModalAction } from '../../../../components/po-modal';\nimport { PoModalComponent } from '../../../../components/po-modal/po-modal.component';\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from '../../../po-table';\nimport { poTableLiteralsDefault } from '../../../po-table/po-table-base.component';\n\nimport { PoLookupColumn } from '../interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupResponseApi } from '../interfaces/po-lookup-response-api.interface';\n\nexport const poLookupLiteralsDefault = {\n  en: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Select',\n    modalSecondaryActionLabel: 'Cancel',\n    modalPlaceholder: 'Search',\n    modalTitle: 'Select a record',\n    modalTableNoColumns: poTableLiteralsDefault.en.noColumns,\n    modalTableNoData: poTableLiteralsDefault.en.noData,\n    modalTableLoadingData: poTableLiteralsDefault.en.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.en.loadMoreData\n  },\n  es: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Seleccionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Buscar',\n    modalTitle: 'Seleccione un registro',\n    modalTableNoColumns: poTableLiteralsDefault.es.noColumns,\n    modalTableNoData: poTableLiteralsDefault.es.noData,\n    modalTableLoadingData: poTableLiteralsDefault.es.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.es.loadMoreData\n  },\n  pt: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Selecionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Pesquisar',\n    modalTitle: 'Selecione um registro',\n    modalTableNoColumns: poTableLiteralsDefault.pt.noColumns,\n    modalTableNoData: poTableLiteralsDefault.pt.noData,\n    modalTableLoadingData: poTableLiteralsDefault.pt.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.pt.loadMoreData\n  },\n  ru: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Ð²ÑÐ±Ð¸ÑÐ°ÑÑ',\n    modalSecondaryActionLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    modalPlaceholder: 'Ð¿Ð¾Ð¸ÑÐº',\n    modalTitle: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð·Ð°Ð¿Ð¸ÑÑ',\n    modalTableNoColumns: poTableLiteralsDefault.ru.noColumns,\n    modalTableNoData: poTableLiteralsDefault.ru.noData,\n    modalTableLoadingData: poTableLiteralsDefault.ru.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.ru.loadMoreData\n  }\n};\n\n/**\n * @docsPrivate\n *\n * Classe base do componente Po Lookup Modal.\n */\n@Directive()\nexport abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {\n  private _literals: any;\n  private _title: any;\n\n  hasNext = true;\n  isLoading = false;\n  page = 1;\n  pageSize = 10;\n  primaryAction: PoModalAction = {\n    action: () => {\n      this.items.forEach(element => {\n        if (element['$selected']) {\n          this.model.emit(element);\n          this.poModal.close();\n        }\n      });\n    },\n    label: this.literals.modalPrimaryActionLabel\n  };\n  searchValue: string = '';\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.model.emit(null);\n      this.poModal.close();\n    },\n    label: this.literals.modalSecondaryActionLabel\n  };\n  tableLiterals: any;\n\n  protected sort: PoTableColumnSort;\n\n  private filterSubscription: Subscription;\n  private searchSubscription: Subscription;\n  private showMoreSubscription: Subscription;\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns: Array<PoLookupColumn>;\n\n  /** Lista de itens da tabela. */\n  @Input('p-items') items: Array<any>;\n\n  /** Objeto com as literais usadas no `po-lookup-modal`. */\n  @Input('p-literals') set literals(value: PoLookupLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poLookupLiteralsDefault[poLocaleDefault],\n        ...poLookupLiteralsDefault[browserLanguage()],\n        ...value\n      };\n      if (value.modalTitle) {\n        this.title = this.literals.modalTitle;\n      }\n    } else {\n      this._literals = poLookupLiteralsDefault[browserLanguage()];\n    }\n    this.primaryAction.label = this.literals.modalPrimaryActionLabel;\n    this.secondaryAction.label = this.literals.modalSecondaryActionLabel;\n    this.setTableLiterals();\n  }\n\n  get literals() {\n    return this._literals || poLookupLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-service') filterService: PoLookupFilter;\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-params') filterParams: any;\n\n  /** Evento utilizado ao selecionar um registro da tabela. */\n  @Output('p-change-model') model: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnDestroy() {\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n\n    if (this.showMoreSubscription) {\n      this.showMoreSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.initializeData();\n    this.setTableLiterals();\n  }\n\n  search(): void {\n    this.page = 1;\n    if (this.searchValue) {\n      this.isLoading = true;\n      this.searchSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n        this.items = data.items;\n        this.hasNext = data.hasNext;\n        this.isLoading = false;\n      });\n    } else {\n      this.initializeData();\n    }\n  }\n\n  showMoreEvent() {\n    this.page++;\n    this.isLoading = true;\n    this.showMoreSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n      data.items.forEach(item => {\n        this.items.push(item);\n      });\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  // MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n  abstract openModal(): void;\n\n  private getFilteredItems(filter: string): Observable<PoLookupResponseApi> {\n    const { page, pageSize, filterParams } = this;\n\n    if (this.filterService.getFilteredItems) {\n      const filteredParams: PoLookupFilteredItemsParams = this.getFilteredParams(filter);\n\n      return this.filterService.getFilteredItems(filteredParams);\n    }\n\n    return this.filterService.getFilteredData(filter, page, pageSize, filterParams);\n  }\n\n  private getFilteredParams(filter: string) {\n    const { page, pageSize, filterParams, sort } = this;\n\n    const filteredParams = {};\n    const order = this.getOrderParam(sort);\n    const params = { filter, page, pageSize, order, filterParams };\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && params[key]) {\n        filteredParams[key] = params[key];\n      }\n    }\n\n    return filteredParams;\n  }\n\n  private getOrderParam(sort: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sort;\n\n    if (!column) {\n      return;\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return `-${column.property}`;\n    }\n\n    return `${column.property}`;\n  }\n\n  private initializeData(): void {\n    this.isLoading = true;\n\n    this.filterSubscription = this.getFilteredItems('').subscribe(data => {\n      this.items = data.items;\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  private setTableLiterals() {\n    this.tableLiterals = {\n      'noColumns': this.literals.modalTableNoColumns,\n      'noData': this.literals.modalTableNoData,\n      'loadingData': this.literals.modalTableLoadingData,\n      'loadMoreData': this.literals.modalTableLoadMoreData\n    };\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\n\nimport { PoLookupModalBaseComponent } from '../po-lookup-modal/po-lookup-modal-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLookupModalBaseComponent\n */\n@Component({\n  selector: 'po-lookup-modal',\n  templateUrl: './po-lookup-modal.component.html'\n})\nexport class PoLookupModalComponent extends PoLookupModalBaseComponent implements OnInit {\n  @ViewChild('inpsearch', { static: true }) inputSearchEl: ElementRef;\n\n  keyUpObservable: Observable<any> = null;\n\n  containerHeight: number = 375;\n  tableHeight: number = 370;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.initializeEventInput();\n    this.setTableHeight();\n  }\n\n  initializeEventInput(): void {\n    this.keyUpObservable = fromEvent(this.inputSearchEl.nativeElement, 'keyup').pipe(\n      filter((e: any) => this.validateEnterPressed(e)),\n      debounceTime(400)\n    );\n\n    this.keyUpObservable.subscribe(() => {\n      this.search();\n    });\n  }\n\n  openModal() {\n    this.poModal.open();\n  }\n\n  sortBy(sort: PoTableColumnSort) {\n    this.sort = sort;\n  }\n\n  private setTableHeight() {\n    if (window.innerHeight < 615) {\n      this.tableHeight -= 50;\n      this.containerHeight -= 50;\n    }\n  }\n\n  private validateEnterPressed(e: any) {\n    return e.keyCode === 13;\n  }\n}\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../../../services/po-component-injector/po-component-injector.service';\nimport { PoLookupColumn } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-filter.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupModalComponent } from '../po-lookup-modal/po-lookup-modal.component';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por controlar a abertura do componente Po Lookup Modal.\n */\n@Injectable()\nexport class PoLookupModalService {\n  private componentRef: ComponentRef<any> = null;\n\n  selectValueEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {}\n\n  /**\n   * MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n   *\n   * @param service {PoLookupFilter} ServiÃ§o responsÃ¡vel por realizar a busca no serviÃ§o dos dados.\n   * @param columns {Array<PoLookupColumn>} DefiniÃ§Ã£o das colunas na modal de busca.\n   * @param filterParams {any} Valor que serÃ¡ repassado aos mÃ©todos do serviÃ§o para auxiliar no filtro dos dados.\n   * @param title {string} DefiniÃ§Ã£o do tÃ­tulo da modal.\n   * @param literals {PoLookupLiterals} Literais utilizadas no componente.\n   */\n  openModal(params: {\n    service: PoLookupFilter;\n    columns: Array<PoLookupColumn>;\n    filterParams: any;\n    title: string;\n    literals: PoLookupLiterals;\n  }): void {\n    const { service, columns, filterParams, title, literals } = params;\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoLookupModalComponent);\n    this.componentRef.instance.title = title;\n    this.componentRef.instance.columns = columns;\n    this.componentRef.instance.filterService = service;\n    this.componentRef.instance.filterParams = filterParams;\n    this.componentRef.instance.literals = literals;\n    this.componentRef.instance.model.subscribe($event => {\n      this.selectValue($event);\n    });\n    this.componentRef.changeDetectorRef.detectChanges();\n    this.componentRef.instance.openModal();\n  }\n\n  // Este metodo Ã© chamado quando Ã© selecionado um item na lookup modal.\n  selectValue(value) {\n    if (value) {\n      this.selectValueEvent.emit(value);\n    }\n    this.componentRef.destroy();\n  }\n}\n","import { Component, ElementRef, forwardRef, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoLookupBaseComponent } from './po-lookup-base.component';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupModalService } from './services/po-lookup-modal.service';\n\n/* istanbul ignore next */\nconst providers = [\n  PoLookupFilterService,\n  PoLookupModalService,\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoLookupComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoLookupComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoLookupBaseComponent\n *\n * @description\n *\n * Quando existe muitos dados o po-lookup por padrÃ£o traz apenas 10 itens na tabela e os demais sÃ£o carregados por demanda atravÃ©s do\n * botÃ£o 'Carregar mais resultados'. Para que funcione corretamente, Ã© importante que o serviÃ§o siga o\n * [Guia de implementaÃ§Ã£o das APIs TOTVS](https://po-ui.io/guides/api).\n *\n * Importante:\n *\n * - Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o serÃ¡ necessÃ¡rio informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * ```\n * <po-lookup\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-lookup>\n * ```\n *\n * @example\n *\n * <example name=\"po-lookup-basic\" title=\"PO Lookup Basic\">\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.html\"> </file>\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-labs\" title=\"PO Lookup Labs\">\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.html\"> </file>\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero\" title=\"PO Lookup - Hero\">\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero-reactive-form\" title=\"PO Lookup - Hero Reactive Form\">\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-sw-films\" title=\"PO Lookup - Star Wars films\">\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.html\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.ts\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-lookup',\n  templateUrl: './po-lookup.component.html',\n  providers\n})\nexport class PoLookupComponent extends PoLookupBaseComponent implements AfterViewInit, OnDestroy, OnInit {\n  private modalSubscription: Subscription;\n\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(poLookupFilterService: PoLookupFilterService, private poLookupModalService: PoLookupModalService) {\n    super(poLookupFilterService);\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.modalSubscription) {\n      this.modalSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoLookupComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\n   *\n   * focusLookup() {\n   *   this.lookup.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  openLookup(): void {\n    if (this.isAllowedOpenModal()) {\n      const { service, columns, filterParams, literals } = this;\n\n      this.poLookupModalService.openModal({ service, columns, filterParams, title: this.label, literals });\n\n      if (!this.modalSubscription) {\n        this.modalSubscription = this.poLookupModalService.selectValueEvent.subscribe(element => {\n          this.selectModel(element);\n        });\n      }\n    }\n  }\n\n  setViewValue(value: any, object: any): void {\n    if (this.fieldFormat) {\n      this.setInputValueWipoieldFormat(object);\n    } else {\n      this.inputEl.nativeElement.value = this.valueToModel || this.valueToModel === 0 ? value : '';\n    }\n  }\n\n  getViewValue(): string {\n    return this.inputEl.nativeElement.value;\n  }\n\n  searchEvent() {\n    const value = this.getViewValue();\n\n    if (this.oldValue !== value) {\n      this.searchById(value);\n    }\n  }\n\n  private isAllowedOpenModal(): boolean {\n    if (!this.service) {\n      console.warn('No service informed');\n    }\n\n    return !!(this.service && !this.disabled);\n  }\n\n  private setInputValueWipoieldFormat(objectSelected: any) {\n    const isEmpty = Object.keys(objectSelected).length === 0;\n    const fieldFormated = this.fieldFormat(objectSelected);\n\n    this.oldValue = isEmpty ? '' : fieldFormated;\n    this.inputEl.nativeElement.value = isEmpty ? '' : fieldFormated;\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoMultiselectLiterals } from '../../index';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de pesquisa que serÃ¡ criado dentro do dropdown do `po-multiselect`.\n */\n@Component({\n  selector: 'po-multiselect-search',\n  templateUrl: './po-multiselect-search.component.html'\n})\nexport class PoMultiselectSearchComponent {\n  private _placeholder?: string;\n\n  /** Propriedade que recebe as literais definidas no `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;\n  }\n\n  get placeholder() {\n    return this._placeholder || this.literals.placeholderSearch;\n  }\n\n  /** Evento que serÃ¡ disparado a cada tecla digitada no campo de busca. */\n  @Output('p-change') change = new EventEmitter();\n\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  onChange(event) {\n    this.change.emit({ event: event, value: this.inputElement.nativeElement.value });\n  }\n\n  setFocus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  clean() {\n    this.inputElement.nativeElement.value = '';\n  }\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoMultiselectLiterals } from '../../index';\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que construÃ­ra o dropdown, contendo o campo de pesquisa e os itens para seleÃ§Ã£o.\n */\n@Component({\n  selector: 'po-multiselect-dropdown',\n  templateUrl: './po-multiselect-dropdown.component.html'\n})\nexport class PoMultiselectDropdownComponent {\n  scrollTop = 0;\n  show: boolean = false;\n\n  /** Propriedade que indica se o campo de pesquisa deverÃ¡ ser escondido. */\n  @Input('p-hide-search') hideSearch?: boolean = false;\n\n  /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /** Placeholder do campo de pesquisa. */\n  @Input('p-placeholder-search') placeholderSearch: string;\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes selecionadas. */\n  @Input('p-selected-values') selectedValues: Array<any> = [];\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes que deverÃ£o ser criadas no dropdown. */\n  @Input('p-options') options: Array<PoMultiselectOption> = [];\n\n  /** Evento disparado a cada tecla digitada na pesquisa. */\n  @Output('p-change-search') changeSearch = new EventEmitter();\n\n  /** Evento disparado a cada alteraÃ§Ã£o na lista das opÃ§Ãµes selecionadas. */\n  @Output('p-change') change = new EventEmitter();\n\n  /**\n   * Evento disparado quando for detectada uma aÃ§Ã£o que necessite fechar o dropdown.\n   * Por exemplo, no caso de ser teclado TAB dentro do dropdown, entÃ£o Ã© disparado este evento\n   * para notificar o componente principal que deve fechar o dropdown.\n   */\n  @Output('p-close-dropdown') closeDropdown = new EventEmitter();\n\n  @ViewChild('container', { read: ElementRef, static: true }) container: ElementRef;\n  @ViewChild('ulElement', { read: ElementRef, static: true }) ulElement: ElementRef;\n  @ViewChild('searchElement') searchElement: PoMultiselectSearchComponent;\n\n  get hasOptions() {\n    return !!this.options?.length;\n  }\n\n  scrollTo(index) {\n    this.scrollTop = index <= 2 ? 0 : index * 44 - 88;\n  }\n\n  isSelectedItem(option: PoMultiselectOption) {\n    return this.selectedValues.some(selectedItem => selectedItem === option.value);\n  }\n\n  clickItem(check, option) {\n    this.updateSelectedValues(check, option);\n\n    if (!this.hideSearch) {\n      this.searchElement.setFocus();\n    }\n  }\n\n  updateSelectedValues(checked, option) {\n    if (checked) {\n      this.selectedValues.push(option.value);\n    } else {\n      const indexSelectedValues = this.selectedValues.indexOf(option.value);\n      this.selectedValues.splice(indexSelectedValues, 1);\n    }\n\n    this.change.emit(this.selectedValues);\n  }\n\n  callChangeSearch(event) {\n    this.changeSearch.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: any) {\n    if (event.keyCode === 9) {\n      this.closeDropdown.emit();\n    }\n  }\n\n  controlVisibility(toOpen) {\n    this.show = toOpen;\n\n    setTimeout(() => {\n      if (toOpen && this.searchElement && !this.hideSearch) {\n        this.searchElement.setFocus();\n        this.searchElement.clean();\n      }\n    });\n  }\n}\n","import { EventEmitter, Input, OnInit, Output, Directive } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport {\n  browserLanguage,\n  convertToBoolean,\n  removeDuplicatedOptions,\n  removeUndefinedAndNullOptions,\n  sortOptionsByProperty,\n  poLocaleDefault\n} from '../../../utils/util';\nimport { requiredFailed } from './../validators';\n\nimport { PoMultiselectFilterMode } from './po-multiselect-filter-mode.enum';\nimport { PoMultiselectLiterals } from './po-multiselect-literals.interface';\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\nimport { InputBoolean } from '../../../decorators';\n\nexport const poMultiselectLiteralsDefault = {\n  en: <PoMultiselectLiterals>{\n    noData: 'No data found',\n    placeholderSearch: 'Search'\n  },\n  es: <PoMultiselectLiterals>{\n    noData: 'Datos no encontrados',\n    placeholderSearch: 'Busca'\n  },\n  pt: <PoMultiselectLiterals>{\n    noData: 'Nenhum dado encontrado',\n    placeholderSearch: 'Buscar'\n  },\n  ru: <PoMultiselectLiterals>{\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    placeholderSearch: 'Ð¸ÑÐºÐ°ÑÑ'\n  }\n};\n\n/**\n * @description\n *\n * O po-multiselect Ã© um componente de mÃºltipla seleÃ§Ã£o.\n * Este componente Ã© recomendado para dar ao usuÃ¡rio a opÃ§Ã£o de selecionar vÃ¡rios itens em uma lista.\n *\n * Quando a lista possuir poucos itens, deve-se dar preferÃªncia para o uso do po-checkbox-group, por ser mais simples\n * e mais rÃ¡pido para a seleÃ§Ã£o do usuÃ¡rio.\n *\n * Este componente tambÃ©m nÃ£o deve ser utilizado em casos onde a seleÃ§Ã£o seja Ãºnica. Nesses casos, deve-se utilizar o\n * po-select, po-combo ou po-radio-group.\n */\n@Directive()\nexport abstract class PoMultiselectBaseComponent implements ControlValueAccessor, OnInit, Validator {\n  private _disabled?: boolean = false;\n  private _filterMode?: PoMultiselectFilterMode = PoMultiselectFilterMode.startsWith;\n  private _hideSearch?: boolean = false;\n  private _literals: PoMultiselectLiterals;\n  private _options: Array<PoMultiselectOption>;\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  private lastLengthModel;\n  private onModelChange: any;\n  // tslint:disable-next-line\n  private onModelTouched: any;\n  private validatorChange: any;\n\n  selectedOptions: Array<PoMultiselectOption> = [];\n  visibleOptionsDropdown: Array<PoMultiselectOption> = [];\n  visibleDisclaimers = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-multiselect`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Nenhum dado encontrado',\n   *    placeholderSearch: 'Buscar'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <po-multiselect\n   *   [p-literals]=\"customLiterals\">\n   * </po-po-multiselect>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoMultiselectLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poMultiselectLiteralsDefault[poLocaleDefault],\n        ...poMultiselectLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poMultiselectLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poMultiselectLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /**\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder-search') placeholderSearch?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = <any>required === '' ? true : convertToBoolean(required);\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n    this.validateModel();\n\n    this.updateVisibleItems();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo de pesquisa existente dentro do dropdown do po-multiselect.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-search') set hideSearch(hideSearch: boolean) {\n    this._hideSearch = <any>hideSearch === '' ? true : convertToBoolean(hideSearch);\n  }\n\n  get hideSearch() {\n    return this._hideSearch;\n  }\n\n  /**\n   * @description\n   *\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface PoMultiselectOption.\n   * Esta lista deve conter os valores e os labels que serÃ£o apresentados na tela.\n   *\n   * > Para atualizar a lista de opÃ§Ãµes do `po-multiselect` dinamicamente deve-se utilizar dados imutÃ¡veis.\n   * Exemplo de adiÃ§Ã£o de um novo item com spread:\n   * ```\n   * this.options = [...this.options, { label: 'Example', value: 'example' }];\n   * ```\n   */\n  @Input('p-options') set options(options: Array<PoMultiselectOption>) {\n    this._options = options;\n\n    this.validAndSortOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que a lista definida na propriedade p-options serÃ¡ ordenada pelo label antes de ser apresentada no\n   * dropdown.\n   *\n   * @default `false`\n   */\n  @Input('p-sort') set sort(sort: boolean) {\n    this._sort = <any>sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no campo de busca, quando habilitado.\n   * Valores definidos no enum: PoMultiselectFilterMode\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoMultiselectFilterMode) {\n    this._filterMode = filterMode in PoMultiselectFilterMode ? filterMode : PoMultiselectFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoMultiselectFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoMultiselectFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoMultiselectFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode() {\n    return this._filterMode;\n  }\n\n  /** Pode ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected clickOutListener: () => void;\n  protected resizeListener: () => void;\n\n  ngOnInit() {\n    this.updateList(this.options);\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length) {\n      removeUndefinedAndNullOptions(this.options);\n      removeDuplicatedOptions(this.options);\n      this.setUndefinedLabels(this.options);\n\n      if (this.sort) {\n        sortOptionsByProperty(this.options, 'label');\n      }\n    }\n  }\n\n  setUndefinedLabels(options) {\n    options.forEach(option => {\n      if (!option['label']) {\n        option.label = option.value;\n      }\n    });\n  }\n\n  updateList(options: Array<PoMultiselectOption>) {\n    if (options) {\n      this.visibleOptionsDropdown = options;\n    }\n  }\n\n  callOnChange(selectedOptions: Array<PoMultiselectOption>) {\n    if (this.onModelChange) {\n      this.onModelChange(this.getValuesFromOptions(selectedOptions));\n      this.eventChange(selectedOptions);\n    }\n  }\n\n  eventChange(selectedOptions) {\n    if (selectedOptions && this.lastLengthModel !== selectedOptions.length) {\n      this.change.emit(selectedOptions);\n    }\n    this.lastLengthModel = selectedOptions ? selectedOptions.length : null;\n  }\n\n  getValuesFromOptions(selectedOptions: Array<PoMultiselectOption>) {\n    return selectedOptions && selectedOptions.length ? selectedOptions.map(option => option.value) : [];\n  }\n\n  getLabelByValue(value) {\n    const index = this.options.findIndex(option => option.value === value);\n    return this.options[index].label;\n  }\n\n  changeItems(selectedValues) {\n    this.updateSelectedOptions(selectedValues);\n    this.callOnChange(this.selectedOptions);\n  }\n\n  searchByLabel(search: string, options: Array<PoMultiselectOption>, filterMode: PoMultiselectFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoMultiselectOption> = [];\n      options.forEach(option => {\n        if (option.label && this.compareMethod(search, option, filterMode)) {\n          newOptions.push(option);\n        }\n      });\n      this.visibleOptionsDropdown = newOptions;\n    }\n  }\n\n  compareMethod(search: string, option: PoMultiselectOption, filterMode: PoMultiselectFilterMode) {\n    switch (filterMode) {\n      case PoMultiselectFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoMultiselectFilterMode.contains:\n        return this.contains(search, option);\n      case PoMultiselectFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    return null;\n  }\n\n  updateSelectedOptions(values) {\n    this.selectedOptions = [];\n\n    values.forEach(value => {\n      this.options.forEach(option => {\n        if (option.value === value) {\n          this.selectedOptions.push(option);\n        }\n      });\n    });\n\n    this.updateVisibleItems();\n  }\n\n  writeValue(values: any): void {\n    values = values || [];\n\n    // Validar se todos os items existem entre os options, senÃ£o atualizar o model\n    this.updateSelectedOptions(values);\n\n    if (this.selectedOptions.length < values.length) {\n      this.callOnChange(this.selectedOptions);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract updateVisibleItems(): void;\n}\n","/**\n * @docsPrivate\n *\n * @usedBy PoRichTextComponent\n *\n * @description\n *\n * *Enum* `PoRichTextModalType` para especificaÃ§Ã£o dos tipos de modal.\n */\nexport enum PoRichTextModalType {\n  /**\n   * Exibe os dados para inserÃ§Ã£o de imagens.\n   */\n  Image = 'image',\n\n  /**\n   * Exibe os dados para inserÃ§Ã£o de link e texto customizado para link.\n   */\n  Link = 'link'\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  OnDestroy,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isMobile } from './../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\n\nconst poMultiselectContainerOffset = 8;\nconst poMultiselectContainerPositionDefault = 'bottom';\n\n/* istanbul ignore next */\nconst providers = [\n  PoControlPositionService,\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoMultiselectComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoMultiselectComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoMultiselectBaseComponent\n *\n * @example\n *\n * <example name=\"po-multiselect-basic\" title=\"PO Multiselect Basic\">\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-labs\" title=\"PO Multiselect Labs\">\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation\" title=\"PO Multiselect - Vacation\">\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"PO Multiselect - Vacation Reactive Form\">\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-multiselect',\n  templateUrl: './po-multiselect.component.html',\n  providers\n})\nexport class PoMultiselectComponent extends PoMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n  @ViewChild('dropdownElement', { read: ElementRef, static: true }) dropdownElement: ElementRef;\n  @ViewChild('dropdownElement', { static: true }) dropdown;\n  @ViewChild('disclaimerContainer', { read: ElementRef, static: true }) disclaimerContainerElement: ElementRef;\n  @ViewChild('iconElement', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  disclaimerOffset = 0;\n  dropdownIcon: string = 'po-icon-arrow-down';\n  dropdownOpen: boolean = false;\n  initialized = false;\n  positionDisclaimerExtra;\n  timeoutResize;\n  visibleElement = false;\n\n  private isCalculateVisibleItems: boolean = true;\n\n  constructor(\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private el: ElementRef\n  ) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const inputWidth = this.inputElement.nativeElement.offsetWidth;\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\n      this.debounceResize();\n      this.visibleElement = true;\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoMultiselectComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\n   *\n   * focusMultiselect() {\n   *   this.multiselect.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  getInputWidth() {\n    return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;\n  }\n\n  getDisclaimersWidth() {\n    const disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\n  }\n\n  calculateVisibleItems() {\n    const disclaimersWidth = this.getDisclaimersWidth();\n    const inputWidth = this.getInputWidth();\n    const extraDisclaimerSize = 38;\n    const disclaimersVisible = disclaimersWidth[0];\n\n    this.visibleDisclaimers = [];\n\n    if (inputWidth > 0) {\n      let sum = 0;\n      let i = 0;\n      for (i = 0; i < this.selectedOptions.length; i++) {\n        sum += disclaimersWidth[i];\n        this.visibleDisclaimers.push(this.selectedOptions[i]);\n\n        if (sum > inputWidth) {\n          sum -= disclaimersWidth[i];\n          this.isCalculateVisibleItems = false;\n          break;\n        }\n      }\n\n      if (disclaimersVisible || !this.selectedOptions.length) {\n        if (i === this.selectedOptions.length) {\n          this.isCalculateVisibleItems = false;\n          return;\n        }\n\n        if (sum + extraDisclaimerSize > inputWidth) {\n          this.visibleDisclaimers.splice(-2, 2);\n          const label = '+' + (this.selectedOptions.length + 1 - i).toString();\n          this.visibleDisclaimers.push({ value: '', label: label });\n        } else {\n          this.visibleDisclaimers.splice(-1, 1);\n          const label = '+' + (this.selectedOptions.length - i).toString();\n          this.visibleDisclaimers.push({ value: '', label: label });\n        }\n      }\n    }\n  }\n\n  updateVisibleItems() {\n    this.visibleDisclaimers = [].concat(this.selectedOptions);\n\n    this.debounceResize();\n\n    // quando estiver dentro de modal\n    if (!this.inputElement.nativeElement.offsetWidth) {\n      this.isCalculateVisibleItems = true;\n    }\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateVisibleItems();\n    }, 200);\n  }\n\n  onKeyDown(event?: any) {\n    if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n      this.controlDropdownVisibility(true);\n      return;\n    }\n\n    if (event.keyCode === PoKeyCodeEnum.tab) {\n      this.controlDropdownVisibility(false);\n      return;\n    }\n  }\n\n  toggleDropdownVisibility() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.controlDropdownVisibility(!this.dropdownOpen);\n  }\n\n  openDropdown(toOpen) {\n    if (toOpen && !this.disabled) {\n      this.controlDropdownVisibility(true);\n    }\n  }\n\n  controlDropdownVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  scrollToSelectedOptions() {\n    if (this.selectedOptions && this.selectedOptions.length) {\n      const index = this.options.findIndex(option => option.value === this.selectedOptions[0].value);\n      this.dropdown.scrollTo(index);\n    }\n  }\n\n  setVisibleOptionsDropdown(options) {\n    this.visibleOptionsDropdown = options;\n  }\n\n  changeSearch(event) {\n    event && event.value\n      ? this.searchByLabel(event.value, this.options, this.filterMode)\n      : this.setVisibleOptionsDropdown(this.options);\n\n    // timeout necessÃ¡rio para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input\n    setTimeout(() => this.adjustContainerPosition());\n  }\n\n  getPlaceholder() {\n    return this.placeholder && !this.visibleDisclaimers.length ? this.placeholder : '';\n  }\n\n  closeDisclaimer(value) {\n    const index = this.selectedOptions.findIndex(option => option.value === value);\n    this.selectedOptions.splice(index, 1);\n\n    this.updateVisibleItems();\n    this.callOnChange(this.selectedOptions);\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (\n      !this.inputElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target) &&\n      !this.dropdownElement.nativeElement.contains(event.target) &&\n      !this.disclaimerContainerElement.nativeElement.contains(event.target) &&\n      this.dropdownOpen\n    ) {\n      this.controlDropdownVisibility(false);\n    }\n  }\n\n  private adjustContainerPosition(): void {\n    this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);\n  }\n\n  private close(): void {\n    this.dropdownIcon = 'po-icon-arrow-down';\n    this.dropdownOpen = false;\n\n    this.dropdown.controlVisibility(false);\n    this.setVisibleOptionsDropdown(this.options);\n\n    this.removeListeners();\n  }\n\n  private initializeListeners(): void {\n    this.clickOutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.updateVisibleItems();\n\n      isMobile() ? this.adjustContainerPosition() : this.close();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  };\n\n  private open(): void {\n    this.dropdownIcon = 'po-icon-arrow-up';\n    this.dropdownOpen = true;\n\n    this.dropdown.controlVisibility(true);\n    this.setVisibleOptionsDropdown(this.options);\n    this.initializeListeners();\n    this.scrollToSelectedOptions();\n\n    this.changeDetector.detectChanges();\n    this.setPositionDropdown();\n  }\n\n  private removeListeners(): void {\n    if (this.clickOutListener) {\n      this.clickOutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown(): void {\n    this.controlPosition.setElements(\n      this.dropdown.container.nativeElement,\n      poMultiselectContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que constrÃ³i cada item no dropdown, contendo o checkbox e o label.\n */\n@Component({\n  selector: 'po-multiselect-item',\n  templateUrl: './po-multiselect-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoMultiselectItemComponent {\n  /** RÃ³tulo do item. */\n  @Input('p-label') label: string;\n\n  /** Esta propriedade indica se o campo estÃ¡ selecionado ou nÃ£o. */\n  @Input('p-selected') selected?: boolean = false;\n\n  /** Evento que serÃ¡ disparado toda vez que o usuÃ¡rio marcar ou desmarcar um item. */\n  @Output('p-change') change = new EventEmitter();\n\n  itemClicked() {\n    this.selected = !this.selected;\n    this.change.emit(this.selected);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { isFirefox, isIE, isIEOrEdge, openExternalLink } from './../../../../utils/util';\nimport { PoKeyCodeEnum } from './../../../../enums/po-key-code.enum';\n\nconst poRichTextBodyCommands = [\n  'bold',\n  'italic',\n  'underline',\n  'justifyleft',\n  'justifycenter',\n  'justifyright',\n  'justifyfull',\n  'insertUnorderedList',\n  'Createlink'\n];\n\n@Component({\n  selector: 'po-rich-text-body',\n  templateUrl: './po-rich-text-body.component.html'\n})\nexport class PoRichTextBodyComponent implements OnInit {\n  private isLinkEditing: boolean;\n  private linkElement: any;\n  private timeoutChange: any;\n  private valueBeforeChange: any;\n\n  @ViewChild('bodyElement', { static: true }) bodyElement: ElementRef;\n\n  @Input('p-height') height?: string;\n\n  @Input('p-model-value') modelValue?: string;\n\n  @Input('p-placeholder') placeholder?: string;\n\n  @Input('p-readonly') readonly?: string;\n\n  @Output('p-change') change = new EventEmitter<any>();\n\n  @Output('p-commands') commands = new EventEmitter<any>();\n\n  @Output('p-selected-link') selectedLink = new EventEmitter<any>();\n\n  @Output('p-shortcut-command') shortcutCommand = new EventEmitter<any>();\n\n  @Output('p-value') value = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.bodyElement.nativeElement.designMode = 'on';\n\n    // timeout necessÃ¡rio para setar o valor vindo do writeValue do componente principal.\n    setTimeout(() => this.updateValueWithModelValue());\n  }\n\n  executeCommand(command: string | { command: any; value: string | any }) {\n    this.bodyElement.nativeElement.focus();\n\n    if (typeof command === 'object') {\n      if (command.command === 'InsertHTML') {\n        const {\n          command: linkCommand,\n          value: { urlLink },\n          value: { urlLinkText }\n        } = command;\n\n        this.handleCommandLink(linkCommand, urlLink, urlLinkText);\n      } else {\n        document.execCommand(command.command, false, command.value);\n      }\n    } else {\n      document.execCommand(command, false, null);\n    }\n\n    this.updateModel();\n    this.value.emit(this.modelValue);\n  }\n\n  linkEditing(event) {\n    this.isLinkEditing = !!event;\n  }\n\n  onBlur() {\n    if (this.modelValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(this.modelValue);\n      }, 200);\n    }\n  }\n\n  focus(): void {\n    this.bodyElement.nativeElement.focus();\n  }\n\n  onClick() {\n    this.emitSelectionCommands();\n  }\n\n  onFocus() {\n    this.valueBeforeChange = this.modelValue;\n  }\n\n  onKeyDown(event) {\n    const keyK = event.keyCode === PoKeyCodeEnum.keyK;\n    const isLinkShortcut = (keyK && event.ctrlKey) || (keyK && event.metaKey);\n\n    if (isLinkShortcut) {\n      event.preventDefault();\n      this.shortcutCommand.emit();\n    }\n\n    this.toggleCursorOnLink(event, 'add');\n  }\n\n  onKeyUp(event: any) {\n    this.toggleCursorOnLink(event, 'remove');\n\n    this.removeBrElement();\n    this.updateModel();\n    this.emitSelectionCommands();\n  }\n\n  onPaste() {\n    this.addClickListenerOnAnchorElements();\n    this.update();\n  }\n\n  update() {\n    setTimeout(() => this.updateModel());\n\n    setTimeout(() => {\n      this.removeBrElement();\n      this.updateModel();\n      this.emitSelectionCommands();\n    });\n  }\n\n  private addClickListenerOnAnchorElements() {\n    this.bodyElement.nativeElement.querySelectorAll('a').forEach(element => {\n      element.addEventListener('click', this.onAnchorClick);\n    });\n  }\n\n  private emitSelectionCommands() {\n    const commands = poRichTextBodyCommands.filter(command => document.queryCommandState(command));\n    const rgbColor = document.queryCommandValue('ForeColor');\n\n    let hexColor;\n    if (!isIE()) {\n      hexColor = this.rgbToHex(rgbColor);\n    }\n\n    if (this.isCursorPositionedInALink()) {\n      commands.push('Createlink');\n    }\n\n    this.selectedLink.emit(this.linkElement); // importante ficar fora do if para emitir mesmo undefined.\n    this.commands.emit({ commands, hexColor });\n  }\n\n  private getTextSelection() {\n    const textSelection = document.getSelection();\n    if (!textSelection) {\n      return;\n    }\n    const focusNode = textSelection.focusNode ? textSelection.focusNode.parentElement : undefined;\n    const anchorNode = textSelection.anchorNode ? textSelection.anchorNode.parentNode : undefined;\n    const node = focusNode || anchorNode;\n    let tagName;\n\n    if (node) {\n      tagName = node['tagName'] || node['nodeName'];\n      return {\n        node,\n        tagName\n      };\n    }\n  }\n\n  private handleCommandLink(linkCommand: string, urlLink: string, urlLinkText: string) {\n    if (isIE()) {\n      this.insertHtmlLinkElement(urlLink, urlLinkText);\n    } else {\n      // '&nbsp;' necessÃ¡rio para o cursor nÃ£o ficar preso dentro do link no Firefox.\n      const linkValue =\n        isFirefox() && !this.isLinkEditing\n          ? `&nbsp;${this.makeLinkTag(urlLink, urlLinkText)}&nbsp;`\n          : this.makeLinkTag(urlLink, urlLinkText);\n\n      document.execCommand(linkCommand, false, linkValue);\n    }\n\n    this.addClickListenerOnAnchorElements();\n  }\n\n  // tratamento especÃ­fico para IE pois nÃ£o suporta o comando 'insertHTML'.\n  private insertHtmlLinkElement(urlLink: string, urlLinkText: string) {\n    const selection = document.getSelection();\n    const selectionRange = selection.getRangeAt(0);\n    const elementLink = document.createElement('a');\n    const elementlinkText = document.createTextNode(urlLinkText);\n\n    elementLink.appendChild(elementlinkText);\n    elementLink.href = urlLink;\n    elementLink.setAttribute('target', '_blank');\n    elementLink.classList.add('po-rich-text-link');\n\n    selectionRange.deleteContents();\n    selectionRange.insertNode(elementLink);\n  }\n\n  private isCursorPositionedInALink(): boolean {\n    const textSelection = this.getTextSelection();\n    this.linkElement = undefined;\n\n    let isLink = false;\n\n    if (textSelection && textSelection.node && textSelection.tagName === 'A') {\n      this.linkElement = textSelection.node;\n      isLink = true;\n    } else if ((isFirefox() || isIEOrEdge()) && this.verifyCursorPositionInFirefoxIEEdge()) {\n      isLink = true;\n    } else {\n      isLink = textSelection ? this.isParentNodeAnchor(textSelection) : false;\n    }\n    return isLink;\n  }\n\n  private isParentNodeAnchor(textSelection): boolean {\n    let element = textSelection.node;\n    let isLink = false;\n\n    while (element && (element.tagName !== null || element.nodeName !== null)) {\n      if (element.tagName === 'A' || element.nodeName === 'A') {\n        this.linkElement = element;\n        isLink = true;\n        return isLink;\n      }\n      element = element.parentElement || element.parentNode;\n    }\n\n    this.linkElement = undefined;\n    return isLink;\n  }\n\n  private makeLinkTag(urlLink: string, urlLinkText: string) {\n    return `<a class=\"po-rich-text-link\" href=\"${urlLink}\" target=\"_blank\">${urlLinkText || urlLink}</a>`;\n  }\n\n  private onAnchorClick = event => {\n    const { target, ctrlKey, metaKey } = event;\n    let url;\n    let elementLink;\n\n    if (ctrlKey || metaKey) {\n      if (event.path) {\n        event.path.forEach(element => {\n          if (element.nodeName === 'A') {\n            url = element.href;\n            elementLink = element;\n          }\n        });\n      } else {\n        url = target.attributes.href.value;\n        elementLink = target;\n      }\n      openExternalLink(url);\n      elementLink.classList.remove('po-clickable');\n    }\n  };\n\n  // Tratamento necessÃ¡rio para eliminar a tag <br> criada no firefox quando o body for limpo.\n  private removeBrElement() {\n    const bodyElement = this.bodyElement.nativeElement;\n\n    if (!bodyElement.innerText.trim() && bodyElement.childNodes.length === 1 && bodyElement.querySelector('br')) {\n      bodyElement.querySelector('br').remove();\n    }\n  }\n\n  private rgbToHex(rgb) {\n    // Tratamento necessÃ¡rio para converter o cÃ³digo rgb para hexadecimal.\n    const sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n\n    let r = (+rgb[0]).toString(16);\n    let g = (+rgb[1]).toString(16);\n    let b = (+rgb[2]).toString(16);\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n\n  private toggleCursorOnLink(event: any, action: 'add' | 'remove') {\n    const selection = document.getSelection();\n    const element = selection.focusNode ? selection.focusNode.parentNode : undefined;\n    const isCtrl = event.key === 'Control';\n    const isCommand = event.key === 'Meta';\n    const isOnCtrlLink = this.isCursorPositionedInALink() && (isCtrl || isCommand);\n\n    if (element) {\n      if (isOnCtrlLink) {\n        element['classList'][action]('po-clickable');\n      } else {\n        const isClickable = element['classList'] && element['classList'].contains('po-clickable');\n\n        if (isClickable) {\n          element['classList'].remove('po-clickable');\n        }\n      }\n      this.updateModel();\n    }\n  }\n\n  private updateModel() {\n    this.modelValue = this.bodyElement.nativeElement.innerHTML;\n\n    this.value.emit(this.modelValue);\n  }\n\n  private updateValueWithModelValue() {\n    if (this.modelValue) {\n      this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);\n    }\n  }\n\n  private verifyCursorPositionInFirefoxIEEdge(): boolean {\n    const textSelection = document.getSelection();\n    const nodeLink = textSelection.focusNode;\n    let isLink = false;\n\n    if (nodeLink && nodeLink.nodeName === 'A') {\n      this.linkElement = nodeLink;\n      isLink = true;\n    } else {\n      const range = textSelection.getRangeAt(0);\n      const fragmentDocument = range.cloneContents();\n      const element = fragmentDocument.childNodes[0] || fragmentDocument.firstElementChild;\n\n      this.linkElement = element && element.nodeName === 'A' ? element : undefined;\n      isLink = !!this.linkElement;\n    }\n\n    return isLink;\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * O componente `po-rich-text` Ã© um editor de textos enriquecidos.\n *\n * Para ediÃ§Ã£o de texto simples sem formataÃ§Ã£o recomenda-se o uso do componente [**po-textarea**](/documentation/po-textarea).\n *\n * > No navegador Internet Explorer nÃ£o Ã© possÃ­vel alterar a cor do texto.\n */\n@Directive()\nexport abstract class PoRichTextBaseComponent implements ControlValueAccessor, Validator {\n  private _height?: number;\n  private _placeholder: string;\n  private _readonly: boolean;\n  private _required: boolean;\n\n  invalid: boolean = false;\n  onChangeModel: any = null;\n  value: string;\n\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando a propriedade required estiver habilitada e o campo for limpo apÃ³s algo ser digitado.\n   */\n  @Input('p-error-message') errorMessage?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da Ã¡rea de ediÃ§Ã£o de texto.\n   *\n   * > Altura mÃ­nima do componente Ã© `94` e a altura mÃ¡xima Ã© `262`.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(value: boolean) {\n    this._required = convertToBoolean(value);\n\n    this.validateModel(this.value);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /** Evento disparado ao deixar o campo e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao modificar valor do model e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, false, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    // Quando o rich-text nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    }\n  }\n\n  protected validateModel(value: any) {\n    if (this.validatorChange) {\n      this.validatorChange(value);\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy, ViewChild } from '@angular/core';\n\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\n\n/* istanbul ignore next */\nconst providers = [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true\n  }\n];\n\n/**\n * @docsExtends PoRichTextBaseComponent\n *\n * @example\n *\n * <example name=\"po-rich-text-basic\" title=\"PO Rich Text Basic\">\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-labs\" title=\"PO Rich Text Labs\">\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-recipe\" title=\"PO Rich Text Recipe\">\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-rich-text',\n  templateUrl: './po-rich-text.component.html',\n  providers\n})\nexport class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\n  private listener = this.validateClassesForRequired.bind(this);\n  private modelLastUpdate: any;\n\n  @ViewChild(PoRichTextBodyComponent, { static: true }) bodyElement: PoRichTextBodyComponent;\n\n  get errorMsg() {\n    return this.errorMessage !== '' && !this.value && this.required && this.invalid ? this.errorMessage : '';\n  }\n\n  constructor(private element: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    this.addKeyListeners();\n    this.verifyAutoFocus();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.removeEventListener('keyup', this.listener);\n      this.element.nativeElement.removeEventListener('keydown', this.listener);\n      this.element.nativeElement.removeEventListener('cut', this.listener);\n      this.element.nativeElement.removeEventListener('paste', this.listener);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRichTextComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\n   *\n   * focusRichText() {\n   *   this.richText.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    this.bodyElement.focus();\n  }\n\n  onChangeValue(value: any) {\n    this.change.emit(value);\n  }\n\n  updateValue(value: string) {\n    this.value = value;\n    this.invalid = !value;\n    this.controlChangeModelEmitter(this.value);\n    this.updateModel(this.value);\n  }\n\n  private addKeyListeners() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.addEventListener('keyup', this.listener);\n      this.element.nativeElement.addEventListener('keydown', this.listener);\n      this.element.nativeElement.addEventListener('cut', this.listener);\n      this.element.nativeElement.addEventListener('paste', this.listener);\n    }\n  }\n\n  private controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  private verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  private validateClassesForRequired() {\n    setTimeout(() => {\n      const value = this.value;\n      const element = this.element.nativeElement;\n\n      if (!value && this.required) {\n        element.classList.add('ng-invalid');\n        element.classList.add('ng-dirty');\n      } else {\n        element.classList.remove('ng-invalid');\n      }\n    });\n  }\n}\n","export const poRichTextLiteralsDefault = {\n  en: {\n    bold: 'Bold',\n    italic: 'Italic',\n    underline: 'Underline',\n    left: 'Left',\n    center: 'Center',\n    right: 'Right',\n    justify: 'Justify',\n    textColor: 'Text color',\n    unorderedList: 'Bulleted list',\n    insertLink: 'Insert link',\n    linkTextLabel: 'Text with link',\n    linkUrlTextHelper: 'Paste in the text box below the copied browser link',\n    linkUrlTextPlaceholder: 'Enter the link address that will be attached to the text.',\n    cancel: 'Cancel',\n    editLink: 'Edit link',\n    insert: 'Insert',\n    insertImage: 'Insert image',\n    urlImage: 'URL image'\n  },\n  es: {\n    bold: 'Negrita',\n    italic: 'Cursiva',\n    underline: 'Subrayado',\n    left: 'Izquierda',\n    center: 'Centro',\n    right: 'Derecha',\n    justify: 'Justificado',\n    textColor: 'Color del texto',\n    unorderedList: 'Lista con viÃ±etas',\n    insertLink: 'Insertar el link',\n    linkTextLabel: 'Texto con enlace',\n    linkUrlTextHelper: 'Pegue en el cuadro de texto debajo del enlace del navegador copiado',\n    linkUrlTextPlaceholder: 'Ingrese la direcciÃ³n del enlace que se adjuntarÃ¡ al texto.',\n    cancel: 'Cancelar',\n    editLink: 'Editar enlace',\n    insert: 'Insertar',\n    insertImage: 'Insertar imagen',\n    urlImage: 'Imagen URL'\n  },\n  pt: {\n    bold: 'Negrito',\n    italic: 'ItÃ¡lico',\n    underline: 'Sublinhado',\n    left: 'Esquerda',\n    center: 'Centro',\n    right: 'Direita',\n    justify: 'Justificado',\n    textColor: 'Cor do texto',\n    unorderedList: 'Lista com marcadores',\n    insertLink: 'Inserir link',\n    linkTextLabel: 'Texto com link',\n    linkUrlTextHelper: 'Cole na caixa de texto abaixo o link copiado do navegador',\n    linkUrlTextPlaceholder: 'Insira o endereÃ§o do link que serÃ¡ anexado ao texto',\n    cancel: 'Cancelar',\n    editLink: 'Editar link',\n    insert: 'Inserir',\n    insertImage: 'Inserir imagem',\n    urlImage: 'Imagem em URL'\n  }\n};\n","// Enum de status de envio dos arquivos.\nexport enum PoUploadStatus {\n  // Enviou com sucesso.\n  Uploaded,\n  // EstÃ¡ enviando.\n  Uploading,\n  // Ocorreu algum erro no envio.\n  Error,\n  // NÃ£o enviou ou aconteceu algum erro.\n  None\n}\n","import { ComponentRef } from '@angular/core';\n\nimport { PoNotification } from './po-notification.interface';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster/po-toaster-type.enum';\n\n/**\n * @description\n *\n * ServiÃ§o responsÃ¡vel por emitir as notificaÃ§Ãµes em uma pÃ¡gina. SÃ£o disponibilizados os mÃ©todos de:\n *\n * - success,\n * - warning,\n * - error,\n * - information.\n *\n * Cada um destes mÃ©todos recebe como parÃ¢metro o objeto \"PoNotification\" que contÃ©m os dados da mensagem e o\n * objeto ViewContainerRef que Ã© a representaÃ§Ã£o do container do componente onde serÃ¡ criada a notificaÃ§Ã£o.\n *\n * Estas notificaÃ§Ãµes serÃ£o exibidas durante 10 segundos por padrÃ£o, podendo ser alterada conforme necessidade.\n * ApÃ³s este tempo a mesma Ã© removida automaticamente.\n *\n */\nexport abstract class PoNotificationBaseService {\n  // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's superiores.\n  stackTop: Array<ComponentRef<any>> = [];\n\n  // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's inferiores.\n  stackBottom: Array<ComponentRef<any>> = [];\n\n  // DuraÃ§Ã£o da notificaÃ§Ã£o ativa.\n  private defaultDuration = 10000;\n\n  /**\n   * Emite uma notificaÃ§Ã£o de sucesso.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o.\n   */\n  public success(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Success));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de atenÃ§Ã£o.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public warning(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Warning));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de erro.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public error(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Error));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de informaÃ§Ã£o.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public information(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Information));\n  }\n\n  /**\n   * Define em milissegundos a duraÃ§Ã£o padrÃ£o para as notificaÃ§Ãµes.\n   *\n   * > PadrÃ£o 10 segundos.\n   *\n   * @param {number} defaultDuration DuraÃ§Ã£o em milisegundos\n   */\n  public setDefaultDuration(defaultDuration: number) {\n    this.defaultDuration = defaultDuration;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * Cria um objeto do tipo PoToaster de acordo o tipo.\n   *\n   * @param {PoNotification | string} notification Objeto PoNotification com os dados da notificaÃ§Ã£o\n   */\n  private buildToaster(notification: PoNotification | string, type: PoToasterType): PoToaster {\n    let index = 0;\n    let orientation;\n\n    if (\n      (<PoNotification>notification).orientation === undefined ||\n      (<PoNotification>notification).orientation === PoToasterOrientation.Bottom\n    ) {\n      index = this.stackBottom.length;\n      orientation = PoToasterOrientation.Bottom;\n    } else {\n      index = this.stackTop.length;\n      orientation = PoToasterOrientation.Top;\n    }\n\n    const toaster: PoToaster = {\n      componentRef: undefined,\n      message: (<PoNotification>notification).message || <string>notification,\n      type: type,\n      orientation: orientation,\n      action: (<PoNotification>notification).action,\n      actionLabel: (<PoNotification>notification).actionLabel,\n      position: index,\n      duration: (<PoNotification>notification).duration || this.defaultDuration\n    };\n\n    if ((<PoNotification>notification).action) {\n      toaster.action = (param: any) => {\n        (<PoNotification>notification).action();\n        this.destroyToaster(param.componentRef);\n      };\n    }\n\n    return toaster;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por criar o po-toaster.\n   *\n   * @param {PoToaster} toaster Objeto contendo as informaÃ§Ãµes do toaster.\n   */\n  abstract createToaster(toaster: PoToaster): void;\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por destruir o po-toaster.\n   *\n   * @param {ComponentRef} toaster NÃºmero da posiÃ§Ã£o ou instancia do toaster a ser destruÃ­do.\n   * @param {PoToasterOrientation} orientation OrientaÃ§Ã£o do PoToaster: Top ou Bottom\n   */\n  abstract destroyToaster(toaster: ComponentRef<any>): void;\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoNotificationBaseService } from './po-notification-base.service';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n/**\n * @docsExtends PoNotificationBaseService\n *\n * @example\n *\n * <example name=\"po-notification-basic\" title=\"PO Notification Basic\">\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.html\"> </file>\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-labs\" title=\"PO Notification Labs\">\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.html\"> </file>\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-sales\" title=\"PO Notification - Sales\">\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.html\"> </file>\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.ts\"> </file>\n * </example>\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoNotificationService extends PoNotificationBaseService {\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  createToaster(toaster: PoToaster): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoToasterComponent);\n\n    toaster.componentRef = componentRef;\n\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.configToaster(toaster);\n\n    if (toaster.orientation === PoToasterOrientation.Top) {\n      this.stackTop.push(componentRef);\n    } else {\n      this.stackBottom.push(componentRef);\n    }\n\n    this.observableOnClose(componentRef);\n\n    if (toaster.action === undefined) {\n      setTimeout(() => {\n        this.destroyToaster(componentRef);\n      }, toaster.duration);\n    }\n  }\n\n  destroyToaster(toaster: any): void {\n    let stack;\n\n    if (toaster.instance.orientation === PoToasterOrientation.Top) {\n      stack = this.stackTop;\n    } else {\n      stack = this.stackBottom;\n    }\n\n    const index = stack.indexOf(toaster);\n    stack.splice(index, 1);\n\n    this.poComponentInjector.destroyComponentInApplication(toaster);\n\n    for (let count = 0; count < stack.length; count++) {\n      stack[count].instance.changePosition(count);\n    }\n  }\n\n  private observableOnClose(componentRef: any) {\n    componentRef.instance.observableOnClose.subscribe(() => {\n      this.destroyToaster(componentRef);\n    });\n  }\n}\n","import { PoUploadStatus } from './po-upload-status.enum';\n\n// Classe responsÃ¡vel pelo arquivo do PO Upload\nexport class PoUploadFile {\n  // Nome do arquivo.\n  public name: string;\n  // Arquivo bruto.\n  public rawFile: File;\n  // Status de envio do arquivo.\n  public status?: PoUploadStatus;\n  // Identificador do arquivo.\n  public uid: string;\n  // ExtensÃ£o do arquivo.\n  public extension: string;\n  // Tamanho do arquivo em bytes;\n  public size: number;\n\n  // propriedade para auxiliar a exibiÃ§Ã£o do texto no componente progress\n  displayName?: string;\n\n  // porcentagem utilizada para repassar ao componente progress\n  percent?: number;\n\n  constructor(file: any) {\n    if (file) {\n      this.name = file.name;\n      this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;\n      this.extension = this.getExtension(file.name);\n      this.size = file.size;\n      this.rawFile = file;\n      this.uid = this.generateUUID();\n      this.status = PoUploadStatus.None;\n    }\n  }\n\n  private getExtension(value: string) {\n    if (value) {\n      const extension = value.substr(value.lastIndexOf('.'));\n      return extension.toLowerCase();\n    }\n\n    return '';\n  }\n\n  private generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  // Retorna o tamanho do arquivo em KBytes.\n  private getFileSize(size: number): string {\n    let kbSize = 0;\n\n    if (size) {\n      kbSize = Math.ceil(size / 1024);\n    }\n\n    return `${kbSize} KB`;\n  }\n}\n","/**\n * @usedBy PoSwitchComponent\n *\n * @description\n *\n * Enum para posicionar o label do valor do po-switch.\n */\nexport enum PoSwitchLabelPosition {\n  /** Posiciona o label do lado esquerdo do switch. */\n  Right,\n  /** Posiciona o label do lado direito do switch. */\n  Left\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { PoUploadFile } from './po-upload-file';\n\nimport { Observable, Subscription } from 'rxjs';\n\n@Injectable()\nexport class PoUploadBaseService {\n  formField: string = 'files';\n  requests: Array<any> = [];\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * MÃ©todo responsÃ¡vel por enviar os arquivos ao servidor, conforme o parÃ¢metro URL.\n   *\n   * @param url URL da requisiÃ§Ã£o a ser efetuada.\n   * @param files Arquivos a serem enviados.\n   * @param tOnUpload FunÃ§Ã£o a ser executada quando o arquivo for enviado ao servidor.\n   * @param uploadCallback FunÃ§Ã£o que serÃ¡ executada enquanto os arquivos estiverem sendo enviados.\n   * @param successCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o for efetuada com sucesso.\n   * @param errorCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o foi efetuada com sucesso.\n   */\n  public upload(\n    url: string,\n    files: Array<PoUploadFile>,\n    tOnUpload: EventEmitter<any>,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void\n  ) {\n    const filesLength = files.length;\n    const uploadEvent: any = {\n      data: {},\n      file: null\n    };\n\n    for (let i = 0; i < filesLength; i++) {\n      const formData: FormData = new FormData();\n      const file = files[i];\n      const fileName = file.rawFile.name;\n\n      formData.append(this.formField, file.rawFile, fileName);\n\n      // FunÃ§Ã£o upload, onde o desenvolvedor pode enviar dados para a requisiÃ§Ã£o.\n      if (tOnUpload) {\n        uploadEvent['file'] = file;\n        tOnUpload.emit(uploadEvent);\n\n        formData.append('data', JSON.stringify(uploadEvent.data));\n      }\n\n      this.sendFile(url, file, formData, uploadCallback, successCallback, errorCallback);\n    }\n  }\n\n  public sendFile(\n    url: string,\n    file: PoUploadFile,\n    formData: FormData,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void\n  ) {\n    const request = this.getRequest(url, formData).subscribe(\n      event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.addRequest(file, request);\n\n          const percentDone = Math.round((100 * event.loaded) / event.total);\n          uploadCallback(file, percentDone);\n        } else if (event instanceof HttpResponse) {\n          // Sucesso, arquivos enviados.\n          successCallback(file, event);\n        }\n      },\n      (err: HttpErrorResponse) => {\n        errorCallback(file, err);\n      }\n    );\n  }\n\n  public getRequest(url: string, formData: FormData): Observable<any> {\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true\n    });\n\n    return this.http.request(req);\n  }\n\n  public stopRequestByFile(file: any, callback: () => void) {\n    const requestObj = this.requests.find(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (requestObj) {\n      const request = requestObj.request;\n      request.unsubscribe();\n      this.removeRequest(requestObj);\n      callback();\n    }\n  }\n\n  public removeRequest(requestObj: any) {\n    const index = this.requests.indexOf(requestObj);\n    this.requests.splice(index, 1);\n  }\n\n  public addRequest(file: PoUploadFile, request: Subscription) {\n    const hasRequest = this.requests.some(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (!hasRequest) {\n      this.requests.push({ file, request });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoUploadBaseService } from './po-upload-base.service';\n\n@Injectable()\nexport class PoUploadService extends PoUploadBaseService {}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isEquals, isIE, isMobile, poLocaleDefault } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoUploadFile } from './po-upload-file';\nimport { PoUploadFileRestrictions } from './interfaces/po-upload-file-restriction.interface';\nimport { PoUploadLiterals } from './interfaces/po-upload-literals.interface';\nimport { PoUploadService } from './po-upload.service';\nimport { PoUploadStatus } from './po-upload-status.enum';\nimport { InputBoolean } from '../../../decorators';\n\nexport const poUploadLiteralsDefault = {\n  en: <PoUploadLiterals>{\n    files: 'files',\n    folders: 'folders',\n    selectFile: 'Select file',\n    selectFiles: 'Select files',\n    selectFolder: 'Select folder',\n    deleteFile: 'Delete',\n    cancel: 'Cancel',\n    tryAgain: 'Try again',\n    startSending: 'Start sending',\n    dragFilesHere: 'Drag files here',\n    dragFoldersHere: 'Drag folders here',\n    selectFilesOnComputer: 'or select files on your computer',\n    selectFolderOnComputer: 'or select folder on your computer',\n    dropFilesHere: 'Drop files here',\n    dropFoldersHere: 'Drop folders here',\n    invalidDropArea: '{0} were not dropped in the correct area',\n    invalidFileType: 'Failed to load {0} file(s) as it is not the allowed file type.',\n    invalidAmount: 'Failed to load {0} file(s), as it exceeds the limit amount of files.',\n    invalidFormat: 'Failed to load {0} file(s), as it does not match the format(s): {1}.',\n    invalidSize: 'Failed to load {0} files(s), as it is not the allowed size: from {1} to {2}.',\n    numberOfFilesAllowed: '{0} file(s) allowed',\n    allowedFormats: 'Accepted file formats: {0}.',\n    allowedFileSizeRange: 'Size limit per file: from {0} to {1}',\n    maxFileSizeAllowed: 'Size limit per file: {0} maximum',\n    minFileSizeAllowed: 'Size limit per file: {0} minimum',\n    errorOccurred: 'An error has occurred',\n    sentWithSuccess: 'Sent with success'\n  },\n  es: <PoUploadLiterals>{\n    files: 'archivos',\n    folders: 'carpetas',\n    selectFile: 'Seleccionar archivo',\n    selectFiles: 'Seleccionar archivos',\n    selectFolder: 'Seleccionar carpeta',\n    deleteFile: 'Borrar',\n    cancel: 'Cancelar',\n    tryAgain: 'Intentar de nuevo',\n    startSending: 'Iniciar carga',\n    dragFilesHere: 'Arrastra los archivos aquÃ­',\n    dragFoldersHere: 'Arrastra las carpetas aquÃ­',\n    selectFilesOnComputer: 'o selecciona los archivos en tu computadora',\n    selectFolderOnComputer: 'o selecciona la carpeta en tu computadora',\n    dropFilesHere: 'Deja los archivos aquÃ­',\n    dropFoldersHere: 'Deja las carpetas aquÃ­',\n    invalidDropArea: 'Los {0} no se insertaron en la ubicaciÃ³n correcta',\n    invalidFileType: 'Error al cargar {0} archivo (s) ya que no es el tipo de archivo permitido',\n    invalidAmount: 'Error al cargar {0} archivo (s) ya que excede la cantidad limite de archivos.',\n    invalidFormat: 'Error al cargar {0} archivo (s) ya que no coincide con el formato (s): {1}.',\n    invalidSize: 'Error al cargar {0} archivo (s) ya que no cumple con el tamaÃ±o permitido: desde {1} hasta {2}.',\n    numberOfFilesAllowed: '{0} archivo(s) permitido(s)',\n    allowedFormats: 'Formatos aceptados: {0}.',\n    allowedFileSizeRange: 'Limite de tamaÃ±o de archivo: desde {0} hasta {1}',\n    maxFileSizeAllowed: 'Limite de tamaÃ±o de archivo: hasta {0}',\n    minFileSizeAllowed: 'Limite de tamaÃ±o de archivo: minimo {0}',\n    errorOccurred: 'Ocurrio un error',\n    sentWithSuccess: 'Enviado con Ã©xito'\n  },\n  pt: <PoUploadLiterals>{\n    files: 'arquivos',\n    folders: 'diretÃ³rios',\n    selectFile: 'Selecionar arquivo',\n    selectFiles: 'Selecionar arquivos',\n    selectFolder: 'Selecionar pasta',\n    deleteFile: 'Excluir',\n    cancel: 'Cancelar',\n    tryAgain: 'Tentar Novamente',\n    startSending: 'Iniciar envio',\n    dragFilesHere: 'Arraste os arquivos aqui',\n    dragFoldersHere: 'Arraste as pastas aqui',\n    selectFilesOnComputer: 'ou selecione os arquivos no computador',\n    selectFolderOnComputer: 'ou selecione a pasta no computador',\n    dropFilesHere: 'Solte os arquivos aqui',\n    dropFoldersHere: 'Solte as pastas aqui',\n    invalidDropArea: 'Os {0} nÃ£o foram inseridos no local correto',\n    invalidFileType: 'Falha ao carregar {0} arquivo (s), pois nÃ£o Ã© o tipo de arquivo permitido',\n    invalidAmount: 'Falha ao carregar {0} arquivo(s), pois excede(m) a quantidade limite de arquivos.',\n    invalidFormat: 'Falha ao carregar {0} arquivo(s), pois nÃ£o corresponde(m) ao(s) formato(s): {1}.',\n    invalidSize: 'Falha ao carregar {0} arquivo(s), pois nÃ£o atende ao tamanho permitido: {1} atÃ© {2}.',\n    numberOfFilesAllowed: 'Quantidade mÃ¡xima: {0} arquivo(s)',\n    allowedFormats: 'Formatos adotados: {0}.',\n    allowedFileSizeRange: 'Limite de tamanho por arquivo: de {0} atÃ© {1}',\n    maxFileSizeAllowed: 'Limite de tamanho por arquivo: atÃ© {0}',\n    minFileSizeAllowed: 'Limite de tamanho por arquivo: no mÃ­nimo {0}',\n    errorOccurred: 'Ocorreu um erro',\n    sentWithSuccess: 'Enviado com sucesso'\n  },\n  ru: <PoUploadLiterals>{\n    files: 'ÑÐ°Ð¹Ð»Ñ',\n    folders: 'Ð¿Ð°Ð¿ÐºÐ¸ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\n    selectFile: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»',\n    selectFiles: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ',\n    selectFolder: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\n    deleteFile: 'ÑÐ´Ð°Ð»ÑÑÑ',\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    tryAgain: 'Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·',\n    startSending: 'ÐÐ°ÑÐ°ÑÑ Ð·Ð°Ð³ÑÑÐ·ÐºÑ',\n    dragFilesHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ ÑÑÐ´Ð°',\n    dragFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\n    selectFilesOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ Ð½Ð° ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\n    selectFolderOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ð½Ð° Ð²Ð°ÑÐµÐ¼ ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\n    dropFilesHere: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ°Ð¹Ð»Ñ Ð·Ð´ÐµÑÑ',\n    dropFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\n    invalidDropArea: '{0} Ð½Ðµ Ð±ÑÐ»Ð¸ Ð²ÑÑÐ°Ð²Ð»ÐµÐ½Ñ Ð² Ð¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾Ð¼ Ð¼ÐµÑÑÐµ.',\n    invalidFileType: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº ÑÑÐ¾ Ð½ÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¸Ð¿ ÑÐ°Ð¹Ð»Ð°',\n    invalidAmount: 'NÃ£o foi possÃ­vel carregar os arquivos {0} porque eles excederam o limite de arquivos.',\n    invalidFormat: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ¾ÑÐ¼Ð°ÑÑ (Ð°Ð¼): {1}.',\n    invalidSize: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ°Ð·ÑÐµÑÐµÐ½Ð½Ð¾Ð¼Ñ ÑÐ°Ð·Ð¼ÐµÑÑ: Ð¾Ñ {1} Ð´Ð¾ {2}.',\n    numberOfFilesAllowed: 'ÐÐ°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾: {0} ÑÐ°Ð¹Ð»Ð¾Ð²',\n    allowedFormats: 'Ð¤Ð¾ÑÐ¼Ð°ÑÑ Ð¿ÑÐ¸Ð½ÑÑÑ: {0}.',\n    allowedFileSizeRange: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð¾Ñ {0} Ð´Ð¾ {1}',\n    maxFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð´Ð¾ {0}',\n    minFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð½Ðµ Ð¼ÐµÐ½ÐµÐµ {0}',\n    errorOccurred: 'ÐÑÐ¾Ð¸Ð·Ð¾ÑÐ»Ð° Ð¾ÑÐ¸Ð±ÐºÐ°.',\n    sentWithSuccess: 'Ð£ÑÐ¿ÐµÑÐ½Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾'\n  }\n};\n\nconst poUploadFormFieldDefault = 'files';\n\nconst poUploadMaxFileSize = 31457280; // 30MB\nconst poUploadMinFileSize = 0;\n\n/**\n * @description\n *\n * O componente `po-upload` permite que o usuÃ¡rio envie arquivo(s) ao servidor e acompanhe o progresso.\n * Este componente tambÃ©m possibilita algumas configuraÃ§Ãµes como:\n *  â Envio de diretÃ³rios, onde ele acessa o diretÃ³rio selecionado assim como seus sub-diretÃ³rios;\n *  - MÃºltipla seleÃ§Ã£o, onde o usuÃ¡rio pode enviar mais de um arquivo ao servidor.\n *  - Auto envio, onde o arquivo Ã© enviado imediatamente apÃ³s a seleÃ§Ã£o do usuÃ¡rio, nÃ£o necessitando que o usuÃ¡rio\n * clique em enviar.\n *  - RestriÃ§Ãµes de formatos de arquivo e tamanho.\n *  - FunÃ§Ã£o de sucesso que serÃ¡ disparada quando os arquivos forem enviados com sucesso.\n *  - FunÃ§Ã£o de erro que serÃ¡ disparada quando houver erro no envio dos arquivos.\n *  - Permite habilitar uma Ã¡rea onde os arquivos podem ser arrastados.\n */\n@Directive()\nexport abstract class PoUploadBaseComponent implements ControlValueAccessor, Validator {\n  private _directory?: boolean;\n  private _disabled?: boolean;\n  private _dragDrop?: boolean = false;\n  private _fileRestrictions?: PoUploadFileRestrictions;\n  private _formField?: string;\n  private _hideRestrictionsInfo?: boolean;\n  private _hideSelectButton?: boolean;\n  private _hideSendButton?: boolean;\n  private _isMultiple?: boolean;\n  private _literals?: any;\n  private _required?: boolean;\n\n  allowedExtensions: string;\n  currentFiles: Array<PoUploadFile>;\n\n  canHandleDirectory: boolean;\n  onModelChange: any;\n  onModelTouched: any;\n\n  private validatorChange: any;\n\n  protected extensionNotAllowed = 0;\n  protected quantityNotAllowed = 0;\n  protected sizeNotAllowed = 0;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite a seleÃ§Ã£o de diretÃ³rios contendo um ou mais arquivos para envio.\n   *\n   * > A habilitaÃ§Ã£o desta propriedade se restringe apenas Ã  seleÃ§Ã£o de diretÃ³rios.\n   *\n   * > DefiniÃ§Ã£o nÃ£o suportada pelo browser **Internet Explorer**, todavia serÃ¡ possÃ­vel a seleÃ§Ã£o de arquivos padrÃ£o.\n   *\n   * @default `false`\n   */\n  @Input('p-directory') set directory(value: boolean) {\n    this._directory = convertToBoolean(value);\n\n    this.canHandleDirectory = this._directory && !isIE() && !isMobile();\n    this.setDirectoryAttribute(this.canHandleDirectory);\n  }\n\n  get directory() {\n    return this._directory;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define em *pixels* a altura da Ã¡rea onde podem ser arrastados os arquivos. A altura mÃ­nima aceita Ã© `160px`.\n   *\n   * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\n   *\n   * @default `320`\n   */\n  @Input('p-drag-drop-height') dragDropHeight: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe a Ã¡rea onde Ã© possÃ­vel arrastar e selecionar os arquivos. Quando estiver definida, omite o botÃ£o para seleÃ§Ã£o de arquivos\n   * automaticamente.\n   *\n   * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\n   *\n   * @default `false`\n   */\n  @Input('p-drag-drop') set dragDrop(value: boolean) {\n    this._dragDrop = convertToBoolean(value);\n  }\n\n  get dragDrop() {\n    return this._dragDrop;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta visualmente as informaÃ§Ãµes de restriÃ§Ãµes para o upload.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-restrictions-info') set hideRestrictionsInfo(value: boolean) {\n    this._hideRestrictionsInfo = convertToBoolean(value);\n  }\n\n  get hideRestrictionsInfo() {\n    return this._hideRestrictionsInfo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Omite o botÃ£o de seleÃ§Ã£o de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\n   * pela chamada do mÃ©todo `selectFiles()` para seleÃ§Ã£o de arquivos.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-select-button') set hideSelectButton(value: boolean) {\n    this._hideSelectButton = convertToBoolean(value);\n  }\n  get hideSelectButton(): boolean {\n    return this._hideSelectButton;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Omite o botÃ£o de envio de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\n   * pela chamada do mÃ©todo `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\n   *\n   * @default `false`\n   */\n  @Input('p-hide-send-button') set hideSendButton(value: boolean) {\n    this._hideSendButton = convertToBoolean(value);\n  }\n  get hideSendButton(): boolean {\n    return this._hideSendButton;\n  }\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-upload`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoUploadLiterals = {\n   *    cancel: 'Desistir',\n   *    deleteFile: 'Deletar',\n   *  };\n   *\n   * Ou passando apenas as literais que deseja customizar:,\n   *    selectFile: 'Buscar arquivo',\n   * ```\n   *    startSending: 'Enviar'\n   *   tryAgain: 'RecomeÃ§ar',\n   *\n   * ```\n   *  const customLiterals: PoUploadLiterals = {\n   *    deleteFile: 'Deletar'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <po-upload\n   *   [p-literals]=\"customLiterals\">\n   * </po-upload>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoUploadLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poUploadLiteralsDefault[poLocaleDefault],\n        ...poUploadLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poUploadLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poUploadLiteralsDefault[browserLanguage()];\n  }\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** URL que deve ser feita a requisiÃ§Ã£o com os arquivos selecionados. */\n  @Input('p-url') url: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que segue a definiÃ§Ã£o da interface `PoUploadFileRestrictions`,\n   * que possibilita definir tamanho mÃ¡ximo/mÃ­nimo e extensÃ£o dos arquivos permitidos.\n   */\n  @Input('p-restrictions') set fileRestrictions(restrictions: PoUploadFileRestrictions) {\n    this._fileRestrictions = this.initRestrictions(restrictions);\n\n    this.setAllowedExtensions(restrictions);\n  }\n\n  get fileRestrictions(): PoUploadFileRestrictions {\n    return this._fileRestrictions;\n  }\n\n  /** Define o valor do atributo `name` do componente. */\n  @Input('name') name: string = 'file';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nome do campo de formulÃ¡rio que serÃ¡ enviado para o serviÃ§o informado na propriedade `p-url`.\n   *\n   * @default `files`\n   */\n  @Input('p-form-field') set formField(value: string) {\n    this._formField = value && typeof value === 'string' ? value : poUploadFormFieldDefault;\n\n    this.getUploadService().formField = this.formField;\n  }\n\n  get formField(): string {\n    return this._formField;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.currentFiles);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o envio do arquivo serÃ¡ automÃ¡tico ao selecionar o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-upload') autoUpload?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se pode selecionar mais de um arquivo.\n   *\n   * > Se utilizada a `p-directory`, habilita-se automaticamente esta propriedade.\n   */\n  @Input('p-multiple') set isMultiple(value: boolean) {\n    this._isMultiple = convertToBoolean(value);\n  }\n\n  get isMultiple() {\n    return this.canHandleDirectory ? true : this._isMultiple;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   *  - O campo conter `p-required`;\n   *  - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.currentFiles);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * FunÃ§Ã£o que serÃ¡ executada no momento de realizar o envio do arquivo,\n   * onde serÃ¡ possÃ­vel adicionar informaÃ§Ãµes ao parÃ¢metro que serÃ¡ enviado na requisiÃ§Ã£o.\n   * Ã passado por parÃ¢metro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\n   * que serÃ¡ enviado em conjunto com o arquivo na requisiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   *   event.data = {id: 'id do usuario'};\n   * ```\n   */\n  @Output('p-upload') onUpload?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro no envio do arquivo.\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpErrorResponse`.\n   */\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando o envio do arquivo for realizado com sucesso.\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpResponse`.\n   */\n  @Output('p-success') onSuccess?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da *tag* `form`.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected uploadService: PoUploadService) {}\n\n  abstract sendFeedback(): void;\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  writeValue(model: any): void {\n    if (model) {\n      if (!isEquals(this.currentFiles, model)) {\n        this.currentFiles = this.parseFiles(model);\n      }\n    } else {\n      this.currentFiles = undefined;\n    }\n  }\n\n  protected isExceededFileLimit(currentFilesLength: number): boolean {\n    return (\n      this.isMultiple &&\n      this.fileRestrictions &&\n      this.fileRestrictions.maxFiles > 0 &&\n      this.fileRestrictions.maxFiles <= currentFilesLength\n    );\n  }\n\n  // Faz o parse dos arquivos selecionados para arquivos do formato PoUploadFile e atualiza os arquivos correntes.\n  protected parseFiles(files: Array<File>): Array<PoUploadFile> {\n    let poUploadFiles: Array<PoUploadFile> = this.currentFiles || [];\n    const filesLength = files.length;\n\n    for (let i = 0; i < filesLength; i++) {\n      if (this.isExceededFileLimit(poUploadFiles.length)) {\n        this.quantityNotAllowed = filesLength - this.fileRestrictions.maxFiles;\n        break;\n      }\n      const file = new PoUploadFile(files[i]);\n\n      if (this.checkRestrictions(file)) {\n        poUploadFiles = this.insertFileInFiles(file, poUploadFiles);\n      }\n    }\n    this.sendFeedback();\n    return poUploadFiles;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Verifica se o arquivo estÃ¡ de acordo com as restriÃ§Ãµes.\n  private checkRestrictions(file: PoUploadFile): boolean {\n    const restrictions = this.fileRestrictions;\n\n    if (restrictions) {\n      const allowedExtensions = restrictions.allowedExtensions;\n      const minFileSize = restrictions.minFileSize;\n      const maxFileSize = restrictions.maxFileSize;\n\n      const isAccept = allowedExtensions ? this.isAllowedExtension(file.extension, allowedExtensions) : true;\n      const isAcceptSize = file.size >= minFileSize && file.size <= maxFileSize;\n\n      if (!isAcceptSize) {\n        this.sizeNotAllowed = this.sizeNotAllowed + 1;\n      }\n\n      return isAccept && isAcceptSize;\n    }\n\n    return true;\n  }\n\n  private existsFileSameName(file: PoUploadFile, files: Array<PoUploadFile>): boolean {\n    return files.some(currentFile => file.name === currentFile.name);\n  }\n\n  private getUploadService(): PoUploadService {\n    return this.uploadService;\n  }\n\n  private insertFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\n    if (this.existsFileSameName(newFile, files)) {\n      return this.updateExistsFileInFiles(newFile, files);\n    }\n\n    if (this.isMultiple) {\n      files.push(newFile);\n    } else {\n      files.splice(0, files.length, newFile);\n    }\n\n    return files;\n  }\n\n  private isAllowedExtension(extension: string, allowedExtensions: Array<string> = []): boolean {\n    const isAllowed = allowedExtensions.some(ext => ext.toLowerCase() === extension);\n    if (!isAllowed) {\n      this.extensionNotAllowed = this.extensionNotAllowed + 1;\n    }\n    return isAllowed;\n  }\n\n  private setAllowedExtensions(restrictions: PoUploadFileRestrictions = {}) {\n    const _allowedExtensions = restrictions.allowedExtensions || [];\n\n    this.allowedExtensions = _allowedExtensions.join(',');\n  }\n\n  private initRestrictions(restrictions: PoUploadFileRestrictions): PoUploadFileRestrictions {\n    if (!restrictions) {\n      return;\n    }\n\n    const minFileSize = restrictions.minFileSize || poUploadMinFileSize;\n    const maxFileSize = restrictions.maxFileSize || poUploadMaxFileSize;\n\n    return {\n      ...restrictions,\n      maxFileSize: maxFileSize,\n      minFileSize: minFileSize\n    };\n  }\n\n  private updateExistsFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\n    const fileIndex = files.findIndex(\n      currentFile => newFile.name === currentFile.name && currentFile.status !== PoUploadStatus.Uploaded\n    );\n\n    if (fileIndex !== -1) {\n      files.splice(fileIndex, 1, newFile);\n    }\n\n    return files;\n  }\n\n  abstract setDirectoryAttribute(value: boolean);\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\n\n@Component({\n  selector: 'po-upload-drag-drop-area',\n  templateUrl: './po-upload-drag-drop-area.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadDragDropAreaComponent {\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-height') height: number;\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Input('p-overlay') overlay: boolean;\n\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('selectFilesLink') selectFilesLinkElement: ElementRef;\n\n  constructor(public elementRef: ElementRef) {}\n\n  focus() {\n    this.selectFilesLinkElement.nativeElement.focus();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport { convertToInt } from '../../../../utils/util';\n\nimport { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\n\nconst PoUploadDragDropHeightDefault = 320;\nconst PoUploadDragDropHeightMin = 160;\n\n@Component({\n  selector: 'po-upload-drag-drop',\n  templateUrl: './po-upload-drag-drop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadDragDropComponent {\n  private _dragDropHeight?: number = PoUploadDragDropHeightDefault;\n\n  areaElement: HTMLElement;\n  isDragOver: boolean = false;\n\n  @ViewChild('dragDropOverlay', { read: ElementRef }) dragDropOverlayElement: ElementRef;\n  @ViewChild(PoUploadDragDropAreaComponent, { static: true }) dragDropAreaComponent: PoUploadDragDropAreaComponent;\n\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-drag-drop-height') set dragDropHeight(value: number) {\n    const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);\n\n    this._dragDropHeight = dragDropHeight < PoUploadDragDropHeightMin ? PoUploadDragDropHeightMin : dragDropHeight;\n  }\n\n  get dragDropHeight() {\n    return this._dragDropHeight;\n  }\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  focus() {\n    this.dragDropAreaComponent.focus();\n  }\n\n  onAreaElement(element: HTMLElement) {\n    this.areaElement = element;\n\n    // necessÃ¡rio para nÃ£o ocorrer o erro HasBeenChecked\n    this.changeDetector.detectChanges();\n  }\n\n  onDragLeave() {\n    this.isDragOver = false;\n  }\n\n  onDragOver() {\n    this.isDragOver = true;\n  }\n\n  onFileChange(files) {\n    this.isDragOver = false;\n\n    this.fileChange.emit(files);\n  }\n}\n","import { Component, ElementRef, forwardRef, Renderer2, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { formatBytes, isMobile } from '../../../utils/util';\nimport { PoButtonComponent } from './../../po-button/po-button.component';\nimport { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';\nimport { PoNotificationService } from '../../../services/po-notification/po-notification.service';\nimport { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';\n\nimport { PoUploadBaseComponent } from './po-upload-base.component';\nimport { PoUploadDragDropComponent } from './po-upload-drag-drop/po-upload-drag-drop.component';\nimport { PoUploadFile } from './po-upload-file';\nimport { PoUploadService } from './po-upload.service';\nimport { PoUploadStatus } from './po-upload-status.enum';\n\n/**\n * @docsExtends PoUploadBaseComponent\n *\n * @example\n *\n * <example name=\"po-upload-basic\" title=\"PO Upload Basic\">\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.html\"> </file>\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-labs\" title=\"PO Upload Labs\">\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.html\"> </file>\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-resume\" title=\"PO Upload - Resume\">\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.html\"> </file>\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-rs\" title=\"PO Upload - Realize & Show\">\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.html\"> </file>\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-upload',\n  templateUrl: './po-upload.component.html',\n  providers: [\n    PoI18nPipe,\n    PoUploadService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoUploadComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoUploadComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoUploadComponent extends PoUploadBaseComponent implements AfterViewInit {\n  infoByUploadStatus: { [key: string]: { text: (percent?: number) => string; icon?: string } } = {\n    [PoUploadStatus.Uploaded]: {\n      text: () => this.literals.sentWithSuccess,\n      icon: 'po-icon-ok'\n    },\n    [PoUploadStatus.Error]: {\n      text: () => this.literals.errorOccurred\n    },\n    [PoUploadStatus.Uploading]: {\n      text: percent => percent + '%'\n    }\n  };\n\n  progressStatusByFileStatus = {\n    [PoUploadStatus.Uploaded]: PoProgressStatus.Success,\n    [PoUploadStatus.Error]: PoProgressStatus.Error\n  };\n\n  private calledByCleanInputValue: boolean = false;\n\n  @ViewChild('inputFile', { read: ElementRef, static: true }) private inputFile: ElementRef;\n  @ViewChild(PoUploadDragDropComponent) private poUploadDragDropComponent: PoUploadDragDropComponent;\n  @ViewChild('uploadButton') private uploadButton: PoButtonComponent;\n\n  constructor(\n    uploadService: PoUploadService,\n    public renderer: Renderer2,\n    private i18nPipe: PoI18nPipe,\n    private notification: PoNotificationService\n  ) {\n    super(uploadService);\n  }\n\n  get displayDragDrop(): boolean {\n    return this.dragDrop && !isMobile();\n  }\n\n  get displaySendButton(): boolean {\n    const currentFiles = this.currentFiles || [];\n    return !this.hideSendButton && !this.autoUpload && currentFiles.length > 0 && this.hasFileNotUploaded;\n  }\n\n  get selectFileButtonLabel() {\n    if (this.canHandleDirectory) {\n      return this.literals.selectFolder;\n    } else if (this.isMultiple) {\n      return this.literals.selectFiles;\n    } else {\n      return this.literals.selectFile;\n    }\n  }\n\n  get hasMoreThanFourItems(): boolean {\n    return this.currentFiles && this.currentFiles.length > 4;\n  }\n\n  get hasMultipleFiles(): boolean {\n    return this.currentFiles && this.currentFiles.length > 1;\n  }\n\n  get hasFileNotUploaded(): boolean {\n    if (Array.isArray(this.currentFiles)) {\n      return this.currentFiles.some(file => file.status !== PoUploadStatus.Uploaded);\n    }\n\n    return false;\n  }\n\n  get isDisabled(): boolean {\n    const currentFiles = this.currentFiles || [];\n\n    return !!(\n      this.hasAnyFileUploading(currentFiles) ||\n      !this.url ||\n      this.disabled ||\n      this.isExceededFileLimit(currentFiles.length)\n    );\n  }\n\n  get maxFiles(): number {\n    return this.isMultiple && this.fileRestrictions && this.fileRestrictions.maxFiles;\n  }\n\n  cancel(file: PoUploadFile) {\n    if (file.status === PoUploadStatus.Uploading) {\n      return this.stopUpload(file);\n    }\n\n    this.removeFile(file);\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  /** MÃ©todo responsÃ¡vel por **limpar** o(s) arquivo(s) selecionado(s). */\n  clear() {\n    this.currentFiles = undefined;\n    this.updateModel([]);\n    this.cleanInputValue();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoUploadComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;\n   *\n   * focusUpload() {\n   *   this.upload.focus();\n   * }\n   * ```\n   */\n  focus() {\n    if (!this.disabled) {\n      if (this.uploadButton) {\n        this.uploadButton.focus();\n        return;\n      }\n\n      if (this.displayDragDrop) {\n        this.poUploadDragDropComponent.focus();\n      }\n    }\n  }\n\n  // Verifica se existe algum arquivo sendo enviado ao serviÃ§o.\n  hasAnyFileUploading(files: Array<PoUploadFile>) {\n    if (files && files.length) {\n      return files.some(file => file.status === PoUploadStatus.Uploading);\n    }\n\n    return false;\n  }\n\n  // retorna se o status do arquivo Ã© diferente de enviado\n  isAllowCancelEvent(status: PoUploadStatus) {\n    return status !== PoUploadStatus.Uploaded;\n  }\n\n  // FunÃ§Ã£o disparada ao selecionar algum arquivo.\n  onFileChange(event): void {\n    // necessÃ¡rio este tratamento quando para IE, pois nele o change Ã© disparado quando o campo Ã© limpado tambÃ©m\n    if (this.calledByCleanInputValue) {\n      this.calledByCleanInputValue = false;\n      return event.preventDefault();\n    }\n\n    const files = event.target.files;\n    this.updateFiles(files);\n\n    this.cleanInputValue();\n  }\n\n  onFileChangeDragDrop(files) {\n    this.updateFiles(files);\n  }\n\n  // Remove o arquivo passado por parÃ¢metro da lista dos arquivos correntes.\n  removeFile(file): void {\n    const index = this.currentFiles.indexOf(file);\n    this.currentFiles.splice(index, 1);\n\n    this.updateModel([...this.currentFiles]);\n  }\n\n  /** MÃ©todo responsÃ¡vel por **abrir** a janela para seleÃ§Ã£o de arquivo(s). */\n  selectFiles() {\n    this.calledByCleanInputValue = false;\n    this.inputFile.nativeElement.click();\n  }\n\n  sendFeedback(): void {\n    if (this.sizeNotAllowed > 0) {\n      const minFileSize = formatBytes(this.fileRestrictions.minFileSize);\n      const maxFileSize = formatBytes(this.fileRestrictions.maxFileSize);\n      const args = [this.sizeNotAllowed, minFileSize || '0', maxFileSize];\n      this.setPipeArguments('invalidSize', args);\n      this.sizeNotAllowed = 0;\n    }\n\n    if (this.extensionNotAllowed > 0) {\n      const allowedExtensionsFormatted = this.fileRestrictions.allowedExtensions.join(', ').toUpperCase();\n      const args = [this.extensionNotAllowed, allowedExtensionsFormatted];\n      this.setPipeArguments('invalidFormat', args);\n      this.extensionNotAllowed = 0;\n    }\n\n    if (this.quantityNotAllowed > 0) {\n      const args = [this.quantityNotAllowed];\n      this.setPipeArguments('invalidAmount', args);\n      this.quantityNotAllowed = 0;\n    }\n  }\n\n  /** MÃ©todo responsÃ¡vel por **enviar** o(s) arquivo(s) selecionado(s). */\n  sendFiles(): void {\n    if (this.currentFiles && this.currentFiles.length) {\n      this.uploadFiles(this.currentFiles);\n    }\n  }\n\n  setDirectoryAttribute(canHandleDirectory: boolean) {\n    if (canHandleDirectory) {\n      this.renderer.setAttribute(this.inputFile.nativeElement, 'webkitdirectory', 'true');\n    } else {\n      this.renderer.removeAttribute(this.inputFile.nativeElement, 'webkitdirectory');\n    }\n  }\n\n  // Caso o componente estiver no modo AutoUpload, o arquivo tambÃ©m serÃ¡ removido da lista.\n  stopUpload(file: PoUploadFile) {\n    this.uploadService.stopRequestByFile(file, () => {\n      if (this.autoUpload) {\n        this.removeFile(file);\n      } else {\n        this.stopUploadHandler(file);\n      }\n    });\n  }\n\n  trackByFn(index, file: PoUploadFile) {\n    return file.uid;\n  }\n\n  // Envia os arquivos passados por parÃ¢metro, exceto os que jÃ¡ foram enviados ao serviÃ§o.\n  uploadFiles(files: Array<PoUploadFile>) {\n    const filesFiltered = files.filter(file => file.status !== PoUploadStatus.Uploaded);\n\n    this.uploadService.upload(\n      this.url,\n      filesFiltered,\n      this.onUpload,\n      (file, percent): any => {\n        // UPLOADING\n        this.uploadingHandler(file, percent);\n      },\n      (file, eventResponse): any => {\n        // SUCCESS\n        this.responseHandler(file, PoUploadStatus.Uploaded);\n        this.onSuccess.emit(eventResponse);\n      },\n      (file, eventError): any => {\n        // Error\n        this.responseHandler(file, PoUploadStatus.Error);\n        this.onError.emit(eventError);\n      }\n    );\n  }\n\n  private cleanInputValue() {\n    this.calledByCleanInputValue = true;\n    this.inputFile.nativeElement.value = '';\n  }\n\n  // funÃ§Ã£o disparada na resposta do sucesso ou error\n  private responseHandler(file: PoUploadFile, status: PoUploadStatus) {\n    file.status = status;\n    file.percent = 100;\n  }\n\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe de acordo com a restriÃ§Ã£o.\n  private setPipeArguments(literalAttributes: string, literalArguments?) {\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], literalArguments);\n    this.notification.information(pipeArguments);\n  }\n\n  // FunÃ§Ã£o disparada ao parar um envio de arquivo.\n  private stopUploadHandler(file: PoUploadFile) {\n    file.status = PoUploadStatus.None;\n    file.percent = 0;\n  }\n\n  private updateFiles(files) {\n    this.currentFiles = this.parseFiles(files);\n\n    this.updateModel([...this.currentFiles]);\n\n    if (this.autoUpload) {\n      this.uploadFiles(this.currentFiles);\n    }\n  }\n\n  // Atualiza o ngModel para os arquivos passados por parÃ¢metro.\n  private updateModel(files: Array<PoUploadFile>) {\n    const modelFiles: Array<PoUploadFile> = this.mapCleanUploadFiles(files);\n    this.onModelChange ? this.onModelChange(modelFiles) : this.ngModelChange.emit(modelFiles);\n  }\n\n  // FunÃ§Ã£o disparada enquanto o arquivo estÃ¡ sendo enviado ao serviÃ§o.\n  private uploadingHandler(file: any, percent: number) {\n    file.status = PoUploadStatus.Uploading;\n    file.percent = percent;\n  }\n\n  // retorna os objetos do array sem as propriedades: percent e displayName\n  private mapCleanUploadFiles(files: Array<PoUploadFile>): Array<PoUploadFile> {\n    const mapedByUploadFile = progressFile => {\n      const { percent, displayName, ...uploadFile } = progressFile;\n\n      return uploadFile;\n    };\n\n    return files.map(mapedByUploadFile);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\n\nimport { convertImageToBase64, isExternalLink, isIE } from '../../../../utils/util';\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\n\nimport { PoModalAction, PoModalComponent } from '../../../po-modal';\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\nimport { PoUploadComponent } from '../../po-upload/po-upload.component';\nimport { PoUploadFileRestrictions } from '../../po-upload/interfaces/po-upload-file-restriction.interface';\n\nconst uploadRestrictions = ['.apng', '.bmp', '.gif', '.ico', '.jpeg', '.jpg', '.png', '.svg'];\n\n@Component({\n  selector: 'po-rich-text-modal',\n  templateUrl: './po-rich-text-modal.component.html'\n})\nexport class PoRichTextModalComponent {\n  modalType: PoRichTextModalType;\n  savedCursorPosition;\n  selection = document.getSelection();\n  uploadModel: Array<any>;\n  uploadRestrictions: PoUploadFileRestrictions = {\n    allowedExtensions: uploadRestrictions\n  };\n  urlImage: string;\n  urlLink: string;\n  urlLinkText: string;\n\n  private isLinkEditing: boolean;\n  private isSelectedLink: boolean;\n  private linkElement: any;\n  private savedSelection: Range | null;\n\n  readonly literals = {\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\n  };\n\n  modalCancelAction: PoModalAction = {\n    label: this.literals.cancel,\n    action: () => {\n      this.modal.close();\n      this.command.emit();\n      this.retrieveCursorPosition();\n      this.cleanUpFields();\n    }\n  };\n\n  modalConfirmAction: PoModalAction = {\n    label: this.literals.insert,\n    disabled: false,\n    action: () => this.insertElementRef()\n  };\n\n  modalLinkConfirmAction = {\n    label: this.linkConfirmAction(),\n    disabled: true,\n    action: () => (this.isLinkEditing ? this.toEditLink() : this.toInsertLink(this.urlLink, this.urlLinkText))\n  };\n\n  get modalTitle(): string {\n    if (this.modalType === 'image') {\n      return this.literals.insertImage;\n    }\n\n    return this.linkConfirmAction();\n  }\n\n  get isUploadValid(): boolean {\n    return !!(this.uploadModel && this.uploadModel.length);\n  }\n\n  get isUrlValid(): boolean {\n    return !!this.urlImage && this.modalImageForm && this.modalImageForm.valid;\n  }\n\n  get modalPrimaryAction() {\n    return this.modalType === 'image' ? this.modalConfirmAction : this.modalLinkConfirmAction;\n  }\n\n  @ViewChild('modal', { static: true }) modal: PoModalComponent;\n\n  @ViewChild('modalImageForm') modalImageForm: NgForm;\n\n  @ViewChild('upload', { static: true }) upload: PoUploadComponent;\n\n  @ViewChild('modalImage', { static: true }) modalImage: ElementRef;\n\n  @ViewChild('modalLink', { static: true }) modalLink: PoModalComponent;\n\n  @ViewChild('modalLinkForm') modalLinkForm: NgForm;\n\n  @Output('p-command') command = new EventEmitter<string | { command: string; value: string | any }>();\n\n  @Output('p-link-editing') linkEditing = new EventEmitter<any>();\n\n  constructor(private languageService: PoLanguageService) {}\n\n  async convertToBase64() {\n    if (this.isUploadValid) {\n      const uploadImage = this.uploadModel[0].rawFile;\n      return await convertImageToBase64(uploadImage);\n    }\n  }\n\n  linkConfirmAction(): string {\n    return this.isLinkEditing ? this.literals.editLink : this.literals.insertLink;\n  }\n\n  emitCommand(value) {\n    let command: string;\n    if (value && this.modalType === PoRichTextModalType.Image) {\n      command = 'insertImage';\n      this.command.emit({ command, value });\n    }\n  }\n\n  formModelValidate() {\n    return (this.modalLinkConfirmAction.disabled = this.modalLinkForm && this.modalLinkForm.invalid);\n  }\n\n  async insertElementRef() {\n    let uploadImage: string;\n\n    if (this.modalType === PoRichTextModalType.Image && !this.urlImage) {\n      uploadImage = await this.convertToBase64();\n    }\n\n    this.retrieveCursorPosition();\n    this.modal.close();\n\n    if (this.isUrlValid || this.isUploadValid) {\n      this.emitCommand(this.urlImage || uploadImage);\n    }\n    this.cleanUpFields();\n  }\n\n  openModal(type: PoRichTextModalType) {\n    this.modalType = type;\n\n    this.saveCursorPosition();\n\n    if (this.modalType === PoRichTextModalType.Link) {\n      this.prepareModalForLink();\n      this.modalLinkConfirmAction.label = this.linkConfirmAction();\n    }\n\n    this.modal.open();\n  }\n\n  selectedLink(event) {\n    this.isSelectedLink = !!event;\n    this.linkElement = event;\n  }\n\n  private checkIfIsEmpty(urlLink: string, urlLinkText: string) {\n    return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;\n  }\n\n  private cleanUpFields() {\n    this.urlImage = undefined;\n    this.urlLink = undefined;\n    this.urlLinkText = undefined;\n    this.uploadModel = undefined;\n    this.isLinkEditing = false;\n    this.isSelectedLink = false;\n    this.linkElement = undefined;\n  }\n\n  private formReset(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private prepareModalForLink() {\n    this.saveSelectionText();\n    if (this.modalLinkForm) {\n      this.formReset(this.modalLinkForm.control);\n    }\n\n    setTimeout(() => {\n      this.formModelValidate();\n    });\n\n    if (this.isSelectedLink) {\n      this.isLinkEditing = true;\n      this.setLinkEditableForModal();\n    }\n\n    this.linkEditing.emit(this.isLinkEditing);\n  }\n\n  private restoreSelection() {\n    if (this.savedSelection) {\n      if (this.selection) {\n        this.selection.removeAllRanges();\n        this.selection.addRange(this.savedSelection);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private retrieveCursorPosition() {\n    this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);\n  }\n\n  private saveCursorPosition() {\n    this.savedCursorPosition = [this.selection.focusNode, this.selection.focusOffset];\n  }\n\n  private saveSelectionText() {\n    if (this.selection.anchorNode !== null) {\n      this.savedSelection = this.selection.getRangeAt(0);\n      this.urlLinkText = this.selection.toString();\n    } else {\n      return null;\n    }\n  }\n\n  private setLinkEditableForModal() {\n    this.urlLinkText = this.linkElement.innerText;\n    this.urlLink = this.linkElement.getAttribute('href');\n  }\n\n  private toEditLink() {\n    if (isIE()) {\n      this.linkElement.parentNode.removeChild(this.linkElement);\n    } else {\n      this.linkElement.remove();\n    }\n\n    this.toInsertLink(this.urlLink, this.urlLinkText);\n  }\n\n  private toInsertLink(urlLink, urlLinkText) {\n    this.modal.close();\n    this.restoreSelection();\n\n    const urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);\n    const urlAsExternalLink = isExternalLink(urlLink) ? urlLink : `http://${urlLink}`;\n\n    const command: string = 'InsertHTML';\n\n    const value = { urlLink: urlAsExternalLink, urlLinkText: urlLinkTextValue };\n\n    this.command.emit({ command, value });\n\n    this.cleanUpFields();\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isIE } from '../../../../utils/util';\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\n\nimport { PoButtonGroupItem } from '../../../po-button-group';\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\nimport { PoRichTextToolbarButtonGroupItem } from '../interfaces/po-rich-text-toolbar-button-group-item.interface';\n\nconst poRichTextDefaultColor = '#000000';\n\n@Component({\n  selector: 'po-rich-text-toolbar',\n  templateUrl: './po-rich-text-toolbar.component.html'\n})\nexport class PoRichTextToolbarComponent implements AfterViewInit {\n  private _readonly: boolean;\n\n  readonly literals = {\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\n  };\n\n  alignButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'justifyleft',\n      icon: 'po-icon-align-left',\n      tooltip: this.literals.left,\n      action: this.emitAlignCommand.bind(this, 'justifyleft'),\n      selected: true\n    },\n    {\n      command: 'justifycenter',\n      icon: 'po-icon-align-center',\n      tooltip: this.literals.center,\n      action: this.emitAlignCommand.bind(this, 'justifycenter')\n    },\n    {\n      command: 'justifyright',\n      icon: 'po-icon-align-right',\n      tooltip: this.literals.right,\n      action: this.emitAlignCommand.bind(this, 'justifyright')\n    },\n    {\n      command: 'justifyfull',\n      icon: 'po-icon-align-justify',\n      tooltip: this.literals.justify,\n      action: this.emitAlignCommand.bind(this, 'justifyfull')\n    }\n  ];\n\n  formatButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'bold',\n      icon: 'po-icon-text-bold',\n      tooltip: this.literals.bold,\n      action: this.emitCommand.bind(this, 'bold')\n    },\n    {\n      command: 'italic',\n      icon: 'po-icon-text-italic',\n      tooltip: this.literals.italic,\n      action: this.emitCommand.bind(this, 'italic')\n    },\n    {\n      command: 'underline',\n      icon: 'po-icon-text-underline',\n      tooltip: this.literals.underline,\n      action: this.emitCommand.bind(this, 'underline')\n    }\n  ];\n\n  listButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'insertUnorderedList',\n      icon: 'po-icon-list',\n      tooltip: this.literals.unorderedList,\n      action: this.emitCommand.bind(this, 'insertUnorderedList')\n    }\n  ];\n\n  linkButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'Createlink',\n      icon: 'po-icon-link',\n      tooltip: `${this.literals.insertLink} (Ctrl + K)`,\n      action: () => this.modal.emit(PoRichTextModalType.Link)\n    }\n  ];\n\n  mediaButtons: Array<PoButtonGroupItem> = [\n    {\n      tooltip: this.literals.insertImage,\n      icon: 'po-icon-picture',\n      action: () => this.modal.emit(PoRichTextModalType.Image)\n    }\n  ];\n\n  @ViewChild('colorPickerInput', { read: ElementRef }) colorPickerInput: ElementRef;\n\n  @ViewChild('toolbarElement', { static: true }) toolbarElement: ElementRef;\n\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = value;\n    this.toggleDisableButtons(this._readonly);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  @Output('p-command') command = new EventEmitter<string | { command: string; value: string }>();\n\n  @Output('p-modal') modal = new EventEmitter<any>();\n\n  get isInternetExplorer() {\n    return isIE();\n  }\n\n  constructor(private languageService: PoLanguageService) {}\n\n  ngAfterViewInit() {\n    this.removeButtonFocus();\n    this.setColorInColorPicker(poRichTextDefaultColor);\n  }\n\n  changeTextColor(value) {\n    const command = 'foreColor';\n\n    this.command.emit({ command, value });\n  }\n\n  setButtonsStates(obj: { commands: Array<string>; hexColor: string }) {\n    if (!this.readonly) {\n      this.alignButtons.forEach(button => (button.selected = obj.commands.includes(button.command)));\n      this.formatButtons.forEach(button => (button.selected = obj.commands.includes(button.command)));\n      this.listButtons[0].selected = obj.commands.includes(this.listButtons[0].command);\n      this.linkButtons[0].selected = obj.commands.includes(this.linkButtons[0].command);\n      this.setColorInColorPicker(obj.hexColor);\n    }\n  }\n\n  shortcutTrigger() {\n    this.modal.emit(PoRichTextModalType.Link);\n  }\n\n  private emitAlignCommand(command: string) {\n    const index = this.alignButtons.findIndex(btn => btn.command === command);\n\n    if (this.alignButtons[index].selected) {\n      this.alignButtons[index].selected = false;\n    }\n\n    this.command.emit(command);\n  }\n\n  private emitCommand(command: string) {\n    this.command.emit(command);\n  }\n\n  private removeButtonFocus() {\n    const buttons = this.toolbarElement.nativeElement.querySelectorAll('button');\n\n    buttons.forEach(button => button.setAttribute('tabindex', '-1'));\n  }\n\n  private setColorInColorPicker(color: string): void {\n    this.colorPickerInput.nativeElement.value = color;\n  }\n\n  private toggleDisableButtons(state: boolean) {\n    this.alignButtons.forEach(button => (button.disabled = state));\n    this.formatButtons.forEach(button => (button.disabled = state));\n    this.listButtons[0].disabled = state;\n    this.linkButtons[0].disabled = state;\n    this.mediaButtons[0].disabled = state;\n  }\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @example\n *\n * <example name=\"po-input-basic\" title=\"PO Input Basic\">\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.html\"> </file>\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-labs\" title=\"PO Input Labs\">\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.html\"> </file>\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-reactive-form\" title=\"PO Input - Reactive Form\">\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-input',\n  templateUrl: './po-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoInputComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoInputComponent extends PoInputGeneric {\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { ElementRef, Directive } from '@angular/core';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n@Directive()\nexport abstract class PoNumberBaseComponent extends PoInputGeneric {\n  type = 'number';\n\n  /* istanbul ignore next */\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      let value = e.target.value;\n      const valueMaxlength = this.validMaxLength(this.maxlength, value);\n\n      if (value !== valueMaxlength) {\n        value = valueMaxlength;\n\n        this.inputEl.nativeElement.value = value;\n      }\n\n      this.callOnChange(this.formatNumber(value));\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    if (maxlength && value.length > maxlength) {\n      const substringValue = value.toString().substring(0, maxlength);\n\n      if (substringValue && this.isEndWithDot(substringValue)) {\n        return substringValue.toString().substring(0, maxlength - 1);\n      }\n\n      return substringValue;\n    }\n\n    return value;\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.onChangePropagate(this.objMask.valueToModel);\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else {\n        // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n\n    this.changeModel.emit(value);\n  }\n\n  private isEndWithDot(value: string) {\n    return value && value.lastIndexOf('.') === value.length - 1;\n  }\n\n  private formatNumber(value) {\n    return value ? Number(value) : null;\n  }\n}\n","import { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { minFailed, maxFailed } from '../validators';\n\nimport { PoNumberBaseComponent } from './po-number-base.component';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-number Ã© um input especÃ­fico para receber apenas nÃºmeros.\n * Ã possÃ­vel configurar um valor mÃ­nimo, mÃ¡ximo e um step com p-min, p-max e p-step,\n * respectivamente.\n *\n * @example\n *\n * <example name=\"po-number-basic\" title=\"PO Number Basic\">\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-labs\" title=\"PO Number Labs\">\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-calculate\" title=\"PO Number - Calculate\">\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-number',\n  templateUrl: './po-number.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoNumberComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoNumberComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoNumberComponent extends PoNumberBaseComponent {\n  /** Valor mÃ­nimo. */\n  min?: number;\n  @Input('p-min') set setMin(min: string) {\n    const parsedInt = parseInt(min, 10);\n    this.min = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /** Valor mÃ¡ximo. */\n  max?: number;\n  @Input('p-max') set setMax(max: string) {\n    const parsedInt = parseInt(max, 10);\n    this.max = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Intervalo.\n   *\n   * @default 1\n   */\n  @Input('p-step') step?: string = '1';\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any } {\n    if (minFailed(this.min, abstractControl.value)) {\n      return {\n        min: {\n          valid: false\n        }\n      };\n    }\n\n    if (maxFailed(this.max, abstractControl.value)) {\n      return {\n        max: {\n          valid: false\n        }\n      };\n    }\n\n    return null;\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-password Ã© um input especÃ­fico para senhas. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-password-basic\" title=\"PO Password Basic\">\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.html\"> </file>\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-labs\" title=\"PO Password Labs\">\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.html\"> </file>\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-reset\" title=\"PO Password - Reset\">\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.html\"> </file>\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-password',\n  templateUrl: './po-password.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoPasswordComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoPasswordComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoPasswordComponent extends PoInputGeneric {\n  private _hidePasswordPeek?: boolean = false;\n\n  type = 'password';\n  visiblePassword = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite esconder a funÃ§Ã£o de espiar a senha digitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-password-peek') set hidePasswordPeek(value: boolean) {\n    this._hidePasswordPeek = convertToBoolean(value);\n    if (value) {\n      this.visiblePassword = false;\n      this.type = 'password';\n    }\n  }\n\n  get hidePasswordPeek(): boolean {\n    return this._hidePasswordPeek;\n  }\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n\n  showPassword() {\n    this.visiblePassword = !this.visiblePassword;\n    this.type = this.type === 'password' ? 'text' : 'password';\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, removeDuplicatedOptions } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\n\nconst poRadioGroupColumnsDefaultLength: number = 6;\nconst poRadioGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-radio-group` deve ser utilizado para disponibilizar mÃºltiplas opÃ§Ãµes ao usuÃ¡rio, permitindo a ele que\n * selecione apenas uma delas. Seu uso Ã© recomendado para um nÃºmero pequeno de opÃ§Ãµes, caso contrÃ¡rio, recomenda-se o uso\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\n *\n * Este nÃ£o Ã© um componente de multiseleÃ§Ã£o, se for este o caso, deve-se utilizar o\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\n *\n * > Ao passar um valor para o *model* que nÃ£o esteja na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n */\n@Directive()\nexport abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\n  private _columns: number = poRadioGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _options: Array<PoRadioGroupOption>;\n  private _required?: boolean = false;\n\n  mdColumns: number = poRadioGroupColumnsDefaultLength;\n  value: any;\n\n  private onChangePropagate: any = null;\n  private validatorChange;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Nome das opÃ§Ãµes. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a quantidade de colunas para exibiÃ§Ã£o das opÃ§Ãµes.\n   *\n   * **ConsideraÃ§Ãµes:**\n   *  - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   *  - O nÃºmero mÃ¡ximo de colunas Ã© invariÃ¡vel nas seguintes resoluÃ§Ãµes:\n   *    + `sm`: `1`\n   *    + `md`: `2`\n   *\n   * @default `2`\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poRadioGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Lista de opÃ§Ãµes que serÃ£o exibidas.\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\n   */\n  @Input('p-options') set options(value: Array<PoRadioGroupOption>) {\n    this._options = value;\n    removeDuplicatedOptions(this.options);\n  }\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // Deve retornar o valor elemento que contÃ©m o valor passado por parÃ¢metro\n  abstract getElementByValue(value: any): any;\n\n  // FunÃ§Ã£o que controla quando deve ser emitido onChange e atualiza o Model\n  changeValue(changedValue: any) {\n    if (this.onChangePropagate) {\n      this.onChangePropagate(changedValue);\n    }\n\n    if (this.value !== changedValue) {\n      this.change.emit(changedValue);\n    }\n\n    this.value = changedValue;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n\n  registerOnTouched(fn: any) {}\n\n  registerOnValidatorChange(fn: any) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  writeValue(modelValue: any) {\n    this.value = modelValue;\n\n    // Busca radio com o valor especificado\n    const element = this.getElementByValue(modelValue);\n    if (!element && this.onChangePropagate) {\n      this.value = undefined;\n      this.onChangePropagate(this.value);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poRadioGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poRadioGroupColumnsDefaultLength;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  Input,\n  IterableDiffers,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\n\nimport { PoRadioGroupBaseComponent } from './po-radio-group-base.component';\n\n/**\n * @docsExtends PoRadioGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-radio-group-basic\" title=\"PO Radio Group Basic\">\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-labs\" title=\"PO Radio Group Labs\">\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator\" title=\"PO Radio Group - Translator\">\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator-reactive-form\" title=\"PO Radio Group - Translator Reactive Form\">\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-radio-group',\n  templateUrl: './po-radio-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoRadioGroupComponent extends PoRadioGroupBaseComponent implements AfterViewInit, DoCheck {\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n  @ViewChildren('inputRadio') radioLabels: QueryList<ElementRef>;\n\n  differ: any;\n\n  constructor(differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  eventClick(value: any, disabled: any) {\n    if (!disabled) {\n      this.changeValue(value);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRadioGroupComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoRadioGroupComponent, { static: true }) radio: PoRadioGroupComponent;\n   *\n   * focusRadio() {\n   *   this.radio.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.radioLabels && !this.disabled) {\n      const radioLabel = this.radioLabels.find((_, index) => !this.options[index].disabled);\n\n      if (radioLabel) {\n        radioLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  getElementByValue(value) {\n    return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);\n  }\n\n  onKeyUp(event: KeyboardEvent, value) {\n    const key = event.keyCode || event.which;\n\n    if (this.isArrowKey(key)) {\n      this.changeValue(value);\n    }\n  }\n\n  private isArrowKey(key: number) {\n    return key >= 37 && key <= 40;\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoSelectOption } from './po-select-option.interface';\n\n/**\n * @description\n *\n * O componente po-select exibe uma lista de valores e permite que o usuÃ¡rio selecione um desses valores.\n * Os valores listados podem ser fixos ou dinÃ¢micos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\n * O po-select nÃ£o permite que o usuÃ¡rio informe um valor diferente dos valores listados, isso garante a consistÃªncia da informaÃ§Ã£o.\n * O po-select nÃ£o permite que sejam passados valores duplicados, undefined e null para as opÃ§Ãµes, excluindo-os da lista.\n *\n * > Ao passar um valor para o _model_ que nÃ£o estÃ¡ na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n *\n * TambÃ©m existe a possibilidade de utilizar um _template_ para a exibiÃ§Ã£o dos itens da lista,\n * veja mais em **[p-select-option-template](/documentation/po-select-option-template)**.\n */\n@Directive()\nexport abstract class PoSelectBaseComponent implements ControlValueAccessor, Validator {\n  private _disabled?: boolean = false;\n  private _options: Array<PoSelectOption>;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n\n  private onValidatorChange;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   * > Caso mais de um elemento seja configurado com essa propriedade,\n   * o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Adiciona uma label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto nenhuma opÃ§Ã£o estiver selecionada. */\n  @Input('p-placeholder') placeholder?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * Nesta propriedade deve ser definido uma coleÃ§Ã£o de objetos que implementam a interface PoSelectOption.\n   * Caso esta lista estiver vazia, o model serÃ¡ undefined.\n   */\n  @Input('p-options') set options(options: Array<PoSelectOption>) {\n    this._options = options;\n    removeDuplicatedOptions(this._options);\n    removeUndefinedAndNullOptions(this._options);\n    this.onUpdateOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: string | boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente para leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required')\n  set required(required: string | boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n  get required() {\n    return this._required;\n  }\n\n  changeDetector: ChangeDetectorRef;\n  onModelChange: any;\n  onModelTouched: any;\n  readyToValidation: boolean = false;\n\n  protected clickoutListener: () => void;\n\n  constructor(public element: ElementRef, changeDetector: ChangeDetectorRef) {\n    this.element = element;\n    this.changeDetector = changeDetector;\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return this.onModelChange ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  onChange(value) {\n    this.change.emit(value);\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this._required, this._disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    return null;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.onValidatorChange) {\n      this.onValidatorChange();\n    }\n  }\n\n  abstract onUpdateOptions(): void;\n\n  abstract updateModel(selectOption: PoSelectOption): void;\n\n  abstract writeValue(value: any): void;\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSelectComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista suspensa do componente.\n *\n * > Quando utilizada em _mobile_ serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`\n * dentro da tag `po-select`.\n *\n * Para obter a referÃªncia do item atual, use `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <ng-template p-select-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-select>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <div *p-select-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-select>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-select-option-template]'\n})\nexport class PoSelectOptionTemplateDirective {\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChild,\n  Component,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  IterableDiffers,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { isMobile, removeDuplicatedOptions, removeUndefinedAndNullOptions, validValue } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoSelectBaseComponent } from './po-select-base.component';\nimport { PoSelectOption } from './po-select-option.interface';\nimport { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';\n\nconst poSelectContentOffset = 8;\nconst poSelectContentPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoSelectBaseComponent\n *\n * @example\n *\n * <example name=\"po-select-basic\" title=\"PO Select Basic\">\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.html\"> </file>\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-labs\" title=\"PO Select Labs\">\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.html\"> </file>\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-customer-registration\" title=\"PO Select - Customer registration\">\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.html\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts\"> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>\n * </example>\n */\n@Component({\n  selector: 'po-select',\n  templateUrl: './po-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoSelectComponent extends PoSelectBaseComponent implements AfterViewInit, DoCheck {\n  displayValue;\n  isMobile: any = isMobile();\n  modelValue: any;\n  open: boolean = false;\n  selectedValue: any;\n  selectIcon: string = 'po-icon-arrow-down';\n  scrollPosition: number;\n\n  private differ: any;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ContentChild(PoSelectOptionTemplateDirective, { static: true })\n  selectOptionTemplate: PoSelectOptionTemplateDirective;\n\n  @ViewChild('contentList', { read: ElementRef, static: true }) contentList: ElementRef;\n  @ViewChild('icon', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('select', { read: ElementRef, static: true }) selectElement: ElementRef;\n  @ViewChild('selectButton', { read: ElementRef, static: true }) selectButtonElement: ElementRef;\n\n  constructor(\n    element: ElementRef,\n    changeDetector: ChangeDetectorRef,\n    differs: IterableDiffers,\n    public renderer: Renderer2,\n    private controlPosition: PoControlPositionService\n  ) {\n    super(element, changeDetector);\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  get isInvisibleSelectNative() {\n    return this.readonly && this.isMobile;\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown($event?: any) {\n    const charCode = $event.which || $event.keyCode;\n\n    // Tratamentos para quando o readonly for ativado.\n    if (this.readonly) {\n      // deve matar o evento do teclado devido a alterar o valor do model mesmo com os options fechados\n      if (charCode !== PoKeyCodeEnum.tab) {\n        this.disableDefaultEventAndToggleButton();\n        $event.preventDefault();\n      }\n      return;\n    }\n\n    // Seleciona os itens com as teclas \"up\" e \"down\"\n    if ((!this.open || $event.altKey) && (charCode === PoKeyCodeEnum.arrowDown || charCode === PoKeyCodeEnum.arrowUp)) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Abre o po-select com as teclas \"enter\" e \"espaÃ§o\"\n    if (charCode === PoKeyCodeEnum.enter || charCode === PoKeyCodeEnum.space) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Fecha o po-select com a tecla \"tab\"\n    if (this.open && charCode === PoKeyCodeEnum.tab) {\n      $event.preventDefault();\n      this.toggleButton();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n      removeUndefinedAndNullOptions(this.options);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSelectComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;\n   *\n   * focusSelect() {\n   *   this.select.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.selectElement.nativeElement.focus();\n    }\n  }\n\n  hideDropDown() {\n    this.selectIcon = 'po-icon-arrow-down';\n    this.selector('.po-select-container').classList.remove('po-select-show');\n    this.open = false;\n\n    this.changeDetector.markForCheck();\n    this.selectElement.nativeElement.focus();\n\n    this.removeListeners();\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) || (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  onOptionClick(option: PoSelectOption) {\n    this.updateModel(option);\n    this.toggleButton();\n  }\n\n  // Altera o valor ao selecionar um item.\n  onSelectChange(value: any) {\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        this.updateModel(optionFound);\n        this.setScrollPosition(optionFound.value);\n      }\n    }\n  }\n\n  onUpdateOptions() {\n    if (this.modelValue) {\n      this.onSelectChange(this.modelValue);\n    }\n  }\n\n  scrollValue(index, clientHeight) {\n    const heightScrollValue: number = index * this.getSelectItemHeight();\n\n    return (this.scrollPosition = heightScrollValue > clientHeight ? heightScrollValue : 0);\n  }\n\n  selector(query: string): Element {\n    return this.element.nativeElement.querySelector(query);\n  }\n\n  toggleButton(): void {\n    this.open ? this.hideDropDown() : this.showDropdown();\n  }\n\n  // Atualiza valores\n  updateModel(option: PoSelectOption): void {\n    if (this.selectedValue !== option.value) {\n      this.selectedValue = option.value;\n      this.selectElement.nativeElement.value = option.value;\n      this.callModelChange(option.value);\n      this.displayValue = option.label;\n      this.onChange(option.value);\n    }\n  }\n\n  // Esconde Content do Select quando for clicado fora\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (\n      !this.selectButtonElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target)\n    ) {\n      this.hideDropDown();\n    }\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n    const optionFound: PoSelectOption = this.findOptionValue(value);\n\n    if (optionFound) {\n      this.selectElement.nativeElement.value = optionFound.value;\n      this.selectedValue = optionFound.value;\n      this.displayValue = optionFound.label;\n      this.setScrollPosition(optionFound.value);\n    } else if (validValue(this.selectedValue)) {\n      this.selectElement.nativeElement.value = undefined;\n      this.callModelChange(undefined);\n      this.selectedValue = undefined;\n      this.displayValue = undefined;\n    }\n\n    this.modelValue = value;\n    this.changeDetector.detectChanges();\n  }\n\n  // MÃ©todo necessÃ¡rio para bloquear o evento default do select nativo.\n  // Ao utilizar event.preventDefault(), nos navegadores Firefox e IE o mesmo nÃ£o cancela o evento.\n  private disableDefaultEventAndToggleButton() {\n    this.selectElement.nativeElement.style.display = 'none';\n\n    setTimeout(() => {\n      this.selectElement.nativeElement.style.display = 'block';\n      this.toggleButton();\n    });\n  }\n\n  private findOptionValue(value: any) {\n    return this.options.find(option => this.isEqual(option.value, value));\n  }\n\n  private getSelectItemHeight() {\n    const selectItem = this.selector('div.po-select-item');\n\n    return selectItem && selectItem.clientHeight;\n  }\n\n  private initializeListeners() {\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropDown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  };\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    this.eventResizeListener();\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown() {\n    this.controlPosition.setElements(\n      this.contentList.nativeElement,\n      poSelectContentOffset,\n      this.selectButtonElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  }\n\n  private setScrollPosition(value: any) {\n    const ulDropdpwn = this.element.nativeElement.querySelector('ul.po-select-content');\n\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        const index = this.options.indexOf(optionFound);\n        ulDropdpwn.scrollTop = this.scrollValue(index, ulDropdpwn.clientHeight);\n      }\n    }\n  }\n\n  private showDropdown() {\n    if (!this.readonly) {\n      this.selectElement.nativeElement.focus();\n      this.selectIcon = 'po-icon-arrow-up';\n      this.selector('.po-select-container').classList.add('po-select-show');\n      this.open = true;\n      this.changeDetector.markForCheck();\n      this.setPositionDropdown();\n      this.initializeListeners();\n\n      if (this.options && this.options.length) {\n        this.setScrollPosition(this.selectedValue);\n      }\n    }\n  }\n}\n","/**\n * @usedBy PoInfoComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-info`.\n */\nexport enum PoInfoOrientation {\n  /** O valor serÃ¡ exibido na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe o valor na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\n\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @description\n *\n * O componente `po-switch` Ã© um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade especÃ­fica.\n *\n * Pode-se ligar ou deligar o botÃ£o utilizando a tecla de espaÃ§o ou o clique do mouse.\n *\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensÃ£o do usuÃ¡rio.\n *\n * > O componente nÃ£o altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\n */\n@Directive()\nexport class PoSwitchBaseComponent implements ControlValueAccessor {\n  private _disabled?: boolean = false;\n\n  propagateChange: any;\n  switchValue: boolean = false;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica o foco no elemento ao ser iniciado.\n   *  > Caso mais de um elemento seja configurado com essa propriedade,\n   * o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** RÃ³tulo exibido pelo componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * Texto exibido quando o valor do componente for `true`.\n   *\n   * @default `true`\n   */\n  labelOn?: string = 'true';\n  @Input('p-label-on') set setLabelOn(label: string) {\n    this.labelOn = label || 'true';\n  }\n\n  /**\n   * Texto exibido quando o valor do componente for `false`.\n   *\n   * @default `false`\n   */\n  labelOff?: string = 'false';\n  @Input('p-label-off') set setLabelOff(label: string) {\n    this.labelOff = label || 'false';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PosiÃ§Ã£o de exibiÃ§Ã£o do rÃ³tulo.\n   *\n   * > Por padrÃ£o exibe Ã  direita.\n   */\n  labelPosition?: PoSwitchLabelPosition = PoSwitchLabelPosition.Right;\n  @Input('p-label-position') set setLabelPosition(position: PoSwitchLabelPosition) {\n    this.labelPosition = position in PoSwitchLabelPosition ? parseInt(<any>position, 10) : PoSwitchLabelPosition.Right;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue(value: any) {\n    if (this.switchValue !== value) {\n      this.switchValue = value;\n\n      if (this.propagateChange) {\n        this.propagateChange(value);\n      } else {\n        this.ngModelChange.emit(value);\n      }\n      this.change.emit(this.switchValue);\n    }\n  }\n\n  eventClick() {\n    if (!this.disabled) {\n      this.changeValue(!this.switchValue);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  writeValue(value: any): void {\n    if (value !== this.switchValue) {\n      this.switchValue = !!value;\n    }\n  }\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoSwitchBaseComponent } from './po-switch-base.component';\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @docsExtends PoSwitchBaseComponent\n *\n * @example\n *\n * <example name=\"po-switch-basic\" title=\"PO Switch Basic\">\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.html\"> </file>\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-labs\" title=\"PO Switch Labs\">\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.html\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order\" title=\"PO Switch - Order Summary\">\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.html\"> </file>\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order-reactive-form\" title=\"PO Switch - Order Summary Reactive Form\">\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-switch',\n  templateUrl: './po-switch.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSwitchComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoSwitchComponent extends PoSwitchBaseComponent implements AfterViewChecked, AfterViewInit {\n  @ViewChild('switchContainer', { static: true }) switchContainer: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSwitchComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;\n   *\n   * focusSwitch() {\n   *   this.switch.focus();\n   * }\n   * ```\n   */\n  focus() {\n    if (!this.disabled) {\n      this.switchContainer.nativeElement.focus();\n    }\n  }\n\n  getLabelPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left:\n        return 'left';\n      case PoSwitchLabelPosition.Right:\n        return 'right';\n      default:\n        return 'right';\n    }\n  }\n\n  getSwitchPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left:\n        return 'right';\n      case PoSwitchLabelPosition.Right:\n        return 'left';\n      default:\n        return 'left';\n    }\n  }\n\n  onKeyDown(event) {\n    if (event.which === 32 || event.keyCode === 32) {\n      event.preventDefault();\n      this.eventClick();\n    }\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../../utils/util';\nimport { maxlengpoailed, minlengpoailed, requiredFailed } from '../validators';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * Este Ã© um componente de entrada de dados que possibilita o preechimento com mÃºltiplas linhas.\n * Ã recomendado para observaÃ§Ãµes, detalhamentos e outras situaÃ§Ãµes onde o usuÃ¡rio deva preencher com um texto.\n *\n * Importante:\n *\n * - A propriedade `name` Ã© obrigatÃ³ria para que o formulÃ¡rio e o `model` funcionem corretamente. Do contrÃ¡rio, ocorrerÃ¡ um erro de\n * _Angular_, onde serÃ¡ necessÃ¡rio informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\n *\n * ```\n * <po-textarea\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-textarea>\n * ```\n */\n@Directive()\nexport abstract class PoTextareaBaseComponent implements ControlValueAccessor, Validator {\n  private _disabled: boolean = false;\n  private _maxlength: number;\n  private _minlength: number;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _rows: number = 3;\n\n  private modelLastUpdate: any;\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Placeholder, mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(readonly: boolean) {\n    this._readonly = convertToBoolean(readonly);\n  }\n\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o _input_ estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(minlength: number) {\n    this._minlength = convertToInt(minlength);\n    this.validateModel();\n  }\n\n  get minlength(): number {\n    return this._minlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(maxlength: number) {\n    this._maxlength = convertToInt(maxlength);\n    this.validateModel();\n  }\n\n  get maxlength(): number {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade de linhas que serÃ£o exibidas.\n   *\n   * @default `3`\n   */\n  @Input('p-rows') set rows(value: number) {\n    this._rows = isNaN(parseInt(<any>value, 10)) || value < 3 ? 3 : parseInt(<any>value, 10);\n  }\n  get rows(): number {\n    return this._rows;\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter<any>();\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  // FunÃ§Ãµes `registerOnChange`, `registerOnTouched` e `registerOnValidatorChange` implementadas referentes ao ControlValueAccessor\n  // usadas para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(func: any): void {\n    this.validatorChange = func;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false\n        }\n      };\n    }\n\n    if (minlengpoailed(this.minlength, abstractControl.value)) {\n      return {\n        minlength: {\n          valid: false\n        }\n      };\n    }\n\n    if (maxlengpoailed(this.maxlength, abstractControl.value)) {\n      return {\n        maxlength: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract writeValueModel(value: any): void;\n}\n","import { Component, ElementRef, forwardRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoTextareaBaseComponent } from './po-textarea-base.component';\n\n/**\n * @docsExtends PoTextareaBaseComponent\n *\n * @example\n *\n * <example name=\"po-textarea-basic\" title=\"PO Textarea Basic\" >\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.html\"> </file>\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-labs\" title=\"PO Textarea Labs\" >\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.html\"> </file>\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email\" title=\"PO Textarea - Email\" >\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email-reactive-form\" title=\"PO Textarea - Email Reactive Form\" >\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-textarea',\n  templateUrl: './po-textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoTextareaComponent extends PoTextareaBaseComponent implements AfterViewInit {\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  valueBeforeChange: any;\n  fireChange: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoTextareaComponent } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild(PoTextareaComponent, { static: true }) textarea: PoTextareaComponent;\n   *\n   * focusTextarea() {\n   *   this.textarea.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  writeValueModel(value: any): void {\n    if (this.inputEl) {\n      if (!value) {\n        // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      } else {\n        this.inputEl.nativeElement.value = value;\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return maxlength && value.length > maxlength ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnInput(event: any) {\n    const value = this.validMaxLength(this.maxlength, event.target.value);\n    this.callOnChange(value);\n    this.inputEl.nativeElement.value = value;\n  }\n\n  eventOnFocus() {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur() {\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    if (elementValue !== this.valueBeforeChange) {\n      this.change.emit(elementValue);\n    }\n  }\n}\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\nimport { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';\nimport { PoNotificationService } from '../../../../services/po-notification/po-notification.service';\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\n\n@Directive({\n  selector: '[p-upload-drag-drop]',\n  providers: [PoI18nPipe]\n})\nexport class PoUploadDragDropDirective {\n  timeout: any;\n\n  private files: Array<File>;\n  private invalidFileType: number;\n\n  @Input('p-area-element') areaElement: HTMLElement;\n\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Output('p-drag-leave') dragLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output('p-drag-over') dragOver: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private i18nPipe: PoI18nPipe, private notification: PoNotificationService) {}\n\n  @HostListener('document:dragleave', ['$event']) onDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.timeout = setTimeout(() => this.dragLeave.emit(), 30);\n  }\n\n  @HostListener('document:dragover', ['$event']) onDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    clearTimeout(this.timeout);\n\n    if (!this.disabled) {\n      this.dragOver.emit();\n    }\n  }\n\n  @HostListener('document:drop', ['$event']) onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.getFilesFromDataTransferItems(event);\n    this.dragLeave.emit();\n  }\n\n  private getFilesFromDataTransferItems(event: DragEvent) {\n    if (!this.disabled) {\n      this.invalidFileType = 0;\n      if (this.directoryCompatible) {\n        this.getOnlyDirectories(event.dataTransfer.items).then(() => {\n          this.sendFiles(event, this.files);\n        });\n      } else {\n        const files = this.getOnlyFiles(event.dataTransfer.files);\n        this.sendFiles(event, files);\n      }\n    }\n  }\n\n  // analisa as entradas recursivamente\n  private async getFilesFromEntry(entry) {\n    if (entry.isFile) {\n      const file = await this.readFile(entry);\n      return [file];\n    } else if (entry.isDirectory) {\n      return await this.readDirectory(entry);\n    }\n  }\n\n  private async getOnlyDirectories(dataTransferItems) {\n    const entries = [];\n\n    // lista todas as entradas antes de analisÃ¡-las\n    for (const item of dataTransferItems) {\n      entries.push(item.webkitGetAsEntry());\n    }\n\n    this.files = [];\n    for (const entry of entries) {\n      if (entry.isFile) {\n        this.invalidFileType++;\n      } else {\n        const newFiles = await this.getFilesFromEntry(entry);\n        this.files = this.files.concat(newFiles);\n      }\n    }\n  }\n\n  // return only files. If it is a directory, invalidFileType counts.\n  private getOnlyFiles(fileList: FileList): Array<File> {\n    return Array.from(fileList).reduce((newFiles, file) => {\n      if (file.type) {\n        return newFiles.concat(file);\n      } else {\n        this.invalidFileType++;\n      }\n      return newFiles;\n    }, []);\n  }\n\n  private readFile(entry) {\n    return new Promise(resolve => {\n      entry.file(file => {\n        resolve(file);\n      });\n    });\n  }\n\n  private async readDirectory(entry) {\n    const dirReader = entry.createReader();\n    let files = [];\n    let newFiles;\n\n    newFiles = await this.readDirectoryEntries(dirReader);\n    files = files.concat(newFiles);\n    return files;\n  }\n\n  private readDirectoryEntries(dirReader) {\n    return new Promise(resolve => {\n      dirReader.readEntries(async entries => {\n        let files = [];\n        for (const entry of entries) {\n          const itemFiles = await this.getFilesFromEntry(entry);\n          files = files.concat(itemFiles);\n        }\n        resolve(files);\n      });\n    });\n  }\n\n  private sendFeedback(invalidFiles: number) {\n    if (invalidFiles) {\n      this.setPipeArguments('invalidFileType', invalidFiles);\n    }\n  }\n\n  private sendFiles(event, files) {\n    if (this.areaElement.contains(event.target)) {\n      if (files.length > 0) {\n        this.fileChange.emit(files);\n      }\n\n      this.sendFeedback(this.invalidFileType);\n    } else {\n      const invalidDropAreaArg = this.directoryCompatible ? this.literals.folders : this.literals.files;\n      this.setPipeArguments('invalidDropArea', invalidDropAreaArg);\n    }\n  }\n\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe.\n  private setPipeArguments(literalAttributes: string, args?) {\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], args);\n    this.notification.information(pipeArguments);\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\n\n@Component({\n  selector: 'po-upload-drag-drop-area-overlay',\n  templateUrl: 'po-upload-drag-drop-area-overlay.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadDragDropAreaOverlayComponent implements AfterViewInit {\n  @ViewChild('DragDropAreaFixed', { read: ElementRef, static: true }) DragDropAreaFixed: ElementRef;\n\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-area-element') areaElement: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.target) {\n      this.setPosition(this.target);\n    }\n    this.areaElement.emit(this.DragDropAreaFixed.nativeElement);\n  }\n\n  private setPosition(targetElement: ElementRef) {\n    const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();\n    const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];\n\n    clientRectKeys.forEach(clientRectKey => {\n      const clientRectValue = boundingClientRect[clientRectKey];\n\n      this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);\n    });\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';\n\nimport { poUploadLiteralsDefault } from '../po-upload-base.component';\n\n@Component({\n  selector: 'po-upload-file-restrictions',\n  templateUrl: './po-upload-file-restrictions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadFileRestrictionsComponent implements OnInit {\n  private _allowedExtensions: string;\n  private _maxFileSize: string;\n  private _minFileSize: string;\n\n  literals: any;\n\n  @Input('p-allowed-extensions') set allowedExtensions(value) {\n    this._allowedExtensions = this.formatAllowedExtensions(<any>value);\n  }\n\n  get allowedExtensions(): string {\n    return this._allowedExtensions;\n  }\n\n  @Input('p-max-files') maxFiles: number;\n\n  @Input('p-max-file-size') set maxFileSize(value) {\n    this._maxFileSize = formatBytes(<any>value);\n  }\n\n  get maxFileSize(): string {\n    return this._maxFileSize;\n  }\n\n  @Input('p-min-file-size') set minFileSize(value) {\n    this._minFileSize = formatBytes(<any>value);\n  }\n\n  get minFileSize(): string {\n    return this._minFileSize;\n  }\n\n  get language(): string {\n    return browserLanguage();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.setLiterals();\n  }\n\n  private formatAllowedExtensions(allowedExtensions: Array<string>): string {\n    const conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };\n\n    return allowedExtensions\n      ? allowedExtensions\n          .join(', ')\n          .toUpperCase()\n          .replace(/,(?=[^,]*$)/, ` ${conjunction[this.language]}`)\n      : undefined;\n  }\n\n  private setLiterals() {\n    this.literals = {\n      ...poUploadLiteralsDefault[poLocaleDefault],\n      ...poUploadLiteralsDefault[this.language]\n    };\n\n    this.changeDetector.detectChanges();\n  }\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-url Ã© um input especÃ­fico para receber URL, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-url-basic\" title=\"PO Url Basic\">\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.html\"> </file>\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-labs\" title=\"PO Url Labs\">\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.html\"> </file>\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-shortener\" title=\"PO Url - Shortener\">\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.html\"> </file>\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-url',\n  templateUrl: '../po-input/po-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoUrlComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoUrlComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoUrlComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n  icon = 'po-icon-world';\n\n  maxlength: number = 254;\n\n  type = 'url';\n\n  pattern =\n    '^((https|http):\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?(\\\\/[-A-Za-z\\\\d%_.~+]*)*' + // port and path\n    '(\\\\?[;&A-Za-z\\\\d%_.~+=-]*)?' + // query string\n    '(\\\\#[-A-Za-z\\\\d_]*)?$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  /* istanbul ignore next */\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    setTimeout(() => {\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n    super.ngAfterViewInit();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { PoButtonGroupModule } from '../po-button-group/index';\nimport { PoButtonModule } from '../po-button/index';\nimport { PoCheckboxGroupModule } from './po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/index';\nimport { PoDisclaimerModule } from './../po-disclaimer/po-disclaimer.module';\nimport { PoFieldContainerModule } from './po-field-container/po-field-container.module';\nimport { PoLoadingModule } from '../po-loading/index';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoProgressModule } from './../po-progress/po-progress.module';\nimport { PoServicesModule } from '../../services/services.module';\nimport { PoTableModule } from '../po-table/po-table.module';\nimport { PoTooltipModule } from './../../directives/po-tooltip/po-tooltip.module';\n\nimport { PoCalendarComponent } from './po-datepicker/po-calendar/po-calendar.component';\nimport { PoCleanComponent } from './po-clean/po-clean.component';\nimport { PoCheckboxComponent } from './po-checkbox/po-checkbox.component';\nimport { PoComboComponent } from './po-combo/po-combo.component';\nimport { PoComboOptionTemplateDirective } from './po-combo/po-combo-option-template/po-combo-option-template.directive';\nimport { PoDatepickerComponent } from './po-datepicker/po-datepicker.component';\nimport { PoDatepickerRangeComponent } from './po-datepicker-range/po-datepicker-range.component';\nimport { PoDecimalComponent } from './po-decimal/po-decimal.component';\nimport { PoEmailComponent } from './po-email/po-email.component';\nimport { PoLoginComponent } from './po-login/po-login.component';\nimport { PoLookupComponent } from './po-lookup/po-lookup.component';\nimport { PoLookupModalComponent } from './po-lookup/po-lookup-modal/po-lookup-modal.component';\nimport { PoMultiselectDropdownComponent } from './po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component';\nimport { PoMultiselectComponent } from './po-multiselect/po-multiselect.component';\nimport { PoMultiselectItemComponent } from './po-multiselect/po-multiselect-item/po-multiselect-item.component';\nimport { PoMultiselectSearchComponent } from './po-multiselect/po-multiselect-search/po-multiselect-search.component';\nimport { PoRichTextBodyComponent } from './po-rich-text/po-rich-text-body/po-rich-text-body.component';\nimport { PoRichTextComponent } from './po-rich-text/po-rich-text.component';\nimport { PoRichTextModalComponent } from './po-rich-text/po-rich-text-modal/po-rich-text-modal.component';\nimport { PoRichTextToolbarComponent } from './po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component';\nimport { PoInputComponent } from './po-input/po-input.component';\nimport { PoNumberComponent } from './po-number/po-number.component';\nimport { PoPasswordComponent } from './po-password/po-password.component';\nimport { PoRadioGroupComponent } from './po-radio-group/po-radio-group.component';\nimport { PoSelectComponent } from './po-select/po-select.component';\nimport { PoSelectOptionTemplateDirective } from './po-select/po-select-option-template/po-select-option-template.directive';\nimport { PoSwitchComponent } from './po-switch/po-switch.component';\nimport { PoTextareaComponent } from './po-textarea/po-textarea.component';\nimport { PoUploadComponent } from './po-upload/po-upload.component';\nimport { PoUploadDragDropComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.component';\nimport { PoUploadDragDropDirective } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.directive';\nimport { PoUploadDragDropAreaOverlayComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component';\nimport { PoUploadDragDropAreaComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component';\nimport { PoUploadFileRestrictionsComponent } from './po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component';\nimport { PoUrlComponent } from './po-url/po-url.component';\n\n/**\n * @description\n *\n * MÃ³dulo dos componentes: po-checkbox, po-checkbox-group, po-combo, po-datepicker, po-datepicker-range, po-email, po-input,\n * po-lookup, po-number, po-multiselect, po-password, po-radio-group, po-select, po-switch, po-textarea, po-upload\n * e po-url.\n *\n * > NÃ£o esqueÃ§a de importar o mÃ³dulo `FormsModule` para usar os componentes de formulÃ¡rios e caso esteja trabalhando com\n * > formulÃ¡rios reativos, importe o mÃ³dulo `ReactiveFormsModule`, ambos nativos do Angular.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    PoButtonGroupModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoDisclaimerModule,\n    PoFieldContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoProgressModule,\n    PoServicesModule,\n    PoTableModule,\n    PoTooltipModule\n  ],\n  exports: [\n    PoCheckboxComponent,\n    PoCheckboxGroupModule,\n    PoCleanComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUrlComponent\n  ],\n  declarations: [\n    PoCalendarComponent,\n    PoCleanComponent,\n    PoCheckboxComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoMultiselectDropdownComponent,\n    PoMultiselectItemComponent,\n    PoMultiselectSearchComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextBodyComponent,\n    PoRichTextComponent,\n    PoRichTextModalComponent,\n    PoRichTextToolbarComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUploadDragDropComponent,\n    PoUploadDragDropDirective,\n    PoUploadDragDropAreaOverlayComponent,\n    PoUploadDragDropAreaComponent,\n    PoUploadFileRestrictionsComponent,\n    PoUrlComponent\n  ],\n  providers: []\n})\nexport class PoFieldModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { PoInfoOrientation } from './po-info-orietation.enum';\n\nconst poInfoOrientationDefault = PoInfoOrientation.Vertical;\n\n@Directive()\nexport class PoInfoBaseComponent {\n  private _labelSize: number;\n  private _orientation: PoInfoOrientation = poInfoOrientationDefault;\n\n  public readonly poInfoOrientation = PoInfoOrientation;\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade de [colunas](/guides/grid-system) usadas para a exibiÃ§Ã£o da `p-label` quando o componente for\n   * utilizado na orientaÃ§Ã£o horizontal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `[1 .. 11]`\n   *\n   * > A propriedade `p-value` recebe o nÃºmero de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.\n   */\n  @Input('p-label-size') set labelSize(value: number) {\n    if (isNaN(parseInt(<any>value, 10))) {\n      this._labelSize = undefined;\n    } else {\n      value = parseInt(<any>value, 10);\n\n      this._labelSize = value < 1 || value > 11 ? undefined : value;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o layout de exibiÃ§Ã£o.\n   *\n   * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informaÃ§Ãµes exibidas.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoInfoOrientation) {\n    this._orientation = (<any>Object).values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;\n  }\n  get orientation(): PoInfoOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * Ao informar uma URL, o conteÃºdo serÃ¡ exibido na forma de um *link* e ao ser clicado serÃ¡ redirecionado para a URL informada.\n   *\n   * > Caso informar `http://` serÃ¡ aberto uma nova aba.\n   * Caso informar um caminho relativo, exemplo: `/customers`, serÃ¡ aberto na aba atual.\n   *\n   */\n  @Input('p-url') url?: string;\n\n  /** Valor do conteÃºdo a ser exibido. */\n  @Input('p-value') value?: string;\n}\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagOrientation {\n  /** A tag serÃ¡ exibida na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe a tag na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n}\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagType {\n  /** Erro, perigo, problema ou aviso crÃ­tico. */\n  Danger = 'danger',\n\n  /** Informativo ou explicativo. */\n  Info = 'info',\n\n  /** ConfirmaÃ§Ã£o, resultados positivos ou Ãªxito */\n  Success = 'success',\n\n  /** Aviso ou advertÃªncia. */\n  Warning = 'warning'\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoInfoBaseComponent } from './po-info-base.component';\n\n/**\n * @docsExtends PoInfoBaseComponent\n *\n * @description\n *\n * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\n * valor na parte inferior. Facilita a exibiÃ§Ã£o de dados pois vem com layout padrÃ£o PO.\n *\n * @example\n *\n * <example name=\"po-info-basic\" title=\"PO Info Basic\">\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.html\"> </file>\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-info-labs\" title=\"PO Info Labs\">\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.html\"> </file>\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-info',\n  templateUrl: './po-info.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoInfoComponent extends PoInfoBaseComponent {\n  get isExternalLink() {\n    return isExternalLink(this.url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoInfoComponent } from './po-info.component';\nimport { RouterModule } from '@angular/router';\n/**\n * @description\n *\n * MÃ³dulo do componente po-info.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [PoInfoComponent],\n  exports: [PoInfoComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoInfoModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagOrientation } from './enums/po-tag-orientation.enum';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagColors = (<any>Object).values(PoColorPaletteEnum);\nconst poTagOrientationDefault = PoTagOrientation.Vertical;\n\n/**\n * @description\n *\n * Este componente permite exibir um valor em forma de um marcador colorido, sendo possÃ­vel definir uma legenda e realizar customizaÃ§Ãµes\n * na cor, iconografia e tipo.\n *\n * AlÃ©m disso, Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada tanto ao *click* quanto atravÃ©s das teclas *enter/space* enquanto navega\n * utilizando a tecla *tab*.\n *\n * Seu uso Ã© recomendado para informaÃ§Ãµes que necessitem de destaque em forma de marcaÃ§Ã£o.\n */\n@Directive()\nexport class PoTagBaseComponent {\n  private _color?: string;\n  private _icon?: boolean | string;\n  private _inverse?: boolean;\n  private _orientation?: PoTagOrientation = poTagOrientationDefault;\n  private _type?: PoTagType;\n\n  public readonly poTagOrientation = PoTagOrientation;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma cor para a *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - <span class=\"dot po-color-01\"></span> `color-01`\n   *  - <span class=\"dot po-color-02\"></span> `color-02`\n   *  - <span class=\"dot po-color-03\"></span> `color-03`\n   *  - <span class=\"dot po-color-04\"></span> `color-04`\n   *  - <span class=\"dot po-color-05\"></span> `color-05`\n   *  - <span class=\"dot po-color-06\"></span> `color-06`\n   *  - <span class=\"dot po-color-07\"></span> `color-07`\n   *  - <span class=\"dot po-color-08\"></span> `color-08`\n   *  - <span class=\"dot po-color-09\"></span> `color-09`\n   *  - <span class=\"dot po-color-10\"></span> `color-10`\n   *  - <span class=\"dot po-color-11\"></span> `color-11`\n   *  - <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * > **AtenÃ§Ã£o:** A propriedade `p-type` sobrepÃµe esta definiÃ§Ã£o.\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = poTagColors.includes(value) ? value : undefined;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define ou ativa um Ã­cone que serÃ¡ exibido ao lado do valor da *tag*.\n   *\n   * > Veja os valores vÃ¡lidos na [biblioteca de Ã­cones](guides/icons).\n   *\n   * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o Ã­cone seja exibido conforme descriÃ§Ãµes abaixo:\n   * - <span class=\"po-icon po-icon-ok\"></span> - `success`\n   * - <span class=\"po-icon po-icon-warning\"></span> - `warning`\n   * - <span class=\"po-icon po-icon-close\"></span> - `danger`\n   * - <span class=\"po-icon po-icon-info\"></span> - `info`\n   *\n   * @default `false`\n   */\n  @Input('p-icon') set icon(value: boolean | string) {\n    if (this.type) {\n      this._icon = convertToBoolean(value);\n    } else {\n      this._icon = value;\n    }\n  }\n\n  get icon(): boolean | string {\n    return this._icon;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a inversÃ£o de cores configuradas no componente, possibilitando uma visualizaÃ§Ã£o de status ativo e inativo.\n   *\n   * > A cor do texto, do Ã­cone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,\n   * e a cor do fundo fica branca.\n   *\n   * @default `false`\n   */\n  @Input('p-inverse') set inverse(value: boolean) {\n    this._inverse = convertToBoolean(value);\n  }\n\n  get inverse(): boolean {\n    return this._inverse;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma legenda que serÃ¡ exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o *layout* de exibiÃ§Ã£o.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoTagOrientation) {\n    this._orientation = (<any>Object).values(PoTagOrientation).includes(value) ? value : poTagOrientationDefault;\n  }\n\n  get orientation(): PoTagOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo da *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - `success`: cor verde utilizada para simbolizar sucesso ou Ãªxito.\n   *  - `warning`: cor amarela que representa aviso ou advertÃªncia.\n   *  - `danger`: cor vermelha para erro ou aviso crÃ­tico.\n   *  - `info`: cor cinza escuro que caracteriza conteÃºdo informativo.\n   *\n   * > Quando esta propriedade for definida, irÃ¡ sobrepor a definiÃ§Ã£o de `p-color` e `p-icon` somente serÃ¡ exibido caso seja `true`.\n   *\n   * @default `info`\n   */\n  @Input('p-type') set type(value: PoTagType) {\n    this._type = (<any>Object).values(PoTagType).includes(value) ? value : undefined;\n  }\n\n  get type(): PoTagType {\n    return this._type;\n  }\n\n  /** Texto da tag. */\n  @Input('p-value') value: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ executada ao clicar sobre o `po-tag` e que receberÃ¡ como parÃ¢metro um objeto contendo o seu valor e tipo.\n   */\n  @Output('p-click') click?: EventEmitter<any> = new EventEmitter<PoTagItem>();\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Define os Ã­cones disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagIcon {\n  /** Ãcone fechar. */\n  Danger = 'po-icon-close',\n\n  /** Ãcone de informaÃ§Ã£o. */\n  Info = 'po-icon-info',\n\n  /** Ãcone que representa confirmaÃ§Ã£o. */\n  Success = 'po-icon-ok',\n\n  /** Ãcone com ponto de exclamaÃ§Ã£o. */\n  Warning = 'po-icon-warning'\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { PoTagBaseComponent } from './po-tag-base.component';\nimport { PoTagIcon } from './enums/po-tag-icon.enum';\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagTypeDefault = 'po-tag-' + PoTagType.Info;\n\n/**\n * @docsExtends PoTagBaseComponent\n *\n * @example\n *\n * <example name=\"po-tag-basic\" title=\"PO Tag Basic\">\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.html\"> </file>\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-labs\" title=\"PO Tag Labs\">\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.html\"> </file>\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-bank-account\" title=\"PO Tag - Bank Account\">\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.html\"> </file>\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tag',\n  templateUrl: './po-tag.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTagComponent extends PoTagBaseComponent implements OnInit {\n  isClickable: boolean;\n\n  ngOnInit() {\n    this.isClickable = this.click.observers.length > 0;\n  }\n\n  get iconFromType() {\n    switch (this.type) {\n      case PoTagType.Danger:\n        return PoTagIcon.Danger;\n\n      case PoTagType.Info:\n        return PoTagIcon.Info;\n\n      case PoTagType.Success:\n        return PoTagIcon.Success;\n\n      case PoTagType.Warning:\n        return PoTagIcon.Warning;\n    }\n  }\n\n  get iconTypeString() {\n    return typeof this.icon === 'string';\n  }\n\n  get tagColor() {\n    if (this.type) {\n      return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;\n    }\n\n    if (this.color) {\n      return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;\n    }\n\n    return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;\n  }\n\n  get tagOrientation() {\n    return this.orientation === this.poTagOrientation.Horizontal;\n  }\n\n  onClick() {\n    const submittedTagItem: PoTagItem = { value: this.value, type: this.type };\n    this.click.emit(submittedTagItem);\n  }\n\n  onKeyPressed(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onClick();\n  }\n}\n","/**\n * @usedBy PoDynamicFormComponent\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de campo que serÃ¡ criado dinamicamente.\n */\nexport enum PoDynamicFieldType {\n  /** Valor booleano. */\n  Boolean = 'boolean',\n\n  /** Valor numÃ©rico que contÃ©m casas decimais e milhar. */\n  Currency = 'currency',\n\n  /** Valor para data. */\n  Date = 'date',\n\n  /** Valor para data e hora. */\n  DateTime = 'datetime',\n\n  /** Utilizado para informar/exibir hora. */\n  Time = 'time',\n\n  /** Valor nÃºmerico. */\n  Number = 'number',\n\n  /** Texto. */\n  String = 'string'\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTagComponent } from './po-tag.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-tag`.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoTagComponent],\n  exports: [PoTagComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoTagModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\n\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\n\n/**\n *\n * @description\n *\n * Componente para criaÃ§Ã£o de formulÃ¡rios dinÃ¢micos a partir de uma lista de objetos.\n *\n * TambÃ©m Ã© possÃ­vel verificar se o formulÃ¡rio estÃ¡ vÃ¡lido e informar valores para a exibiÃ§Ã£o de informaÃ§Ãµes.\n */\n@Directive()\nexport class PoDynamicFormBaseComponent {\n  private _groupForm?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nome da propriedade, atribuÃ­da ao `PoDynamicFormField.property`, que iniciarÃ¡ o campo com foco.\n   */\n  @Input('p-auto-focus') autoFocus?: string;\n\n  /**\n   * @description\n   *\n   * ColeÃ§Ã£o de objetos que implementam a interface `PoDynamicFormField`, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   *\n   * > Ex: `[ { property: 'name' } ]`\n   *\n   * Regras de tipagem e criaÃ§Ã£o dos componentes:\n   *\n   * - Caso o *type* informado seja *boolean* o componente criado serÃ¡ o `po-switch`.\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-decimal`,\n   * caso seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-number`, caso seja\n   * informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\n   * - Caso a lista possua a propriedade `options` e a mesma possua atÃ© 3 itens o componente criado serÃ¡ o `po-radio-group`\n   * ou `po-checkbox-group` se informar a propriedade `optionsMulti`.\n   * - Caso a mesma possua 3 ou mais itens, serÃ¡ criado o componente `po-select` ou, `po-multiselect` se a propriedade `optionsMulti`\n   * for verdadeira.\n   * - Caso o *type* informado seja *date* ou *datetime* o componente criado serÃ¡ o `po-datepicker`.\n   * - Caso seja informado a propriedade `optionsService` o componente criado serÃ¡ o `po-combo`.\n   * - Caso o *type* informado seja *time* o componente criado serÃ¡ um `po-input` podendo receber um *mask* para formatar\n   * o valor exibido, caso nÃ£o seja informado um *mask* o componente serÃ¡ criado com a mÃ¡scara '99:99' por padrÃ£o.\n   * - Caso a lista possua a propriedade `rows` e esta seja definida com valor maior ou igual a 3 o componente criado serÃ¡\n   * o `po-textarea`, caso o valor da propriedade `rows` seja menor que 3 o componente criado serÃ¡ o `po-input`.\n   * - Caso seja informada a propriedade `secret` o componente criado serÃ¡ o `po-password`.\n   * - Caso o *type* informado seja *string* o componente criado serÃ¡ o `po-input`.\n   *\n   * @default `[]`\n   */\n  @Input('p-fields') fields: Array<PoDynamicFormField>;\n\n  /**\n   * Objeto que serÃ¡ utilizado como valor para exibir as informaÃ§Ãµes, serÃ¡ recuperado e preenchido atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `p-fields`.\n   *\n   * Pode iniciar com valor ou apenas com um objeto vazio que serÃ¡ preenchido conforme descrito acima.\n   *\n   * > Ex: `{ name: 'po' }`\n   */\n  @Input('p-value') value: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Na inicializaÃ§Ã£o do componente serÃ¡ repassado o objeto de formulÃ¡rio utilizado no componente,\n   * podendo ser utilizado para validaÃ§Ãµes e/ou detecÃ§Ã£o de mudanÃ§a dos valores.\n   *\n   * Portanto existem duas maneiras de recuperar o formulÃ¡rio,\n   * atravÃ©s de *template reference* e atravÃ©s do *output*, veja os exemplos abaixo:\n   *\n   * > *template reference*\n   *\n   * ```html\n   *  <po-dynamic-form #dynamicForm>\n   *  </po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.form.invalid\">\n   *  </po-button>\n   *\n   * ```\n   *\n   * > *Output*\n   *\n   * ```html\n   *  ...\n   *  <po-dynamic-form (p-form)=\"getForm($event)\">\n   *  </po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.invalid\">\n   *  </po-button>\n   *  ...\n   *\n   * ```\n   *\n   * ```ts\n   *  ...\n   *\n   *  export class AppComponent {\n   *\n   *    dynamicForm: NgForm;\n   *\n   *    getForm(form: NgForm) {\n   *      this.dynamicForm = form;\n   *    }\n   *\n   *  }\n   * ```\n   *\n   * > Caso a propriedade `p-group-form` for verdadeira nÃ£o serÃ¡ repassado o formulÃ¡rio, pois o mesmo utilizarÃ¡\n   * o formulÃ¡rio pai.\n   */\n  @Output('p-form') formOutput: EventEmitter<NgForm> = new EventEmitter<NgForm>();\n\n  /**\n   * @optional\n   *\n   * @description\n   * Ao informar esta propriedade, o componente passarÃ¡ a utilizar o formulÃ¡rio pai para criar os `FormControl`\n   * e com isso Ã© possÃ­vel recuperar o valor do formulÃ¡rio e suas validaÃ§Ãµes a partir do formulÃ¡rio pai.\n   *\n   * ```html\n   * <form #parentForm=\"ngForm\">\n   *\n   *   <po-dynamic-form p-group-form [p-fields]=\"fields\"></po-dynamic-form>\n   *\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"parentForm.invalid\"></po-button>\n   * </form>\n   * ```\n   */\n  @Input('p-group-form') set groupForm(value: boolean) {\n    this._groupForm = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get groupForm(): boolean {\n    return this._groupForm;\n  }\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * Ao ser executado, irÃ¡ receber como parÃ¢metro o objeto informado no `p-value`.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo [PoDynamicFormLoad](documentation/po-dynamic-form#po-dynamic-form-load),\n   * onde o usuÃ¡rio poderÃ¡ determinar as novas atualizaÃ§Ãµes dos campos, valores e determinar o campo a ser focado.\n   *\n   * Por exemplo:\n   *\n   * ```\n   * onLoadFields(): PoDynamicFormLoad {\n   *\n   *   return {\n   *     value: { cpf: undefined },\n   *     fields: [\n   *       { property: 'cpf' }\n   *     ],\n   *     focus: 'cpf'\n   *   };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadFields.bind(this)\"\n   * ```\n   */\n  @Input('p-load') load?: string | Function;\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o para validar as **mudanÃ§as do formulÃ¡rio**.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * Ao ser executado, irÃ¡ receber como parÃ¢metro um objeto com o nome da propriedade\n   * alterada e o novo valor, conforme a interface `PoDynamicFormFieldChanged`:\n   *\n   * ```\n   * { property: 'property name', value: 'new value' }\n   * ```\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo [PoDynamicFormValidation](documentation/po-dynamic-form#po-dynamic-form-validation),\n   * onde o usuÃ¡rio poderÃ¡ determinar as novas atualizaÃ§Ãµes dos campos.\n   * Por exemplo:\n   *\n   * ```\n   * onChangeFields(changeValue): PoDynamicFormValidation {\n   *\n   * if (changeValue.property === 'state') {\n   *\n   *   return {\n   *     value: { city: undefined },\n   *     fields: [\n   *       { property: 'city', options: this.getCity(changeValue.value.state) }\n   *     ],\n   *     focus: 'city'\n   *   };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-validate]=\"this.myFunction.bind(this)\"\n   * ```\n   */\n  @Input('p-validate') validate?: string | Function;\n}\n","import { HttpClient } from '@angular/common/http';\n\nimport { of } from 'rxjs';\n\nimport { PoDynamicFormLoad } from '../po-dynamic-form-load/po-dynamic-form-load.interface';\nimport { PoDynamicFormValidation } from '../po-dynamic-form-validation/po-dynamic-form-validation.interface';\n\nexport class PoDynamicFormOperation {\n  constructor(private http: HttpClient) {}\n\n  protected execute(action: Function | string, param: any) {\n    return typeof action === 'string' ? this.post(action, param) : of(action(param));\n  }\n\n  protected post(url: string, body: PoDynamicFormValidation | any) {\n    return this.http.post(url, body);\n  }\n\n  protected setFormDefaultIfEmpty(validateFields: any): PoDynamicFormValidation | PoDynamicFormLoad {\n    return (\n      validateFields || {\n        value: {},\n        fields: [],\n        focus: undefined\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\n\n@Injectable()\nexport class PoDynamicFormLoadService extends PoDynamicFormOperation {\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  createAndUpdateFieldsForm(loadedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\n    return [...loadedFields].reduce(\n      (updatedFields, field) => {\n        const index = updatedFields.findIndex(updatedField => updatedField.property === field.property);\n        const hasProperty = index >= 0;\n\n        if (hasProperty) {\n          updatedFields[index] = { ...fields[index], ...field };\n        } else {\n          updatedFields.push(field);\n        }\n\n        return updatedFields;\n      },\n      [...fields]\n    );\n  }\n\n  executeLoad(load: Function | string, value: any) {\n    return this.execute(load, value).pipe(map(loadedFormdData => this.setFormDefaultIfEmpty(loadedFormdData)));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormFieldChanged } from './po-dynamic-form-field-changed.interface';\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation.interface';\n\n@Injectable()\nexport class PoDynamicFormValidationService extends PoDynamicFormOperation {\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  sendFieldChange(field: PoDynamicFormField, value: any) {\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\n\n    return this.execute(field.validate, changedValue).pipe(\n      map(validateFields => this.setFieldDefaultIfEmpty(validateFields))\n    );\n  }\n\n  sendFormChange(\n    validate: Function | string,\n    field: PoDynamicFormField,\n    value: any\n  ): Observable<PoDynamicFormValidation> {\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\n\n    return this.execute(validate, changedValue).pipe(map(validateFields => this.setFormDefaultIfEmpty(validateFields)));\n  }\n\n  updateFieldsForm(validatedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\n    return [...validatedFields].reduce(\n      (updatedFields, validatedField) => {\n        const index = updatedFields.findIndex(field => field.property === validatedField.property);\n        const hasProperty = index >= 0;\n\n        if (hasProperty) {\n          updatedFields[index] = { ...fields[index], ...validatedField };\n        }\n\n        return updatedFields;\n      },\n      [...fields]\n    );\n  }\n\n  private setFieldDefaultIfEmpty(validateFields: any): any {\n    return (\n      validateFields || {\n        field: {}\n      }\n    );\n  }\n}\n","import { Component, ChangeDetectorRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\nimport { PoDynamicFormLoad } from './po-dynamic-form-load/po-dynamic-form-load.interface';\nimport { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation/po-dynamic-form-validation.interface';\nimport { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';\n\n/**\n * @docsExtends PoDynamicFormBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-form-basic\" title=\"PO Dynamic Form Basic\">\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-form-register\" title=\"PO Dynamic Form - Register\">\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-dynamic-form',\n  templateUrl: './po-dynamic-form.component.html'\n})\nexport class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {\n  private _form: NgForm;\n\n  disabledForm: boolean;\n\n  private onLoadSubscription: Subscription;\n  private sendFormSubscription: Subscription;\n\n  @ViewChild('dynamicForm') set form(value: NgForm) {\n    // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError\n    setTimeout(() => {\n      this._form = value;\n\n      this.emitForm();\n    });\n  }\n\n  get form() {\n    return this._form || <any>{};\n  }\n\n  @ViewChild('fieldsComponent') fieldsComponent: { focus: (property: string) => void };\n\n  constructor(\n    private changes: ChangeDetectorRef,\n    private loadService: PoDynamicFormLoadService,\n    private validationService: PoDynamicFormValidationService\n  ) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  ngOnInit() {\n    if (this.load) {\n      this.loadDataOnInitialize();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao campo desejado.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio capturar a instÃ¢ncia do `dynamic form`, como por exemplo:\n   *\n   * ``` html\n   * <po-dynamic-form #dynamicForm [p-fields]=\"fields\"></po-dynamic-form>\n   * ```\n   *\n   * ``` javascript\n   * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';\n   *\n   * ...\n   *\n   * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;\n   *\n   * fields: Array<PoDynamicFormField> = [\n   *   { property: 'fieldOne' },\n   *   { property: 'fieldTwo' }\n   * ];\n   *\n   * fieldFocus() {\n   *   this.dynamicForm.focus('fieldTwo');\n   * }\n   * ```\n   *\n   * @param {string} property Nome da propriedade atribuÃ­da ao `PoDynamicFormField.property`.\n   */\n  focus(property: string) {\n    this.fieldsComponent.focus(property);\n  }\n\n  validateForm(field: PoDynamicFormField) {\n    const previousFocusElement = document.activeElement;\n\n    this.disableForm(true);\n    const errorOnValidation = () => this.disableForm(false);\n\n    this.sendFormSubscription = this.validationService\n      .sendFormChange(this.validate, field, this.value)\n      .subscribe(this.applyFormValidation(previousFocusElement), errorOnValidation);\n  }\n\n  private applyFormUpdatesOnLoad(previousFocusElement: Element): (dynamicFormData: PoDynamicFormLoad) => void {\n    return dynamicFormData => {\n      this.updateModelOnLoad(dynamicFormData);\n      this.disableForm(false);\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\n    };\n  }\n\n  private applyFormValidation(previousFocusElement: Element): (dynamicFormData: PoDynamicFormValidation) => void {\n    return dynamicFormData => {\n      this.updateModelWithValidation(dynamicFormData);\n      this.disableForm(false);\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\n    };\n  }\n\n  private disableForm(value: boolean) {\n    this.disabledForm = value;\n    this.changes.detectChanges();\n  }\n\n  private emitForm() {\n    if (!this.groupForm && this.formOutput.observers.length) {\n      this.formOutput.emit(this.form);\n    }\n  }\n\n  private loadDataOnInitialize() {\n    const previousFocusElement = document.activeElement;\n\n    this.disabledForm = true;\n    const errorOnLoad = () => (this.disabledForm = false);\n\n    this.onLoadSubscription = this.loadService\n      .executeLoad(this.load, this.value)\n      .subscribe(this.applyFormUpdatesOnLoad(previousFocusElement), errorOnLoad);\n  }\n\n  private removeListeners() {\n    if (this.onLoadSubscription) {\n      this.onLoadSubscription.unsubscribe();\n    }\n\n    if (this.sendFormSubscription) {\n      this.sendFormSubscription.unsubscribe();\n    }\n  }\n\n  private setFocusOnFieldByProperty(property: string, previousFocusElement: Element) {\n    if (property) {\n      // precisa do timeout para que o valor seja atribuido no campo antes de setar o focus,\n      // para nao disparar a mudanÃ§a posteriormente. SituaÃ§Ã£o ocorre quando retornar campo com valor e focus atribuido a ele.\n      setTimeout(() => this.focus(property));\n    } else {\n      previousFocusElement['focus']();\n    }\n  }\n\n  private updateModelOnLoad(loadedFormData: PoDynamicFormLoad) {\n    Object.assign(this.value, loadedFormData.value);\n    this.fields = this.loadService.createAndUpdateFieldsForm(loadedFormData.fields, this.fields);\n  }\n\n  private updateModelWithValidation(formData: PoDynamicFormValidation) {\n    Object.assign(this.value, formData.value);\n    this.fields = this.validationService.updateFieldsForm(formData.fields, this.fields);\n  }\n}\n","import { PoDynamicViewField } from './po-dynamic-view/po-dynamic-view-field.interface';\n\nexport function getGridColumnsClasses(smColumns, mdColumns, lgColumns, xlColumns, gridColumns) {\n  const systemGrid = {\n    sm: smColumns || gridColumns || 12,\n    md: mdColumns || gridColumns || 6,\n    lg: lgColumns || gridColumns || 4,\n    xl: xlColumns || gridColumns || 3\n  };\n\n  return `po-sm-${systemGrid.sm} po-md-${systemGrid.md} po-lg-${systemGrid.lg} po-xl-${systemGrid.xl}`;\n}\n\nexport function isVisibleField(field: PoDynamicViewField): boolean {\n  const containsVisible = 'visible' in field;\n\n  return containsVisible ? field.visible : true;\n}\n","/**\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperStatus\"></a>\n *\n * *Enums* para os status do `po-stepper` quando utilizada a propriedade `p-steps`.\n */\nexport enum PoStepperStatus {\n  /** Define o estado do *step* como ativo. */\n  Active = 'active',\n\n  /** Define o estado do *step* como padrÃ£o. */\n  Default = 'default',\n\n  /** Define o estado do *step* como desabilitado. */\n  Disabled = 'disabled',\n\n  /** Define o estado do *step* como concluÃ­do. */\n  Done = 'done',\n\n  /** Define o estado do *step* com erro. */\n  Error = 'error'\n}\n","import { Input, EventEmitter, Output, Directive } from '@angular/core';\nimport { TitleCasePipe } from '@angular/common';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { getGridColumnsClasses, isVisibleField } from '../../po-dynamic.util';\nimport { PoDynamicFieldType } from '../../po-dynamic-field-type.enum';\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormFieldInternal } from './po-dynamic-form-field-internal.interface';\n\n@Directive()\nexport class PoDynamicFormFieldsBaseComponent {\n  private _fields: Array<PoDynamicFormField>;\n  private _value?: any = {};\n\n  visibleFields: Array<PoDynamicFormFieldInternal> = [];\n\n  @Input('p-auto-focus') autoFocus?: string;\n\n  // array de objetos que implementam a interface PoDynamicFormField, que serÃ£o exibidos no componente.\n  @Input('p-fields') set fields(value: Array<PoDynamicFormField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  @Output('p-fieldsChange') fieldsChange = new EventEmitter<any>();\n\n  // valor que serÃ¡ utilizado para iniciar valor no componente.\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Input('p-disabled-form') disabledForm: boolean;\n\n  @Input('p-validate') validate?: string | Function;\n\n  @Output('p-form-validate') formValidate = new EventEmitter<any>();\n\n  constructor(private titleCasePipe: TitleCasePipe) {}\n\n  compareTo(value, compareTo) {\n    return value === compareTo;\n  }\n\n  // retorna um array com os objetos configurados e visiveis.\n  protected getVisibleFields() {\n    const visibleFields = [];\n\n    this.fields.forEach(field => {\n      if (this.existsProperty(visibleFields, field.property)) {\n        this.printError(\n          `\"po-dynamic-form\" property \"${field.property}\" estÃ¡ duplicado. Interface: PoDynamicFormField.`\n        );\n        return;\n      }\n\n      if (!field['property']) {\n        this.printError('\"po-dynamic-form\" Ã obrigatÃ³rio ser especificado um property.');\n        return;\n      }\n\n      if (isVisibleField(field)) {\n        visibleFields.push(this.createField(field));\n      }\n    });\n\n    return visibleFields;\n  }\n\n  // converte um array em string para um array de objetos que contem label e value.\n  private convertOptions(options: Array<any>): Array<{ label: string; value: string }> {\n    const everyOptionString = options.every(option => typeof option === 'string');\n\n    if (everyOptionString) {\n      return options.map(value => ({ label: value, value }));\n    }\n\n    return options;\n  }\n\n  // cria um novo objeto com as classes de grid system, com control (tipo do componente) e label default.\n  private createField(field: PoDynamicFormField): PoDynamicFormFieldInternal {\n    const control = this.getComponentControl(field);\n    const options = !!field.options ? this.convertOptions(field.options) : undefined;\n    const focus = this.hasFocus(field);\n\n    const componentClass = getGridColumnsClasses(\n      field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns\n    );\n\n    return {\n      label: this.titleCasePipe.transform(field.property),\n      ...field,\n      componentClass,\n      control,\n      focus,\n      options\n    };\n  }\n\n  private existsProperty(fields: Array<PoDynamicFormField>, property: string) {\n    return fields.some(field => {\n      return field.property === property;\n    });\n  }\n\n  // recupera o componente de acordo com algumas regras do field.\n  private getComponentControl(field: PoDynamicFormField = <any>{}) {\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\n\n    if (this.isNumberType(field, type)) {\n      return 'number';\n    } else if (this.isCurrencyType(field, type)) {\n      return 'decimal';\n    } else if (this.isSelect(field)) {\n      return 'select';\n    } else if (this.isRadioGroup(field)) {\n      return 'radioGroup';\n    } else if (this.isCheckboxGroup(field)) {\n      return 'checkboxGroup';\n    } else if (this.isMultiselect(field)) {\n      return 'multiselect';\n    } else if (this.compareTo(type, PoDynamicFieldType.Boolean)) {\n      return 'switch';\n    } else if (this.compareTo(type, PoDynamicFieldType.Date) || this.compareTo(type, PoDynamicFieldType.DateTime)) {\n      return 'datepicker';\n    } else if (this.compareTo(type, PoDynamicFieldType.Time)) {\n      field.mask = field.mask || '99:99';\n\n      return 'input';\n    } else if (this.isCombo(field)) {\n      return 'combo';\n    } else if (this.isLookup(field)) {\n      return 'lookup';\n    } else if (this.isTextarea(field)) {\n      return 'textarea';\n    } else if (this.isPassword(field)) {\n      return 'password';\n    }\n\n    return 'input';\n  }\n\n  private hasFocus(field: PoDynamicFormField) {\n    return !!this.autoFocus && this.autoFocus === field.property;\n  }\n\n  private isCheckboxGroup(field: PoDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isCombo(field: PoDynamicFormField) {\n    const { optionsService } = field;\n\n    return !!optionsService && isTypeof(optionsService, 'string');\n  }\n\n  private isCurrencyType(field: PoDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, PoDynamicFieldType.Currency) && !mask && !pattern;\n  }\n\n  private isLookup(field: PoDynamicFormField) {\n    const { searchService } = field;\n\n    return !!searchService && isTypeof(searchService, 'string');\n  }\n\n  private isMultiselect(field: PoDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length > 3;\n  }\n\n  private isNumberType(field: PoDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, PoDynamicFieldType.Number) && !mask && !pattern;\n  }\n\n  private isPassword(field: PoDynamicFormField) {\n    const { secret } = field;\n\n    return secret;\n  }\n\n  private isRadioGroup(field: PoDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isSelect(field: PoDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length > 3;\n  }\n\n  private isTextarea(field: PoDynamicFormField) {\n    const { rows } = field;\n\n    return rows && rows >= 3;\n  }\n\n  private printError(error: string) {\n    console.error(error);\n  }\n}\n","import { Component, ChangeDetectorRef, OnChanges, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { TitleCasePipe } from '@angular/common';\n\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';\nimport { PoDynamicFormFieldValidation } from '../po-dynamic-form-validation/po-dynamic-form-field-validation.interface';\nimport { PoDynamicFormValidationService } from '../po-dynamic-form-validation/po-dynamic-form-validation.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de criaÃ§Ã£o dos campos dinÃ¢micos.\n */\n@Component({\n  selector: 'po-dynamic-form-fields',\n  templateUrl: 'po-dynamic-form-fields.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  providers: [PoDynamicFormValidationService]\n})\nexport class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {\n  @ViewChildren('component') components: QueryList<{ name: string; focus: () => void }>;\n\n  private previousValue = {};\n\n  constructor(\n    titleCasePipe: TitleCasePipe,\n    private validationService: PoDynamicFormValidationService,\n    private changes: ChangeDetectorRef\n  ) {\n    super(titleCasePipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  focus(property: string) {\n    const foundComponent = this.components.find(component => component.name === property);\n    if (foundComponent) {\n      foundComponent.focus();\n    }\n  }\n\n  isDisabled(field: PoDynamicFormField): boolean {\n    return field.disabled || this.disabledForm;\n  }\n\n  async onChangeField(visibleField: PoDynamicFormField) {\n    const { property } = visibleField;\n    const isChangedValueField = this.previousValue[property] !== this.value[property];\n\n    if (isChangedValueField) {\n      const { changedField, changedFieldIndex } = this.getField(property);\n\n      if (changedField.validate) {\n        await this.validateField(changedField, changedFieldIndex, visibleField);\n      }\n\n      this.triggerValidationOnForm(changedFieldIndex);\n    }\n\n    this.previousValue[property] = this.value[property];\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n  private applyFieldValidation(index: number, validatedField: PoDynamicFormFieldValidation) {\n    const field = this.fields[index];\n\n    this.fields[index] = { ...field, ...validatedField.field };\n    this.updateFields();\n\n    if (validatedField.hasOwnProperty('value')) {\n      this.value[field.property] = validatedField.value;\n    }\n\n    this.changes.detectChanges();\n\n    if (validatedField.focus) {\n      this.focus(field.property);\n    }\n  }\n\n  private getField(property: string) {\n    const changedFieldIndex = this.fields.findIndex(field => field.property === property);\n    const changedField = this.fields[changedFieldIndex];\n\n    return { changedField, changedFieldIndex };\n  }\n\n  private triggerValidationOnForm(changedFieldIndex: number) {\n    const hasValidationForm = this.validate && this.formValidate.observers.length;\n\n    if (hasValidationForm) {\n      const updatedField = this.fields[changedFieldIndex];\n      this.formValidate.emit(updatedField);\n    }\n  }\n\n  private updateFields() {\n    this.fieldsChange.emit(this.fields);\n    this.visibleFields = this.getVisibleFields();\n  }\n\n  private async validateField(field: PoDynamicFormField, fieldIndex: number, visibleField: PoDynamicFormField) {\n    const value = this.value[field.property];\n\n    const previousDisabled = visibleField.disabled;\n    visibleField.disabled = true;\n    this.changes.detectChanges();\n\n    try {\n      const validatedField = await this.validationService.sendFieldChange(field, value).toPromise();\n      this.applyFieldValidation(fieldIndex, validatedField);\n    } catch {\n      visibleField.disabled = previousDisabled;\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { PoDynamicFormField } from '../po-dynamic-form/po-dynamic-form-field.interface';\n\n@Injectable()\nexport class PoDynamicViewService {\n  constructor(private http: HttpClient) {}\n\n  onLoad(url: string, value): Promise<{ value?: any; fields?: Array<PoDynamicFormField> }> {\n    return this.http.post(url, value).toPromise();\n  }\n}\n","import { Input, Directive } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { getGridColumnsClasses, isVisibleField } from '../po-dynamic.util';\nimport { PoDynamicViewField } from './po-dynamic-view-field.interface';\nimport { PoDynamicViewService } from './po-dynamic-view.service';\n\n/**\n *\n * @description\n *\n * Componente para listar dados dinamicamente a partir de uma lista de objetos.\n *\n * > Por padrÃ£o esse componente cria `po-info` para exibiÃ§Ã£o, Ã© possÃ­vel criar `po-tag` passando a propriedade { tag: true }.\n *\n */\n@Directive()\nexport class PoDynamicViewBaseComponent {\n  private _fields: Array<PoDynamicViewField> = [];\n  private _showAllValue: boolean = false;\n  private _value = {};\n\n  visibleFields = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de objetos que implementam a interface `PoDynamicView`.\n   *\n   * > Ex: `[ { property: 'age' } ]`\n   *\n   * Regras de tipagem e formataÃ§Ã£o dos valores exibidos:\n   *\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado o *format* o mesmo recebe \"'BRL', 'symbol', '1.2-2'\"\n   * como formato padrÃ£o.\n   * - Caso o *type* informado seja *date* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy' como formato padrÃ£o.\n   * - Caso o *type* informado seja *dateTime* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy HH:mm:ss' como formato padrÃ£o.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado o *format* o mesmo nÃ£o serÃ¡ formatado.\n   * - Caso o *type* informado seja *time* e nÃ£o seja informado o *format* o mesmo recebe 'HH:mm:ss.ffffff' como formato padrÃ£o.\n   *\n   * > As propriedades informadas serÃ£o exibidas mesmo nÃ£o contendo valor de referÃªncia no objeto da propriedade `p-value`.\n   *\n   * @default `[]`\n   */\n  @Input('p-fields') set fields(fields: Array<PoDynamicViewField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se exibirÃ¡ todas as informaÃ§Ãµes contidas dentro do objeto informado na propriedade `p-value`.\n   *\n   * @default `false`\n   */\n  @Input('p-show-all-value') set showAllValue(value: boolean) {\n    this._showAllValue = convertToBoolean(value);\n  }\n\n  get showAllValue() {\n    return this._showAllValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita executar uma funÃ§Ã£o quando o componente Ã© inicializado.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - **String**: Endpoint usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - **Function**: MÃ©todo que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * Para os dois tipos de utilizaÃ§Ã£o da propriedade espera-se o seguinte retorno:\n   *\n   * ```\n   * {\n   *   value: {\n   *     cnpj: '**************', // altera valor do campo\n   *     updated: (new Date()).toString() // atribui valor ao campo novo\n   *   },\n   *   fields: [\n   *     { property: 'cnpj', tag: true, inverse: true }, // atribui novas propriedades ao field\n   *     { property: 'updated', tag: true } // inclui campo novo\n   *   ]\n   * }\n   * ```\n   * > **value**: any = atribui novo valor do model.\n   *\n   * > **fields**: `Array<PoDynamicViewField>` = Lista de campos que deseja alterar as propriedades,\n   * caso enviar um campo a mais serÃ¡ criado um novo campo.\n   *\n   * - Para esconder/remover campos precisa informar no field a propriedade `visible = false`.\n   *\n   */\n  @Input('p-load') load: string | Function;\n\n  /**\n   * @description\n   *\n   * Objeto que serÃ¡ utilizado para exibir as informaÃ§Ãµes dinÃ¢micas, o valor serÃ¡ recuperado atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `p-fields`.\n   *\n   * > Ex: `{ age: '35' }`\n   */\n  @Input('p-value') set value(value: object) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private currencyPipe: CurrencyPipe,\n    private datePipe: DatePipe,\n    private decimalPipe: DecimalPipe,\n    private timePipe: PoTimePipe,\n    private titleCasePipe: TitleCasePipe,\n    protected dynamicViewService: PoDynamicViewService\n  ) {}\n\n  // retorna os fields com os valores recuperados do objeto value.\n  protected getConfiguredFields() {\n    const newFields = [];\n\n    this.fields.forEach(field => {\n      if (isVisibleField(field)) {\n        newFields.push(this.createField(field));\n      }\n    });\n\n    return newFields;\n  }\n\n  // retorna fields ligado ao value mais os atributos do value que nÃ£o possuiam fields.\n  protected getMergedFields() {\n    const mergedFields = [...this.getConfiguredFields()];\n\n    this.getValueFields().forEach(valueField => {\n      const fieldIndex = mergedFields.findIndex(field => field.property === valueField.property);\n      const property = valueField.property;\n\n      if (fieldIndex === -1) {\n        mergedFields.push(this.createField({ property }));\n      }\n    });\n\n    return mergedFields;\n  }\n\n  // retorna o objeto value como fields.\n  protected getValueFields() {\n    return Object.keys(this.value).map(property => {\n      return this.createField({ property });\n    });\n  }\n\n  private createField(field: PoDynamicViewField) {\n    const property = field.property;\n    const value = this.transformValue(field.type, this.value[property], field.format);\n\n    const classesGridColumns = getGridColumnsClasses(\n      field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns\n    );\n\n    return {\n      property,\n      value,\n      label: this.titleCasePipe.transform(property),\n      cssClass: classesGridColumns,\n      ...field\n    };\n  }\n\n  private transformValue(type: string, value, format) {\n    let transformedValue = value;\n\n    switch (type) {\n      case 'currency':\n        transformedValue = this.currencyPipe.transform(value, format || 'BRL', 'symbol', '1.2-2');\n        break;\n      case 'date':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy');\n        break;\n      case 'dateTime':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy HH:mm:ss');\n        break;\n      case 'number':\n        transformedValue = this.decimalPipe.transform(value, format);\n        break;\n      case 'time':\n        transformedValue = this.timePipe.transform(value, format || 'HH:mm:ss.ffffff');\n        break;\n    }\n\n    return transformedValue;\n  }\n}\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicFormField } from './../po-dynamic-form/po-dynamic-form-field.interface';\nimport { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';\nimport { PoDynamicViewService } from './po-dynamic-view.service';\n\n/**\n * @docsExtends PoDynamicViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-view-basic\" title=\"PO Dynamic View Basic\">\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee\" title=\"PO Dynamic View - Employee\">\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee-on-load\" title=\"PO Dynamic View - Employee on load\">\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dynamic-view',\n  templateUrl: './po-dynamic-view.component.html'\n})\nexport class PoDynamicViewComponent extends PoDynamicViewBaseComponent implements OnChanges, OnInit {\n  constructor(\n    currencyPipe: CurrencyPipe,\n    datePipe: DatePipe,\n    decimalPipe: DecimalPipe,\n    timePipe: PoTimePipe,\n    titleCasePipe: TitleCasePipe,\n    dynamicViewService: PoDynamicViewService\n  ) {\n    super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.value || changes.showAllValue) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  ngOnInit() {\n    if (this.load) {\n      this.updateValuesAndFieldsOnLoad();\n    }\n  }\n\n  private async getValuesAndFieldsFromLoad(): Promise<{ value?: any; fields?: Array<PoDynamicFormField> }> {\n    let valueAndFieldsFromLoad;\n\n    if (typeof this.load === 'string') {\n      valueAndFieldsFromLoad = await this.dynamicViewService.onLoad(this.load, this.value);\n    } else if (typeof this.load === 'function') {\n      valueAndFieldsFromLoad = this.load();\n    }\n\n    return valueAndFieldsFromLoad || {};\n  }\n\n  private getVisibleFields() {\n    if (this.showAllValue) {\n      return this.getMergedFields();\n    }\n\n    return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();\n  }\n\n  private setFieldOnLoad(fieldOnLoad: PoDynamicFormField) {\n    const index = this.fields.findIndex(field => field.property === fieldOnLoad.property);\n\n    if (index >= 0) {\n      this.fields[index] = { ...this.fields[index], ...fieldOnLoad };\n    } else {\n      this.fields.push({ ...fieldOnLoad });\n    }\n  }\n\n  private setFieldsOnLoad(fields: Array<PoDynamicFormField>) {\n    if (fields) {\n      fields.forEach(fieldOnLoad => {\n        this.setFieldOnLoad(fieldOnLoad);\n      });\n    }\n  }\n\n  private setValueOnLoad(newValue: any) {\n    Object.assign(this.value, newValue);\n  }\n\n  private async updateValuesAndFieldsOnLoad() {\n    const { value, fields } = await this.getValuesAndFieldsFromLoad();\n\n    this.setValueOnLoad(value);\n    this.setFieldsOnLoad(fields);\n\n    this.visibleFields = this.getVisibleFields();\n  }\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerModule } from '../po-divider/po-divider.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoInfoModule } from '../po-info/po-info.module';\nimport { PoTagModule } from '../po-tag/po-tag.module';\nimport { PoTimeModule } from '../../pipes/po-time/po-time.module';\nimport { PoTimePipe } from '../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicFormComponent } from './po-dynamic-form/po-dynamic-form.component';\nimport { PoDynamicFormFieldsComponent } from './po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component';\nimport { PoDynamicFormLoadService } from './po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service';\nimport { PoDynamicFormValidationService } from './po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service';\nimport { PoDynamicViewComponent } from './po-dynamic-view/po-dynamic-view.component';\nimport { PoDynamicViewService } from './po-dynamic-view/po-dynamic-view.service';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, PoDividerModule, PoInfoModule, PoFieldModule, PoTagModule, PoTimeModule],\n  declarations: [PoDynamicFormComponent, PoDynamicFormFieldsComponent, PoDynamicViewComponent],\n  exports: [PoDynamicFormComponent, PoDynamicViewComponent],\n  providers: [\n    CurrencyPipe,\n    DatePipe,\n    DecimalPipe,\n    PoTimePipe,\n    TitleCasePipe,\n    PoDynamicFormLoadService,\n    PoDynamicFormValidationService,\n    PoDynamicViewService\n  ]\n})\nexport class PoDynamicModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell-action',\n  templateUrl: './po-grid-cell-action.component.html'\n})\nexport class PoGridCellActionComponent {\n  @Input('p-position') position?: string = '';\n\n  @Input('p-value') value?: string;\n\n  constructor() {}\n\n  onKeyDownContent(event) {\n    // console.log('onKeyDownContent: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n\n      // this.openActions(this.value);\n\n      return;\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell',\n  templateUrl: './po-grid-cell.component.html'\n})\nexport class PoGridCellComponent {\n  private _width: string | number;\n\n  _value: any = '';\n  edit: boolean = false;\n  editValue: string = '';\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') freeze?: boolean = false;\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-width') set width(value: string | number) {\n    this._width = value;\n\n    if (this.freeze && !this._width) {\n      this._width = 100;\n    }\n  }\n  get width(): string | number {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-readonly') readonly?: boolean = false;\n\n  @Input('p-required') required?: boolean = false;\n\n  @Output('p-valueChange') valueChange = new EventEmitter<any>();\n  // @Input('p-value') value?: string;\n  @Input('p-value') set value(value: any) {\n    this._value = value;\n    this.valueChange.emit(this._value);\n  }\n  get value(): any {\n    return this._value;\n  }\n\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\n\n  onKeyDownContent(event: any) {\n    // console.log('onKeyDownContent: ', event);\n\n    // BACKSPACE / DELETE\n    if (!event.ctrlKey && (event.keyCode === 8 || event.keyCode === 46)) {\n      if (this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.value = '';\n      return;\n    }\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      this.onEditCell(this.value);\n      return;\n    }\n\n    // A..Z - 0..9\n    if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57)) {\n      event.preventDefault();\n      this.onEditCell(event.key);\n      return;\n    }\n  }\n\n  dblclick(event: any) {\n    // console.log('dblclick: ', event);\n\n    event.preventDefault();\n\n    this.onEditCell(this.value);\n  }\n\n  onBlurInput(event: any) {\n    // console.log('onBlurInput: ', event);\n\n    this.value = this.editValue;\n    this.editValue = undefined;\n    this.edit = false;\n  }\n\n  onKeyDownInput(event: any) {\n    // console.log('onKeyDownInput: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      this.value = this.editValue;\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n    }\n\n    // ESCAPE\n    if (event.keyCode === 27) {\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n      event.stopPropagation();\n    }\n  }\n\n  private onEditCell(value: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.editValue = value;\n    this.edit = true;\n    this.changeDetectorRef.detectChanges();\n    this.inputElement.nativeElement.focus();\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\n\n/**\n * @description\n *\n * Componente grid.\n *\n * AÃ§Ãµes / atalhos:\n *\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n * - ARROW-DOWN: Navega para celula inferior;\n * - ARROW-RIGHT: Navega para celula direita;\n * - ARROW-LEFT: Navega para celula esquerda;\n * - TAB: Navega para prÃ³xima celula;\n * - SHIFT+TAB: Navega para celula anterior;\n * - CTRL+DEL: Remove linha;\n * - DEL/BACKSPACE: Limpa celula;\n * - ENTER: Edita linha com valor atual/Confirma ediÃ§Ã£o da celula;\n * - DOUBLE-CLICK: Edita linha com valor atual;\n * - ESC: Cancela ediÃ§Ã£o da celula / Cancela inserÃ§Ã£o de linhas em branco;\n * - A..Z/0..9: Inicia ediÃ§Ã£o com valor em branco.\n *\n * @example\n *\n * <example name=\"po-grid-basic\" title=\"PO Grid Basic\">\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-grid',\n  templateUrl: './po-grid.component.html'\n})\nexport class PoGridComponent implements OnDestroy {\n  lastCell: string = '0-0';\n  lastRow: number = 0;\n  lastColumn: number = 0;\n  currencyCell: string = '0-0';\n  currencyRow: number = 0;\n  currencyColumn: number = 0;\n  currencyObj: any;\n\n  logger = false;\n\n  width = '100%';\n  widporeeze = 0;\n  widthActions = 0;\n\n  private resizeListener: () => void;\n  private timeoutResize;\n\n  @ViewChild('table', { static: true }) tableElement: ElementRef;\n  @ViewChild('wrapper', { static: true }) tableWrapper: ElementRef;\n\n  private _columns = [];\n\n  /**\n   * @description\n   *\n   * AÃ§Ãµes disparadas quando uma linha do grid Ã© manipulada.\n   */\n  @Input('p-row-actions') rowActions: PoGridRowActions = {};\n\n  /**\n   * Colunas exibidas no grid.\n   */\n  @Input('p-columns') set columns(value: Array<any>) {\n    this._columns = [...value];\n\n    this._columns.forEach(column => {\n      column.label = column.label || column.property;\n\n      if (column.freeze === true) {\n        column.cssWidth = `${column.width || 100}px`;\n      } else {\n        column.cssWidth = column.width ? `${column.width}px` : '100%';\n      }\n    });\n  }\n  get columns(): Array<any> {\n    return this._columns.filter(column => column.freeze !== true && column.action !== true);\n  }\n\n  /**\n   * Lista com os dados que serÃ£o exibidos no grid.\n   */\n  @Input('p-data') data: Array<any> = [];\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private elRef: ElementRef, renderer: Renderer2) {\n    this.debounceResize();\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n\n    this.timeoutResize = setTimeout(() => {\n      const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;\n      this.width = `${widthTableWrapper - (this.widporeeze + 8) - this.widthActions}px`;\n    }, 100);\n  }\n\n  get freezeColumns() {\n    const freezeColumns = this._columns.filter(column => column.freeze === true);\n\n    this.widporeeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);\n\n    return freezeColumns;\n  }\n\n  get actionColumns() {\n    const actionsColumns = this._columns.filter(column => column.action === true);\n\n    this.widthActions = actionsColumns.length > 0 ? 56 : 0;\n\n    return actionsColumns;\n  }\n\n  cancelRow(event: any, row: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      return;\n    }\n\n    const [x] = el.id.split('-');\n\n    if (this.isEmptyRow(x)) {\n      if (!this.removeRow(event, row)) {\n        return;\n      }\n\n      this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);\n    } else {\n      this.data[+x - 1] = Object.assign({}, this.currencyObj);\n      setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));\n    }\n  }\n\n  removeRow(event: any, row: any): boolean {\n    if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {\n      return false;\n    }\n\n    const index = this.data.indexOf(row);\n\n    this.data.splice(index, 1);\n\n    this.changeDetectorRef.detectChanges();\n\n    if (this.data.length === 0 || index === this.data.length) {\n      this.selectCell(this.currencyRow - 1, this.currencyColumn);\n    } else {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n    }\n\n    return true;\n  }\n\n  tableKeydown(event: any, direction: string) {\n    let [row, col] = event.target.id.split('-');\n    row = +row;\n    col = +col;\n    let prow = +row;\n    let pcol = +col;\n\n    // event.preventDefault();\n    // event.stopPropagation();\n\n    // debugger;\n    if (direction === 'down') {\n      if (row <= this.data.length) {\n        prow++;\n      }\n\n      if (row === this.data.length) {\n        if (row === 0 || !this.isEmptyRow(row)) {\n          if (this.saveRow(row)) {\n            if (!this.insertRow()) {\n              return;\n            }\n          } else {\n            return;\n          }\n        } else {\n          prow--;\n        }\n      }\n    } else if (direction === 'up' && row > 0) {\n      prow--;\n    } else if (direction === 'left' && col > 0) {\n      pcol--;\n    } else if (direction === 'right' && col < this._columns.length - 1) {\n      pcol++;\n    } else if (direction === 'next') {\n      if (col < this._columns.length - 1) {\n        pcol++;\n        event.preventDefault();\n      } else if (row < this.data.length) {\n        pcol = 0;\n        prow++;\n        event.preventDefault();\n      }\n    } else if (direction === 'prior') {\n      if (col > 0) {\n        pcol--;\n        event.preventDefault();\n      } else if (row > 0) {\n        pcol = this._columns.length - 1;\n        prow--;\n        event.preventDefault();\n      }\n    }\n\n    if (this.currencyCell === `${prow}-${pcol}`) {\n      // console.log('vazou');\n      return;\n    }\n\n    // debugger;\n    if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {\n      if (!this.isEmptyRow(row)) {\n        if (!this.saveRow(row)) {\n          return;\n        }\n      } else {\n        if (!this.removeRow(event, row)) {\n          return;\n        }\n      }\n    }\n\n    if (this.currencyRow !== prow) {\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('mudou de linha');\n    }\n\n    this.lastCell = event.target.id;\n    this.lastRow = row;\n    this.lastColumn = col;\n\n    this.selectCell(prow, pcol);\n  }\n\n  tableClick(event: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n      return;\n    }\n\n    if (this.currencyCell === el.id) {\n      return;\n    }\n\n    const [row, col] = el.id.split('-');\n    const prow = +row;\n    const pcol = +col;\n\n    if (prow !== this.currencyRow) {\n      if (this.currencyRow > 0) {\n        if (!this.isEmptyRow(this.currencyRow)) {\n          if (!this.saveRow(this.currencyRow)) {\n            this.selectCell(this.currencyRow, this.currencyColumn);\n            return;\n          }\n        } else {\n          if (!this.removeRow(event, row)) {\n            return;\n          }\n        }\n      }\n\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('>>>>>>> ', prow - 1);\n    }\n\n    this.lastCell = this.currencyCell;\n    this.lastRow = this.currencyRow;\n    this.lastColumn = this.currencyColumn;\n\n    this.currencyCell = el.id;\n    this.currencyRow = prow;\n    this.currencyColumn = pcol;\n  }\n\n  saveRow(row: number): boolean {\n    // console.log(this.data[row - 1]);\n\n    const obj = this.data[row - 1];\n\n    if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {\n      // console.log('tudo igual');\n      return true;\n    }\n\n    if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {\n      return false;\n    }\n\n    const requireds = [];\n\n    this.columns.forEach(column => {\n      if (column.required === true && !obj[column.property]) {\n        requireds.push(column.property);\n      }\n    });\n\n    return requireds.length === 0;\n  }\n\n  insertRow() {\n    const obj = {};\n\n    if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {\n      return false;\n    }\n\n    // this.currencyObj = Object.assign({}, obj);\n\n    this.data.push(obj);\n    this.changeDetectorRef.detectChanges();\n\n    return true;\n  }\n\n  isEmptyRow(row: number) {\n    const obj = this.data[row - 1];\n\n    if (!obj) {\n      // title\n      return false;\n    }\n\n    const filled = Object.keys(obj).some(property => obj[property]);\n\n    return !filled;\n  }\n\n  selectCell(row: number, col: number) {\n    const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);\n\n    if (nextCell) {\n      this.currencyCell = `${row}-${col}`;\n      this.currencyRow = row;\n      this.currencyColumn = col;\n      nextCell.focus();\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-head',\n  templateUrl: './po-grid-head.component.html'\n})\nexport class PoGridHeadComponent {\n  private _width: string | number;\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') boolean?: boolean = false;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-width') set width(value: string | number) {\n    this._width = value;\n  }\n  get width(): string | number {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-title') title?: string;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule } from './../../components/po-field/po-field.module';\n\nimport { PoGridCellActionComponent } from './po-grid-cell-action/po-grid-cell-action.component';\nimport { PoGridCellComponent } from './po-grid-cell/po-grid-cell.component';\nimport { PoGridComponent } from './po-grid.component';\nimport { PoGridHeadComponent } from './po-grid-head/po-grid-head.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-grid.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, PoFieldModule],\n  declarations: [PoGridCellActionComponent, PoGridCellComponent, PoGridComponent, PoGridHeadComponent],\n  exports: [PoGridComponent]\n})\nexport class PoGridModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault, convertToBoolean } from '../../utils/util';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\n\nexport const poListViewLiteralsDefault = {\n  en: <PoListViewLiterals>{\n    hideDetails: 'Hide details',\n    loadMoreData: 'Load more data',\n    noData: 'No data found',\n    selectAll: 'Select all',\n    showDetails: 'Show details'\n  },\n  es: <PoListViewLiterals>{\n    hideDetails: 'Ocultar detalles',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    noData: 'Datos no encontrados',\n    selectAll: 'Seleccionar todos',\n    showDetails: 'Mostrar detalles'\n  },\n  pt: <PoListViewLiterals>{\n    hideDetails: 'Ocultar detalhes',\n    loadMoreData: 'Carregar mais resultados',\n    noData: 'Nenhum dado encontrado',\n    selectAll: 'Selecionar todos',\n    showDetails: 'Exibir detalhes'\n  },\n  ru: <PoListViewLiterals>{\n    hideDetails: 'Ð¡ÐºÑÑÑÑ Ð´ÐµÑÐ°Ð»Ð¸',\n    loadMoreData: 'ÐÐ°Ð³ÑÑÐ·Ð¸ÑÑ Ð±Ð¾Ð»ÑÑÐµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð²',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    selectAll: 'ÐÑÐ±ÑÐ°ÑÑ Ð²ÑÐµ',\n    showDetails: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð´ÐµÑÐ°Ð»Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * Componente de lista que recebe um array de objetos e renderiza de forma dinÃ¢mica os dados de\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n *\n * O componente disponibiliza uma Ã¡rea especÃ­fica para exibiÃ§Ã£o informaÃ§Ãµes adicionais,\n * atravÃ©s da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n */\n@Directive()\nexport class PoListViewBaseComponent {\n  private _actions: Array<PoListViewAction>;\n  private _height: number;\n  private _hideSelectAll: boolean;\n  private _items: Array<any>;\n  private _literals: PoListViewLiterals;\n  private _select: boolean;\n  private _showMoreDisabled: boolean;\n\n  popupTarget: any;\n  selectAll: boolean = false;\n  showHeader: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes que serÃ£o exibidas no componente.\n   */\n  @Input('p-actions') set actions(value: Array<PoListViewAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-list-view` em *pixels*.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todos os itens.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-select-all') set hideSelectAll(hideSelectAll: boolean) {\n    this._hideSelectAll = convertToBoolean(hideSelectAll);\n    this.showMainHeader();\n  }\n\n  get hideSelectAll() {\n    return this._hideSelectAll;\n  }\n\n  /** Lista de itens que serÃ£o exibidos no componente. */\n  @Input('p-items') set items(value: Array<any>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-list-view`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    hideDetail: 'Ocultar detalhes completamente',\n   *    loadMoreData: 'Mais dados',\n   *    showDetail: 'Mostrar mais detalhes',\n   *    selectAll: 'Selecionar todos os itens'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    showDetail: 'Mostrar mais detalhes'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-list-view\n   *   [p-literals]=\"customLiterals\">\n   * </po-list-view>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoListViewLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poListViewLiteralsDefault[poLocaleDefault],\n        ...poListViewLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poListViewLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poListViewLiteralsDefault[browserLanguage()];\n  }\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ usado como link para o tÃ­tulo. */\n  @Input('p-property-link') propertyLink?: string;\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ exibido como o tÃ­tulo de cada item. */\n  @Input('p-property-title') propertyTitle?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinÃ¢mica `$selected` para identificar se o\n   * item estÃ¡ selecionado, por exemplo:\n   *\n   * ```\n   *  item.$selected\n   *\n   *  // ou\n   *\n   *  item['$selected']\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('p-select') set select(select: boolean) {\n    this._select = convertToBoolean(select);\n    this.showMainHeader();\n  }\n\n  get select() {\n    return this._select;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o botÃ£o `Carregar Mais Resultados` serÃ¡ desabilitado.\n   */\n  @Input('p-show-more-disabled') set showMoreDisabled(value: boolean) {\n    this._showMoreDisabled = convertToBoolean(value);\n  }\n\n  get showMoreDisabled(): boolean {\n    return this._showMoreDisabled;\n  }\n\n  /**\n   * Recebe uma aÃ§Ã£o, que serÃ¡ executada quando clicar no botÃ£o \"Carregar mais resultados\".\n   *\n   * > Caso nenhuma aÃ§Ã£o for definida o mesmo nÃ£o ficarÃ¡ visÃ­vel.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o que serÃ¡ executada ao clicar no tÃ­tulo.\n   *\n   * Ao ser disparado, o mÃ©todo inserido na aÃ§Ã£o irÃ¡ receber como parÃ¢metro o item da lista clicado.\n   */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  onClickAction(listViewAction: PoListViewAction, item) {\n    const cleanItem = this.deleteInternalAttrs(item);\n    if (listViewAction.action) {\n      listViewAction.action(cleanItem);\n    }\n  }\n\n  onShowMore(): void {\n    this.showMore.emit();\n  }\n\n  runTitleAction(listItem: any) {\n    const itemWithPublicProperties = this.deleteInternalAttrs(listItem);\n    this.titleAction.emit(itemWithPublicProperties);\n  }\n\n  selectAllListItems() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n    }\n  }\n\n  selectListItem(row: any) {\n    row.$selected = !row.$selected;\n\n    this.selectAll = this.checkIfItemsAreSelected(this.items);\n  }\n\n  private deleteInternalAttrs(item) {\n    const itemCopy = item ? { ...item } : undefined;\n\n    for (const key in itemCopy) {\n      if (itemCopy.hasOwnProperty(key) && key.startsWith('$')) {\n        delete itemCopy[key];\n      }\n    }\n\n    return itemCopy;\n  }\n\n  private checkIfItemsAreSelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private showMainHeader() {\n    this.showHeader = !!(this.select && !this.hideSelectAll && this.items && this.items.length);\n  }\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes essenciais de cada item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"[{id: 1, name: \"Register\", email: register@po-ui.com}]\">\n *\n *   <ng-template p-list-view-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"[{id: 1, name: \"Register\", email: register@po-ui.com}]\">\n *\n *    <div *p-list-view-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n *\n * A diretiva **p-list-view-content-template**, possibilita tambÃ©m alterar o tÃ­tulo dos itens. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz a alteraÃ§Ã£o, Ã  propriedade `p-title`,\n * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    template: `\n *      ...\n *      <po-list-view\n *        [p-items]=\"items\">\n *        <ng-template p-list-view-content-template let-item [p-title]=\"customTitle\">\n *          <div class=\"po-row\">\n *            <po-info class=\"po-md-12\" p-label=\"Customer\" [p-value]=\"item.customer\"></po-info>\n *          </div>\n *        </ng-template>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public items = [{\n *      code: 1200,\n *      product: 'Rice',\n *      customer: 'Supermarket 1',\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      customer: 'Supermarket 2'\n *    }];\n *\n *    customTitle(item) {\n *      return `${item.code} - ${item.product}`;\n *    }\n * }\n * ```\n */\n@Directive({\n  selector: '[p-list-view-content-template]'\n})\nexport class PoListViewContentTemplateDirective {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `string`, que serÃ¡ utilizado como o tÃ­tulo de cada item da lista.\n   *\n   * > Por parÃ¢metro serÃ¡ enviado o item corrente, onde poderÃ¡ utilizÃ¡-lo para recuperar dados sobre o mesmo.\n   */\n  @Input('p-title') title: (item) => string;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes adicionais de cada item, construindo um\n * botÃ£o `Exibir detalhes` abaixo do conteÃºdo principal do item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"items\">\n *\n *   <ng-template p-list-view-detail-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"items\">\n *    <div *p-list-view-detail-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-list-view-detail-template]'\n})\nexport class PoListViewDetailTemplateDirective {\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `boolean`, que serÃ¡ utilizado como a validaÃ§Ã£o para que o detalhe de item\n   * da lista inicie aberto ou fechado.\n   *\n   */\n  @Input('p-show-detail') showDetail: (item) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  IterableDiffers,\n  ViewChild\n} from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewBaseComponent } from './po-list-view-base.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @docsExtends PoListViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-list-view-basic\" title=\"PO List View Basic\">\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-labs\" title=\"PO List View Labs\">\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.html\"> </file>\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-hiring-processes\" title=\"PO List View - Hiring Processes\">\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-list-view',\n  templateUrl: './po-list-view.component.html',\n  animations: [\n    trigger('showHideDetail', [\n      state('*', style({ 'overflow-y': 'visible' })),\n      state('void', style({ 'overflow-y': 'hidden' })),\n      transition('* => void', [style({ height: '*', 'overflow-y': 'hidden' }), animate(100, style({ height: 0 }))]),\n      transition('void => *', [style({ height: '0' }), animate(100, style({ height: '*' }))])\n    ])\n  ]\n})\nexport class PoListViewComponent extends PoListViewBaseComponent implements AfterContentInit, DoCheck {\n  @ContentChild(PoListViewContentTemplateDirective, { static: true })\n  listViewContentTemplate: PoListViewContentTemplateDirective;\n  @ContentChild(PoListViewDetailTemplateDirective, { static: true })\n  listViewDetailTemplate: PoListViewDetailTemplateDirective;\n\n  @ViewChild('popup', { static: true }) poPopupComponent: PoPopupComponent;\n\n  private differ;\n\n  constructor(private changeDetector: ChangeDetectorRef, differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  get hasContentTemplate(): boolean {\n    return !!this.listViewContentTemplate;\n  }\n\n  get hasDetailTemplate(): boolean {\n    return !!this.listViewDetailTemplate;\n  }\n\n  get displayShowMoreButton(): boolean {\n    return this.items && this.items.length > 0 && this.showMore.observers.length > 0;\n  }\n\n  get showButtonsActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 0 && this.visibleActions.length <= 2;\n  }\n\n  get showPopupActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 2;\n  }\n\n  get titleHasAction() {\n    return this.titleAction.observers.length > 0;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterContentInit(): void {\n    this.initShowDetail();\n  }\n\n  ngDoCheck() {\n    this.checkItemsChange();\n  }\n\n  checkTitleType(item: any) {\n    if (this.propertyLink && item[this.propertyLink]) {\n      return item[this.propertyLink].startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n  getItemTitle(item) {\n    return this.hasContentTemplate && this.listViewContentTemplate.title\n      ? this.listViewContentTemplate.title(item)\n      : item[this.propertyTitle];\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  returnBooleanValue(listViewAction: PoListViewAction, item: any) {\n    return isTypeof(listViewAction.disabled, 'function')\n      ? (<any>listViewAction).disabled(item)\n      : listViewAction.disabled;\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n  togglePopup(item, targetRef: HTMLElement) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(item);\n  }\n\n  private checkItemsChange() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && this.items && this.items.length && this.select && !this.hideSelectAll) {\n      this.showHeader = true;\n    }\n  }\n\n  private initShowDetail() {\n    if (this.items && this.items.length > 0 && this.hasDetailTemplate && this.listViewDetailTemplate.showDetail) {\n      this.items.forEach(item => (item.$showDetail = this.listViewDetailTemplate.showDetail(item)));\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoListViewComponent } from './po-list-view.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-list-view`.\n *\n * > Para o correto funcionamento do componente `po-list-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, PoButtonModule, PoPopupModule],\n  declarations: [PoListViewComponent, PoListViewContentTemplateDirective, PoListViewDetailTemplateDirective],\n  exports: [PoListViewComponent, PoListViewContentTemplateDirective, PoListViewDetailTemplateDirective],\n  providers: [],\n  schemas: []\n})\nexport class PoListViewModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nconst PO_BADGE_COLORS = [\n  'color-01',\n  'color-02',\n  'color-03',\n  'color-04',\n  'color-05',\n  'color-06',\n  'color-07',\n  'color-08',\n  'color-09',\n  'color-10',\n  'color-11',\n  'color-12'\n];\nconst PO_BADGE_COLOR_DEFAULT = 'color-07';\n\n/**\n * @description\n *\n * @docsPrivate\n *\n * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.\n */\n@Directive()\nexport class PoBadgeBaseComponent {\n  private _color: string;\n  private _value: number;\n\n  badgeValue: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a cor de fundo do componente e aceita os valores:\n   *\n   * <span class=\"dot po-color-01\"></span> `color-01`\n   *\n   * <span class=\"dot po-color-02\"></span> `color-02`\n   *\n   * <span class=\"dot po-color-03\"></span> `color-03`\n   *\n   * <span class=\"dot po-color-04\"></span> `color-04`\n   *\n   * <span class=\"dot po-color-05\"></span> `color-05`\n   *\n   * <span class=\"dot po-color-06\"></span> `color-06`\n   *\n   * <span class=\"dot po-color-07\"></span> `color-07`\n   *\n   * <span class=\"dot po-color-08\"></span> `color-08`\n   *\n   * <span class=\"dot po-color-09\"></span> `color-09`\n   *\n   * <span class=\"dot po-color-10\"></span> `color-10`\n   *\n   * <span class=\"dot po-color-11\"></span> `color-11`\n   *\n   * <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * @default `color-07`\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @description\n   *\n   * NÃºmero exibido no componente, caso o mesmo seja maior que 99 o valor exibido serÃ¡ 99+.\n   */\n  @Input('p-value') set value(value: number) {\n    this._value = convertToInt(value);\n    this.setBadgeValue(this._value);\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  private setBadgeValue(value: number) {\n    const validRangeValue = (value || value === 0) && value >= 0 && value < 100;\n    this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { PoBadgeBaseComponent } from './po-badge-base.component';\n\n/**\n * @docsExtends PoBadgeBaseComponent\n *\n * @docsPrivate\n */\n@Component({\n  selector: 'po-badge',\n  templateUrl: './po-badge.component.html'\n})\nexport class PoBadgeComponent extends PoBadgeBaseComponent {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoBadgeComponent } from './po-badge.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-badge.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PoBadgeComponent],\n  exports: [PoBadgeComponent]\n})\nexport class PoBadgeModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { PoMenuItemFiltered } from '../po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuFilter } from '../po-menu-filter/po-menu-filter.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a interface `PoMenuFilter`, utilizado para fazer requisiÃ§Ãµes ao serviÃ§o informado pelo usuÃ¡rio,\n * caso for uma URL, no componente `po-menu`.\n */\n@Injectable()\nexport class PoMenuService implements PoMenuFilter {\n  private _url: string;\n\n  get url(): string {\n    return this._url;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  configProperties(url: string) {\n    this._url = url;\n  }\n\n  getFilteredData(search: string, params?: any): Observable<Array<PoMenuItemFiltered>> {\n    const filterParams = {\n      search,\n      ...params\n    };\n\n    return this.http\n      .get(this.url, { params: filterParams })\n      .pipe(map((response: { items: Array<PoMenuItemFiltered> }) => response && response.items));\n  }\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport {\n  browserLanguage,\n  convertToBoolean,\n  convertToInt,\n  isExternalLink,\n  isTypeof,\n  poLocaleDefault,\n  validValue\n} from '../../utils/util';\n\nimport { PoMenuFilter } from './po-menu-filter/po-menu-filter.interface';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuService } from './services/po-menu.service';\n\nexport const poMenuLiteralsDefault = {\n  en: { itemNotFound: 'Item not found.' },\n  es: { itemNotFound: 'Elemento no encontrado.' },\n  pt: { itemNotFound: 'Item nÃ£o encontrado.' }\n};\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral que Ã© utilizado para navegaÃ§Ã£o nas pÃ¡ginas de uma aplicaÃ§Ã£o.\n *\n * O componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informaÃ§Ãµes dos itens de menu como\n * textos, links para redirecionamento, aÃ§Ãµes, atÃ© 4 nÃ­veis de menu e Ã­cones para o primeiro nÃ­vel de menu.\n */\n@Directive()\nexport abstract class PoMenuBaseComponent {\n  private _collapsed = false;\n  private _filter = false;\n  private _level;\n  private _logo: string;\n  private _maxLevel = 4;\n  private _menus = [];\n  private _params: any;\n  private _service: string | PoMenuFilter;\n  private _shortLogo: string;\n\n  allowIcons: boolean;\n  allowCollapseMenu: boolean;\n\n  filteredItems;\n  filterService: PoMenuFilter;\n\n  readonly literals = {\n    ...poMenuLiteralsDefault[poLocaleDefault],\n    ...poMenuLiteralsDefault[browserLanguage()]\n  };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\n   *\n   * > Utilize esta propriedade para iniciar o menu colapsado.\n   *\n   * > Ao utilizar os mÃ©todos [`colapse`](documentation/po-menu#colapseMethod), [`expand`](documentation/po-menu#expandMethod) e\n   * [`toggle`](documentation/po-menu#toggleMethod) o valor desta propriedade nÃ£o Ã© alterado.\n   *\n   * **Importante:**\n   *\n   * > O menu serÃ¡ colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   *\n   * @default `false`\n   */\n  @Input('p-collapsed') set collapsed(collapsed: boolean) {\n    this._collapsed = convertToBoolean(collapsed);\n\n    this.validateCollapseClass();\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  /** Lista dos itens do menu. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  get maxLevel() {\n    return this._maxLevel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um campo para pesquisa no menu.\n   * A pesquisa Ã© realizada em todos os nÃ­veis do menu e busca apenas pelos itens que contÃ©m uma aÃ§Ã£o e/ou link definidos,\n   * ou tambÃ©m, pode ser realizada atravÃ©s de um serviÃ§o definido na propriedade `p-service`.\n   *\n   * > O campo de pesquisa Ã© desabilitado se o menu estiver colapsado.\n   *\n   * @default `false`\n   */\n  @Input('p-filter') set filter(filter: boolean) {\n    this._filter = <any>filter === '' ? true : convertToBoolean(filter);\n    this.filteredItems = [...this._menus];\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ utilizado para realizar o filtro de itens do\n   * menu quando realizar uma busca. Caso haja a necessidade de customizaÃ§Ã£o, pode ser informado um\n   * serviÃ§o implementando a interface `PoMenuFilter`.\n   *\n   * Caso utilizada uma URL, o serviÃ§o deve retornar os dados conforme o\n   * [Guia de implementaÃ§Ã£o de APIs](https://po-ui.io/guides/api) do PO UI.\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando o valor digitado\n   * no parÃ¢metro `search`, veja exemplo:\n   *\n   * > O filtro no serviÃ§o serÃ¡ realizado caso contenha no mÃ­nimo trÃªs caracteres no campo de busca, por exemplo `tot`.\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas\n   * ```\n   *\n   * > Ã necessÃ¡rio que propriedade `p-filter` esteja habilitada.\n   */\n  @Input('p-service') set service(value: string | PoMenuFilter) {\n    this._service = value || undefined;\n\n    this.configService(this.service);\n  }\n\n  get service() {\n    return this._service;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deve ser informado um objeto que deseja-se utilizar na requisiÃ§Ã£o de filtro dos itens de menu.\n   *\n   * Caso utilizado um serviÃ§o customizado, implementando a interface `PoMenuFilter`, o valor desta propriedade\n   * serÃ¡ passado como parÃ¢metro, na funÃ§Ã£o `getFilteredData`.\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando os valores informados\n   * nesta propriedade em conjunto com o parÃ¢metro `search`, veja exemplo:\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\" [p-params]=\"{ company: 1, user: 297767512 }\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\n   * ```\n   */\n  @Input('p-params') set params(value: any) {\n    this._params = value && isTypeof(value, 'object') ? value : undefined;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver expandido, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida o espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `24px` de altura e `224px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver colapsado, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida passa a assumir o valor informado na propriedade `p-logo` e na ausÃªncia desta o\n   * espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `48px` de altura e `48px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   * - Caso nÃ£o informar um valor, esta propriedade passa a assumir o valor informado na propriedade `p-logo`.\n   */\n  @Input('p-short-logo') set shortLogo(value: any) {\n    this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get shortLogo() {\n    return this._shortLogo;\n  }\n\n  constructor(public menuService: PoMenuService) {}\n\n  private configService(service: string | PoMenuFilter) {\n    if (typeof service === 'string' && service.trim()) {\n      // service url\n      this.menuService.configProperties(service);\n      this.filterService = this.menuService;\n    } else if (typeof service === 'object' && service.getFilteredData) {\n      // custom service\n      this.filterService = service;\n    } else {\n      this.filterService = undefined;\n    }\n  }\n\n  protected setMenuExtraProperties() {\n    this.allowIcons = !!this.menus.length;\n    this.allowCollapseMenu = !!this.menus.length;\n\n    this.menus.forEach(menuItem => {\n      this._level = 1;\n      this.allowIcons = this.allowIcons ? validValue(menuItem.icon) : false;\n      this.allowCollapseMenu = this.allowCollapseMenu && this.allowIcons ? validValue(menuItem.shortLabel) : false;\n      this.removeBadgeAlert(menuItem);\n      this.setMenuItemProperties(menuItem);\n\n      if (menuItem.subItems) {\n        this._level++;\n        this.processSubItems(menuItem);\n      }\n    });\n  }\n\n  protected setMenuItemProperties(menuItem: PoMenuItem): void {\n    menuItem['id'] = menuItem['id'] || uuid();\n    menuItem['level'] = this._level;\n    menuItem['type'] = this.setMenuType(menuItem);\n  }\n\n  protected validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n  private processSubItems(menu) {\n    menu.subItems.forEach((menuItem, index, menuItems) => {\n      const previousItem = menuItems[index - 1];\n      if (previousItem && previousItem.subItems) {\n        this._level = previousItem['level'];\n      }\n\n      if (this._level <= this.maxLevel) {\n        this.setMenuItemProperties(menuItem);\n\n        if (menuItem.subItems) {\n          this._level++;\n          this.processSubItems(menuItem);\n        }\n      }\n\n      if (!menu['badgeAlert']) {\n        menu = this.setMenuBadgeAlert(menu, menuItem);\n      }\n    });\n\n    menu.subItems = Object.assign([], menu.subItems);\n  }\n\n  private removeBadgeAlert(menuItem: PoMenuItem): void {\n    if (menuItem['badgeAlert']) {\n      delete menuItem['badgeAlert'];\n    }\n\n    if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => this.removeBadgeAlert(subItem));\n    }\n  }\n\n  private setMenuBadgeAlert(parent: PoMenuItem, child: PoMenuItem): PoMenuItem {\n    const childHasSubItems = child.subItems && child.subItems.length;\n    const childHasBadgeAlert = child['badgeAlert'];\n    const childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;\n\n    parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);\n\n    return parent;\n  }\n\n  private setMenuType(menuItem: PoMenuItem): string {\n    if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {\n      return 'subItems';\n    }\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuItem): void {\n    if (!menuItem.label || menuItem.label.trim() === '') {\n      throw new Error('O atributo PoMenuItem.label nÃ£o pode ser vazio.');\n    } else if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => {\n        this.validateMenu(subItem);\n      });\n    }\n  }\n\n  protected abstract validateCollapseClass();\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoMenuComponent\n *\n * @description\n *\n * Esta diretiva permite adicionar um conteÃºdo personalizado entre a logo e o campo de filtro do cabeÃ§alho do\n * [`po-menu`](/documentation/po-menu).\n *\n * Para personalizar o conteÃºdo do cabeÃ§alho deve-se utilizar a diretiva `p-menu-header-template` dentro da *tag* do\n * [`po-menu`](/documentation/po-menu). Podendo ser utilizada de duas formas:\n *\n * Com `ng-template`\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <ng-template p-menu-header-template>\n *     ...\n *   </ng-template>\n * </po-menu>\n * ...\n * ```\n *\n * ou com *syntax sugar*\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <div *p-menu-header-template>\n *     ...\n *   </div>\n * </po-menu>\n * ...\n * ```\n *\n * > Quando o menu estiver colapsado ou tela for _mobile_ o conteÃºdo personalizado nÃ£o serÃ¡ exibido.\n */\n@Directive({\n  selector: '[p-menu-header-template]'\n})\nexport class PoMenuHeaderTemplateDirective {\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu.\n */\n@Injectable()\nexport class PoMenuItemsService {\n  private subjectParent = new Subject<any>();\n  private subjectChild = new Subject<any>();\n\n  // Envia informaÃ§Ãµes do click do po-menu-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Recebe do po-menu-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n  // Recebe do po-menu as informaÃ§Ãµes processadas do click de um po-menu-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { getFormattedLink, isMobile, openExternalLink } from '../../utils/util';\n\nimport { PoMenuBaseComponent } from './po-menu-base.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuItemFiltered } from './po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuItemsService } from './services/po-menu-items.service';\nimport { PoMenuService } from './services/po-menu.service';\n\nconst poMenuDebounceTime = 400;\nconst poMenuMinLength = 3;\nconst poMenuRootLevel = 1;\n\n/**\n * @docsExtends PoMenuBaseComponent\n *\n * @description\n *\n * Aparece completo em telas com largura maior que 1200px, caso contrÃ¡rio o menu Ã© escondido e chamado por meio de um botÃ£o.\n *\n * O menu tambÃ©m pode ser colapsado. Essa opÃ§Ã£o Ã© habilitada quando todos os itens de primeiro nÃ­vel possuÃ­rem Ã­cones e textos curtos.\n * Se colapsado, somente os itens de primeiro nÃ­vel serÃ£o exibidos e, caso o item selecionado possua sub-nÃ­veis,\n * entÃ£o o menu alternarÃ¡ novamente para o estado aberto.\n *\n * Existe a possibilidade de customizar a logomarca, que Ã© exibida na parte superior do componente.\n *\n * E para adicionar um conteÃºdo personalizado entre a logomarca e o campo de filtro,\n * basta adicionar este conteÃºdo com a diretiva [**p-menu-header-template**](/documentation/po-menu-header-template).\n *\n * Caso utilizar o filtro de menus, Ã© possÃ­vel realizar buscas em serviÃ§o, apenas informando a URL do serviÃ§o ou a instÃ¢ncia de\n * um serviÃ§o customizado implementando a interface `PoMenuFilter`.\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-basic\" title=\"PO Menu Basic\">\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-labs\" title=\"PO Menu Labs\">\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-human-resources\" title=\"PO Menu - Human Resources\">\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.html\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.ts\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-menu',\n  templateUrl: './po-menu.component.html',\n  providers: [PoMenuItemsService, PoMenuService]\n})\nexport class PoMenuComponent extends PoMenuBaseComponent implements OnDestroy, OnInit, DoCheck {\n  @ContentChild(PoMenuHeaderTemplateDirective, { static: true }) menuHeaderTemplate: PoMenuHeaderTemplateDirective;\n\n  activeMenuItem: PoMenuItem;\n  collapsedMobile: boolean;\n  filterLoading = false;\n  groupedMenuItem: PoMenuItem;\n  linkActive: string;\n  mobileOpened: boolean = false;\n  noData: boolean = false;\n  parentRef: any;\n  timeoutFilter: any;\n\n  private filteringItems: boolean = false;\n  private menuInitialized: boolean = false;\n  private menuPrevious: string = null;\n  private resizeListener: () => void;\n\n  private itemSubscription: Subscription;\n  private routeSubscription: Subscription;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    viewRef: ViewContainerRef,\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private menuItemsService: PoMenuItemsService,\n    menuService: PoMenuService\n  ) {\n    super(menuService);\n    this.parentRef = viewRef['_hostView'][8];\n  }\n\n  private get isActiveItemMenuSubMenu() {\n    return this.activeMenuItem['level'] > this.groupedMenuItem['level'];\n  }\n\n  get enableCollapse() {\n    return this.isCollapsed && !this.collapsedMobile;\n  }\n\n  get enableCollapseButton() {\n    return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;\n  }\n\n  get hasFooter() {\n    return (\n      (this.allowCollapseMenu && !this.mobileOpened && this.enableCollapseButton) ||\n      (this.collapsed && !this.collapsedMobile)\n    );\n  }\n\n  get isCollapsed() {\n    return this.allowCollapseMenu && this.collapsed;\n  }\n\n  ngDoCheck() {\n    if (this.filteringItems && this.filter) {\n      return;\n    }\n\n    const menuCurrent = JSON.stringify(this.menus);\n\n    if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {\n      this.updateMenu();\n      this.validateCollapseClass();\n    }\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  ngOnInit() {\n    this.subscribeToMenuItem();\n    this.subscribeToRoute();\n\n    setTimeout(() => {\n      const urlRouter = this.checkingRouterChildrenFragments();\n      this.checkActiveMenuByUrl(urlRouter);\n    });\n  }\n\n  activateMenuByUrl(urlPath: string, menus: Array<PoMenuItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        const formattedLink = getFormattedLink(menu.link);\n        if (formattedLink === urlPath) {\n          this.linkActive = formattedLink;\n          this.activateMenuItem(menu);\n          return true;\n        } else {\n          return this.activateMenuByUrl(urlPath, menu.subItems);\n        }\n      });\n    }\n  }\n\n  checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  /**\n   * <a id=\"colapseMethod\"></a>\n   *\n   * *MÃ©todo para colapsar (retrair) o menu.\n   */\n  collapse() {\n    this.validateToggleMenu(true);\n  }\n\n  debounceFilter(filter: string) {\n    clearTimeout(this.timeoutFilter);\n\n    this.timeoutFilter = setTimeout(() => {\n      this.filterProcess(filter);\n    }, poMenuDebounceTime);\n  }\n\n  /**\n   * <a id=\"expandMethod\"></a>\n   *\n   * *MÃ©todo para expandir (aumentar) o menu.\n   */\n  expand() {\n    this.validateToggleMenu(false);\n  }\n\n  subscribeToMenuItem() {\n    this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuItem) => {\n      this.clickMenuItem(menu);\n    });\n  }\n\n  subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkingRouterChildrenFragments();\n        this.checkActiveMenuByUrl(urlRouter);\n      }\n    });\n  }\n\n  /**\n   * <a id=\"toggleMethod\"></a>\n   * *MÃ©todo que colapsa e expande o menu alternadamente.\n   *\n   * > *Os mÃ©todos apenas vÃ£o colapsar/expandir o menu se:\n   *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   */\n  toggle() {\n    this.validateToggleMenu(!this.collapsed);\n  }\n\n  toggleMenuMobile(): void {\n    this.mobileOpened = !this.mobileOpened;\n    this.collapsedMobile = this.collapsed && this.mobileOpened;\n\n    this.validateCollapseClass(this.collapsedMobile);\n\n    if (isMobile()) {\n      return;\n    }\n\n    if (this.mobileOpened) {\n      this.createResizeListener();\n    }\n  }\n\n  private activateCollapseSubMenuItem() {\n    this.clearGroupMenuIfFirstLevel(this.activeMenuItem);\n\n    if (!this.collapsed && this.activeMenuItem['level'] > poMenuRootLevel && this.isActiveItemMenuSubMenu) {\n      this.openParentMenu(this.activeMenuItem);\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = menu.link;\n    if (this.activeMenuItem['level'] > poMenuRootLevel) {\n      this.openParentMenu(this.activeMenuItem);\n    } else {\n      this.groupedMenuItem = null;\n    }\n    this.menuItemsService.sendToChildMenuClicked({\n      active: this.activeMenuItem,\n      grouped: this.groupedMenuItem,\n      activatedByRoute: true\n    });\n  }\n\n  private areSubMenus(menus: Array<PoMenuItem>) {\n    return menus.every(menu => menu['level'] > poMenuRootLevel);\n  }\n\n  private checkingRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private clearGroupMenuIfFirstLevel(activeMenuItem: PoMenuItem) {\n    if (activeMenuItem['level'] === poMenuRootLevel) {\n      this.groupedMenuItem = undefined;\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuItem) {\n    if (menu.action) {\n      this.executeMenuAction(menu);\n    }\n\n    if (menu['type'] === 'externalLink') {\n      openExternalLink(menu.link);\n    } else if (menu['type'] === 'internalLink') {\n      this.activateMenuItem(menu);\n    } else if (menu['type'] === 'subItems') {\n      if (this.filteringItems) {\n        this.filteringItems = false;\n      }\n\n      this.groupMenuItem(menu);\n    }\n\n    if (menu['type'] !== 'subItems') {\n      this.mobileOpened = false;\n    }\n  }\n\n  private convertToMenuItemFiltered(menuItem: any = { label: '', link: '' }): PoMenuItemFiltered {\n    const { label, link } = menuItem;\n\n    const menuItemFiltered: PoMenuItemFiltered = { label, link };\n\n    this.setMenuItemProperties(menuItemFiltered);\n\n    return menuItemFiltered;\n  }\n\n  private createResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.toggleResize();\n      this.resizeListener();\n    });\n  }\n\n  private executeMenuAction(menu: PoMenuItem): void {\n    if (typeof menu.action === 'string') {\n      this.parentRef[menu.action](menu);\n    } else {\n      menu.action.call(this.parentRef, menu);\n    }\n  }\n\n  private async filterItems(filter: string) {\n    const trimFilter = filter && filter.trim();\n\n    if (trimFilter) {\n      this.filteredItems = [];\n      this.filteredItems = this.filterService\n        ? await this.filterOnService(trimFilter)\n        : this.filterLocalItems(trimFilter);\n      this.filteringItems = true;\n    } else {\n      this.filteredItems = [...this.menus];\n      this.filteringItems = false;\n    }\n  }\n\n  private filterLocalItems(filter: string) {\n    const filteredItems = [];\n\n    this.findItems(this.menus, filter.toLowerCase(), filteredItems);\n\n    return filteredItems;\n  }\n\n  private filterProcess(filter: string) {\n    this.filterLoading = true;\n\n    this.filterItems(filter)\n      .then(() => {\n        this.filterLoading = false;\n\n        this.showNoData();\n        this.changeDetector.detectChanges();\n        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n      })\n      .catch(error => {\n        this.filterLoading = false;\n        Promise.reject(error);\n      });\n  }\n\n  private async filterOnService(search: string = '') {\n    if (search.length >= poMenuMinLength) {\n      return await this.filterService\n        .getFilteredData(search, this.params)\n        .pipe(map(menuItemsFiltered => menuItemsFiltered.map(menuItem => this.convertToMenuItemFiltered(menuItem))))\n        .toPromise();\n    } else {\n      return this.filteredItems;\n    }\n  }\n\n  private findItems(menus: Array<PoMenuItem>, filter: string, filteredItems: Array<any>) {\n    menus.forEach(menu => {\n      if (\n        (menu.label.toLowerCase().includes(filter) && !menu.subItems) ||\n        (menu.subItems && this.findItems(menu.subItems, filter, filteredItems))\n      ) {\n        filteredItems.push(menu);\n      }\n    });\n  }\n\n  private findParent(menus: Array<PoMenuItem>, menuItem: PoMenuItem): PoMenuItem {\n    const getParent = function (menuItems: Array<PoMenuItem>, id) {\n      if (menuItems) {\n        for (let index = 0; index < menuItems.length; index++) {\n          const menu = menuItems[index];\n          if (menu.subItems && menu.subItems.find(subItem => subItem['id'] === id)) {\n            return menu;\n          }\n          const found = getParent(menu.subItems, id);\n          if (found) {\n            return found;\n          }\n        }\n      }\n    };\n    return getParent(menus, menuItem['id']);\n  }\n\n  private findRootParent(menus: Array<PoMenuItem>, menu: PoMenuItem): PoMenuItem {\n    const findParent = this.findParent;\n\n    const getRootParent = function (menuItems: Array<PoMenuItem>, menuItem): PoMenuItem {\n      let parent = findParent(menuItems, menuItem);\n\n      if (parent['level'] !== poMenuRootLevel) {\n        parent = getRootParent(menuItems, parent);\n      }\n      return parent;\n    };\n    return getRootParent(menus, menu);\n  }\n\n  private getActiveMenuParent(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\n    if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {\n      return this.findRootParent(menus, activeMenuItem);\n    }\n  }\n\n  private groupMenuItem(menu: PoMenuItem): void {\n    if (this.collapsed) {\n      this.toggleMenuCollapse();\n    }\n\n    menu['isOpened'] = !menu['isOpened'];\n    this.groupedMenuItem = menu;\n\n    if (\n      this.activeMenuItem &&\n      menu['isOpened'] &&\n      this.isActiveItemMenuSubMenu &&\n      this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)\n    ) {\n      this.activateMenuItem(this.activeMenuItem);\n    }\n\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n  }\n\n  private isRootMenuEqualGroupedMenu(\n    menus: Array<PoMenuItem>,\n    activeMenuItem: PoMenuItem,\n    groupedMenuItem: PoMenuItem\n  ) {\n    const activeMenuRootParent = this.findRootParent(menus, activeMenuItem);\n    return activeMenuRootParent['id'] === groupedMenuItem['id'];\n  }\n\n  private openParentMenu(childMenu: PoMenuItem): void {\n    const parent = this.findParent(this.menus, childMenu);\n    parent['isOpened'] = true;\n    this.groupedMenuItem = parent;\n  }\n\n  private showNoData() {\n    this.noData = this.filteredItems.length === 0;\n  }\n\n  private toggleGroupedMenuItem() {\n    this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;\n  }\n\n  private toggleMenuCollapse(collapsed: boolean = false) {\n    this.collapsed = collapsed;\n\n    if (this.groupedMenuItem && this.activeMenuItem) {\n      this.groupedMenuItem =\n        this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;\n      this.toggleGroupedMenuItem();\n    }\n\n    if (this.activeMenuItem) {\n      this.activateCollapseSubMenuItem();\n      this.menuItemsService.sendToChildMenuClicked({\n        active: this.activeMenuItem,\n        grouped: this.groupedMenuItem,\n        activatedByRoute: true\n      });\n    }\n\n    this.updateMenu();\n  }\n\n  private toggleResize() {\n    if (this.mobileOpened) {\n      this.mobileOpened = false;\n      this.collapsedMobile = false;\n      this.validateCollapseClass(this.collapsedMobile);\n    }\n  }\n\n  private validateToggleMenu(collapsed: boolean) {\n    if (!this.allowCollapseMenu) {\n      return;\n    }\n\n    this.toggleMenuCollapse(collapsed);\n  }\n\n  private updateMenu() {\n    this.menuInitialized = true;\n    this.setMenuExtraProperties();\n    this.filteredItems = [...this.menus];\n    this.menuPrevious = JSON.stringify(this.menus);\n    this.validateMenus(this.menus);\n  }\n\n  protected validateCollapseClass(collapsedMobile?: boolean) {\n    const wrapper = this.element.nativeElement.parentNode;\n    this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'po-collapsed-menu');\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que apresenta o campo de pesquisa no po-menu.\n */\n@Component({\n  selector: 'po-menu-filter',\n  templateUrl: './po-menu-filter.component.html'\n})\nexport class PoMenuFilterComponent {\n  // VariÃ¡vel necessÃ¡ria para o po-clean identificar que deve ser criado.\n  readonly clean = true;\n\n  @Input('p-loading') loading: boolean;\n\n  // utilizado para repassar ao po-clean\n  @ViewChild('inputFilter', { read: ElementRef, static: true }) inputFilterElement: ElementRef;\n\n  @Output('p-filter') filter = new EventEmitter();\n\n  filterItems(search: string) {\n    this.filter.emit(search);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToInt, convertToBoolean } from '../../../utils/util';\n\nimport { PoMenuItem } from '../po-menu-item.interface';\nimport { PoMenuItemsService } from '../services/po-menu-items.service';\n\n// valor para que caibam 3 linhas de `label`\nconst poMenuItemSubItemSize = 98;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu.\n */\n@Component({\n  selector: 'po-menu-item',\n  templateUrl: './po-menu-item.component.html'\n})\nexport class PoMenuItemComponent implements OnDestroy, OnInit {\n  private _badgeValue: number;\n  private _isSelected: boolean = false;\n  private _isSubItem: boolean = false;\n  private _subItems: Array<PoMenuItem>;\n\n  isSelectedSubItem;\n  maxHeight: number = 0;\n\n  private itemSubscription: Subscription;\n\n  // AÃ§Ã£o que serÃ¡ chamada ao clicar no item.\n  @Input('p-action') action: string | Function;\n\n  // Indica se contÃ©m algum item filho com o badge.\n  @Input('p-badge-alert') badgeAlert: boolean;\n\n  // Cor do badge.\n  @Input('p-badge-color') badgeColor: string;\n\n  // Valor do badge.\n  @Input('p-badge-value') set badgeValue(badgeValue: number) {\n    this._badgeValue = convertToInt(badgeValue);\n  }\n\n  get badgeValue() {\n    return this._badgeValue;\n  }\n\n  // Indica se o menu estÃ¡ colapsado\n  @Input('p-collapsed-menu') collapsedMenu: boolean;\n\n  // Ãcone de menu\n  @Input('p-icon') icon: string;\n\n  // Identificador do item.\n  @Input('p-id') id: string;\n\n  // Indica se o item estÃ¡ aberto (menu agrupado)\n  @Input('p-is-opened') isOpened: boolean;\n\n  // Indica se o item estÃ¡ selecionado.\n  @Input('p-is-selected') set isSelected(value: boolean) {\n    this._isSelected = convertToBoolean(value);\n\n    this.isSelectedSubItem = this.isSelected && this.isSubItem;\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n\n  // Indica se o item Ã© um sub item\n  @Input('p-is-sub-item') set isSubItem(value: boolean) {\n    this._isSubItem = convertToBoolean(value);\n  }\n\n  get isSubItem() {\n    return this._isSubItem;\n  }\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-label') label: string;\n\n  // Indica qual em nÃ­vel do po-menu encontra-se.\n  @Input('p-level') level: number;\n\n  // Link do item.\n  @Input('p-link') link?: string;\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-short-label') shortLabel: string;\n\n  // Lista de sub-items.\n  @Input('p-sub-items') set subItems(subitems: Array<PoMenuItem>) {\n    this._subItems = subitems;\n    if (this.isOpened) {\n      this.calcMenuSubItemsMaxHeight();\n    }\n  }\n\n  get subItems() {\n    return this._subItems;\n  }\n\n  // Indica o tipo de item, como 'internalLink' ou 'subItems'.\n  @Input('p-type') type: string;\n\n  @ViewChild('menuSubItems') menuSubItems: ElementRef;\n\n  get canShowBadge() {\n    return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;\n  }\n\n  constructor(private menuItemsService: PoMenuItemsService) {}\n\n  ngOnDestroy(): void {\n    this.itemSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    // subscribe to menu component messages\n    this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n  clickMenuItem(event): void {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked({\n        link: this.link,\n        action: this.action,\n        id: this.id,\n        icon: this.icon,\n        label: this.label,\n        level: this.level,\n        subItems: this.subItems,\n        isSelected: this.isSelected,\n        isOpened: this.isOpened,\n        shortLabel: this.shortLabel,\n        type: this.type\n      });\n    }\n  }\n\n  private accordionAnimation(\n    menuActive: PoMenuItem,\n    menuOpened: PoMenuItem,\n    hasSubItemOpened: boolean,\n    activatedByRoute: boolean\n  ) {\n    if (this.id === menuOpened['id']) {\n      this.maxHeight = this.subItems.length * poMenuItemSubItemSize;\n    }\n\n    if (hasSubItemOpened) {\n      this.maxHeight = menuOpened['isOpened']\n        ? this.maxHeight + menuOpened.subItems.length * poMenuItemSubItemSize\n        : this.maxHeight - menuOpened.subItems.length * poMenuItemSubItemSize;\n\n      if (activatedByRoute) {\n        this.maxHeight = this.getMinimumHeight(0, this, menuActive);\n      }\n    }\n  }\n\n  private activateMenu(menu: any): void {\n    this.isSelected = menu && this.id === menu.id;\n  }\n\n  private calcMenuSubItemsMaxHeight() {\n    setTimeout(() => {\n      const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.po-menu-item'));\n      subItems.forEach((menuItem: any) => (this.maxHeight += menuItem.offsetHeight));\n    });\n  }\n\n  private getMinimumHeight(minimumHeight: number, menuItem: PoMenuItem, menuActive: PoMenuItem) {\n    minimumHeight += poMenuItemSubItemSize;\n\n    if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {\n      for (let index = 0; index < menuItem.subItems.length; index++) {\n        minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);\n      }\n    }\n\n    return minimumHeight;\n  }\n\n  private groupedMenu(menuActive: PoMenuItem, menuOpened: PoMenuItem, activatedByRoute: boolean = false): void {\n    const hasSubItemOpened =\n      menuOpened && this.id !== menuOpened['id'] ? this.hasSubItem(this.subItems, menuOpened['id']) : false;\n\n    this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);\n\n    this.isSelected = menuActive && !this.isOpened ? this.hasSubItem(this.subItems, menuActive['id']) : false;\n\n    if (!this.isOpened) {\n      this.maxHeight = 0;\n      return;\n    }\n    this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);\n  }\n\n  private hasSubItem(subItems: Array<PoMenuItem>, id: string): boolean {\n    if (subItems) {\n      return subItems.some(item => {\n        return item['id'] === id ? true : this.hasSubItem(item.subItems, id);\n      });\n    }\n  }\n\n  private isMenuOpened(menuOpened: PoMenuItem, hasSubItemOpened: boolean): boolean {\n    if (menuOpened) {\n      return this.id === menuOpened['id'] ? menuOpened['isOpened'] : hasSubItemOpened;\n    }\n\n    return false;\n  }\n\n  private processMenuItem(menu) {\n    if (this.type === 'internalLink') {\n      this.activateMenu(menu.active);\n      return;\n    }\n\n    if (this.type === 'subItems') {\n      this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);\n      return;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBadgeModule } from '../po-badge/po-badge.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\n\nimport { PoMenuComponent } from './po-menu.component';\nimport { PoMenuFilterComponent } from './po-menu-filter/po-menu-filter.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItemComponent } from './po-menu-item/po-menu-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, PoBadgeModule, PoFieldModule, PoLoadingModule],\n  declarations: [PoMenuComponent, PoMenuFilterComponent, PoMenuHeaderTemplateDirective, PoMenuItemComponent],\n  exports: [PoMenuComponent, PoMenuHeaderTemplateDirective]\n})\nexport class PoMenuModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral composto apenas por Ã­cones e com um nÃ­vel, utilizado para navegaÃ§Ã£o\n * em pÃ¡ginas internas, externas da aplicaÃ§Ã£o ou aciona uma aÃ§Ã£o.\n *\n * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informaÃ§Ãµes dos\n * itens de menu como textos, links para redirecionamento, aÃ§Ãµes e Ã­cones.\n */\n@Directive()\nexport class PoMenuPanelBaseComponent {\n  private _menus;\n\n  /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuPanelItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n\n    this.setMenuExtraProperties(this._menus);\n    this.validateMenus(this._menus);\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  private setMenuExtraProperties(menus: Array<PoMenuPanelItem>) {\n    menus.forEach(menuItem => this.setMenuItemProperties(<PoMenuPanelItemInternal>menuItem));\n  }\n\n  private setMenuItemProperties(menuItem: PoMenuPanelItemInternal) {\n    menuItem.id = menuItem.id || uuid();\n    menuItem.type = this.setMenuType(menuItem);\n  }\n\n  private setMenuType(menuItem: PoMenuPanelItem): string {\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuPanelItem) {\n    if (!menuItem.label) {\n      throw new Error('O atributo PoMenuPanelItem.label nÃ£o pode ser vazio.');\n    }\n\n    if (!menuItem.icon) {\n      throw new Error('O atributo PoMenuPanelItem.icon nÃ£o pode ser vazio.');\n    }\n  }\n\n  private validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu-panel.\n */\n@Injectable()\nexport class PoMenuPanelItemsService {\n  private subjectChild = new Subject<any>();\n  private subjectParent = new Subject<any>();\n\n  // Recebe do po-menu-panel-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Recebe do po-menu-panel as informaÃ§Ãµes processadas do click de um po-menu-panel-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n\n  // Envia informaÃ§Ãµes do click do po-menu-panel-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\n\n/**\n * @docsExtends PoMenuPanelBaseComponent\n *\n * @description\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-panel-basic\" title=\"PO Menu Panel Basic\">\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-labs\" title=\"PO Menu Panel Labs\">\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-customer\" title=\"PO Menu Panel - Customers\">\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-menu-panel',\n  templateUrl: './po-menu-panel.component.html'\n})\nexport class PoMenuPanelComponent extends PoMenuPanelBaseComponent implements OnDestroy, OnInit {\n  activeMenuItem: PoMenuPanelItem;\n  linkActive: string;\n  parentRef: any;\n\n  private routeSubscription: Subscription;\n  private itemSubscription: Subscription;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private location: Location,\n    private menuItemsService: PoMenuPanelItemsService,\n    private router: Router\n  ) {\n    super();\n    this.parentRef = viewRef['_hostView'][8];\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscribeToMenuItem();\n    this.subscribeToRoute();\n  }\n\n  private activateMenuByUrl(urlPath: string, menus: Array<PoMenuPanelItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        if (getFormattedLink(menu.link) === urlPath) {\n          this.activateMenuItem(menu);\n          return true;\n        }\n      });\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuPanelItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = getFormattedLink(menu.link);\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });\n  }\n\n  private checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuPanelItemInternal) {\n    if (menu.action) {\n      callFunction(menu.action, this.parentRef, menu);\n    }\n\n    if (menu.type === 'externalLink') {\n      openExternalLink(menu.link);\n    } else if (menu.type === 'internalLink') {\n      this.activateMenuItem(menu);\n    }\n  }\n\n  private subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(rounterEvent => {\n      if (rounterEvent instanceof NavigationEnd) {\n        this.checkActiveMenuByUrl(this.location.path());\n      }\n    });\n  }\n\n  private subscribeToMenuItem() {\n    this.itemSubscription = this.menuItemsService\n      .receiveFromChildMenuClicked()\n      .subscribe((menu: PoMenuPanelItemInternal) => this.clickMenuItem(menu));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu-panel.\n */\n@Component({\n  selector: 'po-menu-panel-item',\n  templateUrl: './po-menu-panel-item.component.html'\n})\nexport class PoMenuPanelItemComponent implements OnDestroy, OnInit {\n  itemsSubscription: Subscription;\n\n  @Input('p-menu-item-internal') menuItemInternal: PoMenuPanelItemInternal;\n\n  constructor(private menuItemsService: PoMenuPanelItemsService) {}\n\n  ngOnDestroy() {\n    this.itemsSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    // subscribe to menu component messages\n    this.subscribeMenuClickedFromParent();\n  }\n\n  clickMenuItem(event) {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);\n    }\n  }\n\n  private activateMenu(menu: PoMenuPanelItemInternal) {\n    this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;\n  }\n\n  private processMenuItem(menu) {\n    if (this.menuItemInternal.type === 'internalLink') {\n      this.activateMenu(menu.active);\n    }\n  }\n\n  private subscribeMenuClickedFromParent() {\n    this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoMenuPanelComponent } from './po-menu-panel.component';\nimport { PoMenuPanelItemComponent } from './po-menu-panel-item/po-menu-panel-item.component';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu-panel.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, PoFieldModule, PoTooltipModule],\n  declarations: [PoMenuPanelComponent, PoMenuPanelItemComponent],\n  exports: [PoMenuPanelComponent],\n  providers: [PoMenuPanelItemsService]\n})\nexport class PoMenuPanelModule {}\n","import { Component, Input, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-action',\n  templateUrl: './po-navbar-action.component.html'\n})\nexport class PoNavbarActionComponent {\n  private parentRef: any;\n\n  @Input('p-action') action?: Function;\n\n  @Input('p-icon') icon: string;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Input('p-tooltip-text') tooltip?: string;\n\n  constructor(viewContainerRef: ViewContainerRef, private router: Router) {\n    this.parentRef = viewContainerRef['_hostView'][8];\n  }\n\n  click() {\n    if (this.action) {\n      callFunction(this.action, this.parentRef || this);\n      return;\n    }\n\n    if (this.link) {\n      return this.openUrl(this.link);\n    }\n  }\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-action-popup',\n  templateUrl: './po-navbar-action-popup.component.html'\n})\nexport class PoNavbarActionPopupComponent {\n  @Input('p-icon-actions') iconActions: Array<PoNavbarIconAction>;\n\n  getLastIconAction() {\n    if (this.iconActions && this.iconActions.length) {\n      return this.iconActions[this.iconActions.length - 1].icon;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-actions',\n  templateUrl: './po-navbar-actions.component.html'\n})\nexport class PoNavbarActionsComponent {\n  private _iconActions: Array<PoNavbarIconAction>;\n\n  @Input('p-icon-actions') set iconActions(actions: Array<PoNavbarIconAction>) {\n    this._iconActions = actions.map(action => ({ ...action, separator: true, url: action.link }));\n  }\n\n  get iconActions() {\n    return this._iconActions;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoNavbarActionComponent } from './po-navbar-action/po-navbar-action.component';\nimport { PoNavbarActionPopupComponent } from './po-navbar-action-popup/po-navbar-action-popup.component';\nimport { PoNavbarActionsComponent } from './po-navbar-actions.component';\nimport { PoPopupModule } from '../../po-popup/po-popup.module';\nimport { PoTooltipModule } from '../../../directives/po-tooltip/po-tooltip.module';\n\n@NgModule({\n  imports: [CommonModule, PoPopupModule, PoTooltipModule],\n  declarations: [PoNavbarActionComponent, PoNavbarActionPopupComponent, PoNavbarActionsComponent],\n  exports: [PoNavbarActionsComponent]\n})\nexport class PoNavbarActionsModule {}\n","import { Input, Directive } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from '../../utils/util';\n\nimport { PoMenuComponent } from '../po-menu';\nimport { PoNavbarIconAction } from './interfaces/po-navbar-icon-action.interface';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarLiterals } from './interfaces/po-navbar-literals.interface';\n\nexport const poNavbarLiteralsDefault = {\n  en: <PoNavbarLiterals>{\n    navbarLinks: 'Navbar links'\n  },\n  es: <PoNavbarLiterals>{\n    navbarLinks: 'Navbar links'\n  },\n  pt: <PoNavbarLiterals>{\n    navbarLinks: 'Navbar links'\n  },\n  ru: <PoNavbarLiterals>{\n    navbarLinks: 'Navbar ÑÐ²ÑÐ·Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-navbar` Ã© um cabeÃ§alho fixo que permite apresentar uma lista de links para facilitar a navegaÃ§Ã£o pelas\n * pÃ¡ginas da aplicaÃ§Ã£o. TambÃ©m possui Ã­cones com aÃ§Ãµes.\n */\n@Directive()\nexport abstract class PoNavbarBaseComponent {\n  private _iconActions: Array<PoNavbarIconAction> = [];\n  private _items: Array<PoNavbarItem> = [];\n  private _literals: PoNavbarLiterals;\n  private _logo: string;\n  private _shadow: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes apresentadas em Ã­cones no lado direito do `po-navbar`.\n   */\n  @Input('p-icon-actions') set iconActions(value: Array<PoNavbarIconAction>) {\n    this._iconActions = Array.isArray(value) ? value : [];\n  }\n\n  get iconActions(): Array<PoNavbarIconAction> {\n    return this._iconActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de items do `po-navbar`.\n   */\n  @Input('p-items') set items(value: Array<PoNavbarItem>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items(): Array<PoNavbarItem> {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com a literal usada na propriedade `p-literals`.\n   *\n   * Para customizar a literal, basta declarar um objeto do tipo `PoNavbarLiterals` conforme exemplo abaixo:\n   *\n   * ```\n   *  const customLiterals: PoNavbarLiterals = {\n   *    navbarLinks: 'Itens de navegaÃ§Ã£o'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-navbar\n   *   [p-literals]=\"customLiterals\">\n   * </po-navbar>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoNavbarLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poNavbarLiteralsDefault[poLocaleDefault],\n        ...poNavbarLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poNavbarLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poNavbarLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a logo apresentada `po-navbar`.\n   */\n  @Input('p-logo') set logo(value: string) {\n    this._logo = value;\n\n    if (this.menu) {\n      this.validateMenuLogo();\n    }\n  }\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso jÃ¡ possua um menu na aplicaÃ§Ã£o o mesmo deve ser repassado para essa propriedade para que quando entre em modo\n   * responsivo os items do `po-navbar` possam ser adicionados no primeiro item do menu definido.\n   *\n   * > Ao utilizar menu e navbar com logo mantÃ©m apenas a logo do navbar.\n   *\n   * Exemplo:\n   *\n   * ```\n   * <po-navbar\n   *  [p-items]=\"items\"\n   *  [p-icon-actions]=\"iconActions\"\n   *  [p-menu]=\"userMenu\">\n   * </po-navbar>\n   * <div class=\"po-wrapper\">\n   *  <po-menu #userMenu\n   *   [p-menus]=\"[{ label: 'Item 1', link: '/' }]\">\n   *  </po-menu>\n   * </div>\n   * ```\n   */\n  @Input('p-menu') menu?: PoMenuComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica uma sombra na parte inferior do `po-navbar`.\n   *\n   * @default `false`\n   */\n  @Input('p-shadow') set shadow(value: boolean) {\n    this._shadow = convertToBoolean(value);\n  }\n\n  get shadow(): boolean {\n    return this._shadow;\n  }\n\n  protected abstract validateMenuLogo(): void;\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { PoNavbarItem } from '../../interfaces/po-navbar-item.interface';\n\nimport { isExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-item',\n  templateUrl: './po-navbar-item.component.html'\n})\nexport class PoNavbarItemComponent {\n  @Input('p-action') action: Function;\n\n  @Input('p-clickable') clickable?: boolean;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Output('p-click') click: EventEmitter<PoNavbarItem> = new EventEmitter<PoNavbarItem>();\n\n  get type() {\n    return isExternalLink(this.link) ? 'externalLink' : 'internalLink';\n  }\n\n  itemClick(label?: string, link?: string) {\n    if (this.action) {\n      this.action({ label, link });\n    }\n\n    this.click.emit();\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoNavbarItem } from '../interfaces/po-navbar-item.interface';\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\n\n@Component({\n  selector: 'po-navbar-items',\n  templateUrl: './po-navbar-items.component.html'\n})\nexport class PoNavbarItemsComponent implements OnInit, OnDestroy {\n  selectedItem: PoNavbarItem;\n\n  private routeSubscription: Subscription;\n\n  @ViewChild('navbarItemsContainer', { read: ElementRef, static: true }) navbarItemsContainer: ElementRef;\n\n  @ViewChildren(PoNavbarItemComponent, { read: ElementRef }) allNavbarItems: QueryList<any>;\n\n  @Input('p-items') items: Array<PoNavbarItem>;\n\n  constructor(private router: Router) {}\n\n  ngOnDestroy() {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscribeToRoute();\n  }\n\n  selectItem(item: PoNavbarItem) {\n    this.selectedItem = item;\n  }\n\n  private checkActiveItemByUrl(urlRouter: string) {\n    this.selectedItem = this.items.find(item => item.link === urlRouter);\n  }\n\n  private checkRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkRouterChildrenFragments();\n        this.checkActiveItemByUrl(urlRouter);\n      }\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoMenuItem } from '../po-menu';\nimport { PoNavbarBaseComponent } from './po-navbar-base.component';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarItemsComponent } from './po-navbar-items/po-navbar-items.component';\n\nconst poNavbarNavigationWidth = 88;\nconst poNavbarMenuMedia = 768;\nconst poNavbarMatchMedia = `(max-width: ${poNavbarMenuMedia}px)`;\nconst poNavbarTiming = '250ms ease';\n\n/**\n * @docsExtends PoNavbarBaseComponent\n */\n@Component({\n  selector: 'po-navbar',\n  templateUrl: './po-navbar.component.html'\n})\nexport class PoNavbarComponent extends PoNavbarBaseComponent implements AfterViewInit, OnDestroy {\n  disableRight: boolean;\n  showItemsNavigation: boolean = false;\n\n  private mediaQuery: any;\n  private offset: number = 0;\n  private player: AnimationPlayer;\n  private menuItems: Array<PoMenuItem>;\n\n  protected windowResizeListener: () => void;\n\n  get navbarItemNavigationDisableLeft() {\n    return this.offset === 0;\n  }\n\n  get navbarItemNavigationDisableRight() {\n    return this.disableRight && this.offset !== 0;\n  }\n\n  @ViewChild(PoNavbarItemsComponent, { read: ElementRef, static: true }) navbarItemsElement: ElementRef;\n\n  @ViewChild(PoNavbarItemsComponent, { static: true }) navbarItems: PoNavbarItemsComponent;\n\n  constructor(\n    private renderer: Renderer2,\n    private builder: AnimationBuilder,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    super();\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.displayItemsNavigation.bind(this));\n  }\n\n  ngAfterViewInit() {\n    this.displayItemsNavigation();\n\n    if (this.menu) {\n      this.initNavbarMenu();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.mediaQuery) {\n      this.mediaQuery.removeListener(this.onMediaQueryChange);\n    }\n  }\n\n  navigateItems(orientation: string) {\n    orientation === 'left' ? this.navigateLeft() : this.navigateRight();\n\n    this.animate(this.offset);\n  }\n\n  private allNavbarItemsWidth() {\n    return this.navbarItems.allNavbarItems.reduce(\n      (previous: any, current: any) => previous + current.nativeElement.offsetWidth,\n      0\n    );\n  }\n\n  private animate(offset: number) {\n    const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n    this.player = animation.create(this.navbarItems.navbarItemsContainer.nativeElement);\n    this.player.play();\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([animate(poNavbarTiming, keyframes([style({ transform: `translateX(${-offset}px)` })]))]);\n  }\n\n  private changeNavbarMenuItems(\n    isCollapsedMedia: any,\n    menuItems: Array<PoMenuItem>,\n    navbarItems: Array<PoNavbarItem>,\n    label: string\n  ) {\n    if (isCollapsedMedia) {\n      const subItems = [{ label, subItems: navbarItems }];\n      this.menu.menus = [...subItems, ...menuItems];\n    } else {\n      this.menu.menus = menuItems;\n    }\n  }\n\n  private calculateLeftNavigation() {\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const navbarItemOffset = navbarItem.nativeElement.offsetLeft;\n      const navbarItemWidth = navbarItem.nativeElement.offsetWidth;\n\n      if (navbarItemOffset >= this.offset) {\n        calculatedOffset = navbarItemOffset - (this.navbarItemsWidth() - navbarItemWidth);\n        return true;\n      }\n    });\n    return calculatedOffset;\n  }\n\n  private calculateRightNavigation(itemBreakPoint: number) {\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const offsetLeft = navbarItem.nativeElement.offsetLeft;\n      const finalPosition = navbarItem.nativeElement.offsetWidth + offsetLeft;\n\n      if (itemBreakPoint < finalPosition) {\n        calculatedOffset = offsetLeft;\n        return true;\n      }\n    });\n    return calculatedOffset;\n  }\n\n  private displayItemsNavigation() {\n    this.showItemsNavigation = this.navbarItemsWidth() < this.allNavbarItemsWidth() + poNavbarNavigationWidth;\n\n    this.changeDetector.detectChanges();\n\n    if (this.offset !== 0) {\n      this.setOffsetToZero();\n      this.animate(this.offset);\n    }\n  }\n\n  private initNavbarMenu() {\n    this.mediaQuery = window.matchMedia(poNavbarMatchMedia);\n    this.menuItems = this.menu.menus;\n\n    if (window.innerWidth < poNavbarMenuMedia) {\n      this.changeNavbarMenuItems(true, this.menuItems, this.items, this.literals.navbarLinks);\n    }\n\n    this.validateMenuLogo();\n\n    this.mediaQuery.addListener(this.onMediaQueryChange);\n  }\n\n  private navbarItemsWidth() {\n    return this.navbarItemsElement.nativeElement.offsetWidth;\n  }\n\n  private navigateLeft() {\n    this.disableRight = false;\n\n    this.offset = this.calculateLeftNavigation();\n\n    if (this.offset < 0) {\n      this.setOffsetToZero();\n    }\n  }\n\n  private navigateRight() {\n    const maxAllowedOffset = this.allNavbarItemsWidth() - this.navbarItemsWidth();\n    const itemBreakPoint = this.offset + this.navbarItemsWidth();\n\n    this.offset = this.calculateRightNavigation(itemBreakPoint);\n\n    this.validateMaxOffset(maxAllowedOffset);\n  }\n\n  private onMediaQueryChange = changed => {\n    this.changeNavbarMenuItems(changed.matches, this.menuItems, this.items, this.literals.navbarLinks);\n  };\n\n  private setOffsetToZero() {\n    this.offset = 0;\n  }\n\n  private validateMaxOffset(maxAllowedOffset: number) {\n    if (this.offset >= maxAllowedOffset) {\n      this.offset = maxAllowedOffset;\n      this.disableRight = true;\n    }\n  }\n\n  protected validateMenuLogo() {\n    if (this.menu.logo && this.logo) {\n      this.menu.logo = undefined;\n      this.menu.changeDetector.detectChanges();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\nimport { PoNavbarItemsComponent } from './po-navbar-items.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [PoNavbarItemComponent, PoNavbarItemsComponent],\n  exports: [PoNavbarItemsComponent]\n})\nexport class PoNavbarItemsModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-logo',\n  templateUrl: './po-navbar-logo.component.html'\n})\nexport class PoNavbarLogoComponent {\n  @Input('p-logo') logo?: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation',\n  templateUrl: './po-navbar-item-navigation.component.html'\n})\nexport class PoNavbarItemNavigationComponent {\n  @Input('p-disable-left') disableLeft: boolean;\n\n  @Input('p-disable-right') disableRight: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation-icon',\n  templateUrl: './po-navbar-item-navigation-icon.component.html'\n})\nexport class PoNavbarItemNavigationIconComponent {\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-icon') icon: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemNavigationComponent } from './po-navbar-item-navigation.component';\nimport { PoNavbarItemNavigationIconComponent } from './po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [PoNavbarItemNavigationComponent, PoNavbarItemNavigationIconComponent],\n  exports: [PoNavbarItemNavigationComponent]\n})\nexport class PoNavbarItemNavigationModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoMenuModule } from '../po-menu/po-menu.module';\nimport { PoNavbarActionsModule } from './po-navbar-actions/po-navbar-actions.module';\nimport { PoNavbarComponent } from './po-navbar.component';\nimport { PoNavbarItemsModule } from './po-navbar-items/po-navbar-items.module';\nimport { PoNavbarLogoComponent } from './po-navbar-logo/po-navbar-logo.component';\nimport { PoNavbarItemNavigationModule } from './po-navbar-item-navigation/po-navbar-item-navigation.module';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-navbar`.\n *\n * > Para o correto funcionamento do componente `po-navbar`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [CommonModule, PoNavbarActionsModule, PoNavbarItemsModule, PoNavbarItemNavigationModule, PoMenuModule],\n  declarations: [PoNavbarComponent, PoNavbarLogoComponent],\n  exports: [PoNavbarComponent]\n})\nexport class PoNavbarModule {}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page** Ã© utilizado como container principal para os componentes po-page-header, po-page-content\n * e para as aÃ§Ãµes dos componentes po-page-edit e po-page-detail.\n *\n * Quando estiver sendo utilizado o componente po-menu junto ao po-page, ambos devem estar no mesmo nÃ­vel\n * e inseridos em uma div com a classe **po-wrapper**. Esta classe serÃ¡ responsÃ¡vel por fazer os cÃ¡lculos\n * necessÃ¡rios de alinhamento dos componentes.\n *\n * O componente **po-page** tambÃ©m pode ser utilizado sem o po-menu e neste caso o corpo da pÃ¡gina deve ser\n * definido com a altura de 100% para que o po-page maximize seu tamanho.\n * ```\n * html, body {\n *   height:100%;\n * }\n * ```\n */\nexport class PoPageBaseComponent {}\n","import { Component } from '@angular/core';\n\nimport { PoPageBaseComponent } from './po-page-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageBaseComponent\n */\n@Component({\n  selector: 'po-page',\n  templateUrl: './po-page.component.html'\n})\nexport class PoPageComponent extends PoPageBaseComponent {}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-content** Ã© utilizado como o container para o conteÃºdo da pÃ¡gina.\n */\nexport class PoPageContentBaseComponent {\n  protected resizeListener: () => void;\n}\n","import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoPageContentBaseComponent } from './po-page-content-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageContentBaseComponent\n */\n@Component({\n  selector: 'po-page-content',\n  templateUrl: './po-page-content.component.html'\n})\nexport class PoPageContentComponent extends PoPageContentBaseComponent implements AfterViewInit, OnDestroy {\n  contentOpacity: number = 0;\n  height: string = '90%';\n  overflowY: string = 'none';\n\n  constructor(public renderer: Renderer2) {\n    super();\n    this.initializeListeners();\n  }\n\n  ngAfterViewInit() {\n    this.recalculateHeaderSize();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  recalculateHeaderSize() {\n    setTimeout(() => {\n      const pageHeaderElement: HTMLElement = document.querySelector('div.po-page-header');\n\n      this.setHeightContent(pageHeaderElement);\n      this.contentOpacity = 1;\n    });\n  }\n\n  setHeightContent(poPageHeader: HTMLElement) {\n    const bodyHeight = document.body.clientHeight;\n    const pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;\n    const newHeight = bodyHeight - pageHeaderHeight;\n\n    this.height = `${newHeight}px`;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.recalculateHeaderSize();\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n}\n","import { Input, ViewChild, Directive } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageAction } from '../po-page-action.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\n\n/**\n * @description\n *\n * O componente `po-page-default` Ã© utilizado como o container principal para as telas sem um template definido.\n */\n@Directive()\nexport abstract class PoPageDefaultBaseComponent {\n  private _actions?: Array<PoPageAction> = [];\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.\n   */\n  @Input('p-actions') set actions(actions: Array<PoPageAction>) {\n    this._actions = Array.isArray(actions) ? actions : [];\n    this.setDropdownActions();\n  }\n\n  get actions(): Array<PoPageAction> {\n    return this._actions;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  // Seta a lista de aÃ§Ãµes no dropdown.\n  abstract setDropdownActions();\n}\n","import { AfterContentInit, Component, OnChanges, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageDefaultBaseComponent } from './po-page-default-base.component';\n\n/**\n * @docsExtends PoPageDefaultBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-default-basic\" title=\"PO Page Default Basic\">\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-labs\" title=\"PO Page Default Labs\">\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-dashboard\" title=\"PO Page Default - Dashboard\">\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-default',\n  templateUrl: './po-page-default.component.html'\n})\nexport class PoPageDefaultComponent extends PoPageDefaultBaseComponent implements AfterContentInit, OnChanges {\n  limitPrimaryActions: number = 3;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n\n  private maxWidthMobile: number = 480;\n  private parentRef: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef, private renderer: Renderer2, private router: Router) {\n    super();\n    this.parentRef = viewRef['_hostView'][8];\n  }\n\n  public ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n\n    this.renderer.listen('window', 'resize', (event: Event) => {\n      this.onResize(event);\n    });\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.setDropdownActions();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n      isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader() {\n    return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageDetailLiterals } from './po-page-detail-literals.interface';\n\nexport const poPageDetailLiteralsDefault = {\n  en: <PoPageDetailLiterals>{\n    back: 'Back',\n    edit: 'Edit',\n    remove: 'Remove'\n  },\n  es: <PoPageDetailLiterals>{\n    back: 'Volver',\n    edit: 'Editar',\n    remove: 'Eliminar'\n  },\n  pt: <PoPageDetailLiterals>{\n    back: 'Voltar',\n    edit: 'Editar',\n    remove: 'Remover'\n  },\n  ru: <PoPageDetailLiterals>{\n    back: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    edit: 'ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ',\n    remove: 'ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ðµ'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-detail** Ã© utilizado como container principal para a tela de\n * detalhamento de um registro, tendo a possibilidade de usar as aÃ§Ãµes de \"Voltar\", \"Editar\" e \"Remover\".\n */\n@Directive()\nexport class PoPageDetailBaseComponent {\n  private _literals: PoPageDetailLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-detail`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    edit: 'EdiÃ§Ã£o',\n   *    remove: 'ExclusÃ£o',\n   *    back: 'Menu'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    remove: 'Excluir registro permanentemente'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-detail\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-detail>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageDetailLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDetailLiteralsDefault[poLocaleDefault],\n        ...poPageDetailLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageDetailLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageDetailLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Voltar\".\n   *\n   * ```\n   * <po-page-detail (p-back)=\"myBackFunction()\">\n   * </po-page-detail>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Voltar\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-back') back? = new EventEmitter();\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Editar\".\n   *\n   * ```\n   * <po-page-detail (p-edit)=\"myEditFunction()\">\n   * </po-page-detail>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Editar\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-edit') edit? = new EventEmitter();\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Remover\".\n   *\n   * ```\n   * <po-page-detail (p-remove)=\"myRemoveFunction()\">\n   * </po-page-detail>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Remover\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-remove') remove? = new EventEmitter();\n}\n","import { Component } from '@angular/core';\n\nimport { PoPageDetailBaseComponent } from './po-page-detail-base.component';\n\n/**\n * @docsExtends PoPageDetailBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-detail-basic\" title=\"PO Page Detail Basic\">\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-labs\" title=\"PO Page Detail Labs\">\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-user\" title=\"PO Page Detail - User\">\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-detail',\n  templateUrl: './po-page-detail.component.html'\n})\nexport class PoPageDetailComponent extends PoPageDetailBaseComponent {\n  hasAnyAction(): boolean {\n    return this.hasEvent('back') || this.hasEvent('edit') || this.hasEvent('remove');\n  }\n\n  hasEditFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasEvent('edit') ? '' : 'po-icon-delete';\n    } else if (property === 'type') {\n      return this.hasEvent('edit') ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasEditOrRemoveFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasEvent('edit') || this.hasEvent('remove') ? '' : 'po-icon-arrow-left';\n    } else if (property === 'type') {\n      return this.hasEvent('edit') || this.hasEvent('remove') ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasEvent(event: string) {\n    return !!this[event].observers.length;\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n}\n","import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageEditLiterals } from './po-page-edit-literals.interface';\n\nexport const poPageEditLiteralsDefault = {\n  en: <PoPageEditLiterals>{\n    cancel: 'Cancel',\n    save: 'Save',\n    saveNew: 'Save and New'\n  },\n  es: <PoPageEditLiterals>{\n    cancel: 'Cancelar',\n    save: 'Guardar',\n    saveNew: 'Guardar y Nuevo'\n  },\n  pt: <PoPageEditLiterals>{\n    cancel: 'Cancelar',\n    save: 'Salvar',\n    saveNew: 'Salvar e Novo'\n  },\n  ru: <PoPageEditLiterals>{\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    save: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n    saveNew: 'Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ Ð¸ Ð½Ð¾Ð²ÑÐ¹'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-edit** Ã© utilizado como container principal para tela de ediÃ§Ã£o ou adiÃ§Ã£o de um\n * registro, tendo a possibilidade de usar as aÃ§Ãµes de \"Salvar\", \"Salvar e Novo\" e \"Cancelar\".\n *\n * Os botÃµes \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade `p-disable-submit`.\n * Esta propriedade pode ser utilizada para desabilitar os botÃµes caso exista um formulÃ¡rio invÃ¡lido na pÃ¡gina ou alguma\n * regra de negÃ³cio nÃ£o tenha sido atendida.\n */\n@Directive()\nexport class PoPageEditBaseComponent {\n  private _literals: PoPageEditLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** Desabilita botÃµes de submissÃ£o (save e saveNew) */\n  @Input('p-disable-submit') disableSubmit?: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-edit`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Voltar',\n   *    save: 'Confirmar',\n   *    saveNew: 'Confirmar e criar um novo'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Cancelar processo'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-edit\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-edit>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageEditLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageEditLiteralsDefault[poLocaleDefault],\n        ...poPageEditLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageEditLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageEditLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Cancelar\".\n   *\n   * ```\n   * <po-page-edit (p-cancel)=\"myCancelFunction()\">\n   * </po-page-edit>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Cancelar\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-cancel') cancel? = new EventEmitter();\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Salvar\".\n   *\n   * ```\n   * <po-page-edit (p-save)=\"mySaveFunction()\">\n   * </po-page-edit>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Salvar\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-save') save? = new EventEmitter();\n\n  /**\n   * Evento que serÃ¡ disparado ao clicar no botÃ£o de \"Salvar e Novo\".\n   *\n   * ```\n   * <po-page-edit (p-save-new)=\"mySaveNewFunction()\">\n   * </po-page-edit>\n   * ```\n   *\n   * > Caso nÃ£o utilizar esta propriedade, o botÃ£o de \"Salvar e Novo\" nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-save-new') saveNew? = new EventEmitter();\n}\n","import { Component } from '@angular/core';\n\nimport { PoPageEditBaseComponent } from './po-page-edit-base.component';\n\n/**\n * @docsExtends PoPageEditBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-edit-basic\" title=\"PO Page Edit Basic\">\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-labs\" title=\"PO Page Edit Labs\">\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-user\" title=\"PO Page Edit - User\">\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-edit',\n  templateUrl: './po-page-edit.component.html'\n})\nexport class PoPageEditComponent extends PoPageEditBaseComponent {\n  getIcon(icon: string): string {\n    if (icon === 'cancel') {\n      return this.isPrimaryAction('cancel') ? 'po-icon-close' : '';\n    }\n\n    if (icon === 'saveNew') {\n      return this.isPrimaryAction('saveNew') ? 'po-icon-ok' : '';\n    }\n\n    return '';\n  }\n\n  getType(type: string): string {\n    const isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');\n    const isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');\n\n    return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';\n  }\n\n  hasAnyAction(): boolean {\n    return this.hasEvent('cancel') || this.hasEvent('saveNew') || this.hasEvent('save');\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  hasEvent(event: string) {\n    return !!this[event].observers.length;\n  }\n\n  private isPrimaryAction(action: string): boolean {\n    const hasSaveAction = this.hasEvent('save');\n\n    if (action === 'saveNew') {\n      return !hasSaveAction;\n    }\n\n    if (action === 'cancel') {\n      const hasSaveNewAction = this.hasEvent('saveNew');\n\n      return !hasSaveNewAction && !hasSaveAction;\n    }\n\n    return false;\n  }\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-header** Ã© responsÃ¡vel pelo tÃ­tulo da pÃ¡gina e container dos botÃµes de aÃ§Ãµes dos componentes\n * po-page-list e po-page-base.\n */\n@Directive()\nexport class PoPageHeaderBaseComponent {\n  private _breadcrumb: PoBreadcrumb;\n\n  /** Objeto com propriedades do breadcrumb. */\n\n  @Input('p-breadcrumb') set breadcrumb(value: PoBreadcrumb) {\n    this._breadcrumb = value;\n  }\n  get breadcrumb(): PoBreadcrumb {\n    return this._breadcrumb;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n}\n","import { Component } from '@angular/core';\n\nimport { PoPageHeaderBaseComponent } from './po-page-header-base.component';\n\n/**\n * @docsPrivate\n * @docsExtends PoPageHeaderBaseComponent\n */\n@Component({\n  selector: 'po-page-header',\n  templateUrl: './po-page-header.component.html'\n})\nexport class PoPageHeaderComponent extends PoPageHeaderBaseComponent {}\n","import { Input, Directive } from '@angular/core';\n\nimport { poLocaleDefault } from './../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoDisclaimerGroup } from '../../po-disclaimer-group/po-disclaimer-group.interface';\nimport { PoPageDefaultBaseComponent } from '../po-page-default/po-page-default-base.component';\nimport { PoPageFilter } from './../po-page-filter.interface';\nimport { PoPageListLiterals } from './po-page-list-literals.interface';\n\nexport const poPageListLiteralsDefault = {\n  en: <PoPageListLiterals>{\n    otherActions: 'Other actions'\n  },\n  es: <PoPageListLiterals>{\n    otherActions: 'Otras acciones'\n  },\n  pt: <PoPageListLiterals>{\n    otherActions: 'Outras aÃ§Ãµes'\n  },\n  ru: <PoPageListLiterals>{\n    otherActions: 'ÐÑÑÐ³Ð¸Ðµ Ð´ÐµÐ¹ÑÑÐ²Ð¸Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-page-list` Ã© utilizado como o container principal para as telas de listagem de dados,\n * podendo ser apresentado como lista ou tabela.\n *\n * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma funÃ§Ã£o que serÃ¡ executada no momento\n * da filtragem. Este comportamento pode ser acionado tanto ao *click* do Ã­cone [po-icon-search](/guides/icons)\n * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\n *\n * Para facilitar a manipulaÃ§Ã£o e visualizaÃ§Ã£o dos filtros aplicados, Ã© possÃ­vel tambÃ©m utilizar o componente\n * [`po-disclaimer-group`](/documentation/po-disclaimer-group).\n */\n@Directive()\nexport abstract class PoPageListBaseComponent extends PoPageDefaultBaseComponent {\n  private _disclaimerGroup?: PoDisclaimerGroup;\n  private _literals: PoPageListLiterals;\n\n  protected language: string;\n  protected resizeListener: () => void;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoBreadcrumb`.\n   */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoDisclaimerGroup`.\n   */\n  @Input('p-disclaimer-group') set disclaimerGroup(value: PoDisclaimerGroup) {\n    if (!value) {\n      value = <any>{};\n    }\n\n    this._disclaimerGroup = value;\n  }\n\n  get disclaimerGroup(): PoDisclaimerGroup {\n    return this._disclaimerGroup;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoPageFilter`.\n   */\n  @Input('p-filter') filter: PoPageFilter;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-list`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'Mais aÃ§Ãµes'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'AÃ§Ãµes da pÃ¡gina'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-list\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-list>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageListLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageListLiteralsDefault[poLocaleDefault],\n        ...poPageListLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageListLiteralsDefault[this.language];\n    }\n  }\n\n  get literals() {\n    return this._literals || poPageListLiteralsDefault[this.language];\n  }\n\n  constructor(languageService: PoLanguageService) {\n    super();\n\n    this.language = languageService.getShortLanguage();\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChange,\n  ViewChild,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageListBaseComponent } from './po-page-list-base.component';\n\n/**\n * @docsExtends PoPageListBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-list-basic\" title=\"PO Page List Basic\">\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-labs\" title=\"PO Page List Labs\">\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-hiring-processes\" title=\"PO Page List - Hiring Processes\">\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-list',\n  templateUrl: './po-page-list.component.html'\n})\nexport class PoPageListComponent extends PoPageListBaseComponent\n  implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  advancedSearch: string;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n  limitPrimaryActions: number = 3;\n  parentRef: ViewContainerRef;\n\n  private isRecalculate = true;\n  private maxWidthMobile: number = 480;\n\n  callFunction = callFunction;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /* istanbul ignore next */\n  constructor(\n    viewRef: ViewContainerRef,\n    languageService: PoLanguageService,\n    public renderer: Renderer2,\n    private router: Router,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    super(languageService);\n    this.parentRef = viewRef['_hostView'][8];\n    this.initializeListeners();\n  }\n\n  ngOnInit(): void {\n    this.advancedSearch = this.initializeFixedLiterals();\n  }\n\n  ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.setDropdownActions();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n      isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n  callActionFilter(field: string): void {\n    this.callFunction(this.filter[field], this.parentRef);\n    this.changeDetector.detectChanges();\n  }\n\n  onkeypress(key) {\n    if (key === 13) {\n      this.callActionFilter('action');\n    }\n  }\n\n  changeModel(newModel): void {\n    this.parentRef[this.filter.ngModel] = newModel;\n  }\n\n  // Recebe evento change do disclaimer e recalcula tela\n  onChangeDisclaimerGroup(disclaimers) {\n    if (\n      (disclaimers && disclaimers.length && this.isRecalculate) ||\n      (disclaimers.length === 0 && !this.isRecalculate)\n    ) {\n      this.poPageContent.recalculateHeaderSize();\n      this.isRecalculate = !this.isRecalculate;\n    }\n\n    if (this.disclaimerGroup && this.disclaimerGroup.change) {\n      this.disclaimerGroup.change(disclaimers);\n    }\n  }\n\n  private initializeFixedLiterals() {\n    const literal = {\n      pt: {\n        advancedSearch: 'Busca avanÃ§ada'\n      },\n      en: {\n        advancedSearch: 'Advanced search'\n      },\n      es: {\n        advancedSearch: 'BÃºsqueda avanzada'\n      },\n      ru: {\n        advancedSearch: 'Ð¿Ð¾Ð»Ð½ÑÐ¹ Ð¿Ð¾Ð¸ÑÐº'\n      }\n    };\n\n    return literal[this.language].advancedSearch;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.onResize(event);\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbModule } from '../po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoDisclaimerGroupModule } from '../po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDropdownModule } from '../po-dropdown/po-dropdown.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\nimport { PoModalModule } from './../po-modal/po-modal.module';\nimport { PoPageComponent } from './po-page.component';\nimport { PoPageContentComponent } from './po-page-content/po-page-content.component';\nimport { PoPageDefaultComponent } from './po-page-default/po-page-default.component';\nimport { PoPageDetailComponent } from './po-page-detail/po-page-detail.component';\nimport { PoPageEditComponent } from './po-page-edit/po-page-edit.component';\nimport { PoPageHeaderComponent } from './po-page-header/po-page-header.component';\nimport { PoPageListComponent } from './po-page-list/po-page-list.component';\n\n/**\n * @description\n * MÃ³dulo dos componentes po-page-default, po-page-edit, po-page-list, po-page-login e po-page-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoDisclaimerGroupModule,\n    PoDropdownModule,\n    PoFieldModule,\n    PoLanguageModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoPageComponent,\n    PoPageContentComponent,\n    PoPageDefaultComponent,\n    PoPageDetailComponent,\n    PoPageEditComponent,\n    PoPageHeaderComponent,\n    PoPageListComponent\n  ],\n  exports: [PoPageDetailComponent, PoPageDefaultComponent, PoPageEditComponent, PoPageListComponent]\n})\nexport class PoPageModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para o conjunto de cÃ­rculos que faz a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-circles',\n  templateUrl: './po-slide-circles.component.html'\n})\nexport class PoSlideCirclesComponent {\n  /** Index do slide atual. */\n  @Input('p-current-slide-index') currentSlideIndex: number;\n\n  /** Itens do slide. */\n  @Input('p-items') items: Array<any>;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToInt } from './../../utils/util';\n\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\n\nconst poSlideIntervalDefault = 4000;\n\n/**\n * @description\n *\n * Componente de slide para visualizaÃ§Ã£o e controle de elementos de forma cÃ­clica. Exibe um conjunto de imagens ou dados que permitem\n * customizar sua visualizaÃ§Ã£o utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\n *\n * #### Boas prÃ¡ticas:\n * - Utilizar imagens no slide, mesmo quando possui conteÃºdo personalizado.\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente Ã© destacar apenas informaÃ§Ãµes importantes.\n */\n@Directive()\nexport abstract class PoSlideBaseComponent {\n  private _interval: number = poSlideIntervalDefault;\n  private _height?: number;\n  private _slides: Array<PoSlideItem | string | any>;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Altura do po-slide, caso seja slide com template customizado, nÃ£o assume o valor `default`.\n   *\n   * @default `336`\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides nÃ£o trocam automaticamente.\n   *\n   * @default `4000`\n   */\n  @Input('p-interval') set interval(value: number) {\n    this._interval = convertToInt(value, poSlideIntervalDefault);\n    this._interval >= 1000 ? this.startInterval() : this.cancelInterval();\n  }\n\n  get interval(): number {\n    return this._interval;\n  }\n\n  /**\n   * @description\n   *\n   * Array de imagens ou dados para o slide, pode ser de trÃªs formas:\n   *\n   * - Array implementando objetos da interface `PoSlideItem`:\n   * ```\n   * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\n   * ```\n   * - Array de `strings` com os caminhos das imagens:\n   * ```\n   * ['/assets/image-1', '/assets/image-2' ]\n   * ```\n   * - Array com lista de itens (para utilizar template):\n   * ```\n   * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\n   * ```\n   *\n   * > As setas de navegaÃ§Ã£o e o controle com cÃ­rculos apenas serÃ£o renderizados caso possua mais de um slide.\n   */\n  @Input('p-slides') set slides(value: Array<PoSlideItem | string | any>) {\n    this._slides = value;\n    this.setSlideItems(value);\n\n    if (value && value.length) {\n      this.startSlide();\n    }\n  }\n\n  get slides(): Array<PoSlideItem | string | any> {\n    return this._slides;\n  }\n\n  abstract setSlideHeight(height: number): void;\n\n  protected abstract cancelInterval(): void;\n  protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;\n  protected abstract startSlide(): void;\n  protected abstract startInterval(): void;\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSlideComponent\n *\n * @description\n *\n * Esta diretiva permite a customizaÃ§Ã£o de um slide.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item do slide corrente.\n *  - Ãndice: `index` determina o Ã­ndice do slide corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-slide\n *   [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]\">\n *\n *   <ng-template p-slide-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"item.id\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-slide>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-slide\n *    [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]\">\n *\n *    <div *p-slide-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-slide>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-slide-content-template]'\n})\nexport class PoSlideContentTemplateDirective {\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { isIEOrEdge } from '../../../utils/util';\n\nimport { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para cada item do po-slide.\n */\n@Component({\n  selector: 'po-slide-item',\n  templateUrl: './po-slide-item.component.html'\n})\nexport class PoSlideItemComponent {\n  @ViewChild('slideItem', { static: true }) itemElement: ElementRef;\n\n  isIEOrEdge: any = isIEOrEdge();\n\n  /** AÃ§Ã£o executada ao clicar em uma imagem */\n  @Input('p-action') action: Function;\n\n  /** Texto alternativo quando a imagem nÃ£o Ã© encontrada */\n  @Input('p-alt') alt: string;\n\n  /** Dados para o template customizado */\n  @Input('p-data') data: Array<any>;\n\n  /** Caminho da imagem */\n  @Input('p-image') image: string;\n\n  /** Altura da imagem */\n  @Input('p-image-height') imageHeight: number;\n\n  /** Template customizado */\n  @Input('p-template') template: PoSlideContentTemplateDirective;\n\n  /** Link executado ao clicar em uma imagem */\n  @Input('p-link') link: string;\n\n  setLinkType() {\n    if (!this.template && this.link) {\n      return this.link.startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  HostListener,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoSlideBaseComponent } from './po-slide-base.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\nconst poSlideDefaultHeight = 336;\nconst poSlideIntervalMin = 1000;\nconst poSlideMinHeight = 192;\nconst poSlideTiming = '250ms ease';\n\n/**\n * @docsExtends PoSlideBaseComponent\n *\n * @example\n * <example name=\"po-slide-basic\" title=\"PO Slide Basic\">\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-labs\" title=\"PO Slide Labs\">\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-useful-articles\" title=\"PO Slide - Useful articles\">\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-landscapes\" title=\"PO Slide - Landscapes\">\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-slide',\n  templateUrl: './po-slide.component.html'\n})\nexport class PoSlideComponent extends PoSlideBaseComponent implements DoCheck, OnChanges {\n  private isLoaded: boolean = false;\n  private player: AnimationPlayer;\n  private setInterval: any;\n\n  private get hasElements() {\n    return !!this.slide.nativeElement.offsetWidth && !!this.itemsElements && !!this.itemsElements.length;\n  }\n\n  private get isImageSlide() {\n    return !this.slideContentTemplate;\n  }\n\n  private get offset() {\n    return this.currentSlideIndex * this.slideItemWidth;\n  }\n\n  get hasSlides() {\n    return !!this.slides && !!this.slides.length;\n  }\n\n  currentSlideIndex = 0;\n  imageHeight: number;\n  slideItems: Array<PoSlideItem | any> = [];\n  slideItemWidth: number;\n\n  @ContentChild(PoSlideContentTemplateDirective, { static: true })\n  slideContentTemplate: PoSlideContentTemplateDirective;\n\n  @ViewChild('slide', { static: true }) private slide: ElementRef;\n\n  @ViewChildren(PoSlideItemComponent) private itemsElements: QueryList<PoSlideItemComponent>;\n\n  constructor(private builder: AnimationBuilder) {\n    super();\n  }\n\n  @HostListener('window:resize') onResize() {\n    if (this.slide) {\n      this.setSlideItemWidth();\n      this.goToItem(this.currentSlideIndex);\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.isLoaded && this.hasElements) {\n      this.setSlideItemWidth();\n      this.isLoaded = true;\n\n      if (this.hasSlides) {\n        this.startSlide();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.height) {\n      this.setSlideHeight(this.height);\n    }\n  }\n\n  goToItem(index: number) {\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = index;\n    this.animate(this.offset);\n  }\n\n  nextControl() {\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.next();\n  }\n\n  next() {\n    if (this.currentSlideIndex + 1 === this.slideItems.length) {\n      this.currentSlideIndex = 0;\n      this.animate(0);\n      return;\n    }\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previous() {\n    if (this.currentSlideIndex === 0) {\n      this.currentSlideIndex = this.slideItems.length - 1;\n      this.animate(this.offset);\n      return;\n    }\n    this.currentSlideIndex = (this.currentSlideIndex - 1 + this.slideItems.length) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previousControl() {\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.previous();\n  }\n\n  setSlideHeight(height: number) {\n    this.setHeight(height);\n  }\n\n  private animate(offset: number) {\n    if (this.hasElements) {\n      const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n      this.player = animation.create(this.slide.nativeElement);\n      this.player.play();\n    }\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([animate(poSlideTiming, keyframes([style({ transform: `translateX(-${offset}px)` })]))]);\n  }\n\n  private createArrayForTemplate(slides: Array<any>) {\n    this.slideItems = [...slides];\n  }\n\n  private createArrayFromSlides(slides: Array<PoSlideItem | string | any>) {\n    const isStringArray = slides.every(item => typeof item === 'string');\n\n    if (isStringArray) {\n      slides.forEach(element => this.slideItems.push({ image: `${element}` }));\n    } else {\n      this.slideItems = [...(<Array<PoSlideItem>>slides)];\n    }\n  }\n\n  private setDefaultHeight(height: number) {\n    if ((height && height <= poSlideMinHeight) || (!height && this.isImageSlide)) {\n      this.slide.nativeElement.style.height = `${poSlideDefaultHeight}px`;\n      this.imageHeight = poSlideDefaultHeight;\n    } else {\n      this.imageHeight = undefined;\n    }\n  }\n\n  private setHeight(height: number) {\n    if (height && height > poSlideMinHeight) {\n      this.slide.nativeElement.style.height = `${height}px`;\n      this.imageHeight = height;\n    } else {\n      this.setDefaultHeight(height);\n    }\n  }\n\n  private setSlideItemWidth() {\n    if (this.hasElements) {\n      this.slideItemWidth = this.itemsElements.first.itemElement.nativeElement.getBoundingClientRect().width;\n    }\n  }\n\n  protected cancelInterval() {\n    clearInterval(this.setInterval);\n  }\n\n  protected setSlideItems(slides: Array<PoSlideItem | string | any>) {\n    if (this.hasSlides) {\n      this.slideContentTemplate ? this.createArrayForTemplate(slides) : this.createArrayFromSlides(slides);\n    } else {\n      this.slideItems = [];\n      this.cancelInterval();\n    }\n  }\n\n  protected startSlide() {\n    this.setSlideHeight(this.height);\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = 0;\n  }\n\n  protected startInterval() {\n    if (this.setInterval) {\n      this.cancelInterval();\n    }\n\n    this.setInterval =\n      this.hasSlides && this.hasElements\n        ? setInterval(() => {\n            this.next();\n          }, this.interval)\n        : undefined;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a seta que controla a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-control',\n  templateUrl: './po-slide-control.component.html'\n})\nexport class PoSlideControlComponent {\n  /** Tipo de controle que aceita os valores: 'previous' e 'next'. */\n  @Input('p-control') control: string;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoContainerModule } from '../po-container/po-container.module';\n\nimport { PoSlideCirclesComponent } from './po-slide-circles/po-slide-circles.component';\nimport { PoSlideComponent } from './po-slide.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideControlComponent } from './po-slide-control/po-slide-control.component';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-slide`.\n *\n * > Para o correto funcionamento do componente `po-slide`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, PoContainerModule],\n  declarations: [\n    PoSlideCirclesComponent,\n    PoSlideComponent,\n    PoSlideControlComponent,\n    PoSlideContentTemplateDirective,\n    PoSlideItemComponent\n  ],\n  exports: [PoSlideComponent, PoSlideContentTemplateDirective],\n  providers: [],\n  schemas: []\n})\nexport class PoSlideModule {}\n","/**\n *\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperOrientation\"></a>\n *\n * *Enums* para definiÃ§Ã£o da orientaÃ§Ã£o do `po-stepper`.\n */\nexport enum PoStepperOrientation {\n  /** Define a exibiÃ§Ã£o do componente na horizontal. */\n  Horizontal = 'horizontal',\n\n  /** Define a exibiÃ§Ã£o do componente na vertical. */\n  Vertical = 'vertical'\n}\n","import { AfterContentInit, Component, ElementRef, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { uuid } from '../../../utils/util';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\n/**\n * @description\n *\n * O componente `po-step` Ã© utilizado para envolver e renderizar o conteÃºdo de um passo (*step*) do `po-stepper`, por exemplo:\n *\n * ```\n * <po-stepper>\n *\n *    <po-step p-label=\"EndereÃ§o\">\n *\n *        <!-- ConteÃºdo referente ao endereÃ§o -->\n *\n *    </po-step>\n *\n *    <po-step p-label=\"Pagamento\">\n *\n *        <!-- ConteÃºdo referente ao pagamento -->\n *\n *    </po-step>\n *\n *  </po-stepper>\n * ```\n *\n * A renderizaÃ§Ã£o do conteÃºdo envolvido na tela e o controle dos status sÃ£o feitos automaticamente. No qual, o primeiro\n * `po-step` encontrado serÃ¡ colocado como ativo, o prÃ³ximo fica com o status *default* e os demais ficam\n * desabilitados (*disabled*).\n *\n * Ao clicar no `po-step` que estÃ¡ com o status *default*, o que estÃ¡ ativo ficarÃ¡ com o\n * status de concluÃ­do (*done*) e o prÃ³ximo que estava desabilitado ficarÃ¡ com o status *default* e o restante permanecerÃ¡\n * com o status desabilitado.\n *\n * > Ao utilizar o `po-step`, o componente `po-stepper` funcionarÃ¡ de forma sequencial, ou seja, nÃ£o serÃ¡ possÃ­vel\n * pular para outro `po-step` que esteja com o status igual a desabilitado (*disabled*).\n *\n * Acesse a [documentaÃ§Ã£o do `po-stepper`](/documentation/po-stepper) para ter mais informaÃ§Ãµes sobre o seu funcionamento\n * e exemplos de uso.\n */\n@Component({\n  selector: 'po-step',\n  templateUrl: 'po-step.component.html'\n})\nexport class PoStepComponent implements AfterContentInit {\n  private _status?: PoStepperStatus = PoStepperStatus.Disabled;\n\n  // ID do step\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o chamada quando o prÃ³ximo *step* for clicado ou quando o mÃ©todo `PoStepperComponent.next()` for chamado.\n   * Ao retornar `true` define que esse *step* ficarÃ¡ ativo e o atual como concluÃ­do (*done*).\n   * TambÃ©m aceita funÃ§Ãµes que retornem `Observable<boolean>`. Ao retornar um `Observable<boolean>`,\n   * garanta que esse `Observable` serÃ¡ completado, caso houver algum erro durante o processo nÃ£o serÃ¡ possÃ­vel prosseguir\n   * ao prÃ³ximo *step*.\n   *\n   * Ao ser disparada, a mesma receberÃ¡ por parÃ¢metro o `PoStepComponent` atual.\n   *\n   * O contexto da funÃ§Ã£o que serÃ¡ chamada, serÃ¡ o mesmo que o do `PoStepComponent`, entÃ£o para poder alterar\n   * para o contexto do componente que o estÃ¡ utilizando, pode ser utilizado a propriedade `bind` do Javascript.\n   * Por exemplo, para a funÃ§Ã£o `validate`:\n   *\n   * ```\n   * <po-step p-label=\"Step 1\" [p-can-active-next-step]=\"validate.bind(this)\">\n   * ...\n   * </po-step>\n   * ```\n   */\n  @Input('p-can-active-next-step') canActiveNextStep:\n    | ((currentStep) => boolean)\n    | ((currentStep) => Observable<boolean>);\n\n  /** TÃ­tulo que serÃ¡ exibido descrevendo o passo (*step*). */\n  @Input('p-label') label: string;\n\n  // Estado de exibiÃ§Ã£o do `po-step`.\n  @Input('p-status') set status(status: PoStepperStatus) {\n    this._status = status;\n\n    this.setDisplayOnActiveOrError();\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterContentInit() {\n    this.setDisplayOnActiveOrError();\n  }\n\n  protected setDisplayOnActiveOrError() {\n    this.elementRef.nativeElement.style.display =\n      this.status === PoStepperStatus.Active || this.status === PoStepperStatus.Error ? '' : 'none';\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poMediumStepSize = 32;\nconst poLargeStepSize = 48;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir os cÃ­rculos dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-circle',\n  templateUrl: './po-stepper-circle.component.html'\n})\nexport class PoStepperCircleComponent {\n  // ConteÃºdo que irÃ¡ aparecer no cÃ­rculo do *step*.\n  @Input('p-content') content: any;\n\n  // Define se serÃ£o exibidos Ã­cones no lugar de nÃºmeros nos steps.\n  @Input('p-icons') icons: boolean;\n\n  // Tamanho do *step-circle*.\n  @Input('p-size') size: number;\n\n  // Status do *step*.\n  @Input('p-status') status: string;\n\n  get isActive(): boolean {\n    return this.status === PoStepperStatus.Active;\n  }\n\n  get isDefault(): boolean {\n    return this.status === PoStepperStatus.Default;\n  }\n\n  get isDisabled(): boolean {\n    return this.status === PoStepperStatus.Disabled;\n  }\n\n  get isDone(): boolean {\n    return this.status === PoStepperStatus.Done;\n  }\n\n  get isError(): boolean {\n    return this.status === PoStepperStatus.Error;\n  }\n\n  get isLargeStep(): boolean {\n    return this.size >= poLargeStepSize;\n  }\n\n  get isMediumStep(): boolean {\n    return this.size >= poMediumStepSize && !this.isLargeStep;\n  }\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\nimport { PoStepperOrientation } from './enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\n\nconst poStepperOrientationDefault = PoStepperOrientation.Horizontal;\n\n/**\n * @description\n *\n * O `po-stepper` permite que um processo seja dividido em passos para que o usuÃ¡rio o realize\n * mais facilmente.\n *\n * Existem duas formas de utilizaÃ§Ã£o:\n *\n * 1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\n *\n * 2 - AtravÃ©s da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\n * de renderizaÃ§Ã£o do que serÃ¡ exibido a cada *step* ativo.\n *\n * AtravÃ©s de suas propriedades, Ã© possÃ­vel definir se sua orientaÃ§Ã£o serÃ¡ horizontal ou vertical,\n * alÃ©m da possibilidade de aumentar o tamanho dos *steps*.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *steps* atravÃ©s do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\n * pressionar a tecla *enter*. AlÃ©m disso, Ã© possÃ­vel ativar a exibiÃ§Ã£o de Ã­cones no lugar de nÃºmeros nos *steps* atravÃ©s da\n * propriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\n *\n * #### Utilizando os mÃ©todos do componente:\n *\n * Para acessar os mÃ©todos do componente Ã© necessÃ¡rio ter a referÃªncia do mesmo.\n *\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n *\n * ```\n * @ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\n * ```\n *\n * E para acessar o mÃ©todo:\n *\n * ```\n * poStepperComponent.next();\n * ```\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-stepper` por pÃ¡gina.\n */\n@Directive()\nexport class PoStepperBaseComponent {\n  private _orientation?: PoStepperOrientation = poStepperOrientationDefault;\n  private _sequential?: boolean = true;\n  private _step: number = 1;\n  private _steps: Array<PoStepperItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a orientaÃ§Ã£o de exibiÃ§Ã£o do `po-stepper`.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* [PoStepperOrientation](documentation/po-stepper#stepperOrientation).\n   *\n   * @default `PoStepperOrientation.Horizontal`\n   */\n  @Input('p-orientation') set orientation(value: PoStepperOrientation) {\n    this._orientation = (<any>Object).values(PoStepperOrientation).includes(value)\n      ? value\n      : poStepperOrientationDefault;\n  }\n\n  get orientation(): PoStepperOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Controla o passo atual do `po-stepper`.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   *\n   * @default `1`\n   */\n  @Input('p-step') set step(step: number) {\n    if (step >= 1 && step <= this.steps.length) {\n      this._step = step;\n      this._steps[this._step - 1].status = PoStepperStatus.Active;\n    }\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos itens do stepper. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   */\n  @Input('p-steps') set steps(steps: Array<PoStepperItem>) {\n    this._steps = Array.isArray(steps) ? steps : [];\n    this._steps.forEach(step => (step.status = PoStepperStatus.Default));\n    this.step = 1;\n  }\n\n  get steps(): Array<PoStepperItem> {\n    return this._steps;\n  }\n\n  /**\n   *\n   * @optional\n   *\n   * @description\n   *\n   * <a id=\"stepIconsProperty\"></a>\n   *\n   * Habilita a exibiÃ§Ã£o de Ã­cone ao invÃ©s de nÃºmero no centro do cÃ­rculo dos *steps*.\n   *\n   * @default `false`\n   */\n  @Input('p-step-icons') stepIcons: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\n   *\n   * O valor informado deve ser entre `24` e `64`.\n   *\n   * > Valores que nÃ£o se enquadrarem a esta regra serÃ£o ignorados, mantendo-se o valor *default*.\n   *\n   * @default `24`\n   */\n  @Input('p-step-size') stepSize: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o `po-stepper` serÃ¡ sequencial ou aleatÃ³rio.\n   *\n   * > Ao utilizar o componente [**po-step**](/documentation/po-step), o valor desta propriedade sempre serÃ¡ verdadeiro.\n   *\n   * @default `true`\n   */\n  @Input('p-sequential') set sequential(sequential: boolean) {\n    this._sequential = convertToBoolean(sequential);\n  }\n\n  get sequential(): boolean {\n    return this._sequential;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio mudar o passo do `po-stepper`. */\n  @Output('p-change-step') onChangeStep = new EventEmitter<number | PoStepComponent>();\n}\n","import { AfterContentInit, ChangeDetectorRef, Component, ContentChildren, QueryList } from '@angular/core';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { take, tap, catchError } from 'rxjs/operators';\n\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperBaseComponent } from './po-stepper-base.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\n\n/**\n * @docsExtends PoStepperBaseComponent\n *\n * @example\n *\n * <example name=\"po-stepper-basic\" title=\"PO Stepper Basic\">\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.html\"> </file>\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-labs\" title=\"PO Stepper Labs\">\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.html\"> </file>\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-sales\" title=\"PO Stepper - Sales\">\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.html\"> </file>\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-stepper',\n  templateUrl: './po-stepper.component.html'\n})\nexport class PoStepperComponent extends PoStepperBaseComponent implements AfterContentInit {\n  @ContentChildren(PoStepComponent) poSteps: QueryList<PoStepComponent>;\n\n  private currentActiveStep: PoStepComponent;\n  private previousActiveStep: PoStepComponent;\n\n  get currentStepIndex(): number {\n    return this.step - 1;\n  }\n\n  get stepList(): QueryList<PoStepComponent> | Array<PoStepperItem> {\n    return (this.usePoSteps && this.poSteps) || this.steps;\n  }\n\n  get usePoSteps(): boolean {\n    return !!this.poSteps.length;\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.activeFirstStep();\n\n    this.poSteps.changes.subscribe(() => {\n      this.controlStepsStatus(0, this.poSteps.first);\n    });\n  }\n\n  /**\n   * Altera o status do *step* para ativo.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   *\n   * @param {number} index Ãndice do `po-step` que se deseja ativar.\n   */\n  active(index: number): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const stepsArray = this.getPoSteps();\n    const step = stepsArray[index];\n    const isDisabledStep = step.status === PoStepperStatus.Disabled;\n    const isErrorStep = step.status === PoStepperStatus.Error;\n\n    if (!isDisabledStep || isErrorStep) {\n      this.changeStep(index, step);\n    }\n  }\n\n  /**\n   * Ativa o primeiro *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  first(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const firstStep = this.poSteps.first;\n    const firstStepIndex = 0;\n\n    this.changeStep(firstStepIndex, firstStep);\n  }\n\n  /**\n   * Ativa o prÃ³ximo *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  next(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const nextIndex = stepIndex + 1;\n    const nextStep = steps[nextIndex];\n\n    this.changeStep(nextIndex, nextStep);\n  }\n\n  /**\n   * Ativa o *step* anterior.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  previous(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const previousIndex = stepIndex - 1;\n    const previousStep = steps[previousIndex];\n\n    this.changeStep(previousIndex, previousStep);\n  }\n\n  changeStep(stepIndex: number, step?: PoStepComponent): void {\n    this.allowNextStep(stepIndex)\n      .pipe(take(1))\n      .subscribe(nextStepAllowed => {\n        if (nextStepAllowed) {\n          const isDifferentStep = !this.currentActiveStep || step.id !== this.currentActiveStep.id;\n\n          if (this.usePoSteps && isDifferentStep) {\n            this.controlStepsStatus(stepIndex, step);\n            this.onChangeStep.emit(step);\n          } else if (!this.usePoSteps && stepIndex !== this.currentStepIndex) {\n            // if para tratamento do modelo antigo do po-stepper\n            this.onChangeStep.emit(stepIndex + 1);\n          }\n        }\n      });\n  }\n\n  onStepActive(step: PoStepComponent) {\n    this.currentActiveStep = step;\n\n    this.previousActiveStep = this.poSteps.find(\n      stepChild => stepChild.status === PoStepperStatus.Active && stepChild.id !== step.id\n    );\n\n    this.setPreviousStepAsDone();\n  }\n\n  trackByFn(step: PoStepComponent) {\n    return step.id;\n  }\n\n  private activeFirstStep() {\n    const hasStepActive = this.poSteps.some(poStep => poStep.status === PoStepperStatus.Active);\n\n    if (this.usePoSteps && !hasStepActive) {\n      this.changeStep(0, this.poSteps.first);\n    }\n  }\n\n  private allowNextStep(nextStepIndex: number): Observable<boolean> {\n    if (!this.sequential) {\n      return of(true);\n    }\n\n    const isAllowNextStep$ = this.usePoSteps\n      ? this.isBeforeStep(nextStepIndex) || this.canActiveNextStep(this.currentActiveStep)\n      : this.steps.slice(this.step, nextStepIndex).every(step => step.status === PoStepperStatus.Done);\n\n    return typeof isAllowNextStep$ === 'boolean' ? of(isAllowNextStep$) : isAllowNextStep$;\n  }\n\n  private canActiveNextStep(currentActiveStep = <PoStepComponent>{}): Observable<boolean> {\n    if (!currentActiveStep.canActiveNextStep) {\n      return of(true);\n    }\n\n    const canActiveNextStep = currentActiveStep.canActiveNextStep(currentActiveStep);\n\n    const canActiveNextStep$ = canActiveNextStep instanceof Observable ? canActiveNextStep : of(canActiveNextStep);\n\n    return canActiveNextStep$.pipe(\n      tap(isCanActiveNextStep => {\n        currentActiveStep.status = this.getStepperStatusByCanActive(isCanActiveNextStep);\n      }),\n      catchError(err => {\n        currentActiveStep.status = PoStepperStatus.Error;\n\n        return throwError(err);\n      })\n    );\n  }\n\n  private controlStepsStatus(stepIndex: number, step: PoStepComponent): void {\n    if (this.usePoSteps) {\n      this.setStepAsActive(step);\n      this.setNextStepAsDefault(step);\n\n      if (this.isBeforeStep(stepIndex)) {\n        this.setFinalSteppersAsDisabled(stepIndex);\n      }\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  private getStepperStatusByCanActive(canActiveNextStep: boolean): PoStepperStatus {\n    return canActiveNextStep ? PoStepperStatus.Done : PoStepperStatus.Error;\n  }\n\n  private getStepsAndIndex(step: PoStepComponent = <any>{}): { steps: Array<PoStepComponent>; stepIndex: number } {\n    const steps = this.getPoSteps();\n    const stepIndex = steps.findIndex(poStep => poStep.id === step.id);\n\n    return { steps, stepIndex };\n  }\n\n  private getPoSteps(): Array<PoStepComponent> {\n    return this.poSteps.toArray();\n  }\n\n  private isBeforeStep(stepIndex: number): boolean {\n    const currentActiveStepIndex = () => this.getPoSteps().findIndex(step => step.id === this.currentActiveStep.id);\n\n    return !!this.currentActiveStep && currentActiveStepIndex() >= stepIndex;\n  }\n\n  private setFinalSteppersAsDisabled(stepIndex: number): void {\n    this.getPoSteps()\n      .filter((step, index) => step && index >= stepIndex + 2)\n      .forEach(step => (step.status = PoStepperStatus.Disabled));\n  }\n\n  private setStepAsActive(step: PoStepComponent): void {\n    step.status = PoStepperStatus.Active;\n  }\n\n  private setNextStepAsDefault(currentStep: PoStepComponent): void {\n    const { steps, stepIndex } = this.getStepsAndIndex(currentStep);\n    const nextIndex = stepIndex + 1;\n\n    if (nextIndex < this.poSteps.length) {\n      steps[nextIndex].status = PoStepperStatus.Default;\n    }\n  }\n\n  private setPreviousStepAsDone(): void {\n    if (this.previousActiveStep) {\n      this.previousActiveStep.status = PoStepperStatus.Done;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir as legendas dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-label',\n  templateUrl: './po-stepper-label.component.html'\n})\nexport class PoStepperLabelComponent {\n  // ConteÃºdo da label.\n  @Input('p-content') content: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, poLocaleDefault } from './../../../utils/util';\n\nimport { PoStepperOrientation } from '../enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poStepperStepSizeDefault = 24;\nconst poStepperStepSizeMax = 64;\nconst poStepLiteralsDefault = {\n  en: { label: 'Step' },\n  es: { label: 'Paso' },\n  pt: { label: 'Passo' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que representa um *step* contendo as ligaÃ§Ãµes das laterais (`po-stepper-step-bar`) e a label.\n */\n@Component({\n  selector: 'po-stepper-step',\n  templateUrl: 'po-stepper-step.component.html'\n})\nexport class PoStepperStepComponent {\n  private _label: string;\n  private _status: PoStepperStatus;\n  private _stepIcons?: boolean = false;\n  private _stepSize: number = poStepperStepSizeDefault;\n\n  readonly literals = {\n    ...poStepLiteralsDefault[poLocaleDefault],\n    ...poStepLiteralsDefault[browserLanguage()]\n  };\n\n  // ConteÃºdo que serÃ¡ repassado para o componente `p-circle-content` atravÃ©s da propriedade `p-content`.\n  @Input('p-circle-content') circleContent: any;\n\n  // Label do *step*.\n  @Input('p-label') set label(value: string) {\n    this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  // Define a orientaÃ§Ã£o de exibiÃ§Ã£o.\n  @Input('p-orientation') orientation: PoStepperOrientation;\n\n  // Define o estado de exibiÃ§Ã£o.\n  @Input('p-status') set status(value: PoStepperStatus) {\n    this._status = (value as string) ? value : undefined;\n\n    if (this.status === PoStepperStatus.Active) {\n      this.activated.emit();\n    }\n  }\n\n  get status(): PoStepperStatus {\n    return this._status;\n  }\n\n  @Input('p-step-icons') set stepIcons(stepIcons: boolean) {\n    this._stepIcons = convertToBoolean(stepIcons);\n  }\n\n  get stepIcons(): boolean {\n    return this._stepIcons;\n  }\n\n  // Tamanho do `step` em *pixels*, possibilitando um maior destaque.\n  // O valor informado deve ser entre `24` e `64`.\n  @Input('p-step-size') set stepSize(value: number) {\n    this._stepSize =\n      value >= poStepperStepSizeDefault && value <= poStepperStepSizeMax ? value : poStepperStepSizeDefault;\n  }\n\n  get stepSize(): number {\n    return this._stepSize;\n  }\n\n  // Evento que serÃ¡ emitido quando o status do *step* estiver ativo (`PoStepperStatus.Active`).\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao clicar no *step*.\n  @Output('p-click') click = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao focar no *step* e pressionar a tecla *enter*.\n  @Output('p-enter') enter = new EventEmitter<any>();\n\n  get halfStepSize(): number {\n    return this.stepSize / 2;\n  }\n\n  get isVerticalOrientation(): boolean {\n    return this.orientation === PoStepperOrientation.Vertical;\n  }\n\n  get marginHorizontalBar(): number {\n    return this.isVerticalOrientation ? undefined : this.halfStepSize;\n  }\n\n  getStatusClass(status: string): string {\n    switch (status) {\n      case PoStepperStatus.Active:\n        return 'po-stepper-step-active';\n      case PoStepperStatus.Disabled:\n        return 'po-stepper-step-disabled';\n      case PoStepperStatus.Done:\n        return 'po-stepper-step-done';\n      case PoStepperStatus.Error:\n        return 'po-stepper-step-error';\n      default:\n        return 'po-stepper-step-default';\n    }\n  }\n\n  onClick(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.click.emit();\n    }\n  }\n\n  onEnter(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.enter.emit();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperCircleComponent } from './po-stepper-circle/po-stepper-circle.component';\nimport { PoStepperComponent } from './po-stepper.component';\nimport { PoStepperLabelComponent } from './po-stepper-label/po-stepper-label.component';\nimport { PoStepperStepComponent } from './po-stepper-step/po-stepper-step.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-stepper\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    PoStepComponent,\n    PoStepperCircleComponent,\n    PoStepperComponent,\n    PoStepperLabelComponent,\n    PoStepperStepComponent\n  ],\n  exports: [PoStepComponent, PoStepperComponent]\n})\nexport class PoStepperModule {}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por manipular os botÃµes de aba.\n */\n@Component({\n  selector: 'po-tab-button',\n  templateUrl: './po-tab-button.component.html'\n})\nexport class PoTabButtonComponent implements OnChanges {\n  private _active: boolean;\n  private _hide: boolean;\n\n  // Ativa o botÃ£o\n  @Input('p-active') set active(value: boolean) {\n    this._active = value;\n\n    this.emitActivated();\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  // Desabilita o botÃ£o\n  @Input('p-disabled') disabled: boolean;\n\n  // Oculta o botÃ£o\n  @Input('p-hide') set hide(value: boolean) {\n    this._hide = convertToBoolean(value);\n\n    this.setDisplayOnHide();\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  // Identificador do componente\n  @Input('p-id') id: string;\n\n  // RÃ³tulo do botÃ£o\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar ativada\n  @Output('p-activated') activated = new EventEmitter();\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar desabilitada ou escondida\n  @Output('p-change-state') changeState = new EventEmitter();\n\n  // MÃ©todo recebido do usuÃ¡rio para ser disparado quando clicar na aba\n  @Output('p-click') click = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {\n      this.changeState.emit(this);\n    }\n  }\n\n  onClick() {\n    if (!this.disabled) {\n      this.click.emit(this.id);\n    }\n  }\n\n  private emitActivated() {\n    if (this.active) {\n      this.activated.emit(this);\n    }\n  }\n\n  private setDisplayOnHide() {\n    this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';\n  }\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean, uuid } from '../../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tab` renderiza uma aba na qual envolve um conteÃºdo HTML.\n *\n * Com este componente Ã© possÃ­vel atribuir um rÃ³tulo para auxiliar na identificaÃ§Ã£o do conteÃºdo, ativar para que o mesmo seja exibido,\n * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\n *\n * > Para controlar a navegaÃ§Ã£o entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).\n */\n@Directive()\nexport abstract class PoTabBaseComponent {\n  private _active?: boolean = false;\n  private _disabled?: boolean = false;\n  private _hide?: boolean = false;\n\n  // ID da aba\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a aba exibindo seu conteÃºdo.\n   *\n   * > Sugere-se utilizar na aba de conteÃºdo inicial.\n   *\n   * @default `false`\n   */\n  @Input('p-active') set active(active: boolean) {\n    this._active = convertToBoolean(active);\n    this.setDisplayOnActive();\n  }\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-hide') set hide(hide: boolean) {\n    this._hide = convertToBoolean(hide);\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  /** RÃ³tulo da aba. */\n  @Input('p-label') label: string;\n\n  /** MÃ©todo disparado ao clicar na aba. */\n  @Output('p-click') click = new EventEmitter();\n\n  protected abstract setDisplayOnActive();\n}\n","import { AfterContentInit, Component, ElementRef } from '@angular/core';\n\nimport { PoTabBaseComponent } from './po-tab-base.component';\n\n/**\n * @docsExtends PoTabBaseComponent\n */\n@Component({\n  selector: 'po-tab',\n  templateUrl: './po-tab.component.html'\n})\nexport class PoTabComponent extends PoTabBaseComponent implements AfterContentInit {\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActive();\n  }\n\n  protected setDisplayOnActive() {\n    this.elementRef.nativeElement.style.display = this.active ? '' : 'none';\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\nimport { PoTabComponent } from '../po-tab/po-tab.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para agrupamento de componentes `po-tab-button` que os rendereiza em uma um caixa de diÃ¡logo\n * no formato de lista.\n */\n@Component({\n  selector: 'po-tab-dropdown',\n  templateUrl: './po-tab-dropdown.component.html'\n})\nexport class PoTabDropdownComponent {\n  @ViewChild('popover', { static: true }) popover: PoPopoverComponent;\n  @ViewChild('tabDrop', { read: ElementRef, static: true }) tabDropdown: ElementRef;\n\n  // RÃ³tulo do `po-tab-button`\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // Lista de abas\n  @Input('p-tabs') tabs: Array<PoTabComponent> = [];\n\n  // Evento que serÃ¡ emitido ao ativar uma aba\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido a aba for desabilitada ou ocultada\n  @Output('p-change-state') changeState = new EventEmitter<any>();\n\n  // Evento de click\n  @Output('p-click') click = new EventEmitter<any>();\n\n  getContainerClass() {\n    return this.small ? 'po-tab-dropdown-container-sm' : 'po-tab-dropdown-container';\n  }\n\n  togglePopover(): void {\n    this.popover.isHidden ? this.popover.open() : this.popover.close();\n  }\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tabs` Ã© responsÃ¡vel por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,\n * ideal para facilitar a organizaÃ§Ã£o de conteÃºdos.\n *\n * Em dispositivos mÃ³veis o componente exibirÃ¡ tadas as abas de maneira linear gerando um *scroll* na horizontal. JÃ¡ em telas telas com\n * resoluÃ§Ãµes maiores, o componente exibirÃ¡ atÃ© cinco abas normalmente, porÃ©m, Ã  partir de seis abas o componente automaticamente torna\n * visÃ­vel apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.\n *\n * > As abas que estiverem agrupadas serÃ£o dispostas numa cascata suspensa que serÃ¡ exibida ao clicar no botÃ£o **Mais**.\n *\n * Ã possÃ­vel realizar a navegaÃ§Ã£o entre as abas atravÃ©s da tecla TAB do teclado.\n * Caso uma aba estiver desabilitada, nÃ£o receberÃ¡ foco de navegaÃ§Ã£o.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite utilizar uma quantidade excessiva de abas, pois irÃ¡ gerar um *scroll* muito longo no `dropdown`;\n * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.\n */\n@Directive()\nexport class PoTabsBaseComponent {\n  private _small?: boolean = false;\n\n  /**\n   * @optinal\n   *\n   * @description\n   *\n   * Diminui o tamanho das abas.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n}\n","import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';\n\nimport { isMobile } from './../../utils/util';\n\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsBaseComponent } from './po-tabs-base.component';\n\nconst poTabsMaxNumberOfTabs = 5;\n\n/**\n * @docsExtends PoTabsBaseComponent\n *\n * @example\n *\n * <example name=\"po-tabs-basic\" title=\"PO Tabs Basic\">\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.html\"> </file>\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-labs\" title=\"PO Tabs Labs\">\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.html\"> </file>\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-travel\" title=\"PO Tabs - Travel\">\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.html\"> </file>\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-business-conf\" title=\"PO Tabs - Business Conference\">\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.html\"> </file>\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tabs',\n  templateUrl: './po-tabs.component.html'\n})\nexport class PoTabsComponent extends PoTabsBaseComponent {\n  maxNumberOfTabs = poTabsMaxNumberOfTabs;\n\n  private previousActiveTab: PoTabComponent;\n\n  // Tabs utilizados no ng-content\n  @ContentChildren(PoTabComponent) tabs: QueryList<PoTabComponent>;\n\n  @ViewChild('tabDropdown', { static: true }) tabDropdown: PoTabDropdownComponent;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  get isMobileDevice() {\n    return isMobile();\n  }\n\n  get isShowTabDropdown() {\n    return !this.isMobileDevice && this.visibleTabs.length > this.maxNumberOfTabs;\n  }\n\n  // tabs que serÃ£o apresentadas na aba \"Mais\"\n  get overflowedTabs() {\n    return this.visibleTabs.filter((_tab, index) => index > this.maxNumberOfTabs - 2);\n  }\n\n  get visibleTabs() {\n    return this.tabs.filter(tab => !tab.hide);\n  }\n\n  closePopover(): void {\n    const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;\n\n    if (containsPopoverVisible) {\n      this.tabDropdown.popover.close();\n    }\n  }\n\n  isVisibleTab(tab) {\n    if (this.isMobileDevice) {\n      return true;\n    }\n\n    const visibleTabIndex = this.visibleTabs.findIndex(visibleTab => visibleTab.id === tab.id);\n\n    return this.visibleTabs.length <= this.maxNumberOfTabs || visibleTabIndex < this.maxNumberOfTabs - 1;\n  }\n\n  // FunÃ§Ã£o disparada quando alguma tab ficar ativa\n  onTabActive(tab) {\n    this.previousActiveTab = this.tabs.find(tabChild => tabChild.active && tabChild.id !== tab.id);\n\n    this.deactivateTab();\n  }\n\n  // funcao serÃ¡ disparada quando mudar o estado do poTab para desabilitado ou escondido.\n  onTabChangeState(tab: PoTabComponent) {\n    if (tab.active) {\n      tab.active = false;\n\n      this.activeDistinctTab();\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  // selectiona a aba informada por parametro, caso houver click faz a emiÃ§Ã£o do evento.\n  selectedTab(tab: PoTabComponent) {\n    tab.active = true;\n\n    if (tab.click) {\n      tab.click.emit(tab);\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  trackByFn(_i, tab: PoTabComponent) {\n    return tab.id;\n  }\n\n  // ativa a previousActiveTab ou primeira tab encontrada.\n  private activeDistinctTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = true;\n    } else {\n      this.activeFirstTab();\n    }\n  }\n\n  // Ativa a primeira Tab que nÃ£o estiver desabilitada ou escondida.\n  private activeFirstTab() {\n    this.tabs.some(tabChild => {\n      if (!tabChild.disabled && !tabChild.hide) {\n        tabChild.active = true;\n        return true;\n      }\n    });\n  }\n\n  // desativa previousActiveTab e dispara a detecÃ§Ã£o de mudanÃ§a.\n  private deactivateTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = false;\n\n      this.changeDetector.detectChanges();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\n\nimport { PoTabButtonComponent } from './po-tab-button/po-tab-button.component';\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsComponent } from './po-tabs.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-tabs\n */\n@NgModule({\n  imports: [CommonModule, PoPopoverModule],\n  declarations: [PoTabButtonComponent, PoTabComponent, PoTabDropdownComponent, PoTabsComponent],\n  exports: [PoTabComponent, PoTabsComponent]\n})\nexport class PoTabsModule {}\n","import { Component, Input } from '@angular/core';\n\nimport { isTypeof } from '../../../utils/util';\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\nconst poToolbarActionsIconDefault = 'po-icon-more';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-actions` tem como objetivo receber uma lista de aÃ§Ãµes e um Ã­cone que podem ser personalizados.\n */\n@Component({\n  selector: 'po-toolbar-actions',\n  templateUrl: './po-toolbar-actions.component.html',\n  providers: [PoControlPositionService]\n})\nexport class PoToolbarActionsComponent {\n  private _actionsIcon?: string = poToolbarActionsIconDefault;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /** Define o Ã­cone das aÃ§Ãµes. */\n  @Input('p-actions-icon') set actionsIcon(icon: string) {\n    this._actionsIcon = isTypeof(icon, 'string') ? icon : poToolbarActionsIconDefault;\n  }\n\n  get actionsIcon() {\n    return this._actionsIcon;\n  }\n}\n","import { Input, Directive } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nimport { PoToolbarAction } from './po-toolbar-action.interface';\nimport { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';\n\n/**\n * @description\n *\n * O componente `po-toolbar` Ã© um cabeÃ§alho para o tÃ­tulo da aplicaÃ§Ã£o e informaÃ§Ãµes de usuÃ¡rio e notificaÃ§Ãµes quando houver necessidade.\n */\n@Directive()\nexport class PoToolbarBaseComponent {\n  private _notificationNumber?: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone declarado em `p-actions-icon`.\n   */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define um [Ã­cone](/guides/icons) para a propriedade `p-actions`.\n   *\n   * > Caso nÃ£o haja aÃ§Ãµes definidas em `p-actions`, o Ã­cone nÃ£o serÃ¡ exibido.\n   *\n   * @default `po-icon-more`\n   */\n  @Input('p-actions-icon') actionsIcon?: string;\n\n  /** Define o objeto que serÃ¡ o cabeÃ§alho da lista de aÃ§Ãµes com as informaÃ§Ãµes do perfil. */\n  @Input('p-profile') profile?: PoToolbarProfile;\n\n  /** Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone do perfil. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  /** Se falso, oculta o Ã­cone de notificaÃ§Ãµes. */\n  @Input('p-show-notification') showNotification?: boolean = true;\n\n  /** TÃ­tulo do *toolbar* e aplicaÃ§Ã£o. */\n  @Input('p-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes da notificaÃ§Ã£o.\n   */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero de notificaÃ§Ãµes.\n   */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = convertToInt(value, 0);\n  }\n\n  get notificationNumber(): number {\n    return this._notificationNumber;\n  }\n\n  get isShowProfile(): boolean {\n    return !!(this.profile || this.profileActions);\n  }\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { PoToolbarBaseComponent } from './po-toolbar-base.component';\n\n/**\n * @docsExtends PoToolbarBaseComponent\n *\n * @example\n *\n * <example name=\"po-toolbar-basic\" title=\"PO Toolbar Basic\">\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-labs\" title=\"PO Toolbar Labs\">\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-logged\" title=\"PO Toolbar - Logged\">\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-toolbar',\n  templateUrl: './po-toolbar.component.html'\n})\nexport class PoToolbarComponent extends PoToolbarBaseComponent implements OnInit {\n  parentRef: any;\n\n  constructor(private titleService: Title, viewRef: ViewContainerRef) {\n    super();\n    this.parentRef = viewRef['_hostView'][8];\n  }\n\n  ngOnInit(): void {\n    this.setTitle(this.title);\n  }\n\n  private setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-notification` tem como objetivo notificar o usuÃ¡rio de novas aÃ§Ãµes da aplicaÃ§Ã£o que necessitam de atenÃ§Ã£o,\n * como por exemplo um alerta de nova mensagem.\n *\n * O mesmo tambÃ©m permite que a cada nova notificaÃ§Ã£o seja incrementado e exibido, ou nÃ£o, este nÃºmero em uma *tag* ao lado do\n * Ã­cone de notificaÃ§Ãµes.\n */\n@Component({\n  selector: 'po-toolbar-notification',\n  templateUrl: './po-toolbar-notification.component.html',\n  providers: [PoControlPositionService]\n})\nexport class PoToolbarNotificationComponent {\n  private _notificationNumber?: number = 0;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /** Define o nÃºmero de notificaÃ§Ãµes. */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = Number.isInteger(value) ? value : 0;\n  }\n\n  get notificationNumber() {\n    return this._notificationNumber;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarProfile } from './po-toolbar-profile.interface';\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToolbarProfileComponent\n *\n * @description\n *\n * Componente `po-toolbar-profile`.\n */\n@Component({\n  selector: 'po-toolbar-profile',\n  templateUrl: './po-toolbar-profile.component.html',\n  providers: [PoControlPositionService]\n})\nexport class PoToolbarProfileComponent {\n  /** Objeto que implementa a interface `PoToolbarProfile`. */\n  @Input('p-profile') profile: PoToolbarProfile;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  get profileAvatar() {\n    return this.profile ? this.profile.avatar : undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoAvatarModule } from './../po-avatar/po-avatar.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\nimport { PoToolbarActionsComponent } from './po-toolbar-actions/po-toolbar-actions.component';\nimport { PoToolbarComponent } from './po-toolbar.component';\nimport { PoToolbarNotificationComponent } from './po-toolbar-notification/po-toolbar-notification.component';\nimport { PoToolbarProfileComponent } from './po-toolbar-profile/po-toolbar-profile.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-toolbar\n *\n */\n@NgModule({\n  imports: [CommonModule, PoAvatarModule, PoPopupModule],\n  declarations: [\n    PoToolbarActionsComponent,\n    PoToolbarComponent,\n    PoToolbarNotificationComponent,\n    PoToolbarProfileComponent\n  ],\n  exports: [PoToolbarComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoToolbarModule {}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\n\nconst poTreeViewMaxLevel = 4;\n\n/**\n * @description\n *\n * O componente fornece um modelo de visualizaÃ§Ã£o em Ã¡rvore, possibilitando a visualizaÃ§Ã£o das informaÃ§Ãµes de maneira\n * hierÃ¡rquica, desta forma sendo possÃ­vel utilizar atÃ© 4 nÃ­veis.\n *\n * Nele Ã© possÃ­vel navegar entre os itens atravÃ©s da tecla *tab*, permitindo expandir ou colapsar o item em foco\n * por meio das teclas *enter* e *space*.\n *\n * AlÃ©m da navegaÃ§Ã£o, o componente possibilita tambÃ©m a seleÃ§Ã£o dos itens do primeiro ao Ãºltimo nÃ­vel, tanto de forma parcial como completa.\n *\n * O componente tambÃ©m possui eventos disparados ao marcar/desmarcar e expandir/colapsar os itens.\n */\n@Directive()\nexport class PoTreeViewBaseComponent {\n  private _items: Array<PoTreeViewItem> = [];\n  private _selectable: boolean = false;\n\n  /**\n   * Lista de itens do tipo `PoTreeViewItem` que serÃ¡ renderizada pelo componente.\n   */\n  @Input('p-items') set items(value: Array<PoTreeViewItem>) {\n    this._items = Array.isArray(value) ? this.getItemsByMaxLevel(value) : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita uma caixa de seleÃ§Ã£o para selecionar e/ou desmarcar um item da lista.\n   *\n   * @default false\n   */\n  @Input('p-selectable') set selectable(value: boolean) {\n    this._selectable = convertToBoolean(value);\n  }\n\n  get selectable() {\n    return this._selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao colapsar um item.\n   *\n   * > Como parÃ¢metro o componente envia o item colapsado.\n   */\n  @Output('p-collapsed') collapsed = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao expandir um item.\n   *\n   * > Como parÃ¢metro o componente envia o item expandido.\n   */\n  @Output('p-expanded') expanded = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao selecionar um item.\n   *\n   * > Como parÃ¢metro o componente envia o item selecionado.\n   */\n  @Output('p-selected') selected = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao desfazer a seleÃ§Ã£o de um item.\n   *\n   * > Como parÃ¢metro o componente envia o item que foi desmarcado.\n   */\n  @Output('p-unselected') unselected = new EventEmitter<PoTreeViewItem>();\n\n  protected emitExpanded(treeViewItem: PoTreeViewItem) {\n    const event = treeViewItem.expanded ? 'expanded' : 'collapsed';\n\n    this[event].emit({ ...treeViewItem });\n  }\n\n  protected emitSelected(treeViewItem: PoTreeViewItem) {\n    const event = treeViewItem.selected ? 'selected' : 'unselected';\n\n    this.updateItemsOnSelect(treeViewItem);\n\n    this[event].emit({ ...treeViewItem });\n  }\n\n  private addChildItemInParent(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\n    if (!parentItem.subItems) {\n      parentItem.subItems = [];\n    }\n\n    parentItem.subItems.push(childItem);\n  }\n\n  // caso houver parentItem:\n  //  - expande o parentItem caso o filho estiver expandido;\n  //  - adiciona o childItem no parentItem;\n  //  - marca o parentItem caso conter subItems marcodos ou nulos;\n  // Se nÃ£o conter parentItem, adiciona o childItem no items.\n  private addItem(items: Array<PoTreeViewItem>, childItem: PoTreeViewItem, parentItem?: PoTreeViewItem) {\n    if (parentItem) {\n      this.expandParentItem(childItem, parentItem);\n      this.addChildItemInParent(childItem, parentItem);\n      this.selectItemBySubItems(parentItem);\n\n      items.push(parentItem);\n    } else {\n      items.push(childItem);\n    }\n  }\n\n  private selectAllItems(items: Array<PoTreeViewItem>, isSelected: boolean) {\n    items.forEach(item => {\n      if (item.subItems) {\n        this.selectAllItems(item.subItems, isSelected);\n      }\n\n      item.selected = isSelected;\n    });\n  }\n\n  private selectItemBySubItems(item: PoTreeViewItem) {\n    item.selected = this.everyItemSelected(item.subItems);\n  }\n\n  // retornarÃ¡:\n  //  - true: se todos os items estiverem marcados;\n  //  - null: se no minimo um item esteja marcado ou nullo (indeterminate)\n  //  - false: caso nÃ£o corresponda em nenhuma das opÃ§Ãµes acima, no caso, nenhum marcado ou nulo;\n  private everyItemSelected(items: Array<PoTreeViewItem> = []): boolean | null {\n    const itemsLength = items.length;\n\n    const lengthCheckedItems = items.filter(item => item.selected).length;\n\n    if (itemsLength && itemsLength === lengthCheckedItems) {\n      return true;\n    }\n\n    const hasIndeterminateItems = items.filter(item => item.selected || item.selected === null).length;\n\n    if (hasIndeterminateItems) {\n      return null;\n    }\n\n    return false;\n  }\n\n  // expande o item pai caso o filho estiver expandido.\n  private expandParentItem(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\n    if (childItem.expanded) {\n      parentItem.expanded = true;\n    }\n  }\n\n  private getItemsByMaxLevel(\n    items: Array<PoTreeViewItem> = [],\n    level: number = 0,\n    parentItem?: PoTreeViewItem,\n    newItems = []\n  ) {\n    items.forEach(item => {\n      const { subItems, ...currentItem } = item;\n\n      if (level === poTreeViewMaxLevel) {\n        return;\n      }\n\n      if (Array.isArray(subItems)) {\n        // caso um item pai iniciar selecionado, deve selecionar os filhos.\n        if (currentItem.selected) {\n          this.selectAllItems(subItems, currentItem.selected);\n        }\n\n        this.getItemsByMaxLevel(subItems, ++level, currentItem);\n        --level;\n      }\n\n      this.addItem(newItems, currentItem, parentItem);\n    });\n\n    return newItems;\n  }\n\n  private getItemsWithParentSelected(items: Array<PoTreeViewItem> = [], parentItem?: PoTreeViewItem, newItems = []) {\n    items.forEach(item => {\n      const { subItems, ...currentItem } = item;\n\n      if (Array.isArray(subItems)) {\n        this.getItemsWithParentSelected(subItems, currentItem);\n      }\n\n      this.addItem(newItems, currentItem, parentItem);\n    });\n\n    return newItems;\n  }\n\n  private updateItemsOnSelect(selectedItem: PoTreeViewItem) {\n    if (selectedItem.subItems) {\n      this.selectAllItems(selectedItem.subItems, selectedItem.selected);\n    }\n\n    this._items = this.getItemsWithParentSelected(this.items);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\n\n@Injectable()\nexport class PoTreeViewService {\n  private expandedEvent = new Subject<PoTreeViewItem>();\n  private selectedEvent = new Subject<PoTreeViewItem>();\n\n  emitExpandedEvent(treeViewItem: PoTreeViewItem) {\n    return this.expandedEvent.next(treeViewItem);\n  }\n\n  emitSelectedEvent(treeViewItem: PoTreeViewItem) {\n    return this.selectedEvent.next(treeViewItem);\n  }\n\n  onExpand() {\n    return this.expandedEvent.asObservable();\n  }\n\n  onSelect() {\n    return this.selectedEvent.asObservable();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { PoTreeViewBaseComponent } from './po-tree-view-base.component';\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\nimport { PoTreeViewService } from './services/po-tree-view.service';\n\n/**\n * @docsExtends PoTreeViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-tree-view-basic\" title=\"PO Tree View Basic\">\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-labs\" title=\"PO Tree View Labs\">\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-folder-structure\" title=\"PO Tree View - Folder Structure\">\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-supermarket\" title=\"PO Tree View - Supermarket\">\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tree-view',\n  templateUrl: './po-tree-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PoTreeViewService]\n})\nexport class PoTreeViewComponent extends PoTreeViewBaseComponent implements OnInit {\n  get hasItems() {\n    return !!(this.items && this.items.length);\n  }\n\n  constructor(private treeViewService: PoTreeViewService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.treeViewService.onExpand().subscribe((treeViewItem: PoTreeViewItem) => {\n      this.emitExpanded(treeViewItem);\n    });\n\n    this.treeViewService.onSelect().subscribe((treeViewItem: PoTreeViewItem) => {\n      this.emitSelected(treeViewItem);\n    });\n  }\n\n  trackByFunction(index: number) {\n    return index;\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoTreeViewItem } from './po-tree-view-item.interface';\nimport { PoTreeViewService } from '../services/po-tree-view.service';\n\n@Component({\n  selector: 'po-tree-view-item',\n  templateUrl: './po-tree-view-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('toggleBody', [\n      state(\n        'collapsed',\n        style({\n          'overflow-y': 'hidden',\n          visibility: 'hidden',\n          opacity: 0,\n          height: '0'\n        })\n      ),\n      transition('expanded => collapsed', [\n        style({ height: '*' }),\n        animate(100, style({ opacity: 0 })),\n        animate(200, style({ height: 0 }))\n      ]),\n      transition('collapsed => expanded', [\n        style({ height: '0' }),\n        animate(100, style({ opacity: 1 })),\n        animate(200, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoTreeViewItemComponent {\n  @Input('p-item') item: PoTreeViewItem;\n\n  @Input('p-selectable') selectable: boolean;\n\n  get hasSubItems() {\n    return !!(this.item.subItems && this.item.subItems.length);\n  }\n\n  constructor(private treeViewService: PoTreeViewService) {}\n\n  onClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.item.expanded = !this.item.expanded;\n\n    this.treeViewService.emitExpandedEvent({ ...this.item });\n  }\n\n  onSelect(selectedItem: PoTreeViewItem) {\n    this.treeViewService.emitSelectedEvent({ ...selectedItem });\n  }\n\n  trackByFunction(index: number) {\n    return index;\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\n\n@Component({\n  selector: 'po-tree-view-item-header',\n  templateUrl: './po-tree-view-item-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTreeViewItemHeaderComponent {\n  @ViewChild('inputCheckbox') inputCheckbox;\n\n  @Input('p-item') item: PoTreeViewItem;\n\n  @Input('p-selectable') selectable: boolean = false;\n\n  @Output('p-expanded') expanded = new EventEmitter<MouseEvent>();\n\n  @Output('p-selected') selected = new EventEmitter<any>();\n\n  get hasSubItems() {\n    return !!(this.item.subItems && this.item.subItems.length);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoContainerModule } from '../po-container/po-container.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\n\nimport { PoTreeViewComponent } from './po-tree-view.component';\nimport { PoTreeViewItemComponent } from './po-tree-view-item/po-tree-view-item.component';\nimport { PoTreeViewItemHeaderComponent } from './po-tree-view-item-header/po-tree-view-item-header.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-tree-view`.\n *\n * > Para o correto funcionamento do componente `po-tree-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  declarations: [PoTreeViewComponent, PoTreeViewItemComponent, PoTreeViewItemHeaderComponent],\n  exports: [PoTreeViewComponent],\n  imports: [CommonModule, FormsModule, PoContainerModule, PoFieldModule]\n})\nexport class PoTreeViewModule {}\n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { convertToBoolean, isTypeof } from '../../utils/util';\n\n/**\n *\n * @description\n *\n * O componente `po-widget` Ã© recomendado para exibiÃ§Ã£o de *dashboards*, podendo ser utilizado\n * para incluir vÃ¡rios tipos de conteÃºdo como: grÃ¡ficos, tabelas, grids e imagens.\n *\n * AlÃ©m da exibiÃ§Ã£o de conteÃºdos, este componente possibilita adicionar aÃ§Ãµes e um link\n * para ajuda, como tambÃ©m possibilita ser utilizado com ou sem sombra.\n *\n * Para controlar sua largura, Ã© possÃ­vel utilizar o [Grid System](/guides/grid-system) para um maior\n * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\n@Directive()\nexport abstract class PoWidgetBaseComponent {\n  private _background?: string;\n  private _disabled?: boolean = false;\n  private _height?: number;\n  private _help?: string;\n  private _noShadow?: boolean = false;\n  private _primary?: boolean = false;\n  private _primaryLabel?: string;\n  private _title?: string;\n\n  containerHeight?: string = 'auto';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AplicaÃ§Ã£o de imagem de fundo.\n   * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,\n   * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.\n   *\n   */\n  @Input('p-background') set background(value: string) {\n    this._background = value && typeof value === 'string' ? value : undefined;\n  }\n\n  get background() {\n    return this._background;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todas as aÃ§Ãµes do componente.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.onDisabled.emit(this.disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-widget`.\n   * A altura mÃ­nima para o `po-widget` depende do que serÃ¡ exibido atravÃ©s das propriedades `p-primary-label`,\n   * `p-setting`, `p-help` e `p-title`.\n   * > Caso nÃ£o seja informado valor, a propriedade irÃ¡ assumir o tamanho do conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = parseInt(<any>value, 10);\n    this.setHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Link de ajuda\n   */\n  @Input('p-help') set help(value: string) {\n    this._help = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get help(): string {\n    return this._help;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a sombra do `po-widget`.\n   *\n   * @default `true`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = <any>value === '' ? true : convertToBoolean(value);\n    this.setHeight(this.height);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * OpÃ§Ã£o para que o `po-widget` fique em destaque.\n   *\n   * @default `false`\n   */\n  @Input('p-primary') set primary(value: boolean) {\n    this._primary = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get primary(): boolean {\n    return this._primary;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DescriÃ§Ã£o da primeira aÃ§Ã£o.\n   *\n   * @default `false`\n   */\n  @Input('p-primary-label') set primaryLabel(value: string) {\n    this._primaryLabel = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get primaryLabel(): string {\n    return this._primaryLabel;\n  }\n\n  /** DescriÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-label') secondaryLabel?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * TÃ­tulo do `po-widget`.\n   *\n   * @default `false`\n   */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre a Ã¡rea total do `po-widget`. */\n  @Output('p-click') click?: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** FunÃ§Ã£o que serÃ¡ disparada com o valor do `p-disabled` quando esta propriedade for alterada. */\n  @Output('p-on-disabled') onDisabled?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na primeira aÃ§Ã£o. */\n  @Output('p-primary-action') primaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na segunda aÃ§Ã£o. */\n  @Output('p-secondary-action') secondaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o chamada ao clicar no Ã­cone de configuraÃ§Ã£o */\n  @Output('p-setting') setting?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada ao clicar no tÃ­tulo. */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setHeight(height: number);\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n\nimport { PoWidgetBaseComponent } from './po-widget-base.component';\n\n/**\n * @docsExtends PoWidgetBaseComponent\n *\n * @example\n *\n * <example name=\"po-widget-basic\" title=\"PO Widget Basic\">\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.html\"> </file>\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-labs\" title=\"PO Widget Labs\">\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.html\"> </file>\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-finance-dashboard\" title=\"PO Widget - Finance dashboard\">\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-card\" title=\"PO Widget - Card\">\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.html\"> </file>\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-widget',\n  templateUrl: './po-widget.component.html'\n})\nexport class PoWidgetComponent extends PoWidgetBaseComponent implements OnInit {\n  get showTitleAction(): boolean {\n    return !!this.titleAction.observers[0];\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setHeight(this.height);\n  }\n\n  hasTitleHelpOrSetting(): boolean {\n    return !!this.title || !!this.help || !!this.setting.observers[0];\n  }\n\n  onClick(event: MouseEvent) {\n    if (!this.disabled) {\n      this.click.emit(event);\n    }\n  }\n\n  openHelp(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      window.open(this.help, '_blank');\n    }\n  }\n\n  runPrimaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.primaryAction.emit();\n    }\n  }\n\n  runSecondaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.secondaryAction.emit();\n    }\n  }\n\n  runTitleAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.titleAction.emit();\n    }\n  }\n\n  setHeight(height: number) {\n    if (height) {\n      let bodyHeight = height;\n      const hasSettingOrHelp = this.setting.observers.length > 0 || this.help;\n      const footerBorder = 1;\n      const footerHeight = 40;\n      const settingHeight = 37;\n      const shadowHeight = 2;\n      const titleHeight = 50;\n\n      if (this.noShadow) {\n        bodyHeight -= shadowHeight;\n      }\n\n      if (hasSettingOrHelp && !this.title) {\n        bodyHeight -= settingHeight;\n      }\n\n      if (this.title) {\n        bodyHeight -= titleHeight;\n      }\n\n      if (this.primaryLabel) {\n        bodyHeight -= footerHeight + footerBorder;\n      }\n\n      this.containerHeight = `${bodyHeight}px`;\n    } else {\n      this.containerHeight = `auto`;\n    }\n  }\n\n  settingOutput(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.setting.emit();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoContainerModule } from '../po-container/index';\nimport { PoWidgetComponent } from './po-widget.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-widget\n */\n@NgModule({\n  imports: [CommonModule, PoContainerModule],\n  exports: [PoWidgetComponent],\n  declarations: [PoWidgetComponent]\n})\nexport class PoWidgetModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoAccordionModule } from './po-accordion/po-accordion.module';\nimport { PoAvatarModule } from './po-avatar/po-avatar.module';\nimport { PoBreadcrumbModule } from './po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from './po-button/po-button.module';\nimport { PoButtonGroupModule } from './po-button-group/po-button-group.module';\nimport { PoCalendarModule } from './po-calendar/po-calendar.module';\nimport { PoChartModule } from './po-chart/po-chart.module';\nimport { PoContainerModule } from './po-container/po-container.module';\nimport { PoDisclaimerGroupModule } from './po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDisclaimerModule } from './po-disclaimer/po-disclaimer.module';\nimport { PoDividerModule } from './po-divider/po-divider.module';\nimport { PoDropdownModule } from './po-dropdown/po-dropdown.module';\nimport { PoDynamicModule } from './po-dynamic/po-dynamic.module';\nimport { PoFieldModule } from './po-field/po-field.module';\nimport { PoGridModule } from './po-grid/po-grid.module';\nimport { PoInfoModule } from './po-info/po-info.module';\nimport { PoListViewModule } from './po-list-view/po-list-view.module';\nimport { PoLoadingModule } from './po-loading/po-loading.module';\nimport { PoMenuModule } from './po-menu/po-menu.module';\nimport { PoMenuPanelModule } from './po-menu-panel/po-menu-panel.module';\nimport { PoModalModule } from './po-modal/po-modal.module';\nimport { PoNavbarModule } from './po-navbar/po-navbar.module';\nimport { PoPageModule } from './po-page/po-page.module';\nimport { PoPopoverModule } from './po-popover/po-popover.module';\nimport { PoPopupModule } from './po-popup/po-popup.module';\nimport { PoProgressModule } from './po-progress/po-progress.module';\nimport { PoSlideModule } from './po-slide/po-slide.module';\nimport { PoStepperModule } from './po-stepper/po-stepper.module';\nimport { PoTableModule } from './po-table/po-table.module';\nimport { PoTabsModule } from './po-tabs/po-tabs.module';\nimport { PoTagModule } from './po-tag/po-tag.module';\nimport { PoToolbarModule } from './po-toolbar/po-toolbar.module';\nimport { PoTreeViewModule } from './po-tree-view/po-tree-view.module';\nimport { PoWidgetModule } from './po-widget/po-widget.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoTreeViewModule,\n    PoWidgetModule\n  ],\n  exports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoTreeViewModule,\n    PoWidgetModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoComponentsModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoTooltipModule } from './po-tooltip/po-tooltip.module';\n\n@NgModule({\n  declarations: [],\n  imports: [PoTooltipModule],\n  exports: [PoTooltipModule],\n  providers: [],\n  bootstrap: []\n})\nexport class PoDirectivesModule {}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [],\n  bootstrap: []\n})\nexport class PoGuardsModule {}\n","export const poHttpInterceptorDetailLiteralsDefault = {\n  en: <any>{\n    closeButton: 'Close',\n    details: 'Details',\n    detail: 'Detail',\n    error: 'Error',\n    warning: 'Warning',\n    info: 'Information',\n    success: 'Success'\n  },\n  es: <any>{\n    closeButton: 'Cerrar',\n    details: 'Detalles',\n    detail: 'Detalle',\n    error: 'Error',\n    warning: 'Advertencia',\n    info: 'Informacion',\n    success: 'Ãxito'\n  },\n  pt: <any>{\n    closeButton: 'Fechar',\n    details: 'Detalhes',\n    detail: 'Detalhe',\n    error: 'Erro',\n    warning: 'Aviso',\n    info: 'InformaÃ§Ã£o',\n    success: 'Sucesso'\n  },\n  ru: <any>{\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    details: 'ÐÐµÑÐ°Ð»Ð¸',\n    detail: 'Ð´ÐµÑÐ°Ð»Ñ',\n    error: 'Ð¾ÑÐ¸Ð±ÐºÐ°',\n    warning: 'Ð¿ÑÐµÐ´ÑÐ¿ÑÐµÐ¶Ð´ÐµÐ½Ð¸Ðµ',\n    info: 'Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ',\n    success: 'YÑÐ¿ÐµÑ'\n  }\n};\n","import { Component, EventEmitter, ViewChild } from '@angular/core';\n\nimport { getShortBrowserLanguage } from '../../../utils/util';\nimport { PoModalAction } from '../../../components/po-modal/po-modal-action.interface';\nimport { PoModalComponent } from '../../../components/po-modal/po-modal.component';\n\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail.interface';\nimport { poHttpInterceptorDetailLiteralsDefault } from './po-http-interceptor-detail-literals.interface';\n\nexport const colors = { success: 'color-11', error: 'color-07', warning: 'color-08', info: '' };\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a modal de detalhes exibida pelo interceptor\n */\n@Component({\n  selector: 'po-http-interceptor-detail',\n  templateUrl: './po-http-interceptor-detail.component.html'\n})\nexport class PoHttpInterceptorDetailComponent {\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n\n  closed = new EventEmitter<any>();\n  details: Array<PoHttpInterceptorDetail> = [];\n  language = getShortBrowserLanguage();\n  literals = poHttpInterceptorDetailLiteralsDefault[this.language];\n\n  primaryAction: PoModalAction = {\n    action: () => this.close(),\n    label: this.literals.closeButton\n  };\n\n  title: string;\n\n  set detail(details: Array<PoHttpInterceptorDetail>) {\n    if (details && details.length) {\n      this.details = this.filterByValidDetails(details);\n    }\n\n    this.title = this.formatTitle(this.details);\n  }\n\n  close() {\n    this.modal.close();\n    this.closed.emit();\n  }\n\n  formatDetailItemTitle(detail) {\n    return detail.code ? `${detail.code} - ${detail.message}` : detail.message;\n  }\n\n  open() {\n    this.modal.open();\n  }\n\n  typeColor(type: string): string {\n    return colors[type];\n  }\n\n  typeValue(type: string): string {\n    return poHttpInterceptorDetailLiteralsDefault[this.language][type] || type;\n  }\n\n  private addValidDetail(newDetails: Array<PoHttpInterceptorDetail>, detail: PoHttpInterceptorDetail) {\n    return detail.message ? newDetails.concat(this.getValidDetailProperties(detail)) : newDetails;\n  }\n\n  private getValidDetailProperties({ code, message, detailedMessage, type }: PoHttpInterceptorDetail) {\n    return { code, message, detailedMessage, type };\n  }\n\n  private filterByValidDetails(details: Array<PoHttpInterceptorDetail>) {\n    return details.reduce((newDetails, detail) => this.addValidDetail(newDetails, detail), []);\n  }\n\n  private formatTitle(details: Array<PoHttpInterceptorDetail>) {\n    return details.length > 1 ? `${this.literals.details} (${details.length})` : this.literals.detail;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpEvent,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail/po-http-interceptor-detail.interface';\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\n\n// DEPRECATED 4.x.x\nconst NO_ERROR_HEADER_PARAM = 'X-PO-No-Error';\nconst NO_MESSAGE_HEADER_PARAM = 'X-PO-No-Message';\n\n/**\n * @description\n *\n * O *interceptor* tem a finalidade de exibir notificaÃ§Ãµes com mensagens na tela, baseado nas respostas das requisiÃ§Ãµes HTTP.\n *\n * Pode ser utilizado para dar feedback das aÃ§Ãµes do usuÃ¡rio como, por exemplo: erro de autorizaÃ§Ã£o, mensagens de regras de negÃ³cio,\n * atualizaÃ§Ãµes de registros, erro quando o servidor estiver indisponÃ­vel e entre outros.\n *\n * ## ConfiguraÃ§Ã£o\n *\n * Para o correto funcionamento do interceptor `po-http-interceptor`, deve ser importado o `BrowserAnimationsModule` no\n * mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@po-ui/ng-components';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n * Ao realizar requisiÃ§Ãµes utilize o `HttpClient`, conforme exemplo abaixo:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class UserService {\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getUsers() {\n *     return this.http.get('/api/users');\n *   }\n *\n *   ...\n *\n * }\n * ```\n *\n * ## Como usar\n *\n * Para exibir as noticaÃ§Ãµes Ã© necessÃ¡rio informar a mensagem no retorno da requisiÃ§Ã£o. A estrutura da mensagem\n * Ã© feita com base no status da resposta, conforme serÃ¡ apresentado nos prÃ³ximos tÃ³picos.\n *\n * ### Estrutura das mensagens\n *\n * #### Mensagens de sucesso `2xx`\n *\n * Para exibir mensagens ao retornar uma lista ou um item, deve-se incluir a propriedade `_messages` no objeto de retorno.\n * Por exemplo:\n * ```\n * {\n *   \"_messages\": [\n *     {\n *       \"type\": \"success\" || \"warning\" || \"error\" || \"information\" (serÃ¡ exibido a `tag` apenas se esta propriedade possuir valor),\n *       \"code\": \"tÃ­tulo ou cÃ³digo da mensagem\",\n *       \"message\": \"texto da mensagem\",\n *       \"detailedMessage\": \"detalhamento da mensagem\"\n *     }\n *   ]\n * }\n * ```\n *\n * #### Mensagens de erro `4xx` ou `5xx`\n *\n * Ao retornar erro, o objeto nÃ£o necessita ter `_messages`, deve-se retornar o objeto diretamente:\n *\n * ```\n * {\n *    \"code\": \"tÃ­tulo ou cÃ³digo da mensagem\",\n *    \"message\": \"texto da mensagem\",\n *    \"detailedMessage\": \"detalhamento da mensagem\"\n * }\n * ```\n *\n * TambÃ©m Ã© possÃ­vel informar as seguintes propriedades:\n *\n * - `helpUrl`: link para a documentaÃ§Ã£o do erro;\n *    - Caso for informado, serÃ¡ exibido uma aÃ§Ã£o de \"Ajuda\" na notificaÃ§Ã£o, para isso nÃ£o deverÃ¡ ter a propriedade `detailedMessage`.\n * - `details`: Uma lista de objetos de mensagem (recursiva) com mais detalhes sobre a mensagem principal.\n *\n * > Veja o [Guia de implementaÃ§Ã£o de APIs](guides/api) para mais detalhes sobre a estrutura das mensagens.\n *\n * ### CabeÃ§alho\n *\n * Ã possÃ­vel dispensar a notificaÃ§Ã£o para o usuÃ¡rio utilizando no cabeÃ§alho da requisiÃ§Ã£o os parÃ¢metros listados abaixo com o valor\n * igual a `true`:\n *\n * - `X-PO-No-Message`: NÃ£o exibe notificaÃ§Ãµes de erro e/ou sucesso.\n *\n * - **Depreciado** `X-PO-No-Error`: nÃ£o mostra notificaÃ§Ãµes de erro com cÃ³digos `4xx` e `5xx`.\n *\n * ```\n * ...\n *  const headers = { 'X-PO-No-Message': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n *\n * > ApÃ³s a validaÃ§Ã£o no *interceptor*, os parÃ¢metros serÃ£o removidos do cabeÃ§alho da requisiÃ§Ã£o.\n *\n */\nexport abstract class PoHttpInterceptorBaseService implements HttpInterceptor {\n  notificationTypes = ['success', 'warning', 'error', 'information'];\n\n  private httpInterceptorDetailComponent: ComponentRef<PoHttpInterceptorDetailComponent> = undefined;\n\n  constructor(private componentInjector: PoComponentInjectorService, private notification: any) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const cloneRequest = request.clone();\n\n    request = request && this.hasParameters(request) ? this.cloneRequestWithoutParameters(request) : request;\n\n    return next.handle(request).pipe(\n      tap(\n        (response: HttpEvent<any>) => {\n          if (response instanceof HttpResponse) {\n            this.processResponse(response, cloneRequest);\n          }\n        },\n        (error: HttpErrorResponse) => {\n          this.processErrorResponse(error, cloneRequest);\n        }\n      )\n    );\n  }\n\n  processResponse(response: HttpResponse<any>, request: HttpRequest<any>) {\n    const hasNoMessageParam = this.hasNoMessageParam(request);\n\n    if (!hasNoMessageParam && response.body && response.body._messages) {\n      const messages = response.body._messages;\n\n      if (messages instanceof Array) {\n        messages.forEach((message: PoHttpInterceptorDetail) => {\n          this.showNotification(message);\n        });\n      } else {\n        this.showNotification(messages);\n      }\n    }\n  }\n\n  processErrorResponse(response: HttpErrorResponse, request: HttpRequest<any>) {\n    const errorResponse =\n      response.status !== 0\n        ? response.error\n        : { code: 0, message: 'Servidor nÃ£o estÃ¡ respondendo.', detailedMessage: response.message };\n\n    const hasNoErrorParam = this.hasNoErrorParam(request);\n    const hasNoMessageParam = this.hasNoMessageParam(request);\n\n    if (errorResponse && errorResponse.message && !hasNoErrorParam && !hasNoMessageParam) {\n      this.showNotification({ ...errorResponse, type: 'error' });\n    }\n  }\n\n  private cloneRequestWithoutParameters(request: HttpRequest<any>): HttpRequest<any> {\n    const headers = request.headers.delete(NO_ERROR_HEADER_PARAM).delete(NO_MESSAGE_HEADER_PARAM);\n\n    return request.clone({ headers });\n  }\n\n  private createModal(responseMessage: PoHttpInterceptorDetail) {\n    const details = responseMessage.details ? [responseMessage, ...responseMessage.details] : [responseMessage];\n\n    this.httpInterceptorDetailComponent = this.componentInjector.createComponentInApplication(\n      PoHttpInterceptorDetailComponent\n    );\n    this.httpInterceptorDetailComponent.instance.detail = details;\n    this.httpInterceptorDetailComponent.instance.closed.subscribe(() => this.destroyModal());\n    this.httpInterceptorDetailComponent.instance.open();\n  }\n\n  private destroyModal() {\n    if (this.httpInterceptorDetailComponent) {\n      this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent);\n      this.httpInterceptorDetailComponent = undefined;\n    }\n  }\n\n  private hasMessage(responseMessage: PoHttpInterceptorDetail) {\n    const hasMessageProperties = responseMessage.message;\n\n    return responseMessage && hasMessageProperties;\n  }\n\n  private hasNoErrorParam(request: HttpRequest<any>): boolean {\n    const noErrorParam = request && request.headers.get(NO_ERROR_HEADER_PARAM);\n\n    return noErrorParam && noErrorParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private hasNoMessageParam(request: HttpRequest<any>): boolean {\n    const noMessageParam = request && request.headers.get(NO_MESSAGE_HEADER_PARAM);\n\n    return noMessageParam && noMessageParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private hasParameters(request: HttpRequest<any>) {\n    return request.headers.has(NO_ERROR_HEADER_PARAM) || request.headers.has(NO_MESSAGE_HEADER_PARAM);\n  }\n\n  private showNotification(response: any) {\n    if (!this.hasMessage(response)) {\n      return;\n    }\n\n    const typeNotification = this.notificationTypes.includes(response.type) ? response.type : 'information';\n\n    const notificationAction = this.generateNotificationAction(response);\n\n    this.notification[typeNotification]({\n      message: response.message,\n      actionLabel: notificationAction.label,\n      action: notificationAction.action\n    });\n  }\n\n  private generateDetailModal(responseMessage: any) {\n    return () => {\n      if (!this.httpInterceptorDetailComponent) {\n        this.createModal(responseMessage);\n      }\n    };\n  }\n\n  private generateNotificationAction(responseMessage: any) {\n    let notificationAction;\n    let notificationLabel;\n\n    if (responseMessage.helpUrl && !(responseMessage.detailedMessage || responseMessage.details)) {\n      notificationLabel = 'Ajuda';\n      notificationAction = this.generateUrlHelpFunction(responseMessage.helpUrl);\n    } else if (responseMessage.detailedMessage || responseMessage.details) {\n      notificationLabel = 'Detalhes';\n      notificationAction = this.generateDetailModal(responseMessage);\n    }\n    return { label: notificationLabel, action: notificationAction };\n  }\n\n  private generateUrlHelpFunction(helpUrl: string) {\n    return () => {\n      window.open(helpUrl, '_blank');\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\n\nimport { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';\n\n/**\n * @docsExtends PoHttpInterceptorBaseService\n *\n * @example\n * <example name='po-http-interceptor-labs' title='PO Http Interceptor Labs'>\n *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable()\nexport class PoHttpInterceptorService extends PoHttpInterceptorBaseService {\n  constructor(notification: PoNotificationService, componentInjector: PoComponentInjectorService) {\n    super(componentInjector, notification);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { PoAccordionModule } from '../../components/po-accordion/po-accordion.module';\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\nimport { PoNotificationModule } from '../../services/po-notification/po-notification.module';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\nimport { PoTagModule } from '../../components/po-tag/po-tag.module';\n\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\nimport { PoHttpInterceptorService } from './po-http-interceptor.service';\n\n@NgModule({\n  imports: [CommonModule, PoAccordionModule, PoModalModule, PoNotificationModule, PoTagModule],\n  declarations: [PoHttpInterceptorDetailComponent],\n  providers: [\n    PoHttpInterceptorService,\n    PoNotificationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class PoHttpInterceptorModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por efetuar o controle de interaÃ§Ã£o com o serviÃ§o de interceptor `PoHttpRequestInterceptorService`\n * gerenciando o seu estado.\n */\n@Injectable()\nexport class PoHttpRequesControltService {\n  controlHttpRequest: Subject<number> = new Subject<number>();\n\n  getControlHttpRequest(): Observable<any> {\n    return this.controlHttpRequest.asObservable();\n  }\n\n  send(value: number = 0) {\n    this.controlHttpRequest.next(value);\n  }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\n\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\n\nconst noCountPendingRequests = 'X-PO-No-Count-Pending-Requests';\nconst screenLock = 'X-PO-Screen-Lock';\n\n/**\n * @description\n *\n * O serviÃ§o PO Http Request Interceptor realiza a contabilizaÃ§Ã£o de requisiÃ§Ãµes pendentes na aplicaÃ§Ã£o.\n *\n * Existe a possibilidade de nÃ£o efetuar a contabilizaÃ§Ã£o das requisiÃ§Ãµes pendentes, utilizando o parÃ¢metro\n * `X-PO-No-Count-Pending-Requests`. Para isso deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'`,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-PO-No-Count-Pending-Requests': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * Para obter a quantidade de requisiÃ§Ãµes pendentes, deve inscrever-se no mÃ©todo `getCountPendingRequests` do\n * serviÃ§o `PoHttpRequestInterceptorService`, com isso, ao realizar requisiÃ§Ãµes utilizando `HttpClient`,\n * serÃ¡ retornado a quantidade de requisiÃ§Ãµes pendentes.\n *\n * TambÃ©m existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisiÃ§Ã£o\n * deve-se passar o parÃ¢metro `X-PO-Screen-Lock` no cabeÃ§alho da requisiÃ§Ã£o com valor `'true'`.\n *\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-PO-Screen-Lock': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-request-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n *\n * Segue abaixo um exemplo de uso:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class CustomersService {\n *\n *  headers = { 'X-PO-No-Count-Pending-Requests': true, 'X-PO-Screen-Lock': 'true' }\n *  pendingRequests: number = 0;\n *  subscription: Subscription;\n *\n *  constructor(\n *    private http: HttpClient,\n *    private httpRequestInterceptor: PoHttpRequestInterceptorService) { }\n *\n *  ngOnDestroy(): void {\n *    this.subscription.unsubscribe();\n *  }\n *\n *  ngOnInit(): void {\n *    this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\n *      this.pendingRequests = data;\n *    });\n *  }\n *\n *  getCustomers() {\n *    return this.http.get(`/customers/1`, { headers: headers });\n *  }\n *\n *  ...\n *\n * }\n * ```\n *\n * @example\n * <example name='po-http-request-interceptor-labs' title='PO Http Request Interceptor Labs'>\n *  <file name='sample-po-http-request-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-request-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoHttpRequestInterceptorService implements HttpInterceptor {\n  private loadingOverlayComponent: ComponentRef<PoLoadingOverlayComponent> = undefined;\n\n  private pendingRequests: number = 0;\n  private overlayRequests: number = 0;\n\n  constructor(\n    private controlHttpRequest: PoHttpRequesControltService,\n    private poComponentInjector: PoComponentInjectorService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    const requestClone = request.clone();\n\n    request = this.requestCloneWithoutHeaderParam([noCountPendingRequests, screenLock], request);\n\n    this.setCountPendingRequests(true, requestClone);\n    this.setCountOverlayRequests(true, requestClone);\n\n    return next.handle(request).pipe(\n      tap((response: HttpEvent<any>) => {\n        if (response instanceof HttpResponse) {\n          this.setCountPendingRequests(false, requestClone);\n          this.setCountOverlayRequests(false, requestClone);\n        }\n      }),\n      catchError(error => {\n        this.setCountPendingRequests(false, requestClone);\n        this.setCountOverlayRequests(false, requestClone);\n\n        return throwError(error);\n      })\n    );\n  }\n\n  getCountPendingRequests(): Observable<any> {\n    return this.controlHttpRequest.getControlHttpRequest();\n  }\n\n  private buildLoading() {\n    if (!this.loadingOverlayComponent) {\n      this.loadingOverlayComponent = this.poComponentInjector.createComponentInApplication(PoLoadingOverlayComponent);\n      this.loadingOverlayComponent.instance.screenLock = true;\n      this.loadingOverlayComponent.instance.changeDetector.detectChanges();\n    }\n  }\n\n  private destroyLoading() {\n    if (this.loadingOverlayComponent) {\n      this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent);\n      this.loadingOverlayComponent = undefined;\n    }\n  }\n\n  private requestCloneWithoutHeaderParam(headersParams: Array<string>, request: HttpRequest<any>): HttpRequest<any> {\n    let isRequestClone = false;\n\n    headersParams.forEach(headerParam => {\n      if (request.headers.has(headerParam)) {\n        request.headers.delete(headerParam);\n        isRequestClone = true;\n      }\n    });\n\n    return isRequestClone ? request.clone({ headers: request.headers }) : request;\n  }\n\n  private setCountPendingRequests(isIncrement: boolean, request: HttpRequest<any>) {\n    const hasCountPendingRequestHeaderParam = request.headers.has(noCountPendingRequests);\n    const headerParam = request.headers.get(noCountPendingRequests);\n\n    if (hasCountPendingRequestHeaderParam && headerParam.toString().toLowerCase() === 'true') {\n      return;\n    }\n\n    this.pendingRequests += isIncrement ? 1 : -1;\n    this.controlHttpRequest.send(this.pendingRequests);\n  }\n\n  private setCountOverlayRequests(isIncrement: boolean, request: HttpRequest<any>) {\n    const hasOverlayRequestHeaderParam = request.headers.has(screenLock);\n\n    if (hasOverlayRequestHeaderParam) {\n      const headerParam = request.headers.get(screenLock);\n\n      if (headerParam.toString().toLowerCase() === 'false') {\n        return;\n      }\n\n      this.overlayRequests += isIncrement ? 1 : -1;\n      this.overlayRequests > 0 ? this.buildLoading() : this.destroyLoading();\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { PoLoadingModule } from '../../components/po-loading/po-loading.module';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\nimport { PoHttpRequestInterceptorService } from './po-http-request-interceptor.service';\n\n@NgModule({\n  imports: [PoLoadingModule],\n  providers: [\n    PoHttpRequesControltService,\n    PoHttpRequestInterceptorService,\n    PoComponentInjectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpRequestInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class PoHttpRequestModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoHttpInterceptorModule } from './po-http-interceptor/po-http-interceptor.module';\nimport { PoHttpRequestModule } from './po-http-request/po-http-request.module';\n\n@NgModule({\n  declarations: [],\n  imports: [PoHttpInterceptorModule, PoHttpRequestModule],\n  exports: [PoHttpInterceptorModule, PoHttpRequestModule],\n  providers: [],\n  bootstrap: []\n})\nexport class PoInterceptorsModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoTimeModule } from '../pipes/po-time/po-time.module';\n\n@NgModule({\n  declarations: [],\n  imports: [PoTimeModule],\n  exports: [PoTimeModule],\n  providers: [],\n  bootstrap: []\n})\nexport class PoPipesModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoDirectivesModule } from './directives/directives.module';\nimport { PoGuardsModule } from './guards/guards.module';\nimport { PoInterceptorsModule } from './interceptors/interceptors.module';\nimport { PoPipesModule } from './pipes/pipes.module';\nimport { PoServicesModule } from './services/services.module';\nimport { PoNotificationService } from './services/po-notification/po-notification.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoGuardsModule,\n    PoInterceptorsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoInterceptorsModule,\n    PoGuardsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  providers: [PoNotificationService],\n  bootstrap: []\n})\nexport class PoModule {}\n","import { InjectionToken } from '@angular/core';\n\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\nexport const I18N_CONFIG = new InjectionToken<PoI18nConfig>('I18N_CONFIG');\n","import { HttpClient } from '@angular/common/http';\nimport { Inject } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isLanguage, reloadCurrentPage } from '../../utils/util';\nimport { PoLanguageService } from '../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoI18nLiterals } from './interfaces/po-i18n-literals.interface';\n\n/**\n * @description\n *\n * O serviÃ§o `PoI18nService` possibilita utilizar mÃºltiplos idiomas e contextos na aplicaÃ§Ã£o.\n *\n * > Antes da utilizaÃ§Ã£o do serviÃ§o, Ã© necessÃ¡rio realizar a\n * [importaÃ§Ã£o e configuraÃ§Ã£o do mÃ³dulo `PoI18nModule`](/documentation/po-i18n#i18n-config).\n *\n * **UtilizaÃ§Ã£o do serviÃ§o `PoI18nService`:**\n *\n * Para utilizar o serviÃ§o basta importÃ¡-lo nos componentes que necessitarem de literais e fazer a injeÃ§Ã£o de\n * dependÃªncia no construtor:\n * ```\n *  import { PoI18nService } from '@po-ui/ng-components';\n *  ...\n *  constructor(private poI18nService: PoI18nService) { }\n *  ...\n * ```\n *\n * Por fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\n * mÃ©todo `getLiterals()`.\n *\n * > O mÃ©todo `getLiterals()` pode receber um objeto do tipo da interface `PoI18nLiterals` como parÃ¢metro,\n * porÃ©m, nenhuma das propriedades sÃ£o obrigatÃ³rias. Caso nenhum parÃ¢metro seja passado, serÃ£o buscadas\n * todas as literais do contexto definido com padrÃ£o, no idioma definido como padrÃ£o.\n *\n * Exemplos de requisiÃ§Ã£o:\n * ```\n * literals = {};\n * literalsEn = {};\n * literalsCrm = {};\n *\n * constructor(private poI18nService: PoI18nService) {\n *   poI18nService.getLiterals()\n *     .subscribe((literals) => {\n *       this.literals = literals;\n *     });\n *\n *   poI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\n *     .subscribe((literals) => {\n *       this.literalsCrm = literals;\n *     });\n *\n *   poI18nService.getLiterals({language: 'en-us'})\n *     .subscribe((literals) => {\n *       this.literalsEn = literals;\n *     });\n * }\n * ```\n *\n * Para apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\n * seguinte cÃ³digo:\n *\n * <pre ngNonBindable>\n * {{ literals?.add }}\n * {{ literals?.remove }}\n * </pre>\n *\n * Caso as literais contenham variÃ¡veis que precisem ser substituÃ­das, pode-se utilizar o *pipe* `poI18n`.\n * Ã possÃ­vel informar propriedades do componente como `name` e `nickname` ou\n * informar o valor diretamente com \"\" ou nÃºmero, conforme o exemplo abaixo:\n *\n * <pre ngNonBindable>\n * {{ literals?.people | poI18n:[120] }}\n * {{ literals?.greeting | poI18n:[name, nickname] }}\n * {{ literals?.greeting | poI18n:[\"Brad\", \"Green\"] }}\n * </pre>\n *\n * > Ã importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais nÃ£o forem carregadas.\n *\n * ### Teste unitÃ¡rio\n *\n * Abaixo segue um exemplo de *setup* inicial de teste unitÃ¡rio do *AppComponent* que utiliza o `PoI18nService`:\n *\n * ```\n * import { async, TestBed } from '@angular/core/testing';\n * import { HttpClientTestingModule } from '@angular/common/http/testing';\n *\n * import { PoI18nModule } from '@po-ui/ng-components';\n *\n * import { AppComponent } from './app.component';\n *\n * describe('AppComponent', () => {\n *   const anotherPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const generalPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const config = {\n *     default: {\n *       language: 'pt-BR',\n *       context: 'general',\n *       cache: false\n *     },\n *     contexts: {\n *       general: {\n *         'pt-br': generalPT\n *       },\n *       another: {\n *         'pt-br': anotherPT\n *       }\n *     }\n *   };\n *\n *   beforeEach(async(() => {\n *     TestBed.configureTestingModule({\n *       declarations: [\n *         AppComponent\n *       ],\n *       imports: [\n *         HttpClientTestingModule,\n *         PoI18nModule.config(config)\n *       ]\n *     }).compileComponents();\n *   }));\n *\n *   it('should create the app', async(() => {\n *     const fixture = TestBed.createComponent(AppComponent);\n *     const app = fixture.debugElement.componentInstance;\n *\n *     expect(app).toBeTruthy();\n *   }));\n *\n * });\n * ```\n */\n\nexport class PoI18nBaseService {\n  private varI18n: any = {};\n\n  private contextDefault: string;\n\n  private useCache: boolean = false;\n\n  private servicesContext: any = {};\n\n  constructor(\n    @Inject(I18N_CONFIG) private config?: PoI18nConfig,\n    @Inject(HttpClient) private http?: HttpClient,\n    private languageService?: PoLanguageService\n  ) {\n    this.setConfig(config);\n  }\n\n  /**\n   * <a id=\"get-language\"></a>\n   * MÃ©todo que retorna o idioma padrÃ£o ativo.\n   *\n   * A busca deste idioma pelo mÃ©todo serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage).\n   *\n   *   2 - o valor inserido no mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido na propriedade\n   * `language` da interface [`PoI18nConfigDefault`](documentation/po-i18n#poI18nConfigDefault).\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en` ou `es`), serÃ¡ retornado valor `pt`.\n   *\n   * @returns {string} sigla do idioma padrÃ£o.\n   */\n  getLanguage(): string {\n    return this.languageService.getLanguage();\n  }\n\n  /**\n   * MÃ©todo que retorna o idioma padrÃ£o ativo, com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n   * Por exemplo: \"pt\" ou \"es\".\n   *\n   * A busca deste idioma Ã© baseada no mÃ©todo [**getLanguage()**](/documentation/po-i18n#get-language).\n   *\n   * @returns {string} sigla do idioma padrÃ£o.\n   */\n  getShortLanguage(): string {\n    return this.languageService.getShortLanguage();\n  }\n\n  /**\n   * <a id=\"setLanguage\"></a>\n   * MÃ©todo para alterar o idioma padrÃ£o do mÃ³dulo do i18n.\n   *\n   * Ao utilizar este mÃ©todo, o idioma ficarÃ¡ gravado no armazenamento local do navegador, que serÃ¡ utilizado pelo\n   * serviÃ§o do `i18n` para buscar as literais no idioma padrÃ£o.\n   *\n   * @param {string} language Sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   *\n   * @param {boolean} reload Indica se a pÃ¡gina atual poderÃ¡ ser recarregada apÃ³s a alteraÃ§Ã£o do idioma.\n   *\n   * Este recurso pode ser Ãºtil para os usuÃ¡rios que utilizam o mÃ©todo `getLiterals()` do serviÃ§o do i18n para poder\n   * buscar novamente as literais no novo idioma configurado.\n   */\n  setLanguage(language: string, reload?: boolean): void {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    this.languageService.setLanguage(language);\n\n    if (reload) {\n      reloadCurrentPage();\n    }\n  }\n\n  private setConfig(config: PoI18nConfig) {\n    // Seta as configuraÃ§Ãµes padrÃµes definidas no importaÃ§Ã£o do mÃ³dulo\n    if (config['default']) {\n      this.languageService.setLanguageDefault(config['default']['language']);\n\n      this.contextDefault = config['default']['context'] ? config['default']['context'] : '';\n      this.useCache = config['default']['cache'] ? config['default']['cache'] : false;\n    }\n\n    // Carrega a lista dos contextos e as contantes informadas\n    if (config['contexts']) {\n      this.setVarI18n(config['contexts']);\n\n      // Se nenhum contexto foi definido como padrÃ£o,\n      // entÃ£o define o primeiro contexto\n      if (!this.contextDefault) {\n        for (const context in config['contexts']) {\n          if (this.config['contexts'].hasOwnProperty(context)) {\n            this.contextDefault = context;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  getLiterals(options: PoI18nLiterals = {}): Observable<object> {\n    const language = options['language'] ? options['language'].toLowerCase() : this.getLanguage();\n    const context = options['context'] ? options['context'] : this.contextDefault;\n    const literals: Array<string> = options['literals'] ? options['literals'] : [];\n\n    return new Observable(observer => {\n      if (this.servicesContext[context]) {\n        // Faz o processo de busca de um contexto que contÃ©m serviÃ§o\n        this.getLiteralsFromContextService(language, context, literals, observer);\n      } else {\n        // Faz o processo de busca de um contexto que utiliza constante\n        this.getLiteralsFromContextConstant(language, context, literals, observer);\n      }\n    });\n  }\n\n  // Processo de busca de um contexto que contÃ©m serviÃ§o.\n  //    1 - Procura na variÃ¡vel I18n deste serviÃ§o\n  //    2 - Procura no local storage (Se o cache estiver definido como true na configuraÃ§Ã£o do mÃ³dulo)\n  //    3 - Dispara o serviÃ§o, mesmo que jÃ¡ tenha encontrado no local storage, para garantir a atualizaÃ§Ã£o\n  //    4 - Se nenhuma literal for encontrada, entÃ£o busca em pt-br\n  private getLiteralsFromContextService(\n    language: string,\n    context: string,\n    literals: Array<string>,\n    observer: any,\n    translations: any = {},\n    languageAlternative: string = null\n  ) {\n    // Idioma usado para tentar buscar as literais faltantes\n    const languageSearch = languageAlternative ? languageAlternative : language;\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(languageSearch, context, literals));\n\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // realiza a busca no localStorage e em seguida no serviÃ§o\n    this.getLiteralsLocalStorageAndCache(\n      languageSearch,\n      context,\n      literals,\n      observer,\n      translations,\n      languageAlternative\n    );\n  }\n\n  // Procura no local storage e em seguida no serviÃ§o\n  // Caso nÃ£o encontre nem no serviÃ§o, recomeÃ§a a busca em pt-br\n  private getLiteralsLocalStorageAndCache(\n    language: string,\n    context: string,\n    literals: Array<string>,\n    observer: any,\n    translations: any,\n    languageAlternative: string = null\n  ) {\n    const languageSearch = languageAlternative ? languageAlternative : language;\n    let translationTemp;\n    // Verifica se usa cache\n    if (this.useCache) {\n      translationTemp = this.searchInLocalStorage(languageSearch, context, literals);\n      if (this.countObject(translationTemp) > 0) {\n        this.updateVarI18n(language, context, translationTemp);\n        translations = this.mergeObject(translationTemp, translations);\n        observer.next(translations);\n      }\n    }\n\n    // Busca do ServiÃ§o\n    this.getHttpService(this.servicesContext[context], languageSearch, literals).subscribe(response => {\n      if (response) {\n        this.updateLocalStorage(language, context, response);\n        this.updateVarI18n(language, context, response);\n        translationTemp = this.searchInVarI18n(language, context, literals);\n        translations = this.mergeObject(translationTemp, translations);\n        observer.next(translations);\n      }\n\n      // Se nÃ£o encontrou todas as literais pesquisadas no idioma\n      // EntÃ£o refaz o processo procurando em portuguÃªs\n      if (literals.length > this.countObject(translations)) {\n        if (languageAlternative === 'pt-br') {\n          // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n          translations = this.completeFaultLiterals(language, context, literals, translations);\n          this.updateLocalStorage(language, context, translations);\n          this.updateVarI18n(language, context, translations);\n          observer.next(translations);\n        } else {\n          this.getLiteralsFromContextService(language, context, literals, observer, translations, 'pt-br');\n        }\n      }\n    });\n  }\n\n  // Procura pela lista de literais\n  // Se nÃ£o encontrar todas, procura em pt-br\n  private getLiteralsFromContextConstant(\n    language: string,\n    context: string,\n    literals: Array<string>,\n    observer: any,\n    translations: any = {}\n  ) {\n    translations = this.mergeObject(translations, this.searchInVarI18n(language, context, literals));\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // Se foi pesquisado por literais\n    if (literals.length > 0) {\n      // Se nÃ£o encontrou todas as literais pesquisadas no idioma, procura em portuguÃªs\n      if (literals.length > this.countObject(translations)) {\n        if (language === 'pt-br') {\n          // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n          translations = this.completeFaultLiterals(language, context, literals, translations);\n          observer.next(translations);\n        } else {\n          this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n        }\n      }\n    } else {\n      // Se nÃ£o encontrar nenhuma literal, procura em portuguÃªs\n      if (this.countObject(translations) === 0 && language !== 'pt-br') {\n        this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n      }\n\n      // caso nÃ£o informar literais e nÃ£o houver traduÃ§Ã£o\n      observer.next(translations);\n      observer.complete();\n    }\n  }\n\n  // Busca pelas literais no local storage\n  private searchInLocalStorage(language: string, context: string, literals: Array<string>): any {\n    const translations: any = {};\n\n    if (literals.length > 0) {\n      for (let i = 0; i < literals.length; i++) {\n        const literal = literals[i];\n        const translation = localStorage.getItem(language + '-' + context + '-' + literal);\n        if (translation) {\n          translations[literal] = translation;\n        }\n      }\n    }\n    return translations;\n  }\n\n  // Busca pelas literais na variÃ¡vel do serviÃ§o\n  private searchInVarI18n(language: string, context: string, literals: Array<string>): any {\n    let translations: any = {};\n\n    if (this.varI18n[language] && this.varI18n[language][context]) {\n      const content = this.varI18n[language][context];\n\n      if (literals.length > 0) {\n        // Busca as literais desejadas\n        for (let i = 0; i < literals.length; i++) {\n          const literal = literals[i];\n          if (content.hasOwnProperty(literal)) {\n            translations[literal] = content[literal];\n          }\n        }\n      } else {\n        // Atribui todas as literais\n        translations = { ...content };\n      }\n    }\n    return translations;\n  }\n\n  // Atualiza o local storage\n  private updateLocalStorage(language: string, context: string, data: any) {\n    if (this.useCache) {\n      for (const literal of Object.keys(data)) {\n        localStorage.setItem(language + '-' + context + '-' + literal, data[literal]);\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais com os objetos passados na configuraÃ§Ã£o\n  private setVarI18n(contexts: Object) {\n    // Percorre os contextos\n    for (const context of Object.keys(contexts)) {\n      const contextContent = contexts[context];\n      // Percorre os idiomas dentro do contexto\n      for (const language of Object.keys(contextContent)) {\n        const languageContent = contextContent[language];\n        if (language === 'url') {\n          this.servicesContext[context] = languageContent;\n        } else {\n          this.updateVarI18n(language, context, languageContent);\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais idioma e contexto\n  private updateVarI18n(language: string, context: string, data: any) {\n    language = language.toLowerCase();\n\n    if (!this.varI18n[language]) {\n      this.varI18n[language] = { [context]: {} };\n    }\n    if (!this.varI18n[language][context]) {\n      this.varI18n[language][context] = {};\n    }\n\n    // Cria ou atualiza o contexto dentro do storage\n    this.varI18n[language][context] = this.mergeObject(data, this.varI18n[language][context]);\n  }\n\n  private getHttpService(url: string, language: string, literals: Array<string>) {\n    let param = '?language=' + language;\n    if (literals.length > 0) {\n      param += '&literals=' + literals.join();\n    }\n\n    // Remove a barra final do endereÃ§o\n    url = url.replace(/\\/$/, '');\n\n    return this.http.get(`${url}${param}`);\n  }\n\n  // Completa com o nome da literais, as que nÃ£o foram encontradas\n  private completeFaultLiterals(language: string, context: string, literals: Array<string>, translations: any) {\n    for (let i = 0; i < literals.length; i++) {\n      const literal = literals[i];\n      if (!translations[literal]) {\n        translations[literal] = literal;\n      }\n    }\n    return translations;\n  }\n\n  // Conta os atributos do objeto\n  private countObject(obj: object) {\n    return Object.keys(obj).length;\n  }\n\n  // Faz o merge dos objetos, sempre dando preferÃªncia para o primeiro objeto de parÃ¢metro\n  private mergeObject(objPermanent: any, obj: any) {\n    return { ...obj, ...objPermanent };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { PoI18nBaseService } from './po-i18n-base.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\n/**\n * @docsExtends PoI18nBaseService\n */\n\n@Injectable()\nexport class PoI18nService extends PoI18nBaseService {}\n\n// FunÃ§Ã£o usada para retornar instÃ¢ncia para o mÃ³dulo po-i18n.module\nexport function returnPoI18nService(config: PoI18nConfig, http: HttpClient, languageService: PoLanguageService) {\n  return new PoI18nService(config, http, languageService);\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { returnPoI18nService, PoI18nService } from './po-i18n.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoLanguageModule } from '../po-language/po-language.module';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `PoI18nService` para controle de idiomas com PO.\n *\n * Para utilizaÃ§Ã£o do serviÃ§o de idiomas `PoI18nService`, deve-se importar este mÃ³dulo mesmo jÃ¡ havendo importado\n * o mÃ³dulo `PoModule`. Na importaÃ§Ã£o deve ser invocado o mÃ©todo `config`, informando um objeto que deve implementar\n * a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig) para configuraÃ§Ã£o.\n *\n * <a id=\"i18n-config\"></a>\n * **Exemplo de configuraÃ§Ã£o do mÃ³dulo do i18n:**\n * ```\n * import { PoI18nConfig } from '@po-ui/ng-components';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   default: {\n *     language: 'pt-BR',\n *     context: 'general',\n *     cache: true\n *   },\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt,\n *       'en-US': generalEn\n *     },\n *     hcm: {\n *       url: 'http://10.1.1.1/api/translations/hcm/'\n *     }\n *   }\n * };\n *\n * @NgModule({\n *   declarations: [],\n *   imports: [\n *     PoModule,\n *     PoI18nModule.config(i18nConfig)\n *   ],\n *   bootstrap: [AppComponent]\n * })\n * ```\n *\n * Para cada contexto Ã© possÃ­vel definir a origem das literais, que podem ser de um serviÃ§o REST ou\n * de um objeto. Exemplo:\n *\n * Arquivo general-pt.ts\n * ```\n * export const generalPt = {\n *  add: 'Adicionar',\n *  greeting: 'Prazer, {0} {1}',\n *  people: '{0} Pessoas,\n *  remove: 'Remover'\n * }\n * ```\n *\n * Arquivo general-en.ts\n * ```\n * export const generalEn = {\n *  add: 'Add',\n *  greeting: 'Nice to meet you, {0} {1}',\n *  people: '{0} People,\n *  remove: 'Remove'\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de contextos usando constantes externas:**\n * ```\n * import { PoI18nConfig } from '@po-ui/ng-components';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt, // constantes em arquivos separados\n *       'en-US': generalEn // constantes em arquivos separados\n *     },\n *     crm: {\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\n *     }\n *   },\n *   default: {}\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de um contexto utilizando serviÃ§o:**\n *\n * Ao optar por utilizar um serviÃ§o para configuraÃ§Ã£o de contexto, deverÃ¡ ser definida a URL\n * especÃ­fica do contexto, como nos exemplos abaixo:\n *\n *  - http://10.0.0.1:3000/api/translations/crm\n *  - http://10.0.0.1:3000/api/translations/general\n *\n * Os idiomas e literais serÃ£o automaticamente buscados com parÃ¢metros na prÃ³pria URL:\n * - **language**: o idioma serÃ¡ sempre passado por parÃ¢metro e Ã© recomendado utilizar uma das linguagens\n * suportadas pelo PO (`pt-br`, `en-us` ou `es-es`).\n * - **literals**: as literais serÃ£o separadas por vÃ­rgula. Caso esse parÃ¢metro nÃ£o seja informado, o\n * serviÃ§o deve retornar todas as literais do idioma.\n *\n * Exemplos de requisiÃ§Ã£o:\n *\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\n *\n * > Sempre que o idioma solicitado nÃ£o for encontrado, serÃ¡ buscado por `pt-br`.\n *\n * AlÃ©m dos contextos, Ã© possÃ­vel definir as configuraÃ§Ãµes *default* do sistema na configuraÃ§Ã£o do\n * mÃ³dulo utilizando a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig):\n *\n * **Exemplo de padrÃµes definidos:**\n * ```\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: { }\n *   },\n *   default: {\n *    language: 'pt-BR',\n *    context: 'general',\n *    cache: true\n *   }\n * }\n * ```\n *\n * **Importante:**\n *\n * Recomenda-se que as definiÃ§Ãµes *default* sejam realizadas apenas uma vez na aplicaÃ§Ã£o,\n * preferencialmente no mÃ³dulo `AppModule`.\n *\n * **i18n com *Lazy loading***\n *\n * Para aplicaÃ§Ãµes que utilizem a abordagem de mÃ³dulos com carregamento *lazy loading*, caso seja\n * definida outra configuraÃ§Ã£o do `PoI18nModule`, deve-se atentar os seguintes detalhes:\n *\n * - Caso existam literais comuns na aplicaÃ§Ã£o, estas devem ser reimportadas;\n * - NÃ£o defina outra *default language* para este mÃ³dulo. Caso for definida, serÃ¡ sobreposta para\n * toda a aplicaÃ§Ã£o;\n * - Caso precise de mÃ³dulos carregados via *lazy loading* com linguagens diferentes, utilize o\n * mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage) disponibilizado pelo `PoI18nService`\n * para definir a linguagem da aplicaÃ§Ã£o e dos mÃ³dulos com as linguagens diferentes.\n */\n\n@NgModule({\n  imports: [HttpClientModule, PoLanguageModule]\n})\nexport class PoI18nModule {\n  static config(config: PoI18nConfig): ModuleWithProviders<PoI18nModule> {\n    return {\n      ngModule: PoI18nModule,\n      providers: [\n        {\n          provide: I18N_CONFIG,\n          useValue: config\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initializeLanguageDefault,\n          multi: true,\n          deps: [I18N_CONFIG, PoLanguageService]\n        },\n        {\n          provide: PoI18nService,\n          useFactory: returnPoI18nService,\n          deps: [I18N_CONFIG, HttpClient, PoLanguageService]\n        }\n      ]\n    };\n  }\n}\n\nexport function initializeLanguageDefault(config: PoI18nConfig, languageService: PoLanguageService) {\n  // tslint:disable-next-line:prefer-immediate-return\n  const setDefaultLanguage = () => {\n    if (config.default.language) {\n      languageService.setLanguageDefault(config.default.language);\n    }\n  };\n  return setDefaultLanguage;\n}\n"]}