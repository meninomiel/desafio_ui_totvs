import { ElementRef, OnInit, Renderer2 } from '@angular/core';
import { PoTooltipBaseDirective } from './po-tooltip-base.directive';
import { PoTooltipControlPositionService } from './po-tooltip-control-position.service';
/**
 * @docsExtends PoTooltipBaseDirective
 *
 * @example
 *
 * <example name="po-tooltip-basic" title="PO Tooltip Basic" >
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.html"> </file>
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-labs" title="PO Tooltip Labs" >
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.html"> </file>
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-new-user" title="PO Tooltip - New User" >
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html"> </file>
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts"> </file>
 * </example>
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {
    private elementRef;
    private renderer;
    private poControlPosition;
    private arrowDirection;
    private divArrow;
    private divContent;
    private isHidden;
    private lastTooltipText;
    private textContent;
    private tooltipContent;
    private tooltipOffset;
    private eventListenerFunction;
    constructor(elementRef: ElementRef, renderer: Renderer2, poControlPosition: PoTooltipControlPositionService);
    ngOnInit(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    private addArrow;
    private addScrollEventListener;
    private createTooltip;
    private initScrollEventListenerFunction;
    private hideTooltip;
    private removeArrow;
    private removeScrollEventListener;
    private showTooltip;
    private updateTextContent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTooltipDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoTooltipDirective, "[p-tooltip]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbHRpcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicG8tdG9vbHRpcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb1Rvb2x0aXBCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9wby10b29sdGlwLWJhc2UuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUG9Ub29sdGlwQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4vcG8tdG9vbHRpcC1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xyXG4vKipcclxuICogQGRvY3NFeHRlbmRzIFBvVG9vbHRpcEJhc2VEaXJlY3RpdmVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRvb2x0aXAtYmFzaWNcIiB0aXRsZT1cIlBPIFRvb2x0aXAgQmFzaWNcIiA+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtYmFzaWMvc2FtcGxlLXBvLXRvb2x0aXAtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10b29sdGlwLWJhc2ljL3NhbXBsZS1wby10b29sdGlwLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRvb2x0aXAtbGFic1wiIHRpdGxlPVwiUE8gVG9vbHRpcCBMYWJzXCIgPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10b29sdGlwLWxhYnMvc2FtcGxlLXBvLXRvb2x0aXAtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtbGFicy9zYW1wbGUtcG8tdG9vbHRpcC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRvb2x0aXAtbmV3LXVzZXJcIiB0aXRsZT1cIlBPIFRvb2x0aXAgLSBOZXcgVXNlclwiID5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdG9vbHRpcC1uZXctdXNlci9zYW1wbGUtcG8tdG9vbHRpcC1uZXctdXNlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtbmV3LXVzZXIvc2FtcGxlLXBvLXRvb2x0aXAtbmV3LXVzZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9Ub29sdGlwRGlyZWN0aXZlIGV4dGVuZHMgUG9Ub29sdGlwQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSBwb0NvbnRyb2xQb3NpdGlvbjtcclxuICAgIHByaXZhdGUgYXJyb3dEaXJlY3Rpb247XHJcbiAgICBwcml2YXRlIGRpdkFycm93O1xyXG4gICAgcHJpdmF0ZSBkaXZDb250ZW50O1xyXG4gICAgcHJpdmF0ZSBpc0hpZGRlbjtcclxuICAgIHByaXZhdGUgbGFzdFRvb2x0aXBUZXh0O1xyXG4gICAgcHJpdmF0ZSB0ZXh0Q29udGVudDtcclxuICAgIHByaXZhdGUgdG9vbHRpcENvbnRlbnQ7XHJcbiAgICBwcml2YXRlIHRvb2x0aXBPZmZzZXQ7XHJcbiAgICBwcml2YXRlIGV2ZW50TGlzdGVuZXJGdW5jdGlvbjtcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHBvQ29udHJvbFBvc2l0aW9uOiBQb1Rvb2x0aXBDb250cm9sUG9zaXRpb25TZXJ2aWNlKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBvbk1vdXNlRW50ZXIoKTogdm9pZDtcclxuICAgIG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBhZGRBcnJvdztcclxuICAgIHByaXZhdGUgYWRkU2Nyb2xsRXZlbnRMaXN0ZW5lcjtcclxuICAgIHByaXZhdGUgY3JlYXRlVG9vbHRpcDtcclxuICAgIHByaXZhdGUgaW5pdFNjcm9sbEV2ZW50TGlzdGVuZXJGdW5jdGlvbjtcclxuICAgIHByaXZhdGUgaGlkZVRvb2x0aXA7XHJcbiAgICBwcml2YXRlIHJlbW92ZUFycm93O1xyXG4gICAgcHJpdmF0ZSByZW1vdmVTY3JvbGxFdmVudExpc3RlbmVyO1xyXG4gICAgcHJpdmF0ZSBzaG93VG9vbHRpcDtcclxuICAgIHByaXZhdGUgdXBkYXRlVGV4dENvbnRlbnQ7XHJcbn1cclxuIl19