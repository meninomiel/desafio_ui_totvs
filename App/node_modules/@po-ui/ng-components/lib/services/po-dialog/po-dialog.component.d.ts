import { ComponentRef, OnDestroy, OnInit } from '@angular/core';
import { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';
import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';
import { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';
import { PoDialogType } from './po-dialog.enum';
import { PoModalAction } from '../../components/po-modal/po-modal-action.interface';
import { PoModalComponent } from '../../components/po-modal/po-modal.component';
import * as ɵngcc0 from '@angular/core';
export declare const poDialogAlertLiteralsDefault: {
    en: PoDialogAlertLiterals;
    es: PoDialogAlertLiterals;
    pt: PoDialogAlertLiterals;
    ru: PoDialogAlertLiterals;
};
export declare const poDialogConfirmLiteralsDefault: {
    en: PoDialogConfirmLiterals;
    es: PoDialogConfirmLiterals;
    pt: PoDialogConfirmLiterals;
    ru: PoDialogConfirmLiterals;
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que serve como container do po-dialog.service
 */
export declare class PoDialogComponent implements OnDestroy, OnInit {
    poModal: PoModalComponent;
    title: string;
    message: string;
    primaryAction: PoModalAction;
    secondaryAction: PoModalAction;
    literalsAlert: PoDialogAlertLiterals;
    literalsConfirm: PoDialogConfirmLiterals;
    private componentRef;
    private closeSubscription;
    ngOnDestroy(): void;
    ngOnInit(): void;
    close(): void;
    destroy(): void;
    configDialog(primaryLabel?: any, primaryAction?: any, secondaryLabel?: any, secondaryAction?: any): void;
    open(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType, componentRef?: ComponentRef<PoDialogComponent>): void;
    private setDialogLiterals;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDialogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDialogComponent, "ng-component", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlhbG9nLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1kaWFsb2cuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFJlZiwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9EaWFsb2dBbGVydExpdGVyYWxzIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLWRpYWxvZy1hbGVydC1saXRlcmFscy5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBQb0RpYWxvZ0FsZXJ0T3B0aW9ucywgUG9EaWFsb2dDb25maXJtT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1kaWFsb2cuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9EaWFsb2dDb25maXJtTGl0ZXJhbHMgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tZGlhbG9nLWNvbmZpcm0tbGl0ZXJhbHMuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9EaWFsb2dUeXBlIH0gZnJvbSAnLi9wby1kaWFsb2cuZW51bSc7XHJcbmltcG9ydCB7IFBvTW9kYWxBY3Rpb24gfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3BvLW1vZGFsL3BvLW1vZGFsLWFjdGlvbi5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBQb01vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9wby1tb2RhbC9wby1tb2RhbC5jb21wb25lbnQnO1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBwb0RpYWxvZ0FsZXJ0TGl0ZXJhbHNEZWZhdWx0OiB7XHJcbiAgICBlbjogUG9EaWFsb2dBbGVydExpdGVyYWxzO1xyXG4gICAgZXM6IFBvRGlhbG9nQWxlcnRMaXRlcmFscztcclxuICAgIHB0OiBQb0RpYWxvZ0FsZXJ0TGl0ZXJhbHM7XHJcbiAgICBydTogUG9EaWFsb2dBbGVydExpdGVyYWxzO1xyXG59O1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBwb0RpYWxvZ0NvbmZpcm1MaXRlcmFsc0RlZmF1bHQ6IHtcclxuICAgIGVuOiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcclxuICAgIGVzOiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcclxuICAgIHB0OiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcclxuICAgIHJ1OiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcclxufTtcclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogQ29tcG9uZW50ZSBxdWUgc2VydmUgY29tbyBjb250YWluZXIgZG8gcG8tZGlhbG9nLnNlcnZpY2VcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgcG9Nb2RhbDogUG9Nb2RhbENvbXBvbmVudDtcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBtZXNzYWdlOiBzdHJpbmc7XHJcbiAgICBwcmltYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xyXG4gICAgc2Vjb25kYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xyXG4gICAgbGl0ZXJhbHNBbGVydDogUG9EaWFsb2dBbGVydExpdGVyYWxzO1xyXG4gICAgbGl0ZXJhbHNDb25maXJtOiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcclxuICAgIHByaXZhdGUgY29tcG9uZW50UmVmO1xyXG4gICAgcHJpdmF0ZSBjbG9zZVN1YnNjcmlwdGlvbjtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgY2xvc2UoKTogdm9pZDtcclxuICAgIGRlc3Ryb3koKTogdm9pZDtcclxuICAgIGNvbmZpZ0RpYWxvZyhwcmltYXJ5TGFiZWw/OiBhbnksIHByaW1hcnlBY3Rpb24/OiBhbnksIHNlY29uZGFyeUxhYmVsPzogYW55LCBzZWNvbmRhcnlBY3Rpb24/OiBhbnkpOiB2b2lkO1xyXG4gICAgb3BlbihkaWFsb2dPcHRpb25zOiBQb0RpYWxvZ0NvbmZpcm1PcHRpb25zIHwgUG9EaWFsb2dBbGVydE9wdGlvbnMsIGRpYWxvZ1R5cGU6IFBvRGlhbG9nVHlwZSwgY29tcG9uZW50UmVmPzogQ29tcG9uZW50UmVmPFBvRGlhbG9nQ29tcG9uZW50Pik6IHZvaWQ7XHJcbiAgICBwcml2YXRlIHNldERpYWxvZ0xpdGVyYWxzO1xyXG59XHJcbiJdfQ==