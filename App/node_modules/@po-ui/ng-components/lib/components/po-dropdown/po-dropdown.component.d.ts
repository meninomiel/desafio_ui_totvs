import { ElementRef, Renderer2 } from '@angular/core';
import { PoDropdownBaseComponent } from './po-dropdown-base.component';
/**
 * @docsExtends PoDropdownBaseComponent
 *
 * @example
 *
 * <example name="po-dropdown-basic" title="PO Dropdown Basic" >
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.html"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-dropdown-labs" title="PO Dropdown Labs" >
 *  <file name="sample-po-dropdown-labs/sample-po-dropdown-labs.component.html"> </file>
 *  <file name="sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-dropdown-social-network" title="PO Dropdown - Social Network" >
 *  <file name="sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html"> </file>
 *  <file name="sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDropdownComponent extends PoDropdownBaseComponent {
    private renderer;
    private clickoutListener;
    private resizeListener;
    dropdownRef: ElementRef;
    popupRef: any;
    constructor(renderer: Renderer2);
    onKeyDown(event: any): void;
    toggleDropdown(): void;
    private checkClickArea;
    private hideDropdown;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private showDropdown;
    private wasClickedOnDropdown;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDropdownComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDropdownComponent, "po-dropdown", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHJvcGRvd24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWRyb3Bkb3duLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9Ecm9wZG93bkJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWRyb3Bkb3duLWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb0Ryb3Bkb3duQmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZHJvcGRvd24tYmFzaWNcIiB0aXRsZT1cIlBPIERyb3Bkb3duIEJhc2ljXCIgPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kcm9wZG93bi1iYXNpYy9zYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kcm9wZG93bi1iYXNpYy9zYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tYmFzaWMvc2FtcGxlLXBvLWRyb3Bkb3duLWJhc2ljLmNvbXBvbmVudC5lMmUtc3BlYy50c1wiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRyb3Bkb3duLWJhc2ljL3NhbXBsZS1wby1kcm9wZG93bi1iYXNpYy5jb21wb25lbnQucG8udHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kcm9wZG93bi1sYWJzXCIgdGl0bGU9XCJQTyBEcm9wZG93biBMYWJzXCIgPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kcm9wZG93bi1sYWJzL3NhbXBsZS1wby1kcm9wZG93bi1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tbGFicy9zYW1wbGUtcG8tZHJvcGRvd24tbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kcm9wZG93bi1zb2NpYWwtbmV0d29ya1wiIHRpdGxlPVwiUE8gRHJvcGRvd24gLSBTb2NpYWwgTmV0d29ya1wiID5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tc29jaWFsLW5ldHdvcmsvc2FtcGxlLXBvLWRyb3Bkb3duLXNvY2lhbC1uZXR3b3JrLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHJvcGRvd24tc29jaWFsLW5ldHdvcmsvc2FtcGxlLXBvLWRyb3Bkb3duLXNvY2lhbC1uZXR3b3JrLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRHJvcGRvd25Db21wb25lbnQgZXh0ZW5kcyBQb0Ryb3Bkb3duQmFzZUNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSBjbGlja291dExpc3RlbmVyO1xyXG4gICAgcHJpdmF0ZSByZXNpemVMaXN0ZW5lcjtcclxuICAgIGRyb3Bkb3duUmVmOiBFbGVtZW50UmVmO1xyXG4gICAgcG9wdXBSZWY6IGFueTtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xyXG4gICAgb25LZXlEb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgdG9nZ2xlRHJvcGRvd24oKTogdm9pZDtcclxuICAgIHByaXZhdGUgY2hlY2tDbGlja0FyZWE7XHJcbiAgICBwcml2YXRlIGhpZGVEcm9wZG93bjtcclxuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUxpc3RlbmVycztcclxuICAgIHByaXZhdGUgb25TY3JvbGw7XHJcbiAgICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycztcclxuICAgIHByaXZhdGUgc2hvd0Ryb3Bkb3duO1xyXG4gICAgcHJpdmF0ZSB3YXNDbGlja2VkT25Ecm9wZG93bjtcclxufVxyXG4iXX0=