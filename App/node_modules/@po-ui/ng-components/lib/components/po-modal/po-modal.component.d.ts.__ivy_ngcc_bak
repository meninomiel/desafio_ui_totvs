import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';
import { PoModalBaseComponent } from './po-modal-base.component';
import { PoModalService } from './po-modal-service';
/**
 * @docsExtends PoModalBaseComponent
 *
 * @example
 *
 * <example name="po-modal-basic" title="PO Modal Basic">
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.html"> </file>
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-labs" title="PO Modal Labs">
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.html"> </file>
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-fruits-salad" title="PO Modal - Fruits Salad">
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html"> </file>
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts"> </file>
 * </example>
 */
export declare class PoModalComponent extends PoModalBaseComponent {
    private poModalService;
    private renderer;
    private changeDetector;
    modalContent: ElementRef;
    private firstElement;
    private focusFunction;
    private focusableElements;
    private id;
    private sourceElement;
    onResizeListener: () => void;
    constructor(poModalService: PoModalService, renderer: Renderer2, changeDetector: ChangeDetectorRef);
    close(xClosed?: boolean): void;
    closeModalOnEscapeKey(event: any): void;
    getPrimaryActionButtonType(): "primary" | "danger";
    getSecondaryActionButtonType(): "default" | "danger";
    onClickOut(event: any): void;
    open(): void;
    private handleFocus;
    private initFocus;
    private removeEventListeners;
    private setFirstElement;
}
