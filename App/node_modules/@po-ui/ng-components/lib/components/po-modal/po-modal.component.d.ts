import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';
import { PoModalBaseComponent } from './po-modal-base.component';
import { PoModalService } from './po-modal-service';
/**
 * @docsExtends PoModalBaseComponent
 *
 * @example
 *
 * <example name="po-modal-basic" title="PO Modal Basic">
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.html"> </file>
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-labs" title="PO Modal Labs">
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.html"> </file>
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-fruits-salad" title="PO Modal - Fruits Salad">
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html"> </file>
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoModalComponent extends PoModalBaseComponent {
    private poModalService;
    private renderer;
    private changeDetector;
    modalContent: ElementRef;
    private firstElement;
    private focusFunction;
    private focusableElements;
    private id;
    private sourceElement;
    onResizeListener: () => void;
    constructor(poModalService: PoModalService, renderer: Renderer2, changeDetector: ChangeDetectorRef);
    close(xClosed?: boolean): void;
    closeModalOnEscapeKey(event: any): void;
    getPrimaryActionButtonType(): "primary" | "danger";
    getSecondaryActionButtonType(): "default" | "danger";
    onClickOut(event: any): void;
    open(): void;
    private handleFocus;
    private initFocus;
    private removeEventListeners;
    private setFirstElement;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoModalComponent, "po-modal", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbW9kYWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLW1vZGFsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb01vZGFsQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tbW9kYWwtYmFzZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQb01vZGFsU2VydmljZSB9IGZyb20gJy4vcG8tbW9kYWwtc2VydmljZSc7XHJcbi8qKlxyXG4gKiBAZG9jc0V4dGVuZHMgUG9Nb2RhbEJhc2VDb21wb25lbnRcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLW1vZGFsLWJhc2ljXCIgdGl0bGU9XCJQTyBNb2RhbCBCYXNpY1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1iYXNpYy9zYW1wbGUtcG8tbW9kYWwtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1iYXNpYy9zYW1wbGUtcG8tbW9kYWwtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbW9kYWwtbGFic1wiIHRpdGxlPVwiUE8gTW9kYWwgTGFic1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1sYWJzL3NhbXBsZS1wby1tb2RhbC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbW9kYWwtbGFicy9zYW1wbGUtcG8tbW9kYWwtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1tb2RhbC1mcnVpdHMtc2FsYWRcIiB0aXRsZT1cIlBPIE1vZGFsIC0gRnJ1aXRzIFNhbGFkXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW1vZGFsLWZydWl0cy1zYWxhZC9zYW1wbGUtcG8tbW9kYWwtZnJ1aXRzLXNhbGFkLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbW9kYWwtZnJ1aXRzLXNhbGFkL3NhbXBsZS1wby1tb2RhbC1mcnVpdHMtc2FsYWQuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9Nb2RhbENvbXBvbmVudCBleHRlbmRzIFBvTW9kYWxCYXNlQ29tcG9uZW50IHtcclxuICAgIHByaXZhdGUgcG9Nb2RhbFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcclxuICAgIG1vZGFsQ29udGVudDogRWxlbWVudFJlZjtcclxuICAgIHByaXZhdGUgZmlyc3RFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBmb2N1c0Z1bmN0aW9uO1xyXG4gICAgcHJpdmF0ZSBmb2N1c2FibGVFbGVtZW50cztcclxuICAgIHByaXZhdGUgaWQ7XHJcbiAgICBwcml2YXRlIHNvdXJjZUVsZW1lbnQ7XHJcbiAgICBvblJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xyXG4gICAgY29uc3RydWN0b3IocG9Nb2RhbFNlcnZpY2U6IFBvTW9kYWxTZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xyXG4gICAgY2xvc2UoeENsb3NlZD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgY2xvc2VNb2RhbE9uRXNjYXBlS2V5KGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgZ2V0UHJpbWFyeUFjdGlvbkJ1dHRvblR5cGUoKTogXCJwcmltYXJ5XCIgfCBcImRhbmdlclwiO1xyXG4gICAgZ2V0U2Vjb25kYXJ5QWN0aW9uQnV0dG9uVHlwZSgpOiBcImRlZmF1bHRcIiB8IFwiZGFuZ2VyXCI7XHJcbiAgICBvbkNsaWNrT3V0KGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgb3BlbigpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVGb2N1cztcclxuICAgIHByaXZhdGUgaW5pdEZvY3VzO1xyXG4gICAgcHJpdmF0ZSByZW1vdmVFdmVudExpc3RlbmVycztcclxuICAgIHByaXZhdGUgc2V0Rmlyc3RFbGVtZW50O1xyXG59XHJcbiJdfQ==