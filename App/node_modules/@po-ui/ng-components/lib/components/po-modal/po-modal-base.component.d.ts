import { EventEmitter } from '@angular/core';
import { PoModalAction } from './po-modal-action.interface';
/**
 * @description
 *
 * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.
 *
 * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.
 *
 * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,
 * `po-table` e os demais componentes do PO.
 *
 * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como
 * definir um estado de carregando e / ou desabilitado. Também é possível definir o botão com o tipo *danger*.
 *
 * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoModalBaseComponent {
    private _hideClose?;
    private _size?;
    /** Título da modal. */
    title: string;
    /**
     * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da primeira ação.
     * Caso esta propriedade não seja definida ou esteja incompleta, automaticamente será adicionado um botão de ação com
     * a função de fechar a modal.
     */
    primaryAction?: PoModalAction;
    /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da segunda ação. */
    secondaryAction?: PoModalAction;
    /**
     * Define o tamanho da modal.
     *
     * Valores válidos:
     *  - `sm` (pequeno)
     *  - `md` (médio)
     *  - `lg` (grande)
     *  - `xl` (extra grande)
     *  - `auto` (automático)
     *
     * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.
     * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.
     *
     * > Todas as opções de tamanho possuem uma largura máxima de **768px**.
     */
    set size(value: string);
    get size(): string;
    /**
     * Define o fechamento da modal ao clicar fora da mesma.
     * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.
     */
    clickOut?: boolean;
    set setClickOut(value: boolean | string);
    /**
     * @optional
     *
     * @description
     *
     * Oculta o ícone de fechar do cabeçalho da modal.
     *
     * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.
     *
     * @default `false`
     */
    set hideClose(value: boolean);
    get hideClose(): boolean;
    isHidden: boolean;
    onXClosed: EventEmitter<boolean>;
    /** Função para fechar a modal. */
    close(xClosed?: boolean): void;
    /** Função para abrir a modal. */
    open(): void;
    validPrimaryAction(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoModalBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoModalBaseComponent, never, never, { "size": "p-size"; "setClickOut": "p-click-out"; "hideClose": "p-hide-close"; "primaryAction": "p-primary-action"; "title": "p-title"; "secondaryAction": "p-secondary-action"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbW9kYWwtYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tbW9kYWwtYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvTW9kYWxBY3Rpb24gfSBmcm9tICcuL3BvLW1vZGFsLWFjdGlvbi5pbnRlcmZhY2UnO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tbW9kYWxgIMOpIHV0aWxpemFkbyBwYXJhIGluY2x1aXIgY29udGXDumRvcyByw6FwaWRvcyBlIGluZm9ybWF0aXZvcy5cclxuICpcclxuICogTm8gY2FiZcOnYWxobyBkbyBjb21wb25lbnRlIMOpIHBvc3PDrXZlbCBkZWZpbmlyIHVtIHTDrXR1bG8gZSBjb21vIHRhbWLDqW0gcGVybWl0ZSBvY3VsdGFyIG8gw61jb25lIGRlIGZlY2hhbWVudG8gZGEgbW9kYWwuXHJcbiAqXHJcbiAqIEVtIHNldSBjb3JwbyDDqSBwb3Nzw612ZWwgZGVmaW5pciB1bSBjb250ZcO6ZG8gaW5mb3JtYXRpdm8sIHBvZGVuZG8gdXRpbGl6YXIgY29tcG9uZW50ZXMgY29tbyBwb3IgZXhlbXBsbyBgcG8tY2hhcnRgLFxyXG4gKiBgcG8tdGFibGVgIGUgb3MgZGVtYWlzIGNvbXBvbmVudGVzIGRvIFBPLlxyXG4gKlxyXG4gKiBObyByb2RhcMOpIGVuY29udHJhbS1zZSBvcyBib3TDtWVzIGRlIGHDp8OjbyBwcmltw6FyaWEgZSBzZWN1bmTDoXJpYSwgbm8gcXVhbCBwZXJtaXRlbSBkZWZpbmlyIHVtYSBhw6fDo28gZSB1bSByw7N0dWxvLCBiZW0gY29tb1xyXG4gKiBkZWZpbmlyIHVtIGVzdGFkbyBkZSBjYXJyZWdhbmRvIGUgLyBvdSBkZXNhYmlsaXRhZG8uIFRhbWLDqW0gw6kgcG9zc8OtdmVsIGRlZmluaXIgbyBib3TDo28gY29tIG8gdGlwbyAqZGFuZ2VyKi5cclxuICpcclxuICogPiDDiSBwb3Nzw612ZWwgZmVjaGFyIGEgbW9kYWwgYXRyYXbDqXMgZGEgdGVjbGEgKkVTQyosIHF1YW5kbyBhIHByb3ByaWVkYWRlIGBwLWhpZGUtY2xvc2VgIG7Do28gZXN0aXZlciBoYWJpbGl0YWRhLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9Nb2RhbEJhc2VDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBfaGlkZUNsb3NlPztcclxuICAgIHByaXZhdGUgX3NpemU/O1xyXG4gICAgLyoqIFTDrXR1bG8gZGEgbW9kYWwuICovXHJcbiAgICB0aXRsZTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBEZXZlIHNlciBkZWZpbmlkbyB1bSBvYmpldG8gcXVlIGltcGxlbWVudGEgYSBpbnRlcmZhY2UgYFBvTW9kYWxBY3Rpb25gIGNvbnRlbmRvIGEgbGFiZWwgZSBhIGZ1bsOnw6NvIGRhIHByaW1laXJhIGHDp8Ojby5cclxuICAgICAqIENhc28gZXN0YSBwcm9wcmllZGFkZSBuw6NvIHNlamEgZGVmaW5pZGEgb3UgZXN0ZWphIGluY29tcGxldGEsIGF1dG9tYXRpY2FtZW50ZSBzZXLDoSBhZGljaW9uYWRvIHVtIGJvdMOjbyBkZSBhw6fDo28gY29tXHJcbiAgICAgKiBhIGZ1bsOnw6NvIGRlIGZlY2hhciBhIG1vZGFsLlxyXG4gICAgICovXHJcbiAgICBwcmltYXJ5QWN0aW9uPzogUG9Nb2RhbEFjdGlvbjtcclxuICAgIC8qKiBEZXZlIHNlciBkZWZpbmlkbyB1bSBvYmpldG8gcXVlIGltcGxlbWVudGEgYSBpbnRlcmZhY2UgYFBvTW9kYWxBY3Rpb25gIGNvbnRlbmRvIGEgbGFiZWwgZSBhIGZ1bsOnw6NvIGRhIHNlZ3VuZGEgYcOnw6NvLiAqL1xyXG4gICAgc2Vjb25kYXJ5QWN0aW9uPzogUG9Nb2RhbEFjdGlvbjtcclxuICAgIC8qKlxyXG4gICAgICogRGVmaW5lIG8gdGFtYW5obyBkYSBtb2RhbC5cclxuICAgICAqXHJcbiAgICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxyXG4gICAgICogIC0gYHNtYCAocGVxdWVubylcclxuICAgICAqICAtIGBtZGAgKG3DqWRpbylcclxuICAgICAqICAtIGBsZ2AgKGdyYW5kZSlcclxuICAgICAqICAtIGB4bGAgKGV4dHJhIGdyYW5kZSlcclxuICAgICAqICAtIGBhdXRvYCAoYXV0b23DoXRpY28pXHJcbiAgICAgKlxyXG4gICAgICogPiBRdWFuZG8gaW5mb3JtYWRvIGBhdXRvYCBhIG1vZGFsIGNhbGN1bGFyw6EgYXV0b21hdGljYW1lbnRlIHNldSB0YW1hbmhvIGJhc2VhZG8gZW0gc2V1IGNvbnRlw7pkby5cclxuICAgICAqIENhc28gbsOjbyBzZWphIGluZm9ybWFkbyB1bSB2YWxvciwgYSBtb2RhbCB0ZXLDoSBvIHRhbWFuaG8gZGVmaW5pZG8gY29tbyBgbWRgLlxyXG4gICAgICpcclxuICAgICAqID4gVG9kYXMgYXMgb3DDp8O1ZXMgZGUgdGFtYW5obyBwb3NzdWVtIHVtYSBsYXJndXJhIG3DoXhpbWEgZGUgKio3NjhweCoqLlxyXG4gICAgICovXHJcbiAgICBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKTtcclxuICAgIGdldCBzaXplKCk6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogRGVmaW5lIG8gZmVjaGFtZW50byBkYSBtb2RhbCBhbyBjbGljYXIgZm9yYSBkYSBtZXNtYS5cclxuICAgICAqIEluZm9ybWUgbyB2YWxvciBgdHJ1ZWAgcGFyYSBhdGl2YXIgbyBmZWNoYW1lbnRvIGFvIGNsaWNhciBmb3JhIGRhIG1vZGFsLlxyXG4gICAgICovXHJcbiAgICBjbGlja091dD86IGJvb2xlYW47XHJcbiAgICBzZXQgc2V0Q2xpY2tPdXQodmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBPY3VsdGEgbyDDrWNvbmUgZGUgZmVjaGFyIGRvIGNhYmXDp2FsaG8gZGEgbW9kYWwuXHJcbiAgICAgKlxyXG4gICAgICogPiBDYXNvIGEgcHJvcHJpZWRhZGUgZXN0aXZlciBoYWJpbGl0YWRhLCBuw6NvIHNlcsOhIHBvc3PDrXZlbCBmZWNoYXIgYSBtb2RhbCBhdHJhdsOpcyBkYSB0ZWNsYSAqRVNDKi5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBoaWRlQ2xvc2UodmFsdWU6IGJvb2xlYW4pO1xyXG4gICAgZ2V0IGhpZGVDbG9zZSgpOiBib29sZWFuO1xyXG4gICAgaXNIaWRkZW46IGJvb2xlYW47XHJcbiAgICBvblhDbG9zZWQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcclxuICAgIC8qKiBGdW7Dp8OjbyBwYXJhIGZlY2hhciBhIG1vZGFsLiAqL1xyXG4gICAgY2xvc2UoeENsb3NlZD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgLyoqIEZ1bsOnw6NvIHBhcmEgYWJyaXIgYSBtb2RhbC4gKi9cclxuICAgIG9wZW4oKTogdm9pZDtcclxuICAgIHZhbGlkUHJpbWFyeUFjdGlvbigpOiB2b2lkO1xyXG59XHJcbiJdfQ==