import { TemplateRef } from '@angular/core';
import { PoAccordionService } from '../services/po-accordion.service';
/**
 * @description
 *
 * Componente utilizado para renderizar os itens do `po-accordion`.
 *
 * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,
 * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:
 *
 * ```
 * <po-accordion>
 *   <po-accordion-item p-label="PO Accordion 1" #item1>
 *      Accordion 1
 *   </po-accordion-item>
 *
 *   <po-accordion-item p-label="PO Accordion 2">
 *      Accordion 2
 *   </po-accordion-item>
 * </po-accordion>
 * ```
 *
 * e no typescript pode-se utilizar o `@ViewChild`:
 *
 * ```
 *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;
 *
 *  ngAfterContentInit() {
 *    // ou utilizar o método collapse()
 *    this.item1.expand();
 *  }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoAccordionItemComponent {
    private accordionService;
    expanded: boolean;
    /** Título do item. */
    label: string;
    templateRef: TemplateRef<any>;
    constructor(accordionService: PoAccordionService);
    /**
     * Método para colapsar o `po-accordion-item`.
     */
    collapse(): void;
    /**
     * Método para expandir o `po-accordion-item`.
     */
    expand(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoAccordionItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoAccordionItemComponent, "po-accordion-item", never, { "label": "p-label"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWFjY29yZGlvbi1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9BY2NvcmRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvcG8tYWNjb3JkaW9uLnNlcnZpY2UnO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIENvbXBvbmVudGUgdXRpbGl6YWRvIHBhcmEgcmVuZGVyaXphciBvcyBpdGVucyBkbyBgcG8tYWNjb3JkaW9uYC5cclxuICpcclxuICogTyBjb21wb25lbnRlIGBwby1hY2NvcmRpb25gIGrDoSBmYXogbyBjb250cm9sZSBkZSBhYmVydHVyYSBlIGZlY2hhbWVudG8gZG9zIGl0ZW5zIGF1dG9tYXRpY2FtZW50ZSxcclxuICogbWFzIGNhc28gaG91dmVyIGEgbmVjZXNzaWRhZGUgZGUgYWJyaXIgYWxndW0gZG9zIGBwby1hY2NvcmRpb24taXRlbWAgdmlhIFR5cGVzY3JpcHQsIHBvZGUgc2VyIGZlaXRhIGRhIHNlZ3VpbnRlIGZvcm1hOlxyXG4gKlxyXG4gKiBgYGBcclxuICogPHBvLWFjY29yZGlvbj5cclxuICogICA8cG8tYWNjb3JkaW9uLWl0ZW0gcC1sYWJlbD1cIlBPIEFjY29yZGlvbiAxXCIgI2l0ZW0xPlxyXG4gKiAgICAgIEFjY29yZGlvbiAxXHJcbiAqICAgPC9wby1hY2NvcmRpb24taXRlbT5cclxuICpcclxuICogICA8cG8tYWNjb3JkaW9uLWl0ZW0gcC1sYWJlbD1cIlBPIEFjY29yZGlvbiAyXCI+XHJcbiAqICAgICAgQWNjb3JkaW9uIDJcclxuICogICA8L3BvLWFjY29yZGlvbi1pdGVtPlxyXG4gKiA8L3BvLWFjY29yZGlvbj5cclxuICogYGBgXHJcbiAqXHJcbiAqIGUgbm8gdHlwZXNjcmlwdCBwb2RlLXNlIHV0aWxpemFyIG8gYEBWaWV3Q2hpbGRgOlxyXG4gKlxyXG4gKiBgYGBcclxuICogIEBWaWV3Q2hpbGQoUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBpdGVtMTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50O1xyXG4gKlxyXG4gKiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gKiAgICAvLyBvdSB1dGlsaXphciBvIG3DqXRvZG8gY29sbGFwc2UoKVxyXG4gKiAgICB0aGlzLml0ZW0xLmV4cGFuZCgpO1xyXG4gKiAgfVxyXG4gKiBgYGBcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIGFjY29yZGlvblNlcnZpY2U7XHJcbiAgICBleHBhbmRlZDogYm9vbGVhbjtcclxuICAgIC8qKiBUw610dWxvIGRvIGl0ZW0uICovXHJcbiAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBjb25zdHJ1Y3RvcihhY2NvcmRpb25TZXJ2aWNlOiBQb0FjY29yZGlvblNlcnZpY2UpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBNw6l0b2RvIHBhcmEgY29sYXBzYXIgbyBgcG8tYWNjb3JkaW9uLWl0ZW1gLlxyXG4gICAgICovXHJcbiAgICBjb2xsYXBzZSgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBNw6l0b2RvIHBhcmEgZXhwYW5kaXIgbyBgcG8tYWNjb3JkaW9uLWl0ZW1gLlxyXG4gICAgICovXHJcbiAgICBleHBhbmQoKTogdm9pZDtcclxufVxyXG4iXX0=