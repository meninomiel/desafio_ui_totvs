import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';
import { PoDynamicFormField } from './po-dynamic-form-field.interface';
import { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';
import { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';
/**
 * @docsExtends PoDynamicFormBaseComponent
 *
 * @example
 *
 * <example name="po-dynamic-form-basic" title="PO Dynamic Form Basic">
 *  <file name="sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html"> </file>
 *  <file name="sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-form-register" title="PO Dynamic Form - Register">
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html"> </file>
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts"> </file>
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {
    private changes;
    private loadService;
    private validationService;
    private _form;
    disabledForm: boolean;
    private onLoadSubscription;
    private sendFormSubscription;
    set form(value: NgForm);
    get form(): NgForm;
    fieldsComponent: {
        focus: (property: string) => void;
    };
    constructor(changes: ChangeDetectorRef, loadService: PoDynamicFormLoadService, validationService: PoDynamicFormValidationService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    /**
     * Função que atribui foco ao campo desejado.
     *
     * Para utilizá-la é necessário capturar a instância do `dynamic form`, como por exemplo:
     *
     * ``` html
     * <po-dynamic-form #dynamicForm [p-fields]="fields"></po-dynamic-form>
     * ```
     *
     * ``` javascript
     * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;
     *
     * fields: Array<PoDynamicFormField> = [
     *   { property: 'fieldOne' },
     *   { property: 'fieldTwo' }
     * ];
     *
     * fieldFocus() {
     *   this.dynamicForm.focus('fieldTwo');
     * }
     * ```
     *
     * @param {string} property Nome da propriedade atribuída ao `PoDynamicFormField.property`.
     */
    focus(property: string): void;
    validateForm(field: PoDynamicFormField): void;
    private applyFormUpdatesOnLoad;
    private applyFormValidation;
    private disableForm;
    private emitForm;
    private loadDataOnInitialize;
    private removeListeners;
    private setFocusOnFieldByProperty;
    private updateModelOnLoad;
    private updateModelWithValidation;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDynamicFormComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDynamicFormComponent, "po-dynamic-form", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1mb3JtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1keW5hbWljLWZvcm0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgUG9EeW5hbWljRm9ybUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWR5bmFtaWMtZm9ybS1iYXNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1GaWVsZCB9IGZyb20gJy4vcG8tZHluYW1pYy1mb3JtLWZpZWxkLmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1Mb2FkU2VydmljZSB9IGZyb20gJy4vcG8tZHluYW1pYy1mb3JtLWxvYWQvcG8tZHluYW1pYy1mb3JtLWxvYWQuc2VydmljZSc7XHJcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSB9IGZyb20gJy4vcG8tZHluYW1pYy1mb3JtLXZhbGlkYXRpb24vcG8tZHluYW1pYy1mb3JtLXZhbGlkYXRpb24uc2VydmljZSc7XHJcbi8qKlxyXG4gKiBAZG9jc0V4dGVuZHMgUG9EeW5hbWljRm9ybUJhc2VDb21wb25lbnRcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWR5bmFtaWMtZm9ybS1iYXNpY1wiIHRpdGxlPVwiUE8gRHluYW1pYyBGb3JtIEJhc2ljXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1iYXNpYy9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLWJhc2ljL3NhbXBsZS1wby1keW5hbWljLWZvcm0tYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyXCIgdGl0bGU9XCJQTyBEeW5hbWljIEZvcm0gLSBSZWdpc3RlclwiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1keW5hbWljLWZvcm0tcmVnaXN0ZXIvc2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyLnNlcnZpY2UudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0R5bmFtaWNGb3JtQ29tcG9uZW50IGV4dGVuZHMgUG9EeW5hbWljRm9ybUJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIGNoYW5nZXM7XHJcbiAgICBwcml2YXRlIGxvYWRTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSB2YWxpZGF0aW9uU2VydmljZTtcclxuICAgIHByaXZhdGUgX2Zvcm07XHJcbiAgICBkaXNhYmxlZEZvcm06IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIG9uTG9hZFN1YnNjcmlwdGlvbjtcclxuICAgIHByaXZhdGUgc2VuZEZvcm1TdWJzY3JpcHRpb247XHJcbiAgICBzZXQgZm9ybSh2YWx1ZTogTmdGb3JtKTtcclxuICAgIGdldCBmb3JtKCk6IE5nRm9ybTtcclxuICAgIGZpZWxkc0NvbXBvbmVudDoge1xyXG4gICAgICAgIGZvY3VzOiAocHJvcGVydHk6IHN0cmluZykgPT4gdm9pZDtcclxuICAgIH07XHJcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VzOiBDaGFuZ2VEZXRlY3RvclJlZiwgbG9hZFNlcnZpY2U6IFBvRHluYW1pY0Zvcm1Mb2FkU2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2U6IFBvRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSk7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogRnVuw6fDo28gcXVlIGF0cmlidWkgZm9jbyBhbyBjYW1wbyBkZXNlamFkby5cclxuICAgICAqXHJcbiAgICAgKiBQYXJhIHV0aWxpesOhLWxhIMOpIG5lY2Vzc8OhcmlvIGNhcHR1cmFyIGEgaW5zdMOibmNpYSBkbyBgZHluYW1pYyBmb3JtYCwgY29tbyBwb3IgZXhlbXBsbzpcclxuICAgICAqXHJcbiAgICAgKiBgYGAgaHRtbFxyXG4gICAgICogPHBvLWR5bmFtaWMtZm9ybSAjZHluYW1pY0Zvcm0gW3AtZmllbGRzXT1cImZpZWxkc1wiPjwvcG8tZHluYW1pYy1mb3JtPlxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogYGBgIGphdmFzY3JpcHRcclxuICAgICAqIGltcG9ydCB7IFBvRHluYW1pY0Zvcm1Db21wb25lbnQsIFBvRHluYW1pY0Zvcm1GaWVsZCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcclxuICAgICAqXHJcbiAgICAgKiAuLi5cclxuICAgICAqXHJcbiAgICAgKiBAVmlld0NoaWxkKCdkeW5hbWljRm9ybScsIHsgc3RhdGljOiB0cnVlIH0pIGR5bmFtaWNGb3JtOiBQb0R5bmFtaWNGb3JtQ29tcG9uZW50O1xyXG4gICAgICpcclxuICAgICAqIGZpZWxkczogQXJyYXk8UG9EeW5hbWljRm9ybUZpZWxkPiA9IFtcclxuICAgICAqICAgeyBwcm9wZXJ0eTogJ2ZpZWxkT25lJyB9LFxyXG4gICAgICogICB7IHByb3BlcnR5OiAnZmllbGRUd28nIH1cclxuICAgICAqIF07XHJcbiAgICAgKlxyXG4gICAgICogZmllbGRGb2N1cygpIHtcclxuICAgICAqICAgdGhpcy5keW5hbWljRm9ybS5mb2N1cygnZmllbGRUd28nKTtcclxuICAgICAqIH1cclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eSBOb21lIGRhIHByb3ByaWVkYWRlIGF0cmlidcOtZGEgYW8gYFBvRHluYW1pY0Zvcm1GaWVsZC5wcm9wZXJ0eWAuXHJcbiAgICAgKi9cclxuICAgIGZvY3VzKHByb3BlcnR5OiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgdmFsaWRhdGVGb3JtKGZpZWxkOiBQb0R5bmFtaWNGb3JtRmllbGQpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBhcHBseUZvcm1VcGRhdGVzT25Mb2FkO1xyXG4gICAgcHJpdmF0ZSBhcHBseUZvcm1WYWxpZGF0aW9uO1xyXG4gICAgcHJpdmF0ZSBkaXNhYmxlRm9ybTtcclxuICAgIHByaXZhdGUgZW1pdEZvcm07XHJcbiAgICBwcml2YXRlIGxvYWREYXRhT25Jbml0aWFsaXplO1xyXG4gICAgcHJpdmF0ZSByZW1vdmVMaXN0ZW5lcnM7XHJcbiAgICBwcml2YXRlIHNldEZvY3VzT25GaWVsZEJ5UHJvcGVydHk7XHJcbiAgICBwcml2YXRlIHVwZGF0ZU1vZGVsT25Mb2FkO1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVNb2RlbFdpdGhWYWxpZGF0aW9uO1xyXG59XHJcbiJdfQ==