import { ChangeDetectorRef, OnChanges, QueryList, SimpleChanges } from '@angular/core';
import { TitleCasePipe } from '@angular/common';
import { PoDynamicFormField } from '../po-dynamic-form-field.interface';
import { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';
import { PoDynamicFormValidationService } from '../po-dynamic-form-validation/po-dynamic-form-validation.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente de criação dos campos dinâmicos.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {
    private validationService;
    private changes;
    components: QueryList<{
        name: string;
        focus: () => void;
    }>;
    private previousValue;
    constructor(titleCasePipe: TitleCasePipe, validationService: PoDynamicFormValidationService, changes: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    focus(property: string): void;
    isDisabled(field: PoDynamicFormField): boolean;
    onChangeField(visibleField: PoDynamicFormField): Promise<void>;
    trackBy(index: any): any;
    private applyFieldValidation;
    private getField;
    private triggerValidationOnForm;
    private updateFields;
    private validateField;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDynamicFormFieldsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDynamicFormFieldsComponent, "po-dynamic-form-fields", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1mb3JtLWZpZWxkcy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZHluYW1pYy1mb3JtLWZpZWxkcy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uQ2hhbmdlcywgUXVlcnlMaXN0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpdGxlQ2FzZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtRmllbGQgfSBmcm9tICcuLi9wby1keW5hbWljLWZvcm0tZmllbGQuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9EeW5hbWljRm9ybUZpZWxkc0Jhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWR5bmFtaWMtZm9ybS1maWVsZHMtYmFzZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi5zZXJ2aWNlJztcclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogQ29tcG9uZW50ZSBkZSBjcmlhw6fDo28gZG9zIGNhbXBvcyBkaW7Dom1pY29zLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9EeW5hbWljRm9ybUZpZWxkc0NvbXBvbmVudCBleHRlbmRzIFBvRHluYW1pY0Zvcm1GaWVsZHNCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAgIHByaXZhdGUgdmFsaWRhdGlvblNlcnZpY2U7XHJcbiAgICBwcml2YXRlIGNoYW5nZXM7XHJcbiAgICBjb21wb25lbnRzOiBRdWVyeUxpc3Q8e1xyXG4gICAgICAgIG5hbWU6IHN0cmluZztcclxuICAgICAgICBmb2N1czogKCkgPT4gdm9pZDtcclxuICAgIH0+O1xyXG4gICAgcHJpdmF0ZSBwcmV2aW91c1ZhbHVlO1xyXG4gICAgY29uc3RydWN0b3IodGl0bGVDYXNlUGlwZTogVGl0bGVDYXNlUGlwZSwgdmFsaWRhdGlvblNlcnZpY2U6IFBvRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSwgY2hhbmdlczogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XHJcbiAgICBmb2N1cyhwcm9wZXJ0eTogc3RyaW5nKTogdm9pZDtcclxuICAgIGlzRGlzYWJsZWQoZmllbGQ6IFBvRHluYW1pY0Zvcm1GaWVsZCk6IGJvb2xlYW47XHJcbiAgICBvbkNoYW5nZUZpZWxkKHZpc2libGVGaWVsZDogUG9EeW5hbWljRm9ybUZpZWxkKTogUHJvbWlzZTx2b2lkPjtcclxuICAgIHRyYWNrQnkoaW5kZXg6IGFueSk6IGFueTtcclxuICAgIHByaXZhdGUgYXBwbHlGaWVsZFZhbGlkYXRpb247XHJcbiAgICBwcml2YXRlIGdldEZpZWxkO1xyXG4gICAgcHJpdmF0ZSB0cmlnZ2VyVmFsaWRhdGlvbk9uRm9ybTtcclxuICAgIHByaXZhdGUgdXBkYXRlRmllbGRzO1xyXG4gICAgcHJpdmF0ZSB2YWxpZGF0ZUZpZWxkO1xyXG59XHJcbiJdfQ==