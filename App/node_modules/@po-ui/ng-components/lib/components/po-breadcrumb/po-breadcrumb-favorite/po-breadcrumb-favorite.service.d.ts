import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
/**
 * @docsPrivate
 *
 * @description
 *
 * Serviço utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.
 * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os métodos, GET e POST este
 * objeto deve ser retornado.
 * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.
 * No método POST, existe a possibilidade de ser enviado parâmetros junto com a requisição. Neste caso, o objeto enviado
 * para a API terá o formato: { isFavorite: booleano, url: string, params: {} }, onde params é o objeto que pode ser enviado
 * junto com a requisição.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoBreadcrumbFavoriteService {
    private http;
    private _url;
    private _bodyParams;
    get url(): string;
    get bodyParams(): object;
    constructor(http: HttpClient);
    configService(url: any, params: any, item: any): void;
    sendStatusFavorite(status: any): Observable<any>;
    getFavorite(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoBreadcrumbFavoriteService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<PoBreadcrumbFavoriteService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1mYXZvcml0ZS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInBvLWJyZWFkY3J1bWItZmF2b3JpdGUuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogU2VydmnDp28gdXRpbGl6YWRvIHBhcmEgZmF2b3JpdGFyL2Rlc2Zhdm9yaXRhciB1bWEgdXJsIG5vIGNvbXBvbmVudGUgcG8tYnJlYWRjcnVtYi5cclxuICogQSBBUEkgZGV2ZSByZXRvcm5hciB1bSBvYmpldG8gbm8gZm9ybWF0byB7IGlzRmF2b3JpdGU6IGJvb2xlYW5vLCB1cmw6IHN0cmluZyB9LiBFbSBhbWJvcyBvcyBtw6l0b2RvcywgR0VUIGUgUE9TVCBlc3RlXHJcbiAqIG9iamV0byBkZXZlIHNlciByZXRvcm5hZG8uXHJcbiAqIEFvIGFsdGVyYXIgbyBzdGF0dXMgZGUgZmF2b3JpdG8sIGEgQVBJIGRldmUgcmV0b3JuYXIgbyBvYmpldG8gYWNpbWEsIGNvbSBvIG5vdm8gc3RhdHVzIGF0dWFsaXphZG8uXHJcbiAqIE5vIG3DqXRvZG8gUE9TVCwgZXhpc3RlIGEgcG9zc2liaWxpZGFkZSBkZSBzZXIgZW52aWFkbyBwYXLDom1ldHJvcyBqdW50byBjb20gYSByZXF1aXNpw6fDo28uIE5lc3RlIGNhc28sIG8gb2JqZXRvIGVudmlhZG9cclxuICogcGFyYSBhIEFQSSB0ZXLDoSBvIGZvcm1hdG86IHsgaXNGYXZvcml0ZTogYm9vbGVhbm8sIHVybDogc3RyaW5nLCBwYXJhbXM6IHt9IH0sIG9uZGUgcGFyYW1zIMOpIG8gb2JqZXRvIHF1ZSBwb2RlIHNlciBlbnZpYWRvXHJcbiAqIGp1bnRvIGNvbSBhIHJlcXVpc2nDp8Ojby5cclxuICpcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQnJlYWRjcnVtYkZhdm9yaXRlU2VydmljZSB7XHJcbiAgICBwcml2YXRlIGh0dHA7XHJcbiAgICBwcml2YXRlIF91cmw7XHJcbiAgICBwcml2YXRlIF9ib2R5UGFyYW1zO1xyXG4gICAgZ2V0IHVybCgpOiBzdHJpbmc7XHJcbiAgICBnZXQgYm9keVBhcmFtcygpOiBvYmplY3Q7XHJcbiAgICBjb25zdHJ1Y3RvcihodHRwOiBIdHRwQ2xpZW50KTtcclxuICAgIGNvbmZpZ1NlcnZpY2UodXJsOiBhbnksIHBhcmFtczogYW55LCBpdGVtOiBhbnkpOiB2b2lkO1xyXG4gICAgc2VuZFN0YXR1c0Zhdm9yaXRlKHN0YXR1czogYW55KTogT2JzZXJ2YWJsZTxhbnk+O1xyXG4gICAgZ2V0RmF2b3JpdGUoKTogT2JzZXJ2YWJsZTxhbnk+O1xyXG59XHJcbiJdfQ==