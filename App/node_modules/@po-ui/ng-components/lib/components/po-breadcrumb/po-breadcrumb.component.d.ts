import { AfterViewInit, DoCheck, ElementRef, IterableDiffers, OnDestroy, Renderer2 } from '@angular/core';
import { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';
import { PoBreadcrumbItem } from './po-breadcrumb-item.interface';
/**
 * @docsExtends PoBreadcrumbBaseComponent
 *
 * @example
 *
 * <example name="po-breadcrumb-basic" title="PO Breadcrumb Basic">
 *  <file name="sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html"> </file>
 *  <file name="sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-breadcrumb-labs" title="PO Breadcrumb Labs">
 *  <file name="sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html"> </file>
 *  <file name="sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {
    private element;
    renderer: Renderer2;
    showDropdown: boolean;
    showDropdownToggle: boolean;
    dropdownItems: Array<PoBreadcrumbItem>;
    private _breadcrumbItemsLenght;
    private calculatedElement;
    private differ;
    private hiddenWithoutResize;
    private initialized;
    private timeoutResize;
    breadcrumbElement: ElementRef;
    dropdownIcon: ElementRef;
    constructor(differs: IterableDiffers, element: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    toggleDropdown(): void;
    private wasClickedonDropdown;
    private checkClickOutElement;
    private checkChangeOnItems;
    private calcBreadcrumb;
    private getBreadcrumbFavoriteWidth;
    private getBreadcrumbWidth;
    private calcBreadcrumbItemsWidth;
    private enableBreadcrumbResponsive;
    private disableBreadcrumbResponsive;
    private debounceResize;
    private initBreadcrumbSize;
    private initializeClickoutListener;
    private initializeResizeListener;
    private removeClickoutListener;
    private removeResizeListener;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoBreadcrumbComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoBreadcrumbComponent, "po-breadcrumb", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tYnJlYWRjcnVtYi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgRWxlbWVudFJlZiwgSXRlcmFibGVEaWZmZXJzLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb0JyZWFkY3J1bWJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1icmVhZGNydW1iLWJhc2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9CcmVhZGNydW1iSXRlbSB9IGZyb20gJy4vcG8tYnJlYWRjcnVtYi1pdGVtLmludGVyZmFjZSc7XHJcbi8qKlxyXG4gKiBAZG9jc0V4dGVuZHMgUG9CcmVhZGNydW1iQmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tYnJlYWRjcnVtYi1iYXNpY1wiIHRpdGxlPVwiUE8gQnJlYWRjcnVtYiBCYXNpY1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1icmVhZGNydW1iLWJhc2ljL3NhbXBsZS1wby1icmVhZGNydW1iLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYnJlYWRjcnVtYi1iYXNpYy9zYW1wbGUtcG8tYnJlYWRjcnVtYi1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1icmVhZGNydW1iLWxhYnNcIiB0aXRsZT1cIlBPIEJyZWFkY3J1bWIgTGFic1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1icmVhZGNydW1iLWxhYnMvc2FtcGxlLXBvLWJyZWFkY3J1bWItbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWJyZWFkY3J1bWItbGFicy9zYW1wbGUtcG8tYnJlYWRjcnVtYi1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQnJlYWRjcnVtYkNvbXBvbmVudCBleHRlbmRzIFBvQnJlYWRjcnVtYkJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBEb0NoZWNrLCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50O1xyXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcclxuICAgIHNob3dEcm9wZG93bjogYm9vbGVhbjtcclxuICAgIHNob3dEcm9wZG93blRvZ2dsZTogYm9vbGVhbjtcclxuICAgIGRyb3Bkb3duSXRlbXM6IEFycmF5PFBvQnJlYWRjcnVtYkl0ZW0+O1xyXG4gICAgcHJpdmF0ZSBfYnJlYWRjcnVtYkl0ZW1zTGVuZ2h0O1xyXG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVkRWxlbWVudDtcclxuICAgIHByaXZhdGUgZGlmZmVyO1xyXG4gICAgcHJpdmF0ZSBoaWRkZW5XaXRob3V0UmVzaXplO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplZDtcclxuICAgIHByaXZhdGUgdGltZW91dFJlc2l6ZTtcclxuICAgIGJyZWFkY3J1bWJFbGVtZW50OiBFbGVtZW50UmVmO1xyXG4gICAgZHJvcGRvd25JY29uOiBFbGVtZW50UmVmO1xyXG4gICAgY29uc3RydWN0b3IoZGlmZmVyczogSXRlcmFibGVEaWZmZXJzLCBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgdG9nZ2xlRHJvcGRvd24oKTogdm9pZDtcclxuICAgIHByaXZhdGUgd2FzQ2xpY2tlZG9uRHJvcGRvd247XHJcbiAgICBwcml2YXRlIGNoZWNrQ2xpY2tPdXRFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBjaGVja0NoYW5nZU9uSXRlbXM7XHJcbiAgICBwcml2YXRlIGNhbGNCcmVhZGNydW1iO1xyXG4gICAgcHJpdmF0ZSBnZXRCcmVhZGNydW1iRmF2b3JpdGVXaWR0aDtcclxuICAgIHByaXZhdGUgZ2V0QnJlYWRjcnVtYldpZHRoO1xyXG4gICAgcHJpdmF0ZSBjYWxjQnJlYWRjcnVtYkl0ZW1zV2lkdGg7XHJcbiAgICBwcml2YXRlIGVuYWJsZUJyZWFkY3J1bWJSZXNwb25zaXZlO1xyXG4gICAgcHJpdmF0ZSBkaXNhYmxlQnJlYWRjcnVtYlJlc3BvbnNpdmU7XHJcbiAgICBwcml2YXRlIGRlYm91bmNlUmVzaXplO1xyXG4gICAgcHJpdmF0ZSBpbml0QnJlYWRjcnVtYlNpemU7XHJcbiAgICBwcml2YXRlIGluaXRpYWxpemVDbGlja291dExpc3RlbmVyO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplUmVzaXplTGlzdGVuZXI7XHJcbiAgICBwcml2YXRlIHJlbW92ZUNsaWNrb3V0TGlzdGVuZXI7XHJcbiAgICBwcml2YXRlIHJlbW92ZVJlc2l6ZUxpc3RlbmVyO1xyXG59XHJcbiJdfQ==