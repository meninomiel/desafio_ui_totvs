import { EventEmitter } from '@angular/core';
import { PoTagOrientation } from './enums/po-tag-orientation.enum';
import { PoTagType } from './enums/po-tag-type.enum';
/**
 * @description
 *
 * Este componente permite exibir um valor em forma de um marcador colorido, sendo possível definir uma legenda e realizar customizações
 * na cor, iconografia e tipo.
 *
 * Além disso, é possível definir uma ação que será executada tanto ao *click* quanto através das teclas *enter/space* enquanto navega
 * utilizando a tecla *tab*.
 *
 * Seu uso é recomendado para informações que necessitem de destaque em forma de marcação.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTagBaseComponent {
    private _color?;
    private _icon?;
    private _inverse?;
    private _orientation?;
    private _type?;
    readonly poTagOrientation: typeof PoTagOrientation;
    /**
     * @optional
     *
     * @description
     *
     * Define uma cor para a *tag*.
     *
     * Valores válidos:
     *  - <span class="dot po-color-01"></span> `color-01`
     *  - <span class="dot po-color-02"></span> `color-02`
     *  - <span class="dot po-color-03"></span> `color-03`
     *  - <span class="dot po-color-04"></span> `color-04`
     *  - <span class="dot po-color-05"></span> `color-05`
     *  - <span class="dot po-color-06"></span> `color-06`
     *  - <span class="dot po-color-07"></span> `color-07`
     *  - <span class="dot po-color-08"></span> `color-08`
     *  - <span class="dot po-color-09"></span> `color-09`
     *  - <span class="dot po-color-10"></span> `color-10`
     *  - <span class="dot po-color-11"></span> `color-11`
     *  - <span class="dot po-color-12"></span> `color-12`
     *
     * > **Atenção:** A propriedade `p-type` sobrepõe esta definição.
     */
    set color(value: string);
    get color(): string;
    /**
     * @optional
     *
     * @description
     *
     * Define ou ativa um ícone que será exibido ao lado do valor da *tag*.
     *
     * > Veja os valores válidos na [biblioteca de ícones](guides/icons).
     *
     * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o ícone seja exibido conforme descrições abaixo:
     * - <span class="po-icon po-icon-ok"></span> - `success`
     * - <span class="po-icon po-icon-warning"></span> - `warning`
     * - <span class="po-icon po-icon-close"></span> - `danger`
     * - <span class="po-icon po-icon-info"></span> - `info`
     *
     * @default `false`
     */
    set icon(value: boolean | string);
    get icon(): boolean | string;
    /**
     * @optional
     *
     * @description
     *
     * Ativa a inversão de cores configuradas no componente, possibilitando uma visualização de status ativo e inativo.
     *
     * > A cor do texto, do ícone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,
     * e a cor do fundo fica branca.
     *
     * @default `false`
     */
    set inverse(value: boolean);
    get inverse(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define uma legenda que será exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.
     */
    label?: string;
    /**
     * @optional
     *
     * @description
     *
     * Define o *layout* de exibição.
     *
     * @default `vertical`
     */
    set orientation(value: PoTagOrientation);
    get orientation(): PoTagOrientation;
    /**
     * @optional
     *
     * @description
     *
     * Define o tipo da *tag*.
     *
     * Valores válidos:
     *  - `success`: cor verde utilizada para simbolizar sucesso ou êxito.
     *  - `warning`: cor amarela que representa aviso ou advertência.
     *  - `danger`: cor vermelha para erro ou aviso crítico.
     *  - `info`: cor cinza escuro que caracteriza conteúdo informativo.
     *
     * > Quando esta propriedade for definida, irá sobrepor a definição de `p-color` e `p-icon` somente será exibido caso seja `true`.
     *
     * @default `info`
     */
    set type(value: PoTagType);
    get type(): PoTagType;
    /** Texto da tag. */
    value: string;
    /**
     * @optional
     *
     * @description
     *
     * Ação que será executada ao clicar sobre o `po-tag` e que receberá como parâmetro um objeto contendo o seu valor e tipo.
     */
    click?: EventEmitter<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTagBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoTagBaseComponent, never, never, { "color": "p-color"; "icon": "p-icon"; "inverse": "p-inverse"; "orientation": "p-orientation"; "type": "p-type"; "label": "p-label"; "value": "p-value"; }, { "click": "p-click"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFnLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXRhZy1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9UYWdPcmllbnRhdGlvbiB9IGZyb20gJy4vZW51bXMvcG8tdGFnLW9yaWVudGF0aW9uLmVudW0nO1xyXG5pbXBvcnQgeyBQb1RhZ1R5cGUgfSBmcm9tICcuL2VudW1zL3BvLXRhZy10eXBlLmVudW0nO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIEVzdGUgY29tcG9uZW50ZSBwZXJtaXRlIGV4aWJpciB1bSB2YWxvciBlbSBmb3JtYSBkZSB1bSBtYXJjYWRvciBjb2xvcmlkbywgc2VuZG8gcG9zc8OtdmVsIGRlZmluaXIgdW1hIGxlZ2VuZGEgZSByZWFsaXphciBjdXN0b21pemHDp8O1ZXNcclxuICogbmEgY29yLCBpY29ub2dyYWZpYSBlIHRpcG8uXHJcbiAqXHJcbiAqIEFsw6ltIGRpc3NvLCDDqSBwb3Nzw612ZWwgZGVmaW5pciB1bWEgYcOnw6NvIHF1ZSBzZXLDoSBleGVjdXRhZGEgdGFudG8gYW8gKmNsaWNrKiBxdWFudG8gYXRyYXbDqXMgZGFzIHRlY2xhcyAqZW50ZXIvc3BhY2UqIGVucXVhbnRvIG5hdmVnYVxyXG4gKiB1dGlsaXphbmRvIGEgdGVjbGEgKnRhYiouXHJcbiAqXHJcbiAqIFNldSB1c28gw6kgcmVjb21lbmRhZG8gcGFyYSBpbmZvcm1hw6fDtWVzIHF1ZSBuZWNlc3NpdGVtIGRlIGRlc3RhcXVlIGVtIGZvcm1hIGRlIG1hcmNhw6fDo28uXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1RhZ0Jhc2VDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBfY29sb3I/O1xyXG4gICAgcHJpdmF0ZSBfaWNvbj87XHJcbiAgICBwcml2YXRlIF9pbnZlcnNlPztcclxuICAgIHByaXZhdGUgX29yaWVudGF0aW9uPztcclxuICAgIHByaXZhdGUgX3R5cGU/O1xyXG4gICAgcmVhZG9ubHkgcG9UYWdPcmllbnRhdGlvbjogdHlwZW9mIFBvVGFnT3JpZW50YXRpb247XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlZmluZSB1bWEgY29yIHBhcmEgYSAqdGFnKi5cclxuICAgICAqXHJcbiAgICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxyXG4gICAgICogIC0gPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDFcIj48L3NwYW4+IGBjb2xvci0wMWBcclxuICAgICAqICAtIDxzcGFuIGNsYXNzPVwiZG90IHBvLWNvbG9yLTAyXCI+PC9zcGFuPiBgY29sb3ItMDJgXHJcbiAgICAgKiAgLSA8c3BhbiBjbGFzcz1cImRvdCBwby1jb2xvci0wM1wiPjwvc3Bhbj4gYGNvbG9yLTAzYFxyXG4gICAgICogIC0gPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDRcIj48L3NwYW4+IGBjb2xvci0wNGBcclxuICAgICAqICAtIDxzcGFuIGNsYXNzPVwiZG90IHBvLWNvbG9yLTA1XCI+PC9zcGFuPiBgY29sb3ItMDVgXHJcbiAgICAgKiAgLSA8c3BhbiBjbGFzcz1cImRvdCBwby1jb2xvci0wNlwiPjwvc3Bhbj4gYGNvbG9yLTA2YFxyXG4gICAgICogIC0gPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDdcIj48L3NwYW4+IGBjb2xvci0wN2BcclxuICAgICAqICAtIDxzcGFuIGNsYXNzPVwiZG90IHBvLWNvbG9yLTA4XCI+PC9zcGFuPiBgY29sb3ItMDhgXHJcbiAgICAgKiAgLSA8c3BhbiBjbGFzcz1cImRvdCBwby1jb2xvci0wOVwiPjwvc3Bhbj4gYGNvbG9yLTA5YFxyXG4gICAgICogIC0gPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTBcIj48L3NwYW4+IGBjb2xvci0xMGBcclxuICAgICAqICAtIDxzcGFuIGNsYXNzPVwiZG90IHBvLWNvbG9yLTExXCI+PC9zcGFuPiBgY29sb3ItMTFgXHJcbiAgICAgKiAgLSA8c3BhbiBjbGFzcz1cImRvdCBwby1jb2xvci0xMlwiPjwvc3Bhbj4gYGNvbG9yLTEyYFxyXG4gICAgICpcclxuICAgICAqID4gKipBdGVuw6fDo286KiogQSBwcm9wcmllZGFkZSBgcC10eXBlYCBzb2JyZXDDtWUgZXN0YSBkZWZpbmnDp8Ojby5cclxuICAgICAqL1xyXG4gICAgc2V0IGNvbG9yKHZhbHVlOiBzdHJpbmcpO1xyXG4gICAgZ2V0IGNvbG9yKCk6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogRGVmaW5lIG91IGF0aXZhIHVtIMOtY29uZSBxdWUgc2Vyw6EgZXhpYmlkbyBhbyBsYWRvIGRvIHZhbG9yIGRhICp0YWcqLlxyXG4gICAgICpcclxuICAgICAqID4gVmVqYSBvcyB2YWxvcmVzIHbDoWxpZG9zIG5hIFtiaWJsaW90ZWNhIGRlIMOtY29uZXNdKGd1aWRlcy9pY29ucykuXHJcbiAgICAgKlxyXG4gICAgICogUXVhbmRvIGBwLXR5cGVgIGVzdGl2ZXIgZGVmaW5pZGEsIGJhc3RhIGluZm9ybWFyIHVtIHZhbG9yIGlndWFsIGEgYHRydWVgIHBhcmEgcXVlIG8gw61jb25lIHNlamEgZXhpYmlkbyBjb25mb3JtZSBkZXNjcmnDp8O1ZXMgYWJhaXhvOlxyXG4gICAgICogLSA8c3BhbiBjbGFzcz1cInBvLWljb24gcG8taWNvbi1va1wiPjwvc3Bhbj4gLSBgc3VjY2Vzc2BcclxuICAgICAqIC0gPHNwYW4gY2xhc3M9XCJwby1pY29uIHBvLWljb24td2FybmluZ1wiPjwvc3Bhbj4gLSBgd2FybmluZ2BcclxuICAgICAqIC0gPHNwYW4gY2xhc3M9XCJwby1pY29uIHBvLWljb24tY2xvc2VcIj48L3NwYW4+IC0gYGRhbmdlcmBcclxuICAgICAqIC0gPHNwYW4gY2xhc3M9XCJwby1pY29uIHBvLWljb24taW5mb1wiPjwvc3Bhbj4gLSBgaW5mb2BcclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBpY29uKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKTtcclxuICAgIGdldCBpY29uKCk6IGJvb2xlYW4gfCBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIEF0aXZhIGEgaW52ZXJzw6NvIGRlIGNvcmVzIGNvbmZpZ3VyYWRhcyBubyBjb21wb25lbnRlLCBwb3NzaWJpbGl0YW5kbyB1bWEgdmlzdWFsaXphw6fDo28gZGUgc3RhdHVzIGF0aXZvIGUgaW5hdGl2by5cclxuICAgICAqXHJcbiAgICAgKiA+IEEgY29yIGRvIHRleHRvLCBkbyDDrWNvbmUgZSBkYSBib3JkYSBmaWNhbSBjb20gYSBjb3IgdXRpbGl6YWRhIG5hIHByb3ByaWVkYWRlIGBwLWNvbG9yYCBvdSBhIGNvciBjb3JyZXNwb25kZW50ZSBhbyBgcC10eXBlYCxcclxuICAgICAqIGUgYSBjb3IgZG8gZnVuZG8gZmljYSBicmFuY2EuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYGZhbHNlYFxyXG4gICAgICovXHJcbiAgICBzZXQgaW52ZXJzZSh2YWx1ZTogYm9vbGVhbik7XHJcbiAgICBnZXQgaW52ZXJzZSgpOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBEZWZpbmUgdW1hIGxlZ2VuZGEgcXVlIHNlcsOhIGV4aWJpZGEgYWNpbWEgb3UgYW8gbGFkbyBkYSAqdGFnKiwgZGUgYWNvcmRvIGNvbSBhIGBwLW9yaWVudGF0aW9uYC5cclxuICAgICAqL1xyXG4gICAgbGFiZWw/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlZmluZSBvICpsYXlvdXQqIGRlIGV4aWJpw6fDo28uXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYHZlcnRpY2FsYFxyXG4gICAgICovXHJcbiAgICBzZXQgb3JpZW50YXRpb24odmFsdWU6IFBvVGFnT3JpZW50YXRpb24pO1xyXG4gICAgZ2V0IG9yaWVudGF0aW9uKCk6IFBvVGFnT3JpZW50YXRpb247XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlZmluZSBvIHRpcG8gZGEgKnRhZyouXHJcbiAgICAgKlxyXG4gICAgICogVmFsb3JlcyB2w6FsaWRvczpcclxuICAgICAqICAtIGBzdWNjZXNzYDogY29yIHZlcmRlIHV0aWxpemFkYSBwYXJhIHNpbWJvbGl6YXIgc3VjZXNzbyBvdSDDqnhpdG8uXHJcbiAgICAgKiAgLSBgd2FybmluZ2A6IGNvciBhbWFyZWxhIHF1ZSByZXByZXNlbnRhIGF2aXNvIG91IGFkdmVydMOqbmNpYS5cclxuICAgICAqICAtIGBkYW5nZXJgOiBjb3IgdmVybWVsaGEgcGFyYSBlcnJvIG91IGF2aXNvIGNyw610aWNvLlxyXG4gICAgICogIC0gYGluZm9gOiBjb3IgY2luemEgZXNjdXJvIHF1ZSBjYXJhY3Rlcml6YSBjb250ZcO6ZG8gaW5mb3JtYXRpdm8uXHJcbiAgICAgKlxyXG4gICAgICogPiBRdWFuZG8gZXN0YSBwcm9wcmllZGFkZSBmb3IgZGVmaW5pZGEsIGlyw6Egc29icmVwb3IgYSBkZWZpbmnDp8OjbyBkZSBgcC1jb2xvcmAgZSBgcC1pY29uYCBzb21lbnRlIHNlcsOhIGV4aWJpZG8gY2FzbyBzZWphIGB0cnVlYC5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgaW5mb2BcclxuICAgICAqL1xyXG4gICAgc2V0IHR5cGUodmFsdWU6IFBvVGFnVHlwZSk7XHJcbiAgICBnZXQgdHlwZSgpOiBQb1RhZ1R5cGU7XHJcbiAgICAvKiogVGV4dG8gZGEgdGFnLiAqL1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogQcOnw6NvIHF1ZSBzZXLDoSBleGVjdXRhZGEgYW8gY2xpY2FyIHNvYnJlIG8gYHBvLXRhZ2AgZSBxdWUgcmVjZWJlcsOhIGNvbW8gcGFyw6JtZXRybyB1bSBvYmpldG8gY29udGVuZG8gbyBzZXUgdmFsb3IgZSB0aXBvLlxyXG4gICAgICovXHJcbiAgICBjbGljaz86IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG59XHJcbiJdfQ==