/**
 * @description
 *
 * O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais
 * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a
 * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),
 * assim possibilitando o tratamento para diferentes resoluções.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoContainerBaseComponent {
    private _height?;
    private _noBorder?;
    private _noPadding?;
    private _noShadow?;
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-container`.
     *
     * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
     */
    set height(value: number);
    get height(): number;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a borda e a sombra em torno do `po-container`.
     *
     * @default `false`
     */
    set noBorder(value: boolean);
    get noBorder(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o espaçamento interno do `po-container`.
     *
     * @default `false`
     */
    set noPadding(value: boolean);
    get noPadding(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o sombreamento em torno do `po-container`.
     *
     * @default `false`
     */
    set noShadow(value: boolean);
    get noShadow(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoContainerBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoContainerBaseComponent, never, never, { "height": "p-height"; "noBorder": "p-no-border"; "noPadding": "p-no-padding"; "noShadow": "p-no-shadow"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29udGFpbmVyLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNvbnRhaW5lci1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gYHBvLWNvbnRhaW5lcmAgw6kgdW0gY29tcG9uZW50ZSBxdWUgdmlzYSBmYWNpbGl0YXIgbyBhZ3J1cGFtZW50byBkZSBjb250ZcO6ZG9zLlxyXG4gKiBQb3IgcGFkcsOjbyBvIG1lc21vIGV4aWJlIHVtYSBib3JkYSwgdW0gZWZlaXRvIGRlIHNvbWJyYSBhbyBzZXUgcmVkb3IgZSB1bSBlc3Bhw6dhbWVudG8gZW0gc3VhIHBhcnRlIGludGVybmEsIG9zIHF1YWlzXHJcbiAqIHBvZGVtIHNlciBkZXNhYmlsaXRhZG9zLiBBbyByZW1vdmVyIHN1YSBib3JkYSBhIHNvbWJyYSB0YW1iw6ltIHNlcsOhIHJlbW92aWRhLiBBbMOpbSBkaXNzbywgc3VhIGFsdHVyYSBhY29tcGFuaGEgYVxyXG4gKiBxdWFudGlkYWRlIGRvIGNvbnRlw7pkbywgcG9yw6ltIHBvZGUgc2VyIGZpeGFkYS4gUGFyYSBjb250cm9sYXIgc3VhIGxhcmd1cmEsIHV0aWxpemUgbyBbR3JpZCBTeXN0ZW1dKC9ndWlkZXMvZ3JpZC1zeXN0ZW0pLFxyXG4gKiBhc3NpbSBwb3NzaWJpbGl0YW5kbyBvIHRyYXRhbWVudG8gcGFyYSBkaWZlcmVudGVzIHJlc29sdcOnw7Vlcy5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQ29udGFpbmVyQmFzZUNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIF9oZWlnaHQ/O1xyXG4gICAgcHJpdmF0ZSBfbm9Cb3JkZXI/O1xyXG4gICAgcHJpdmF0ZSBfbm9QYWRkaW5nPztcclxuICAgIHByaXZhdGUgX25vU2hhZG93PztcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogRGVmaW5lIGEgYWx0dXJhIGRvIGBwby1jb250YWluZXJgLlxyXG4gICAgICpcclxuICAgICAqID4gQ2FzbyBuw6NvIHNlamEgZGVmaW5pZG8gdW0gdmFsb3IsIGEgYWx0dXJhIHNlIGFqdXN0YXLDoSBkZSBhY29yZG8gY29tIG8gY29udGXDumRvLlxyXG4gICAgICovXHJcbiAgICBzZXQgaGVpZ2h0KHZhbHVlOiBudW1iZXIpO1xyXG4gICAgZ2V0IGhlaWdodCgpOiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlc2FiaWxpdGEgYSBib3JkYSBlIGEgc29tYnJhIGVtIHRvcm5vIGRvIGBwby1jb250YWluZXJgLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcclxuICAgICAqL1xyXG4gICAgc2V0IG5vQm9yZGVyKHZhbHVlOiBib29sZWFuKTtcclxuICAgIGdldCBub0JvcmRlcigpOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBEZXNhYmlsaXRhIG8gZXNwYcOnYW1lbnRvIGludGVybm8gZG8gYHBvLWNvbnRhaW5lcmAuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYGZhbHNlYFxyXG4gICAgICovXHJcbiAgICBzZXQgbm9QYWRkaW5nKHZhbHVlOiBib29sZWFuKTtcclxuICAgIGdldCBub1BhZGRpbmcoKTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogRGVzYWJpbGl0YSBvIHNvbWJyZWFtZW50byBlbSB0b3JubyBkbyBgcG8tY29udGFpbmVyYC5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBub1NoYWRvdyh2YWx1ZTogYm9vbGVhbik7XHJcbiAgICBnZXQgbm9TaGFkb3coKTogYm9vbGVhbjtcclxufVxyXG4iXX0=