import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';
import { PoPopoverBaseComponent } from './po-popover-base.component';
/**
 *
 * @docsExtends PoPopoverBaseComponent
 *
 * @example
 *
 * <example name="po-popover-basic" title="PO Popover Basic">
 *   <file name="sample-po-popover-basic/sample-po-popover-basic.component.html"> </file>
 *   <file name="sample-po-popover-basic/sample-po-popover-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popover-labs" title="PO Popover Labs">
 *   <file name="sample-po-popover-labs/sample-po-popover-labs.component.html"> </file>
 *   <file name="sample-po-popover-labs/sample-po-popover-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popover-credit-card" title="PO Popover - Credit Card">
 *   <file name="sample-po-popover-credit-card/sample-po-popover-credit-card.component.html"> </file>
 *   <file name="sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPopoverComponent extends PoPopoverBaseComponent implements AfterViewInit, OnDestroy {
    private renderer;
    private poControlPosition;
    arrowDirection: string;
    timeoutResize: any;
    eventListenerFunction: () => void;
    popoverElement: ElementRef;
    constructor(renderer: Renderer2, poControlPosition: PoControlPositionService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    close(): void;
    debounceResize(): void;
    open(): void;
    setOpacity(value: number): void;
    setPopoverPosition(): void;
    setRendererListenInit(): void;
    togglePopup(event: any): void;
    private addScrollEventListener;
    private initEventListenerFunction;
    private removeListeners;
    private setElementsControlPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPopoverComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoPopoverComponent, "po-popover", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcG9wb3Zlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tcG9wb3Zlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvcG8tY29udHJvbC1wb3NpdGlvbi9wby1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb1BvcG92ZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wb3BvdmVyLWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb1BvcG92ZXJCYXNlQ29tcG9uZW50XHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wb3BvdmVyLWJhc2ljXCIgdGl0bGU9XCJQTyBQb3BvdmVyIEJhc2ljXCI+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3BvdmVyLWJhc2ljL3NhbXBsZS1wby1wb3BvdmVyLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcG92ZXItYmFzaWMvc2FtcGxlLXBvLXBvcG92ZXItYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcG9wb3Zlci1sYWJzXCIgdGl0bGU9XCJQTyBQb3BvdmVyIExhYnNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcG92ZXItbGFicy9zYW1wbGUtcG8tcG9wb3Zlci1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcG92ZXItbGFicy9zYW1wbGUtcG8tcG9wb3Zlci1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXBvcG92ZXItY3JlZGl0LWNhcmRcIiB0aXRsZT1cIlBPIFBvcG92ZXIgLSBDcmVkaXQgQ2FyZFwiPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcG9wb3Zlci1jcmVkaXQtY2FyZC9zYW1wbGUtcG8tcG9wb3Zlci1jcmVkaXQtY2FyZC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3BvdmVyLWNyZWRpdC1jYXJkL3NhbXBsZS1wby1wb3BvdmVyLWNyZWRpdC1jYXJkLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvUG9wb3ZlckNvbXBvbmVudCBleHRlbmRzIFBvUG9wb3ZlckJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcclxuICAgIHByaXZhdGUgcG9Db250cm9sUG9zaXRpb247XHJcbiAgICBhcnJvd0RpcmVjdGlvbjogc3RyaW5nO1xyXG4gICAgdGltZW91dFJlc2l6ZTogYW55O1xyXG4gICAgZXZlbnRMaXN0ZW5lckZ1bmN0aW9uOiAoKSA9PiB2b2lkO1xyXG4gICAgcG9wb3ZlckVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBwb0NvbnRyb2xQb3NpdGlvbjogUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlKTtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIGNsb3NlKCk6IHZvaWQ7XHJcbiAgICBkZWJvdW5jZVJlc2l6ZSgpOiB2b2lkO1xyXG4gICAgb3BlbigpOiB2b2lkO1xyXG4gICAgc2V0T3BhY2l0eSh2YWx1ZTogbnVtYmVyKTogdm9pZDtcclxuICAgIHNldFBvcG92ZXJQb3NpdGlvbigpOiB2b2lkO1xyXG4gICAgc2V0UmVuZGVyZXJMaXN0ZW5Jbml0KCk6IHZvaWQ7XHJcbiAgICB0b2dnbGVQb3B1cChldmVudDogYW55KTogdm9pZDtcclxuICAgIHByaXZhdGUgYWRkU2Nyb2xsRXZlbnRMaXN0ZW5lcjtcclxuICAgIHByaXZhdGUgaW5pdEV2ZW50TGlzdGVuZXJGdW5jdGlvbjtcclxuICAgIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBzZXRFbGVtZW50c0NvbnRyb2xQb3NpdGlvbjtcclxufVxyXG4iXX0=