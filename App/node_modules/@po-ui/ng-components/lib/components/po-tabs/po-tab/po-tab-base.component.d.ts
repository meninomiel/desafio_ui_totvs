import { EventEmitter } from '@angular/core';
/**
 * @description
 *
 * O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.
 *
 * Com este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,
 * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.
 *
 * > Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class PoTabBaseComponent {
    private _active?;
    private _disabled?;
    private _hide?;
    id?: string;
    /**
     * @optional
     *
     * @description
     *
     * Ativa a aba exibindo seu conteúdo.
     *
     * > Sugere-se utilizar na aba de conteúdo inicial.
     *
     * @default `false`
     */
    set active(active: boolean);
    get active(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a aba.
     *
     * @default `false`
     */
    set disabled(disabled: boolean);
    get disabled(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Oculta a aba.
     *
     * @default `false`
     */
    set hide(hide: boolean);
    get hide(): boolean;
    /** Rótulo da aba. */
    label: string;
    /** Método disparado ao clicar na aba. */
    click: EventEmitter<any>;
    protected abstract setDisplayOnActive(): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTabBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoTabBaseComponent, never, never, { "active": "p-active"; "disabled": "p-disabled"; "hide": "p-hide"; "label": "p-label"; }, { "click": "p-click"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXRhYi1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tdGFiYCByZW5kZXJpemEgdW1hIGFiYSBuYSBxdWFsIGVudm9sdmUgdW0gY29udGXDumRvIEhUTUwuXHJcbiAqXHJcbiAqIENvbSBlc3RlIGNvbXBvbmVudGUgw6kgcG9zc8OtdmVsIGF0cmlidWlyIHVtIHLDs3R1bG8gcGFyYSBhdXhpbGlhciBuYSBpZGVudGlmaWNhw6fDo28gZG8gY29udGXDumRvLCBhdGl2YXIgcGFyYSBxdWUgbyBtZXNtbyBzZWphIGV4aWJpZG8sXHJcbiAqIGRlc2FiaWxpdGFyIHBhcmEgaW1wb3NzaWJpbGl0YXIgbyBhY2Vzc28sIGJlbSBjb21vIG9jdWx0YXIgcGFyYSBpbmRpc3BvbmliaWxpemFyIGEgYWJhLlxyXG4gKlxyXG4gKiA+IFBhcmEgY29udHJvbGFyIGEgbmF2ZWdhw6fDo28gZW50cmUgZGl2ZXJzYXMgYWJhcywgdXRpbGl6YXIgbyBjb21wb25lbnRlIFtgcG8tdGFic2BdKC9kb2N1bWVudGF0aW9uL3BvLXRhYnMpLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgUG9UYWJCYXNlQ29tcG9uZW50IHtcclxuICAgIHByaXZhdGUgX2FjdGl2ZT87XHJcbiAgICBwcml2YXRlIF9kaXNhYmxlZD87XHJcbiAgICBwcml2YXRlIF9oaWRlPztcclxuICAgIGlkPzogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBBdGl2YSBhIGFiYSBleGliaW5kbyBzZXUgY29udGXDumRvLlxyXG4gICAgICpcclxuICAgICAqID4gU3VnZXJlLXNlIHV0aWxpemFyIG5hIGFiYSBkZSBjb250ZcO6ZG8gaW5pY2lhbC5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBhY3RpdmUoYWN0aXZlOiBib29sZWFuKTtcclxuICAgIGdldCBhY3RpdmUoKTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogRGVzYWJpbGl0YSBhIGFiYS5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBkaXNhYmxlZChkaXNhYmxlZDogYm9vbGVhbik7XHJcbiAgICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogT2N1bHRhIGEgYWJhLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcclxuICAgICAqL1xyXG4gICAgc2V0IGhpZGUoaGlkZTogYm9vbGVhbik7XHJcbiAgICBnZXQgaGlkZSgpOiBib29sZWFuO1xyXG4gICAgLyoqIFLDs3R1bG8gZGEgYWJhLiAqL1xyXG4gICAgbGFiZWw6IHN0cmluZztcclxuICAgIC8qKiBNw6l0b2RvIGRpc3BhcmFkbyBhbyBjbGljYXIgbmEgYWJhLiAqL1xyXG4gICAgY2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IHNldERpc3BsYXlPbkFjdGl2ZSgpOiBhbnk7XHJcbn1cclxuIl19