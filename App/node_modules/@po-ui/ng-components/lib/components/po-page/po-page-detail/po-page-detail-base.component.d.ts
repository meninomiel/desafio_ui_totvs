import { EventEmitter } from '@angular/core';
import { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
import { PoPageDetailLiterals } from './po-page-detail-literals.interface';
import * as ɵngcc0 from '@angular/core';
export declare const poPageDetailLiteralsDefault: {
    en: PoPageDetailLiterals;
    es: PoPageDetailLiterals;
    pt: PoPageDetailLiterals;
    ru: PoPageDetailLiterals;
};
/**
 * @description
 *
 * O componente **po-page-detail** é utilizado como container principal para a tela de
 * detalhamento de um registro, tendo a possibilidade de usar as ações de "Voltar", "Editar" e "Remover".
 */
export declare class PoPageDetailBaseComponent {
    private _literals;
    private _title;
    poPageContent: PoPageContentComponent;
    /** Objeto com propriedades do breadcrumb. */
    breadcrumb: PoBreadcrumb;
    /**
     * @optional
     *
     * @description
     *
     * Objeto com as literais usadas no `po-page-detail`.
     *
     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
     *
     * ```
     *  const customLiterals: PoPageDetailLiterals = {
     *    edit: 'Edição',
     *    remove: 'Exclusão',
     *    back: 'Menu'
     *  };
     * ```
     *
     * Ou passando apenas as literais que deseja customizar:
     *
     * ```
     *  const customLiterals: PoPageDetailLiterals = {
     *    remove: 'Excluir registro permanentemente'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <po-page-detail
     *   [p-literals]="customLiterals">
     * </po-page-detail>
     * ```
     *
     *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
     */
    set literals(value: PoPageDetailLiterals);
    get literals(): PoPageDetailLiterals;
    /** Título da página. */
    set title(title: string);
    get title(): string;
    /**
     * Evento que será disparado ao clicar no botão de "Voltar".
     *
     * ```
     * <po-page-detail (p-back)="myBackFunction()">
     * </po-page-detail>
     * ```
     *
     * > Caso não utilizar esta propriedade, o botão de "Voltar" não será exibido.
     */
    back?: EventEmitter<any>;
    /**
     * Evento que será disparado ao clicar no botão de "Editar".
     *
     * ```
     * <po-page-detail (p-edit)="myEditFunction()">
     * </po-page-detail>
     * ```
     *
     * > Caso não utilizar esta propriedade, o botão de "Editar" não será exibido.
     */
    edit?: EventEmitter<any>;
    /**
     * Evento que será disparado ao clicar no botão de "Remover".
     *
     * ```
     * <po-page-detail (p-remove)="myRemoveFunction()">
     * </po-page-detail>
     * ```
     *
     * > Caso não utilizar esta propriedade, o botão de "Remover" não será exibido.
     */
    remove?: EventEmitter<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPageDetailBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoPageDetailBaseComponent, never, never, { "literals": "p-literals"; "title": "p-title"; "breadcrumb": "p-breadcrumb"; }, { "back": "p-back"; "edit": "p-edit"; "remove": "p-remove"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1kZXRhaWwtYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tcGFnZS1kZXRhaWwtYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9CcmVhZGNydW1iIH0gZnJvbSAnLi4vLi4vcG8tYnJlYWRjcnVtYi9wby1icmVhZGNydW1iLmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFBvUGFnZUNvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuLi9wby1wYWdlLWNvbnRlbnQvcG8tcGFnZS1jb250ZW50LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvUGFnZURldGFpbExpdGVyYWxzIH0gZnJvbSAnLi9wby1wYWdlLWRldGFpbC1saXRlcmFscy5pbnRlcmZhY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBwb1BhZ2VEZXRhaWxMaXRlcmFsc0RlZmF1bHQ6IHtcclxuICAgIGVuOiBQb1BhZ2VEZXRhaWxMaXRlcmFscztcclxuICAgIGVzOiBQb1BhZ2VEZXRhaWxMaXRlcmFscztcclxuICAgIHB0OiBQb1BhZ2VEZXRhaWxMaXRlcmFscztcclxuICAgIHJ1OiBQb1BhZ2VEZXRhaWxMaXRlcmFscztcclxufTtcclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKlxyXG4gKiBPIGNvbXBvbmVudGUgKipwby1wYWdlLWRldGFpbCoqIMOpIHV0aWxpemFkbyBjb21vIGNvbnRhaW5lciBwcmluY2lwYWwgcGFyYSBhIHRlbGEgZGVcclxuICogZGV0YWxoYW1lbnRvIGRlIHVtIHJlZ2lzdHJvLCB0ZW5kbyBhIHBvc3NpYmlsaWRhZGUgZGUgdXNhciBhcyBhw6fDtWVzIGRlIFwiVm9sdGFyXCIsIFwiRWRpdGFyXCIgZSBcIlJlbW92ZXJcIi5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvUGFnZURldGFpbEJhc2VDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBfbGl0ZXJhbHM7XHJcbiAgICBwcml2YXRlIF90aXRsZTtcclxuICAgIHBvUGFnZUNvbnRlbnQ6IFBvUGFnZUNvbnRlbnRDb21wb25lbnQ7XHJcbiAgICAvKiogT2JqZXRvIGNvbSBwcm9wcmllZGFkZXMgZG8gYnJlYWRjcnVtYi4gKi9cclxuICAgIGJyZWFkY3J1bWI6IFBvQnJlYWRjcnVtYjtcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogT2JqZXRvIGNvbSBhcyBsaXRlcmFpcyB1c2FkYXMgbm8gYHBvLXBhZ2UtZGV0YWlsYC5cclxuICAgICAqXHJcbiAgICAgKiBFeGlzdGVtIGR1YXMgbWFuZWlyYXMgZGUgY3VzdG9taXphciBvIGNvbXBvbmVudGUsIHBhc3NhbmRvIHVtIG9iamV0byBjb20gdG9kYXMgYXMgbGl0ZXJhaXMgZGlzcG9uw612ZWlzOlxyXG4gICAgICpcclxuICAgICAqIGBgYFxyXG4gICAgICogIGNvbnN0IGN1c3RvbUxpdGVyYWxzOiBQb1BhZ2VEZXRhaWxMaXRlcmFscyA9IHtcclxuICAgICAqICAgIGVkaXQ6ICdFZGnDp8OjbycsXHJcbiAgICAgKiAgICByZW1vdmU6ICdFeGNsdXPDo28nLFxyXG4gICAgICogICAgYmFjazogJ01lbnUnXHJcbiAgICAgKiAgfTtcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIE91IHBhc3NhbmRvIGFwZW5hcyBhcyBsaXRlcmFpcyBxdWUgZGVzZWphIGN1c3RvbWl6YXI6XHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiAgY29uc3QgY3VzdG9tTGl0ZXJhbHM6IFBvUGFnZURldGFpbExpdGVyYWxzID0ge1xyXG4gICAgICogICAgcmVtb3ZlOiAnRXhjbHVpciByZWdpc3RybyBwZXJtYW5lbnRlbWVudGUnXHJcbiAgICAgKiAgfTtcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEUgcGFyYSBjYXJyZWdhciBhcyBsaXRlcmFpcyBjdXN0b21pemFkYXMsIGJhc3RhIGFwZW5hcyBwYXNzYXIgbyBvYmpldG8gcGFyYSBvIGNvbXBvbmVudGUuXHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiA8cG8tcGFnZS1kZXRhaWxcclxuICAgICAqICAgW3AtbGl0ZXJhbHNdPVwiY3VzdG9tTGl0ZXJhbHNcIj5cclxuICAgICAqIDwvcG8tcGFnZS1kZXRhaWw+XHJcbiAgICAgKiBgYGBcclxuICAgICAqXHJcbiAgICAgKiAgPiBPIG9iamV0byBwYWRyw6NvIGRlIGxpdGVyYWlzIHNlcsOhIHRyYWR1emlkbyBkZSBhY29yZG8gY29tIG8gaWRpb21hIGRvIGJyb3dzZXIgKHB0LCBlbiwgZXMpLlxyXG4gICAgICovXHJcbiAgICBzZXQgbGl0ZXJhbHModmFsdWU6IFBvUGFnZURldGFpbExpdGVyYWxzKTtcclxuICAgIGdldCBsaXRlcmFscygpOiBQb1BhZ2VEZXRhaWxMaXRlcmFscztcclxuICAgIC8qKiBUw610dWxvIGRhIHDDoWdpbmEuICovXHJcbiAgICBzZXQgdGl0bGUodGl0bGU6IHN0cmluZyk7XHJcbiAgICBnZXQgdGl0bGUoKTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudG8gcXVlIHNlcsOhIGRpc3BhcmFkbyBhbyBjbGljYXIgbm8gYm90w6NvIGRlIFwiVm9sdGFyXCIuXHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiA8cG8tcGFnZS1kZXRhaWwgKHAtYmFjayk9XCJteUJhY2tGdW5jdGlvbigpXCI+XHJcbiAgICAgKiA8L3BvLXBhZ2UtZGV0YWlsPlxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogPiBDYXNvIG7Do28gdXRpbGl6YXIgZXN0YSBwcm9wcmllZGFkZSwgbyBib3TDo28gZGUgXCJWb2x0YXJcIiBuw6NvIHNlcsOhIGV4aWJpZG8uXHJcbiAgICAgKi9cclxuICAgIGJhY2s/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIC8qKlxyXG4gICAgICogRXZlbnRvIHF1ZSBzZXLDoSBkaXNwYXJhZG8gYW8gY2xpY2FyIG5vIGJvdMOjbyBkZSBcIkVkaXRhclwiLlxyXG4gICAgICpcclxuICAgICAqIGBgYFxyXG4gICAgICogPHBvLXBhZ2UtZGV0YWlsIChwLWVkaXQpPVwibXlFZGl0RnVuY3Rpb24oKVwiPlxyXG4gICAgICogPC9wby1wYWdlLWRldGFpbD5cclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqID4gQ2FzbyBuw6NvIHV0aWxpemFyIGVzdGEgcHJvcHJpZWRhZGUsIG8gYm90w6NvIGRlIFwiRWRpdGFyXCIgbsOjbyBzZXLDoSBleGliaWRvLlxyXG4gICAgICovXHJcbiAgICBlZGl0PzogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50byBxdWUgc2Vyw6EgZGlzcGFyYWRvIGFvIGNsaWNhciBubyBib3TDo28gZGUgXCJSZW1vdmVyXCIuXHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiA8cG8tcGFnZS1kZXRhaWwgKHAtcmVtb3ZlKT1cIm15UmVtb3ZlRnVuY3Rpb24oKVwiPlxyXG4gICAgICogPC9wby1wYWdlLWRldGFpbD5cclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqID4gQ2FzbyBuw6NvIHV0aWxpemFyIGVzdGEgcHJvcHJpZWRhZGUsIG8gYm90w6NvIGRlIFwiUmVtb3ZlclwiIG7Do28gc2Vyw6EgZXhpYmlkby5cclxuICAgICAqL1xyXG4gICAgcmVtb3ZlPzogRXZlbnRFbWl0dGVyPGFueT47XHJcbn1cclxuIl19