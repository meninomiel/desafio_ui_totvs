import { AfterContentInit, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction } from '../../../utils/util';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoPageAction } from '../po-page-action.interface';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
import { PoPageListBaseComponent } from './po-page-list-base.component';
/**
 * @docsExtends PoPageListBaseComponent
 *
 * @example
 *
 * <example name="po-page-list-basic" title="PO Page List Basic">
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.html"> </file>
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-labs" title="PO Page List Labs">
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.html"> </file>
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-hiring-processes" title="PO Page List - Hiring Processes">
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPageListComponent extends PoPageListBaseComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {
    renderer: Renderer2;
    private router;
    private changeDetector;
    advancedSearch: string;
    dropdownActions: Array<PoPageAction>;
    isMobile: boolean;
    limitPrimaryActions: number;
    parentRef: ViewContainerRef;
    private isRecalculate;
    private maxWidthMobile;
    callFunction: typeof callFunction;
    poPageContent: PoPageContentComponent;
    constructor(viewRef: ViewContainerRef, languageService: PoLanguageService, renderer: Renderer2, router: Router, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: {
        [propName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    actionIsDisabled(action: any): any;
    callAction(item: PoPageAction): void;
    hasPageHeader(): boolean;
    private onResize;
    private setIsMobile;
    setDropdownActions(): void;
    callActionFilter(field: string): void;
    onkeypress(key: any): void;
    changeModel(newModel: any): void;
    onChangeDisclaimerGroup(disclaimers: any): void;
    private initializeFixedLiterals;
    private initializeListeners;
    private removeListeners;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPageListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoPageListComponent, "po-page-list", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1saXN0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1wYWdlLWxpc3QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlLCBWaWV3Q29udGFpbmVyUmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBjYWxsRnVuY3Rpb24gfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcclxuaW1wb3J0IHsgUG9MYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb1BhZ2VBY3Rpb24gfSBmcm9tICcuLi9wby1wYWdlLWFjdGlvbi5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBQb1BhZ2VDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi4vcG8tcGFnZS1jb250ZW50L3BvLXBhZ2UtY29udGVudC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQb1BhZ2VMaXN0QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tcGFnZS1saXN0LWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb1BhZ2VMaXN0QmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcGFnZS1saXN0LWJhc2ljXCIgdGl0bGU9XCJQTyBQYWdlIExpc3QgQmFzaWNcIj5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1saXN0LWJhc2ljL3NhbXBsZS1wby1wYWdlLWxpc3QtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYWdlLWxpc3QtYmFzaWMvc2FtcGxlLXBvLXBhZ2UtbGlzdC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYWdlLWxpc3QtbGFic1wiIHRpdGxlPVwiUE8gUGFnZSBMaXN0IExhYnNcIj5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1saXN0LWxhYnMvc2FtcGxlLXBvLXBhZ2UtbGlzdC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1saXN0LWxhYnMvc2FtcGxlLXBvLXBhZ2UtbGlzdC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzXCIgdGl0bGU9XCJQTyBQYWdlIExpc3QgLSBIaXJpbmcgUHJvY2Vzc2VzXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzL3NhbXBsZS1wby1wYWdlLWxpc3QtaGlyaW5nLXByb2Nlc3Nlcy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzL3NhbXBsZS1wby1wYWdlLWxpc3QtaGlyaW5nLXByb2Nlc3Nlcy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYWdlLWxpc3QtaGlyaW5nLXByb2Nlc3Nlcy9zYW1wbGUtcG8tcGFnZS1saXN0LWhpcmluZy1wcm9jZXNzZXMuc2VydmljZS50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvUGFnZUxpc3RDb21wb25lbnQgZXh0ZW5kcyBQb1BhZ2VMaXN0QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcclxuICAgIHByaXZhdGUgcm91dGVyO1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcclxuICAgIGFkdmFuY2VkU2VhcmNoOiBzdHJpbmc7XHJcbiAgICBkcm9wZG93bkFjdGlvbnM6IEFycmF5PFBvUGFnZUFjdGlvbj47XHJcbiAgICBpc01vYmlsZTogYm9vbGVhbjtcclxuICAgIGxpbWl0UHJpbWFyeUFjdGlvbnM6IG51bWJlcjtcclxuICAgIHBhcmVudFJlZjogVmlld0NvbnRhaW5lclJlZjtcclxuICAgIHByaXZhdGUgaXNSZWNhbGN1bGF0ZTtcclxuICAgIHByaXZhdGUgbWF4V2lkdGhNb2JpbGU7XHJcbiAgICBjYWxsRnVuY3Rpb246IHR5cGVvZiBjYWxsRnVuY3Rpb247XHJcbiAgICBwb1BhZ2VDb250ZW50OiBQb1BhZ2VDb250ZW50Q29tcG9uZW50O1xyXG4gICAgY29uc3RydWN0b3Iodmlld1JlZjogVmlld0NvbnRhaW5lclJlZiwgbGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcm91dGVyOiBSb3V0ZXIsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiB7XHJcbiAgICAgICAgW3Byb3BOYW1lOiBzdHJpbmddOiBTaW1wbGVDaGFuZ2U7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBhY3Rpb25Jc0Rpc2FibGVkKGFjdGlvbjogYW55KTogYW55O1xyXG4gICAgY2FsbEFjdGlvbihpdGVtOiBQb1BhZ2VBY3Rpb24pOiB2b2lkO1xyXG4gICAgaGFzUGFnZUhlYWRlcigpOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBvblJlc2l6ZTtcclxuICAgIHByaXZhdGUgc2V0SXNNb2JpbGU7XHJcbiAgICBzZXREcm9wZG93bkFjdGlvbnMoKTogdm9pZDtcclxuICAgIGNhbGxBY3Rpb25GaWx0ZXIoZmllbGQ6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICBvbmtleXByZXNzKGtleTogYW55KTogdm9pZDtcclxuICAgIGNoYW5nZU1vZGVsKG5ld01vZGVsOiBhbnkpOiB2b2lkO1xyXG4gICAgb25DaGFuZ2VEaXNjbGFpbWVyR3JvdXAoZGlzY2xhaW1lcnM6IGFueSk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGluaXRpYWxpemVGaXhlZExpdGVyYWxzO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSByZW1vdmVMaXN0ZW5lcnM7XHJcbn1cclxuIl19