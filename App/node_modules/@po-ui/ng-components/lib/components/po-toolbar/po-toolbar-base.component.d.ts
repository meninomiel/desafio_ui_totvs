import { PoToolbarAction } from './po-toolbar-action.interface';
import { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';
/**
 * @description
 *
 * O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoToolbarBaseComponent {
    private _notificationNumber?;
    /**
     * @optional
     *
     * @description
     *
     * Define uma lista de ações que serão exibidas ao clicar no ícone declarado em `p-actions-icon`.
     */
    actions?: Array<PoToolbarAction>;
    /**
     * @optional
     *
     * @description
     *
     * Define um [ícone](/guides/icons) para a propriedade `p-actions`.
     *
     * > Caso não haja ações definidas em `p-actions`, o ícone não será exibido.
     *
     * @default `po-icon-more`
     */
    actionsIcon?: string;
    /** Define o objeto que será o cabeçalho da lista de ações com as informações do perfil. */
    profile?: PoToolbarProfile;
    /** Define uma lista de ações que serão exibidas ao clicar no ícone do perfil. */
    profileActions?: Array<PoToolbarAction>;
    /** Se falso, oculta o ícone de notificações. */
    showNotification?: boolean;
    /** Título do *toolbar* e aplicação. */
    title: string;
    /**
     * @optional
     *
     * @description
     *
     * Lista de ações da notificação.
     */
    notificationActions?: Array<PoToolbarAction>;
    /**
     * @optional
     *
     * @description
     *
     * Número de notificações.
     */
    set notificationNumber(value: number);
    get notificationNumber(): number;
    get isShowProfile(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoToolbarBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoToolbarBaseComponent, never, never, { "showNotification": "p-show-notification"; "notificationNumber": "p-notification-number"; "actions": "p-actions"; "actionsIcon": "p-actions-icon"; "profile": "p-profile"; "profileActions": "p-profile-actions"; "title": "p-title"; "notificationActions": "p-notification-actions"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby10b29sYmFyLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvVG9vbGJhckFjdGlvbiB9IGZyb20gJy4vcG8tdG9vbGJhci1hY3Rpb24uaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9Ub29sYmFyUHJvZmlsZSB9IGZyb20gJy4vcG8tdG9vbGJhci1wcm9maWxlL3BvLXRvb2xiYXItcHJvZmlsZS5pbnRlcmZhY2UnO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tdG9vbGJhcmAgw6kgdW0gY2FiZcOnYWxobyBwYXJhIG8gdMOtdHVsbyBkYSBhcGxpY2HDp8OjbyBlIGluZm9ybWHDp8O1ZXMgZGUgdXN1w6FyaW8gZSBub3RpZmljYcOnw7VlcyBxdWFuZG8gaG91dmVyIG5lY2Vzc2lkYWRlLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9Ub29sYmFyQmFzZUNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIF9ub3RpZmljYXRpb25OdW1iZXI/O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBEZWZpbmUgdW1hIGxpc3RhIGRlIGHDp8O1ZXMgcXVlIHNlcsOjbyBleGliaWRhcyBhbyBjbGljYXIgbm8gw61jb25lIGRlY2xhcmFkbyBlbSBgcC1hY3Rpb25zLWljb25gLlxyXG4gICAgICovXHJcbiAgICBhY3Rpb25zPzogQXJyYXk8UG9Ub29sYmFyQWN0aW9uPjtcclxuICAgIC8qKlxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogRGVmaW5lIHVtIFvDrWNvbmVdKC9ndWlkZXMvaWNvbnMpIHBhcmEgYSBwcm9wcmllZGFkZSBgcC1hY3Rpb25zYC5cclxuICAgICAqXHJcbiAgICAgKiA+IENhc28gbsOjbyBoYWphIGHDp8O1ZXMgZGVmaW5pZGFzIGVtIGBwLWFjdGlvbnNgLCBvIMOtY29uZSBuw6NvIHNlcsOhIGV4aWJpZG8uXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYHBvLWljb24tbW9yZWBcclxuICAgICAqL1xyXG4gICAgYWN0aW9uc0ljb24/OiBzdHJpbmc7XHJcbiAgICAvKiogRGVmaW5lIG8gb2JqZXRvIHF1ZSBzZXLDoSBvIGNhYmXDp2FsaG8gZGEgbGlzdGEgZGUgYcOnw7VlcyBjb20gYXMgaW5mb3JtYcOnw7VlcyBkbyBwZXJmaWwuICovXHJcbiAgICBwcm9maWxlPzogUG9Ub29sYmFyUHJvZmlsZTtcclxuICAgIC8qKiBEZWZpbmUgdW1hIGxpc3RhIGRlIGHDp8O1ZXMgcXVlIHNlcsOjbyBleGliaWRhcyBhbyBjbGljYXIgbm8gw61jb25lIGRvIHBlcmZpbC4gKi9cclxuICAgIHByb2ZpbGVBY3Rpb25zPzogQXJyYXk8UG9Ub29sYmFyQWN0aW9uPjtcclxuICAgIC8qKiBTZSBmYWxzbywgb2N1bHRhIG8gw61jb25lIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xyXG4gICAgc2hvd05vdGlmaWNhdGlvbj86IGJvb2xlYW47XHJcbiAgICAvKiogVMOtdHVsbyBkbyAqdG9vbGJhciogZSBhcGxpY2HDp8Ojby4gKi9cclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIExpc3RhIGRlIGHDp8O1ZXMgZGEgbm90aWZpY2HDp8Ojby5cclxuICAgICAqL1xyXG4gICAgbm90aWZpY2F0aW9uQWN0aW9ucz86IEFycmF5PFBvVG9vbGJhckFjdGlvbj47XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIE7Dum1lcm8gZGUgbm90aWZpY2HDp8O1ZXMuXHJcbiAgICAgKi9cclxuICAgIHNldCBub3RpZmljYXRpb25OdW1iZXIodmFsdWU6IG51bWJlcik7XHJcbiAgICBnZXQgbm90aWZpY2F0aW9uTnVtYmVyKCk6IG51bWJlcjtcclxuICAgIGdldCBpc1Nob3dQcm9maWxlKCk6IGJvb2xlYW47XHJcbn1cclxuIl19