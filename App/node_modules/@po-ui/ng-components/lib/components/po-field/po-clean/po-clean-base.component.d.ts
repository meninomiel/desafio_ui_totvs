import { ElementRef, EventEmitter } from '@angular/core';
/**
 * @docsPrivate
 *
 * Este componente é de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informações do model.
 *
 * Por padrão limpa o valor do campo e executa o método onChangePropagate, caso tenha a necessidade de tratar a função de limpar o campo,
 * deve implementar a interface PoClean.
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class PoCleanBaseComponent {
    /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizará o po-clean. */
    inputRef: ElementRef;
    /** Valor que será atribuído ao campo quando for clicado no po-clean. */
    defaultValue?: string;
    /**
     * Evento disparado quando executada ação do po-clean.
     * Este evento deve ser usado para avisar para o componente que está usando o po-clean, que o botão foi disparado,
     * e provavelmente será preciso emitir o evento para atualizar o model.
     */
    changeEvent?: EventEmitter<any>;
    protected parentComponent: any;
    clear(): void;
    showIcon(): boolean;
    private hasCleanAttr;
    private isDisabled;
    private isReadonly;
    abstract setInputValue(value: string): void;
    abstract getInputValue(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoCleanBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoCleanBaseComponent, never, never, { "defaultValue": "p-default-value"; "inputRef": "p-element-ref"; }, { "changeEvent": "p-change-event"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2xlYW4tYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tY2xlYW4tYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbi8qKlxyXG4gKiBAZG9jc1ByaXZhdGVcclxuICpcclxuICogRXN0ZSBjb21wb25lbnRlIMOpIGRlIHVzbyBpbnRlcm5vIHV0aWxpemFkbyBwb3IgY29tcG9uZW50ZXMgZGUgZW50cmFkYSBkZSBkYWRvcyBjb20gbyBvYmpldGl2byBkZSByZXNldGFyIGFzIGluZm9ybWHDp8O1ZXMgZG8gbW9kZWwuXHJcbiAqXHJcbiAqIFBvciBwYWRyw6NvIGxpbXBhIG8gdmFsb3IgZG8gY2FtcG8gZSBleGVjdXRhIG8gbcOpdG9kbyBvbkNoYW5nZVByb3BhZ2F0ZSwgY2FzbyB0ZW5oYSBhIG5lY2Vzc2lkYWRlIGRlIHRyYXRhciBhIGZ1bsOnw6NvIGRlIGxpbXBhciBvIGNhbXBvLFxyXG4gKiBkZXZlIGltcGxlbWVudGFyIGEgaW50ZXJmYWNlIFBvQ2xlYW4uXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBQb0NsZWFuQmFzZUNvbXBvbmVudCB7XHJcbiAgICAvKiogTmVzdGEgcHJvcHJpZWRhZGUgZGV2ZS1zZSBpbmZvcm1hciBvIGVsZW1lbnRSZWYgZG8gY2FtcG8gZGUgZW50cmFkYSBxdWUgdXRpbGl6YXLDoSBvIHBvLWNsZWFuLiAqL1xyXG4gICAgaW5wdXRSZWY6IEVsZW1lbnRSZWY7XHJcbiAgICAvKiogVmFsb3IgcXVlIHNlcsOhIGF0cmlidcOtZG8gYW8gY2FtcG8gcXVhbmRvIGZvciBjbGljYWRvIG5vIHBvLWNsZWFuLiAqL1xyXG4gICAgZGVmYXVsdFZhbHVlPzogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudG8gZGlzcGFyYWRvIHF1YW5kbyBleGVjdXRhZGEgYcOnw6NvIGRvIHBvLWNsZWFuLlxyXG4gICAgICogRXN0ZSBldmVudG8gZGV2ZSBzZXIgdXNhZG8gcGFyYSBhdmlzYXIgcGFyYSBvIGNvbXBvbmVudGUgcXVlIGVzdMOhIHVzYW5kbyBvIHBvLWNsZWFuLCBxdWUgbyBib3TDo28gZm9pIGRpc3BhcmFkbyxcclxuICAgICAqIGUgcHJvdmF2ZWxtZW50ZSBzZXLDoSBwcmVjaXNvIGVtaXRpciBvIGV2ZW50byBwYXJhIGF0dWFsaXphciBvIG1vZGVsLlxyXG4gICAgICovXHJcbiAgICBjaGFuZ2VFdmVudD86IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgcHJvdGVjdGVkIHBhcmVudENvbXBvbmVudDogYW55O1xyXG4gICAgY2xlYXIoKTogdm9pZDtcclxuICAgIHNob3dJY29uKCk6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIGhhc0NsZWFuQXR0cjtcclxuICAgIHByaXZhdGUgaXNEaXNhYmxlZDtcclxuICAgIHByaXZhdGUgaXNSZWFkb25seTtcclxuICAgIGFic3RyYWN0IHNldElucHV0VmFsdWUodmFsdWU6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICBhYnN0cmFjdCBnZXRJbnB1dFZhbHVlKCk6IHN0cmluZztcclxufVxyXG4iXX0=