import { ControlValueAccessor } from '@angular/forms';
import { EventEmitter } from '@angular/core';
import { PoSwitchLabelPosition } from './po-switch-label-position.enum';
/**
 * @description
 *
 * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.
 * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.
 *
 * Pode-se ligar ou deligar o botão utilizando a tecla de espaço ou o clique do mouse.
 *
 * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,
 * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.
 *
 * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.
 */
export declare class PoSwitchBaseComponent implements ControlValueAccessor {
    private _disabled?;
    propagateChange: any;
    switchValue: boolean;
    /** Nome do componente. */
    name: string;
    /**
     * @optional
     *
     * @description
     *
     * Aplica o foco no elemento ao ser iniciado.
     *  > Caso mais de um elemento seja configurado com essa propriedade,
     * o último elemento declarado com ela terá o foco.
     *
     * @default `false`
     */
    autoFocus: boolean;
    /** Rótulo exibido pelo componente. */
    label?: string;
    /** Texto de apoio para o campo. */
    help?: string;
    /**
     * Texto exibido quando o valor do componente for `true`.
     *
     * @default `true`
     */
    labelOn?: string;
    set setLabelOn(label: string);
    /**
     * Texto exibido quando o valor do componente for `false`.
     *
     * @default `false`
     */
    labelOff?: string;
    set setLabelOff(label: string);
    /**
     * @optional
     *
     * @description
     *
     * Posição de exibição do rótulo.
     *
     * > Por padrão exibe à direita.
     */
    labelPosition?: PoSwitchLabelPosition;
    set setLabelPosition(position: PoSwitchLabelPosition);
    /**
     * @optional
     *
     * @description
     *
     * Indica se o campo será desabilitado.
     *
     * @default `false`
     */
    set disabled(disabled: boolean);
    get disabled(): boolean;
    /** Evento disparado ao alterar valor do campo. */
    change?: EventEmitter<any>;
    ngModelChange?: EventEmitter<any>;
    changeValue(value: any): void;
    eventClick(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(value: any): void;
}
