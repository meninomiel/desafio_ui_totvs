import { ChangeDetectorRef, ElementRef, OnInit, AfterViewInit } from '@angular/core';
import { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';
import { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';
import { PoDateService } from './../../../services/po-date/po-date.service';
/**
 * @docsExtends PoDatepickerRangeBaseComponent
 *
 * @example
 *
 * <example name="po-datepicker-range-basic" title="PO Datepicker Range Basic">
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html"> </file>
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-labs" title="PO Datepicker Range Labs">
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html"> </file>
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations" title="PO Datepicker Range - Vacations Suggestion">
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html"> </file>
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations-reactive-form" title="PO Datepicker Range - Vacations Reactive Form">
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html">
 *  </file>
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts">
 *  </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDatepickerRangeComponent extends PoDatepickerRangeBaseComponent implements AfterViewInit, OnInit {
    private changeDetector;
    private poDatepickerRangeElement;
    private poMaskObject;
    dateRangeField: ElementRef;
    endDateInput: ElementRef;
    startDateInput: ElementRef;
    get autocomplete(): "on" | "off";
    get enableCleaner(): boolean;
    get endDateInputName(): string;
    get endDateInputValue(): string;
    get getErrorMessage(): string;
    get isDateRangeInputUncompleted(): boolean;
    get isDirtyDateRangeInput(): boolean;
    get startDateInputName(): string;
    get startDateInputValue(): string;
    static getKeyCode(event: KeyboardEvent): number;
    static getTargetElement(event: any): any;
    static isValidKey(keyCode: number): boolean;
    constructor(changeDetector: ChangeDetectorRef, poDateService: PoDateService, poDatepickerRangeElement: ElementRef);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    clear(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerRangeComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;
     *
     * focusDatepickerRange() {
     *   this.datepickerRange.focus();
     * }
     * ```
     */
    focus(): void;
    onBlur(): void;
    onFocus(): void;
    onKeydown(event?: any): void;
    onKeyup(event: any): void;
    resetDateRangeInputValidation(): void;
    updateScreenByModel(model: PoDatepickerRange): void;
    private applyFocusOnDatePickerRangeField;
    private buildMask;
    private formatDate;
    private formatScreenToModel;
    private formatModelToScreen;
    private getDateRangeFormatValidation;
    private getValidatedModel;
    private hasInvalidClass;
    private isEqualBeforeValue;
    private isSetFocusOnBackspace;
    private removeFocusFromDatePickerRangeField;
    private setDateRangeInputValidation;
    private setFocus;
    private setFocusAndPosition;
    private focusOnElement;
    private setFocusOnArrowLeft;
    private setFocusOnArrowRight;
    private setFocusOnBackspace;
    private setFocusOnStartDateCompleted;
    private updateModelByScreen;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDatepickerRangeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDatepickerRangeComponent, "po-datepicker-range", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGF0ZXBpY2tlci1yYW5nZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZGF0ZXBpY2tlci1yYW5nZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25Jbml0LCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvRGF0ZXBpY2tlclJhbmdlIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLWRhdGVwaWNrZXItcmFuZ2UuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9EYXRlcGlja2VyUmFuZ2VCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1kYXRlcGlja2VyLXJhbmdlLWJhc2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9EYXRlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tZGF0ZS9wby1kYXRlLnNlcnZpY2UnO1xyXG4vKipcclxuICogQGRvY3NFeHRlbmRzIFBvRGF0ZXBpY2tlclJhbmdlQmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpY1wiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciBSYW5nZSBCYXNpY1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWJhc2ljL3NhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpYy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLXJhbmdlLWxhYnNcIiB0aXRsZT1cIlBPIERhdGVwaWNrZXIgUmFuZ2UgTGFic1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWxhYnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtbGFicy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zXCIgdGl0bGU9XCJQTyBEYXRlcGlja2VyIFJhbmdlIC0gVmFjYXRpb25zIFN1Z2dlc3Rpb25cIj5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm1cIiB0aXRsZT1cIlBPIERhdGVwaWNrZXIgUmFuZ2UgLSBWYWNhdGlvbnMgUmVhY3RpdmUgRm9ybVwiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLXZhY2F0aW9ucy1yZWFjdGl2ZS1mb3JtL3NhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLXZhY2F0aW9ucy1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC5odG1sXCI+XHJcbiAqICA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzXCI+XHJcbiAqICA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRGF0ZXBpY2tlclJhbmdlQ29tcG9uZW50IGV4dGVuZHMgUG9EYXRlcGlja2VyUmFuZ2VCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0IHtcclxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I7XHJcbiAgICBwcml2YXRlIHBvRGF0ZXBpY2tlclJhbmdlRWxlbWVudDtcclxuICAgIHByaXZhdGUgcG9NYXNrT2JqZWN0O1xyXG4gICAgZGF0ZVJhbmdlRmllbGQ6IEVsZW1lbnRSZWY7XHJcbiAgICBlbmREYXRlSW5wdXQ6IEVsZW1lbnRSZWY7XHJcbiAgICBzdGFydERhdGVJbnB1dDogRWxlbWVudFJlZjtcclxuICAgIGdldCBhdXRvY29tcGxldGUoKTogXCJvblwiIHwgXCJvZmZcIjtcclxuICAgIGdldCBlbmFibGVDbGVhbmVyKCk6IGJvb2xlYW47XHJcbiAgICBnZXQgZW5kRGF0ZUlucHV0TmFtZSgpOiBzdHJpbmc7XHJcbiAgICBnZXQgZW5kRGF0ZUlucHV0VmFsdWUoKTogc3RyaW5nO1xyXG4gICAgZ2V0IGdldEVycm9yTWVzc2FnZSgpOiBzdHJpbmc7XHJcbiAgICBnZXQgaXNEYXRlUmFuZ2VJbnB1dFVuY29tcGxldGVkKCk6IGJvb2xlYW47XHJcbiAgICBnZXQgaXNEaXJ0eURhdGVSYW5nZUlucHV0KCk6IGJvb2xlYW47XHJcbiAgICBnZXQgc3RhcnREYXRlSW5wdXROYW1lKCk6IHN0cmluZztcclxuICAgIGdldCBzdGFydERhdGVJbnB1dFZhbHVlKCk6IHN0cmluZztcclxuICAgIHN0YXRpYyBnZXRLZXlDb2RlKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogbnVtYmVyO1xyXG4gICAgc3RhdGljIGdldFRhcmdldEVsZW1lbnQoZXZlbnQ6IGFueSk6IGFueTtcclxuICAgIHN0YXRpYyBpc1ZhbGlkS2V5KGtleUNvZGU6IG51bWJlcik6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHBvRGF0ZVNlcnZpY2U6IFBvRGF0ZVNlcnZpY2UsIHBvRGF0ZXBpY2tlclJhbmdlRWxlbWVudDogRWxlbWVudFJlZik7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBjbGVhcigpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvIGNvbXBvbmVudGUuXHJcbiAgICAgKlxyXG4gICAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyB0ZXIgYSBpbnN0w6JuY2lhIGRvIGNvbXBvbmVudGUgbm8gRE9NLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gbyBWaWV3Q2hpbGQgZGEgc2VndWludGUgZm9ybWE6XHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiBpbXBvcnQgeyBQb0RhdGVwaWNrZXJSYW5nZUNvbXBvbmVudCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcclxuICAgICAqXHJcbiAgICAgKiAuLi5cclxuICAgICAqXHJcbiAgICAgKiBAVmlld0NoaWxkKFBvRGF0ZXBpY2tlclJhbmdlQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBkYXRlcGlja2VyUmFuZ2U6IFBvRGF0ZXBpY2tlclJhbmdlQ29tcG9uZW50O1xyXG4gICAgICpcclxuICAgICAqIGZvY3VzRGF0ZXBpY2tlclJhbmdlKCkge1xyXG4gICAgICogICB0aGlzLmRhdGVwaWNrZXJSYW5nZS5mb2N1cygpO1xyXG4gICAgICogfVxyXG4gICAgICogYGBgXHJcbiAgICAgKi9cclxuICAgIGZvY3VzKCk6IHZvaWQ7XHJcbiAgICBvbkJsdXIoKTogdm9pZDtcclxuICAgIG9uRm9jdXMoKTogdm9pZDtcclxuICAgIG9uS2V5ZG93bihldmVudD86IGFueSk6IHZvaWQ7XHJcbiAgICBvbktleXVwKGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgcmVzZXREYXRlUmFuZ2VJbnB1dFZhbGlkYXRpb24oKTogdm9pZDtcclxuICAgIHVwZGF0ZVNjcmVlbkJ5TW9kZWwobW9kZWw6IFBvRGF0ZXBpY2tlclJhbmdlKTogdm9pZDtcclxuICAgIHByaXZhdGUgYXBwbHlGb2N1c09uRGF0ZVBpY2tlclJhbmdlRmllbGQ7XHJcbiAgICBwcml2YXRlIGJ1aWxkTWFzaztcclxuICAgIHByaXZhdGUgZm9ybWF0RGF0ZTtcclxuICAgIHByaXZhdGUgZm9ybWF0U2NyZWVuVG9Nb2RlbDtcclxuICAgIHByaXZhdGUgZm9ybWF0TW9kZWxUb1NjcmVlbjtcclxuICAgIHByaXZhdGUgZ2V0RGF0ZVJhbmdlRm9ybWF0VmFsaWRhdGlvbjtcclxuICAgIHByaXZhdGUgZ2V0VmFsaWRhdGVkTW9kZWw7XHJcbiAgICBwcml2YXRlIGhhc0ludmFsaWRDbGFzcztcclxuICAgIHByaXZhdGUgaXNFcXVhbEJlZm9yZVZhbHVlO1xyXG4gICAgcHJpdmF0ZSBpc1NldEZvY3VzT25CYWNrc3BhY2U7XHJcbiAgICBwcml2YXRlIHJlbW92ZUZvY3VzRnJvbURhdGVQaWNrZXJSYW5nZUZpZWxkO1xyXG4gICAgcHJpdmF0ZSBzZXREYXRlUmFuZ2VJbnB1dFZhbGlkYXRpb247XHJcbiAgICBwcml2YXRlIHNldEZvY3VzO1xyXG4gICAgcHJpdmF0ZSBzZXRGb2N1c0FuZFBvc2l0aW9uO1xyXG4gICAgcHJpdmF0ZSBmb2N1c09uRWxlbWVudDtcclxuICAgIHByaXZhdGUgc2V0Rm9jdXNPbkFycm93TGVmdDtcclxuICAgIHByaXZhdGUgc2V0Rm9jdXNPbkFycm93UmlnaHQ7XHJcbiAgICBwcml2YXRlIHNldEZvY3VzT25CYWNrc3BhY2U7XHJcbiAgICBwcml2YXRlIHNldEZvY3VzT25TdGFydERhdGVDb21wbGV0ZWQ7XHJcbiAgICBwcml2YXRlIHVwZGF0ZU1vZGVsQnlTY3JlZW47XHJcbn1cclxuIl19