import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoCalendarComponent } from './po-calendar/po-calendar.component';
import { PoDatepickerBaseComponent } from './po-datepicker-base.component';
/**
 * @docsExtends PoDatepickerBaseComponent
 *
 * @example
 *
 * <example name="po-datepicker-basic" title="PO Datepicker Basic">
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.html"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-labs" title="PO Datepicker Labs">
 *  <file name="sample-po-datepicker-labs/sample-po-datepicker-labs.component.html"> </file>
 *  <file name="sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-airfare" title="PO Datepicker - Airfare">
 *  <file name="sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html"> </file>
 *  <file name="sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-airfare-reactive-form" title="PO Datepicker - Airfare Reactive Form">
 *  <file name="sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html"> </file>
 *  <file name="sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {
    private controlPosition;
    private renderer;
    date: any;
    el: ElementRef;
    hour: string;
    private clickListener;
    private readonly dateRegex;
    private readonly isoRegex;
    private timeoutChange;
    private valueBeforeChange;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    calendar: PoCalendarComponent;
    dialogPicker: ElementRef;
    iconDatepicker: ElementRef;
    inputEl: ElementRef;
    get autocomplete(): "on" | "off";
    /** Rótulo do campo. */
    label?: string;
    /** Texto de apoio do campo. */
    help?: string;
    constructor(controlPosition: PoControlPositionService, renderer: Renderer2, el: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;
     *
     * focusDatepicker() {
     *   this.datepicker.focus();
     * }
     * ```
     */
    focus(): void;
    togglePicker(): void;
    dateSelected(): void;
    wasClickedOnPicker(event: any): void;
    onKeyup($event: any): void;
    onKeydown($event?: any): void;
    hasInvalidClass(): boolean;
    getErrorPattern(): string;
    clear(): void;
    eventOnBlur($event: any): void;
    eventOnClick($event: any): void;
    formatToDate(value: Date): string;
    refreshValue(value: Date): void;
    writeValue(value: any): void;
    isValidDateIso(value: string): boolean;
    isValidExtendedIso(value: any): boolean;
    hasOverlayClass(element: any): any;
    verifyMobile(): RegExpMatchArray;
    private closeCalendar;
    private controlChangeEmitter;
    private hasAttrCalendar;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setDialogPickerStyleDisplay;
    private setCalendarPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDatepickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDatepickerComponent, "po-datepicker", never, { "label": "p-label"; "help": "p-help"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tY29udHJvbC1wb3NpdGlvbi9wby1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb0NhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnLi9wby1jYWxlbmRhci9wby1jYWxlbmRhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQb0RhdGVwaWNrZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1kYXRlcGlja2VyLWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb0RhdGVwaWNrZXJCYXNlQ29tcG9uZW50XHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLWJhc2ljXCIgdGl0bGU9XCJQTyBEYXRlcGlja2VyIEJhc2ljXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMvc2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWJhc2ljL3NhbXBsZS1wby1kYXRlcGlja2VyLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMvc2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1iYXNpYy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1iYXNpYy5jb21wb25lbnQuZTJlLXNwZWMudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLWxhYnNcIiB0aXRsZT1cIlBPIERhdGVwaWNrZXIgTGFic1wiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWxhYnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItbGFicy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItYWlyZmFyZVwiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciAtIEFpcmZhcmVcIj5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlL3NhbXBsZS1wby1kYXRlcGlja2VyLWFpcmZhcmUuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWFpcmZhcmUvc2FtcGxlLXBvLWRhdGVwaWNrZXItYWlyZmFyZS5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLWFpcmZhcmUtcmVhY3RpdmUtZm9ybVwiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciAtIEFpcmZhcmUgUmVhY3RpdmUgRm9ybVwiPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWFpcmZhcmUtcmVhY3RpdmUtZm9ybS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWFpcmZhcmUtcmVhY3RpdmUtZm9ybS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9EYXRlcGlja2VyQ29tcG9uZW50IGV4dGVuZHMgUG9EYXRlcGlja2VyQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIGNvbnRyb2xQb3NpdGlvbjtcclxuICAgIHByaXZhdGUgcmVuZGVyZXI7XHJcbiAgICBkYXRlOiBhbnk7XHJcbiAgICBlbDogRWxlbWVudFJlZjtcclxuICAgIGhvdXI6IHN0cmluZztcclxuICAgIHByaXZhdGUgY2xpY2tMaXN0ZW5lcjtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGF0ZVJlZ2V4O1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSBpc29SZWdleDtcclxuICAgIHByaXZhdGUgdGltZW91dENoYW5nZTtcclxuICAgIHByaXZhdGUgdmFsdWVCZWZvcmVDaGFuZ2U7XHJcbiAgICBldmVudExpc3RlbmVyRnVuY3Rpb246ICgpID0+IHZvaWQ7XHJcbiAgICBldmVudFJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xyXG4gICAgY2FsZW5kYXI6IFBvQ2FsZW5kYXJDb21wb25lbnQ7XHJcbiAgICBkaWFsb2dQaWNrZXI6IEVsZW1lbnRSZWY7XHJcbiAgICBpY29uRGF0ZXBpY2tlcjogRWxlbWVudFJlZjtcclxuICAgIGlucHV0RWw6IEVsZW1lbnRSZWY7XHJcbiAgICBnZXQgYXV0b2NvbXBsZXRlKCk6IFwib25cIiB8IFwib2ZmXCI7XHJcbiAgICAvKiogUsOzdHVsbyBkbyBjYW1wby4gKi9cclxuICAgIGxhYmVsPzogc3RyaW5nO1xyXG4gICAgLyoqIFRleHRvIGRlIGFwb2lvIGRvIGNhbXBvLiAqL1xyXG4gICAgaGVscD86IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRyb2xQb3NpdGlvbjogUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZik7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIEZ1bsOnw6NvIHF1ZSBhdHJpYnVpIGZvY28gYW8gY29tcG9uZW50ZS5cclxuICAgICAqXHJcbiAgICAgKiBQYXJhIHV0aWxpesOhLWxhIMOpIG5lY2Vzc8OhcmlvIHRlciBhIGluc3TDom5jaWEgZG8gY29tcG9uZW50ZSBubyBET00sIHBvZGVuZG8gc2VyIHV0aWxpemFkbyBvIFZpZXdDaGlsZCBkYSBzZWd1aW50ZSBmb3JtYTpcclxuICAgICAqXHJcbiAgICAgKiBgYGBcclxuICAgICAqIGltcG9ydCB7IFBvRGF0ZXBpY2tlckNvbXBvbmVudCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcclxuICAgICAqXHJcbiAgICAgKiAuLi5cclxuICAgICAqXHJcbiAgICAgKiBAVmlld0NoaWxkKFBvRGF0ZXBpY2tlckNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgZGF0ZXBpY2tlcjogUG9EYXRlcGlja2VyQ29tcG9uZW50O1xyXG4gICAgICpcclxuICAgICAqIGZvY3VzRGF0ZXBpY2tlcigpIHtcclxuICAgICAqICAgdGhpcy5kYXRlcGlja2VyLmZvY3VzKCk7XHJcbiAgICAgKiB9XHJcbiAgICAgKiBgYGBcclxuICAgICAqL1xyXG4gICAgZm9jdXMoKTogdm9pZDtcclxuICAgIHRvZ2dsZVBpY2tlcigpOiB2b2lkO1xyXG4gICAgZGF0ZVNlbGVjdGVkKCk6IHZvaWQ7XHJcbiAgICB3YXNDbGlja2VkT25QaWNrZXIoZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBvbktleXVwKCRldmVudDogYW55KTogdm9pZDtcclxuICAgIG9uS2V5ZG93bigkZXZlbnQ/OiBhbnkpOiB2b2lkO1xyXG4gICAgaGFzSW52YWxpZENsYXNzKCk6IGJvb2xlYW47XHJcbiAgICBnZXRFcnJvclBhdHRlcm4oKTogc3RyaW5nO1xyXG4gICAgY2xlYXIoKTogdm9pZDtcclxuICAgIGV2ZW50T25CbHVyKCRldmVudDogYW55KTogdm9pZDtcclxuICAgIGV2ZW50T25DbGljaygkZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBmb3JtYXRUb0RhdGUodmFsdWU6IERhdGUpOiBzdHJpbmc7XHJcbiAgICByZWZyZXNoVmFsdWUodmFsdWU6IERhdGUpOiB2b2lkO1xyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcclxuICAgIGlzVmFsaWREYXRlSXNvKHZhbHVlOiBzdHJpbmcpOiBib29sZWFuO1xyXG4gICAgaXNWYWxpZEV4dGVuZGVkSXNvKHZhbHVlOiBhbnkpOiBib29sZWFuO1xyXG4gICAgaGFzT3ZlcmxheUNsYXNzKGVsZW1lbnQ6IGFueSk6IGFueTtcclxuICAgIHZlcmlmeU1vYmlsZSgpOiBSZWdFeHBNYXRjaEFycmF5O1xyXG4gICAgcHJpdmF0ZSBjbG9zZUNhbGVuZGFyO1xyXG4gICAgcHJpdmF0ZSBjb250cm9sQ2hhbmdlRW1pdHRlcjtcclxuICAgIHByaXZhdGUgaGFzQXR0ckNhbGVuZGFyO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBvblNjcm9sbDtcclxuICAgIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBzZXREaWFsb2dQaWNrZXJTdHlsZURpc3BsYXk7XHJcbiAgICBwcml2YXRlIHNldENhbGVuZGFyUG9zaXRpb247XHJcbn1cclxuIl19