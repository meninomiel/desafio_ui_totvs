import { TemplateRef } from '@angular/core';
/**
 * @usedBy PoComboComponent
 *
 * @description
 *
 * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista de opções do componente.
 *
 * > Quando utilizada em dispositivos *mobile* será exibido o componente nativo.
 *
 * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`
 * dentro da *tag* `po-combo`.
 *
 * Para obter a referência do item atual utilize `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.
 *
 * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-combo
 *   name="combo"
 *   [(ngModel)]="combo"
 *   [p-options]="options">
 *     <ng-template p-combo-option-template let-option>
 *       <option-template [option]="option"></option-template>
 *     </ng-template>
 * </po-combo>
 * ...
 * ```
 *
 * ```
 * ...
 * <po-combo
 *   name="combo"
 *   [(ngModel)]="combo"
 *   [p-options]="options">
 *     <div *p-combo-option-template="let option">
 *       <option-template [option]="option"></option-template>
 *     </div>
 * </po-combo>
 * ...
 *
 * ```
 * Para o caso de personalização de opções com agrupamentos, deve-se seguir a mesma orientação acima. Porém, cabe ao desenvolvedor
 * a responsabilidade de estilização dos elementos da lista, tais como título e links dos grupos. Abaixo há um exemplo de aplicação:
 *
 * ```
 * ...
 * <ng-template p-combo-option-template let-option>
 *   <ng-container *ngIf="option.options; then optionsGroupTitle; else optionsGroupList"></ng-container>
 *   <ng-template #optionsGroupTitle>
 *     <p class="po-combo-item-title" [innerHtml]="option.label"></p>
 *   </ng-template>
 *   <ng-template #optionsGroupList>
 *     <div class="po-combo-item">
 *       <div class="po-row">
 *         <po-avatar class="po-md-1" p-size="sm"></po-avatar>
 *         <div class="po-md-11" [innerHtml]="option.label"></div>
 *       </div>
 *     </div>
 *   </ng-template>
 * </ng-template>
 * ...
 *
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoComboOptionTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoComboOptionTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoComboOptionTemplateDirective, "[p-combo-option-template]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29tYm8tb3B0aW9uLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJwby1jb21iby1vcHRpb24tdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG4vKipcclxuICogQHVzZWRCeSBQb0NvbWJvQ29tcG9uZW50XHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKlxyXG4gKiBFc3RhIGRpcmV0aXZhIHBlcm1pdGUgcGVyc29uYWxpemFyIG8gY29udGXDumRvIGRvcyBpdGVucyBleGliaWRvcyBuYSBsaXN0YSBkZSBvcMOnw7VlcyBkbyBjb21wb25lbnRlLlxyXG4gKlxyXG4gKiA+IFF1YW5kbyB1dGlsaXphZGEgZW0gZGlzcG9zaXRpdm9zICptb2JpbGUqIHNlcsOhIGV4aWJpZG8gbyBjb21wb25lbnRlIG5hdGl2by5cclxuICpcclxuICogUGFyYSBwZXJzb25hbGl6YXIgbyBjb250ZcO6ZG8gZGUgY2FkYSBpdGVtIGRhIGxpc3RhIGRldmUtc2UgdXRpbGl6YXIgYSBkaXJldGl2YSBgcC1jb21iby1vcHRpb24tdGVtcGxhdGVgIGNvbSBgbmctdGVtcGxhdGVgXHJcbiAqIGRlbnRybyBkYSAqdGFnKiBgcG8tY29tYm9gLlxyXG4gKlxyXG4gKiBQYXJhIG9idGVyIGEgcmVmZXLDqm5jaWEgZG8gaXRlbSBhdHVhbCB1dGlsaXplIGBsZXQtb3B0aW9uYCwgY29tIGlzc28gdm9jw6ogdGVyw6EgYWNlc3NvIGFvcyB2YWxvcmVzIGUgcG9kZXLDoSBwZXJzb25hbGl6YXIgc3VhIGV4aWJpw6fDo28uXHJcbiAqXHJcbiAqIEVzdGEgZGlyZXRpdmEgY29tcMO1ZS1zZSBkZSBkb2lzIG1laW9zIHBhcmEgdXNvLCBkZSBmb3JtYSBleHBsw61jaXRhIHRhbCBjb21vIGVtICpzeW50YXggc3VnYXIqLiBWZWphIGEgc2VndWlyIGFtYm9zLCByZXNwZWN0aXZhbWVudGU6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiAuLi5cclxuICogPHBvLWNvbWJvXHJcbiAqICAgbmFtZT1cImNvbWJvXCJcclxuICogICBbKG5nTW9kZWwpXT1cImNvbWJvXCJcclxuICogICBbcC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cclxuICogICAgIDxuZy10ZW1wbGF0ZSBwLWNvbWJvLW9wdGlvbi10ZW1wbGF0ZSBsZXQtb3B0aW9uPlxyXG4gKiAgICAgICA8b3B0aW9uLXRlbXBsYXRlIFtvcHRpb25dPVwib3B0aW9uXCI+PC9vcHRpb24tdGVtcGxhdGU+XHJcbiAqICAgICA8L25nLXRlbXBsYXRlPlxyXG4gKiA8L3BvLWNvbWJvPlxyXG4gKiAuLi5cclxuICogYGBgXHJcbiAqXHJcbiAqIGBgYFxyXG4gKiAuLi5cclxuICogPHBvLWNvbWJvXHJcbiAqICAgbmFtZT1cImNvbWJvXCJcclxuICogICBbKG5nTW9kZWwpXT1cImNvbWJvXCJcclxuICogICBbcC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cclxuICogICAgIDxkaXYgKnAtY29tYm8tb3B0aW9uLXRlbXBsYXRlPVwibGV0IG9wdGlvblwiPlxyXG4gKiAgICAgICA8b3B0aW9uLXRlbXBsYXRlIFtvcHRpb25dPVwib3B0aW9uXCI+PC9vcHRpb24tdGVtcGxhdGU+XHJcbiAqICAgICA8L2Rpdj5cclxuICogPC9wby1jb21ibz5cclxuICogLi4uXHJcbiAqXHJcbiAqIGBgYFxyXG4gKiBQYXJhIG8gY2FzbyBkZSBwZXJzb25hbGl6YcOnw6NvIGRlIG9ww6fDtWVzIGNvbSBhZ3J1cGFtZW50b3MsIGRldmUtc2Ugc2VndWlyIGEgbWVzbWEgb3JpZW50YcOnw6NvIGFjaW1hLiBQb3LDqW0sIGNhYmUgYW8gZGVzZW52b2x2ZWRvclxyXG4gKiBhIHJlc3BvbnNhYmlsaWRhZGUgZGUgZXN0aWxpemHDp8OjbyBkb3MgZWxlbWVudG9zIGRhIGxpc3RhLCB0YWlzIGNvbW8gdMOtdHVsbyBlIGxpbmtzIGRvcyBncnVwb3MuIEFiYWl4byBow6EgdW0gZXhlbXBsbyBkZSBhcGxpY2HDp8OjbzpcclxuICpcclxuICogYGBgXHJcbiAqIC4uLlxyXG4gKiA8bmctdGVtcGxhdGUgcC1jb21iby1vcHRpb24tdGVtcGxhdGUgbGV0LW9wdGlvbj5cclxuICogICA8bmctY29udGFpbmVyICpuZ0lmPVwib3B0aW9uLm9wdGlvbnM7IHRoZW4gb3B0aW9uc0dyb3VwVGl0bGU7IGVsc2Ugb3B0aW9uc0dyb3VwTGlzdFwiPjwvbmctY29udGFpbmVyPlxyXG4gKiAgIDxuZy10ZW1wbGF0ZSAjb3B0aW9uc0dyb3VwVGl0bGU+XHJcbiAqICAgICA8cCBjbGFzcz1cInBvLWNvbWJvLWl0ZW0tdGl0bGVcIiBbaW5uZXJIdG1sXT1cIm9wdGlvbi5sYWJlbFwiPjwvcD5cclxuICogICA8L25nLXRlbXBsYXRlPlxyXG4gKiAgIDxuZy10ZW1wbGF0ZSAjb3B0aW9uc0dyb3VwTGlzdD5cclxuICogICAgIDxkaXYgY2xhc3M9XCJwby1jb21iby1pdGVtXCI+XHJcbiAqICAgICAgIDxkaXYgY2xhc3M9XCJwby1yb3dcIj5cclxuICogICAgICAgICA8cG8tYXZhdGFyIGNsYXNzPVwicG8tbWQtMVwiIHAtc2l6ZT1cInNtXCI+PC9wby1hdmF0YXI+XHJcbiAqICAgICAgICAgPGRpdiBjbGFzcz1cInBvLW1kLTExXCIgW2lubmVySHRtbF09XCJvcHRpb24ubGFiZWxcIj48L2Rpdj5cclxuICogICAgICAgPC9kaXY+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICA8L25nLXRlbXBsYXRlPlxyXG4gKiA8L25nLXRlbXBsYXRlPlxyXG4gKiAuLi5cclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0NvbWJvT3B0aW9uVGVtcGxhdGVEaXJlY3RpdmUge1xyXG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pik7XHJcbn1cclxuIl19