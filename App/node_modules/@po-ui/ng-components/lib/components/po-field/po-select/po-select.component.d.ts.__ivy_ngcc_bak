import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoSelectBaseComponent } from './po-select-base.component';
import { PoSelectOption } from './po-select-option.interface';
import { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';
/**
 * @docsExtends PoSelectBaseComponent
 *
 * @example
 *
 * <example name="po-select-basic" title="PO Select Basic">
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.html"> </file>
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-labs" title="PO Select Labs">
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.html"> </file>
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-customer-registration" title="PO Select - Customer registration">
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.html"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts"> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>
 * </example>
 */
export declare class PoSelectComponent extends PoSelectBaseComponent implements AfterViewInit, DoCheck {
    renderer: Renderer2;
    private controlPosition;
    displayValue: any;
    isMobile: any;
    modelValue: any;
    open: boolean;
    selectedValue: any;
    selectIcon: string;
    scrollPosition: number;
    private differ;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    selectOptionTemplate: PoSelectOptionTemplateDirective;
    contentList: ElementRef;
    iconElement: ElementRef;
    selectElement: ElementRef;
    selectButtonElement: ElementRef;
    constructor(element: ElementRef, changeDetector: ChangeDetectorRef, differs: IterableDiffers, renderer: Renderer2, controlPosition: PoControlPositionService);
    get isInvisibleSelectNative(): any;
    onKeydown($event?: any): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoSelectComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;
     *
     * focusSelect() {
     *   this.select.focus();
     * }
     * ```
     */
    focus(): void;
    hideDropDown(): void;
    isEqual(value: any, inputValue: any): boolean;
    onOptionClick(option: PoSelectOption): void;
    onSelectChange(value: any): void;
    onUpdateOptions(): void;
    scrollValue(index: any, clientHeight: any): number;
    selector(query: string): Element;
    toggleButton(): void;
    updateModel(option: PoSelectOption): void;
    wasClickedOnToggle(event: MouseEvent): void;
    writeValue(value: any): void;
    private disableDefaultEventAndToggleButton;
    private findOptionValue;
    private getSelectItemHeight;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setPositionDropdown;
    private setScrollPosition;
    private showDropdown;
}
