import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoSelectBaseComponent } from './po-select-base.component';
import { PoSelectOption } from './po-select-option.interface';
import { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';
/**
 * @docsExtends PoSelectBaseComponent
 *
 * @example
 *
 * <example name="po-select-basic" title="PO Select Basic">
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.html"> </file>
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-labs" title="PO Select Labs">
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.html"> </file>
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-customer-registration" title="PO Select - Customer registration">
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.html"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts"> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoSelectComponent extends PoSelectBaseComponent implements AfterViewInit, DoCheck {
    renderer: Renderer2;
    private controlPosition;
    displayValue: any;
    isMobile: any;
    modelValue: any;
    open: boolean;
    selectedValue: any;
    selectIcon: string;
    scrollPosition: number;
    private differ;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    selectOptionTemplate: PoSelectOptionTemplateDirective;
    contentList: ElementRef;
    iconElement: ElementRef;
    selectElement: ElementRef;
    selectButtonElement: ElementRef;
    constructor(element: ElementRef, changeDetector: ChangeDetectorRef, differs: IterableDiffers, renderer: Renderer2, controlPosition: PoControlPositionService);
    get isInvisibleSelectNative(): any;
    onKeydown($event?: any): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoSelectComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;
     *
     * focusSelect() {
     *   this.select.focus();
     * }
     * ```
     */
    focus(): void;
    hideDropDown(): void;
    isEqual(value: any, inputValue: any): boolean;
    onOptionClick(option: PoSelectOption): void;
    onSelectChange(value: any): void;
    onUpdateOptions(): void;
    scrollValue(index: any, clientHeight: any): number;
    selector(query: string): Element;
    toggleButton(): void;
    updateModel(option: PoSelectOption): void;
    wasClickedOnToggle(event: MouseEvent): void;
    writeValue(value: any): void;
    private disableDefaultEventAndToggleButton;
    private findOptionValue;
    private getSelectItemHeight;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setPositionDropdown;
    private setScrollPosition;
    private showDropdown;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoSelectComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoSelectComponent, "po-select", never, {}, {}, ["selectOptionTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2VsZWN0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1zZWxlY3QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tY29udHJvbC1wb3NpdGlvbi9wby1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb1NlbGVjdEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXNlbGVjdC1iYXNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvU2VsZWN0T3B0aW9uIH0gZnJvbSAnLi9wby1zZWxlY3Qtb3B0aW9uLmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFBvU2VsZWN0T3B0aW9uVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3BvLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUvcG8tc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xyXG4vKipcclxuICogQGRvY3NFeHRlbmRzIFBvU2VsZWN0QmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tc2VsZWN0LWJhc2ljXCIgdGl0bGU9XCJQTyBTZWxlY3QgQmFzaWNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1iYXNpYy9zYW1wbGUtcG8tc2VsZWN0LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1iYXNpYy9zYW1wbGUtcG8tc2VsZWN0LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXNlbGVjdC1sYWJzXCIgdGl0bGU9XCJQTyBTZWxlY3QgTGFic1wiPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2VsZWN0LWxhYnMvc2FtcGxlLXBvLXNlbGVjdC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1sYWJzL3NhbXBsZS1wby1zZWxlY3QtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1zZWxlY3QtY3VzdG9tZXItcmVnaXN0cmF0aW9uXCIgdGl0bGU9XCJQTyBTZWxlY3QgLSBDdXN0b21lciByZWdpc3RyYXRpb25cIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24vc2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi9zYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi9zYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi5zZXJ2aWNlLnRzXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi9zYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuZTJlLXNwZWMudHMnPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT0nc2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24vc2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24uY29tcG9uZW50LnBvLnRzJz4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1NlbGVjdENvbXBvbmVudCBleHRlbmRzIFBvU2VsZWN0QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIERvQ2hlY2sge1xyXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcclxuICAgIHByaXZhdGUgY29udHJvbFBvc2l0aW9uO1xyXG4gICAgZGlzcGxheVZhbHVlOiBhbnk7XHJcbiAgICBpc01vYmlsZTogYW55O1xyXG4gICAgbW9kZWxWYWx1ZTogYW55O1xyXG4gICAgb3BlbjogYm9vbGVhbjtcclxuICAgIHNlbGVjdGVkVmFsdWU6IGFueTtcclxuICAgIHNlbGVjdEljb246IHN0cmluZztcclxuICAgIHNjcm9sbFBvc2l0aW9uOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIGRpZmZlcjtcclxuICAgIGV2ZW50TGlzdGVuZXJGdW5jdGlvbjogKCkgPT4gdm9pZDtcclxuICAgIGV2ZW50UmVzaXplTGlzdGVuZXI6ICgpID0+IHZvaWQ7XHJcbiAgICBzZWxlY3RPcHRpb25UZW1wbGF0ZTogUG9TZWxlY3RPcHRpb25UZW1wbGF0ZURpcmVjdGl2ZTtcclxuICAgIGNvbnRlbnRMaXN0OiBFbGVtZW50UmVmO1xyXG4gICAgaWNvbkVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBzZWxlY3RFbGVtZW50OiBFbGVtZW50UmVmO1xyXG4gICAgc2VsZWN0QnV0dG9uRWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjb250cm9sUG9zaXRpb246IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSk7XHJcbiAgICBnZXQgaXNJbnZpc2libGVTZWxlY3ROYXRpdmUoKTogYW55O1xyXG4gICAgb25LZXlkb3duKCRldmVudD86IGFueSk6IHZvaWQ7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvIGNvbXBvbmVudGUuXHJcbiAgICAgKlxyXG4gICAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyB0ZXIgYSBpbnN0w6JuY2lhIGRvIGNvbXBvbmVudGUgbm8gRE9NLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gbyBWaWV3Q2hpbGQgZGEgc2VndWludGUgZm9ybWE6XHJcbiAgICAgKlxyXG4gICAgICogYGBgXHJcbiAgICAgKiBpbXBvcnQgeyBQb1NlbGVjdENvbXBvbmVudCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcclxuICAgICAqXHJcbiAgICAgKiAuLi5cclxuICAgICAqXHJcbiAgICAgKiBAVmlld0NoaWxkKFBvU2VsZWN0Q29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBzZWxlY3Q6IFBvU2VsZWN0Q29tcG9uZW50O1xyXG4gICAgICpcclxuICAgICAqIGZvY3VzU2VsZWN0KCkge1xyXG4gICAgICogICB0aGlzLnNlbGVjdC5mb2N1cygpO1xyXG4gICAgICogfVxyXG4gICAgICogYGBgXHJcbiAgICAgKi9cclxuICAgIGZvY3VzKCk6IHZvaWQ7XHJcbiAgICBoaWRlRHJvcERvd24oKTogdm9pZDtcclxuICAgIGlzRXF1YWwodmFsdWU6IGFueSwgaW5wdXRWYWx1ZTogYW55KTogYm9vbGVhbjtcclxuICAgIG9uT3B0aW9uQ2xpY2sob3B0aW9uOiBQb1NlbGVjdE9wdGlvbik6IHZvaWQ7XHJcbiAgICBvblNlbGVjdENoYW5nZSh2YWx1ZTogYW55KTogdm9pZDtcclxuICAgIG9uVXBkYXRlT3B0aW9ucygpOiB2b2lkO1xyXG4gICAgc2Nyb2xsVmFsdWUoaW5kZXg6IGFueSwgY2xpZW50SGVpZ2h0OiBhbnkpOiBudW1iZXI7XHJcbiAgICBzZWxlY3RvcihxdWVyeTogc3RyaW5nKTogRWxlbWVudDtcclxuICAgIHRvZ2dsZUJ1dHRvbigpOiB2b2lkO1xyXG4gICAgdXBkYXRlTW9kZWwob3B0aW9uOiBQb1NlbGVjdE9wdGlvbik6IHZvaWQ7XHJcbiAgICB3YXNDbGlja2VkT25Ub2dnbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcclxuICAgIHByaXZhdGUgZGlzYWJsZURlZmF1bHRFdmVudEFuZFRvZ2dsZUJ1dHRvbjtcclxuICAgIHByaXZhdGUgZmluZE9wdGlvblZhbHVlO1xyXG4gICAgcHJpdmF0ZSBnZXRTZWxlY3RJdGVtSGVpZ2h0O1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBvblNjcm9sbDtcclxuICAgIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBzZXRQb3NpdGlvbkRyb3Bkb3duO1xyXG4gICAgcHJpdmF0ZSBzZXRTY3JvbGxQb3NpdGlvbjtcclxuICAgIHByaXZhdGUgc2hvd0Ryb3Bkb3duO1xyXG59XHJcbiJdfQ==