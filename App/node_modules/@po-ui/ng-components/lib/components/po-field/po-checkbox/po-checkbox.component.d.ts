import { ChangeDetectorRef, ElementRef, AfterViewInit } from '@angular/core';
import { PoCheckboxBaseComponent } from './po-checkbox-base.component';
/**
 * @docsExtends PoCheckboxBaseComponent
 *
 * @example
 *
 * <example name="po-checkbox-basic" title="PO Checkbox Basic">
 *   <file name="sample-po-checkbox-basic/sample-po-checkbox-basic.component.html"> </file>
 *   <file name="sample-po-checkbox-basic/sample-po-checkbox-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-labs" title="PO Checkbox Labs">
 *   <file name="sample-po-checkbox-labs/sample-po-checkbox-labs.component.html"> </file>
 *   <file name="sample-po-checkbox-labs/sample-po-checkbox-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-acceptance-term" title="PO Checkbox - Acceptance Term">
 *   <file name="sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.html"> </file>
 *   <file name="sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoCheckboxComponent extends PoCheckboxBaseComponent implements AfterViewInit {
    private changeDetector;
    checkboxLabel: ElementRef;
    constructor(changeDetector: ChangeDetectorRef);
    /**
     * Função que atribui foco ao *checkbox*.
     *
     * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:
     *
     * ```
     * ...
     * import { ViewChild } from '@angular/core';
     * import { PoCheckboxComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoCheckboxComponent, { static: true }) checkbox: PoCheckboxComponent;
     *
     * focusCheckbox() {
     *   this.checkbox.focus();
     * }
     * ```
     */
    focus(): void;
    ngAfterViewInit(): void;
    onKeyDown(event: KeyboardEvent, value: boolean): void;
    protected changeModelValue(value: boolean | null): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoCheckboxComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoCheckboxComponent, "po-checkbox", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hlY2tib3guY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNoZWNrYm94LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb0NoZWNrYm94QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tY2hlY2tib3gtYmFzZS5jb21wb25lbnQnO1xyXG4vKipcclxuICogQGRvY3NFeHRlbmRzIFBvQ2hlY2tib3hCYXNlQ29tcG9uZW50XHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jaGVja2JveC1iYXNpY1wiIHRpdGxlPVwiUE8gQ2hlY2tib3ggQmFzaWNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoZWNrYm94LWJhc2ljL3NhbXBsZS1wby1jaGVja2JveC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jaGVja2JveC1iYXNpYy9zYW1wbGUtcG8tY2hlY2tib3gtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tY2hlY2tib3gtbGFic1wiIHRpdGxlPVwiUE8gQ2hlY2tib3ggTGFic1wiPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2hlY2tib3gtbGFicy9zYW1wbGUtcG8tY2hlY2tib3gtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jaGVja2JveC1sYWJzL3NhbXBsZS1wby1jaGVja2JveC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWNoZWNrYm94LWFjY2VwdGFuY2UtdGVybVwiIHRpdGxlPVwiUE8gQ2hlY2tib3ggLSBBY2NlcHRhbmNlIFRlcm1cIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoZWNrYm94LWFjY2VwdGFuY2UtdGVybS9zYW1wbGUtcG8tY2hlY2tib3gtYWNjZXB0YW5jZS10ZXJtLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoZWNrYm94LWFjY2VwdGFuY2UtdGVybS9zYW1wbGUtcG8tY2hlY2tib3gtYWNjZXB0YW5jZS10ZXJtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBQb0NoZWNrYm94QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcclxuICAgIGNoZWNrYm94TGFiZWw6IEVsZW1lbnRSZWY7XHJcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvICpjaGVja2JveCouXHJcbiAgICAgKlxyXG4gICAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyBjYXB0dXJhciBhIHJlZmVyw6puY2lhIGRvIGNvbXBvbmVudGUgbm8gRE9NIGF0cmF2w6lzIGRvIGBWaWV3Q2hpbGRgLCBjb21vIHBvciBleGVtcGxvOlxyXG4gICAgICpcclxuICAgICAqIGBgYFxyXG4gICAgICogLi4uXHJcbiAgICAgKiBpbXBvcnQgeyBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuICAgICAqIGltcG9ydCB7IFBvQ2hlY2tib3hDb21wb25lbnQgfSBmcm9tICdAcG8tdWkvbmctY29tcG9uZW50cyc7XHJcbiAgICAgKlxyXG4gICAgICogLi4uXHJcbiAgICAgKlxyXG4gICAgICogQFZpZXdDaGlsZChQb0NoZWNrYm94Q29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBjaGVja2JveDogUG9DaGVja2JveENvbXBvbmVudDtcclxuICAgICAqXHJcbiAgICAgKiBmb2N1c0NoZWNrYm94KCkge1xyXG4gICAgICogICB0aGlzLmNoZWNrYm94LmZvY3VzKCk7XHJcbiAgICAgKiB9XHJcbiAgICAgKiBgYGBcclxuICAgICAqL1xyXG4gICAgZm9jdXMoKTogdm9pZDtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgb25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50LCB2YWx1ZTogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgY2hhbmdlTW9kZWxWYWx1ZSh2YWx1ZTogYm9vbGVhbiB8IG51bGwpOiB2b2lkO1xyXG59XHJcbiJdfQ==