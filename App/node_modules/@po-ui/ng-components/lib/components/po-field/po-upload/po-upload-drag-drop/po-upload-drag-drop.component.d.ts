import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
import { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoUploadDragDropComponent {
    private changeDetector;
    private _dragDropHeight?;
    areaElement: HTMLElement;
    isDragOver: boolean;
    dragDropOverlayElement: ElementRef;
    dragDropAreaComponent: PoUploadDragDropAreaComponent;
    directoryCompatible: boolean;
    disabled: boolean;
    set dragDropHeight(value: number);
    get dragDropHeight(): number;
    literals: PoUploadLiterals;
    fileChange: EventEmitter<any>;
    selectFiles: EventEmitter<any>;
    constructor(changeDetector: ChangeDetectorRef);
    focus(): void;
    onAreaElement(element: HTMLElement): void;
    onDragLeave(): void;
    onDragOver(): void;
    onFileChange(files: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoUploadDragDropComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoUploadDragDropComponent, "po-upload-drag-drop", never, { "dragDropHeight": "p-drag-drop-height"; "directoryCompatible": "p-directory-compatible"; "disabled": "p-disabled"; "literals": "p-literals"; }, { "fileChange": "p-file-change"; "selectFiles": "p-select-files"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEvcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvVXBsb2FkTGl0ZXJhbHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXVwbG9hZC1saXRlcmFscy5pbnRlcmZhY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1VwbG9hZERyYWdEcm9wQ29tcG9uZW50IHtcclxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I7XHJcbiAgICBwcml2YXRlIF9kcmFnRHJvcEhlaWdodD87XHJcbiAgICBhcmVhRWxlbWVudDogSFRNTEVsZW1lbnQ7XHJcbiAgICBpc0RyYWdPdmVyOiBib29sZWFuO1xyXG4gICAgZHJhZ0Ryb3BPdmVybGF5RWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIGRyYWdEcm9wQXJlYUNvbXBvbmVudDogUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQ7XHJcbiAgICBkaXJlY3RvcnlDb21wYXRpYmxlOiBib29sZWFuO1xyXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBzZXQgZHJhZ0Ryb3BIZWlnaHQodmFsdWU6IG51bWJlcik7XHJcbiAgICBnZXQgZHJhZ0Ryb3BIZWlnaHQoKTogbnVtYmVyO1xyXG4gICAgbGl0ZXJhbHM6IFBvVXBsb2FkTGl0ZXJhbHM7XHJcbiAgICBmaWxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIHNlbGVjdEZpbGVzOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGNvbnN0cnVjdG9yKGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XHJcbiAgICBmb2N1cygpOiB2b2lkO1xyXG4gICAgb25BcmVhRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQ7XHJcbiAgICBvbkRyYWdMZWF2ZSgpOiB2b2lkO1xyXG4gICAgb25EcmFnT3ZlcigpOiB2b2lkO1xyXG4gICAgb25GaWxlQ2hhbmdlKGZpbGVzOiBhbnkpOiB2b2lkO1xyXG59XHJcbiJdfQ==