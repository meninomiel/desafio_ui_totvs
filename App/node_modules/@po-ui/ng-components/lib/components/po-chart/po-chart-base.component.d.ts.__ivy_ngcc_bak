import { EventEmitter } from '@angular/core';
import { PoChartGaugeSerie } from './po-chart-types/po-chart-gauge/po-chart-gauge-series.interface';
import { PoChartType } from './enums/po-chart-type.enum';
import { PoDonutChartSeries } from './po-chart-types/po-chart-donut/po-chart-donut-series.interface';
import { PoPieChartSeries } from './po-chart-types/po-chart-pie/po-chart-pie-series.interface';
export declare type PoChartSeries = Array<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>;
/**
 * @description
 *
 * O `po-chart` é um componente para renderização de dados através de gráficos, com isso facilitando a compreensão e tornando a
 * visualização destes dados mais agradável.
 *
 * Através de suas principais propriedades é possível definir o tipo de gráfico, uma altura e um título.
 *
 * Além disso, também é possível definir uma ação que será executada ao clicar em determinado elemento do gráfico
 * e outra que será executada ao passar o *mouse* sobre o elemento.
 *
 * #### Boas práticas
 *
 * - Para que o gráfico não fique ilegível e incompreensível, evite uma quantia excessiva de séries.
 * - Para exibir a intensidade de um único dado dê preferência ao tipo `gauge`.
 */
export declare abstract class PoChartBaseComponent {
    private _height;
    private _series;
    private _type;
    protected chartSeries: PoChartSeries;
    readonly poChartType: typeof PoChartType;
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do gráfico.
     *
     * O valor padrão dos gráficos são:
     * - para o tipo *gauge*: `200px`;
     * - para os demais tipos: `400px`.
     *
     * > O valor mínimo aceito nesta propriedade é 200.
     *
     * @default `400px`
     */
    set height(value: number);
    get height(): number;
    /**
     * @description
     *
     * Define os elementos do gráfico que serão criados dinamicamente.
     *
     * > A coleção de objetos deve implementar alguma das interfaces abaixo:
     * - `PoDonutChartSeries`
     * - `PoPieChartSeries`
     * - `PoChartGaugeSerie`
     */
    set series(value: PoChartGaugeSerie | Array<PoDonutChartSeries | PoPieChartSeries>);
    get series(): PoChartGaugeSerie | Array<PoDonutChartSeries | PoPieChartSeries>;
    /** Define o título do gráfico. */
    title?: string;
    /**
     * @optional
     *
     * @description
     *
     * Define o tipo de gráfico.
     *
     * > Veja os valores válidos no *enum* `PoChartType`.
     *
     * @default `PoChartType.Pie`
     */
    set type(value: PoChartType);
    get type(): PoChartType;
    /**
     * @optional
     *
     * @description
     *
     * Evento executado quando o usuário clicar sobre um elemento do gráfico.
     *
     * > Será passado por parâmetro um objeto contendo a categoria e valor da série.
     */
    seriesClick: EventEmitter<PoChartGaugeSerie | PoDonutChartSeries | PoPieChartSeries>;
    /**
     * @optional
     *
     * @description
     *
     * Evento executado quando o usuário passar o *mouse* sobre um elemento do gráfico.
     *
     * > Será passado por parâmetro um objeto contendo a categoria e valor da série.
     */
    seriesHover: EventEmitter<PoChartGaugeSerie | PoDonutChartSeries | PoPieChartSeries>;
    onSeriesClick(event: any): void;
    onSeriesHover(event: any): void;
    private setDefaultHeight;
    private transformObjectToArrayObject;
    abstract rebuildComponent(): void;
}
