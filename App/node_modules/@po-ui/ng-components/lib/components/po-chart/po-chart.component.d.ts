import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, DoCheck, ElementRef, IterableDiffers, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { PoChartBaseComponent } from './po-chart-base.component';
/**
 * @docsExtends PoChartBaseComponent
 *
 * @example
 *
 * <example name="po-chart-basic" title="PO Chart Basic">
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.html"> </file>
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-labs" title="PO Chart Labs">
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.html"> </file>
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-coffee-ranking" title="PO Chart - Coffee Ranking">
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html"> </file>
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {
    changeDetector: ChangeDetectorRef;
    private componentFactoryResolver;
    private differs;
    private calculatedElement;
    private componentRef;
    private differ;
    private initialized;
    private windowResizeListener;
    private mappings;
    colors: Array<string>;
    chartContainer: ViewContainerRef;
    chartHeader: ElementRef;
    chartLegend: ElementRef;
    chartWrapper: ElementRef;
    constructor(changeDetector: ChangeDetectorRef, componentFactoryResolver: ComponentFactoryResolver, differs: IterableDiffers);
    get isChartGaugeType(): boolean;
    onResize: () => void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    rebuildComponent(): void;
    private chartLegendHeight;
    private checkingForSerieChanges;
    private createComponent;
    private dynamicComponentSetting;
    private getComponentType;
    private getSeriesColor;
    private removeWindowResizeListener;
    private setChartProperties;
    private setClickSubscribe;
    private setHoverSubscribe;
    private setResizeListenerSubscribe;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoChartComponent, "po-chart", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNoYXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9DaGFydEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWNoYXJ0LWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb0NoYXJ0QmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tY2hhcnQtYmFzaWNcIiB0aXRsZT1cIlBPIENoYXJ0IEJhc2ljXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWJhc2ljL3NhbXBsZS1wby1jaGFydC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWJhc2ljL3NhbXBsZS1wby1jaGFydC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jaGFydC1sYWJzXCIgdGl0bGU9XCJQTyBDaGFydCBMYWJzXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWxhYnMvc2FtcGxlLXBvLWNoYXJ0LWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jaGFydC1sYWJzL3NhbXBsZS1wby1jaGFydC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLWNoYXJ0LWNvZmZlZS1yYW5raW5nXCIgdGl0bGU9XCJQTyBDaGFydCAtIENvZmZlZSBSYW5raW5nXCI+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWNvZmZlZS1yYW5raW5nL3NhbXBsZS1wby1jaGFydC1jb2ZmZWUtcmFua2luZy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWNvZmZlZS1yYW5raW5nL3NhbXBsZS1wby1jaGFydC1jb2ZmZWUtcmFua2luZy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0NoYXJ0Q29tcG9uZW50IGV4dGVuZHMgUG9DaGFydEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBEb0NoZWNrLCBPbkRlc3Ryb3ksIE9uSW5pdCB7XHJcbiAgICBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XHJcbiAgICBwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjtcclxuICAgIHByaXZhdGUgZGlmZmVycztcclxuICAgIHByaXZhdGUgY2FsY3VsYXRlZEVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIGNvbXBvbmVudFJlZjtcclxuICAgIHByaXZhdGUgZGlmZmVyO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplZDtcclxuICAgIHByaXZhdGUgd2luZG93UmVzaXplTGlzdGVuZXI7XHJcbiAgICBwcml2YXRlIG1hcHBpbmdzO1xyXG4gICAgY29sb3JzOiBBcnJheTxzdHJpbmc+O1xyXG4gICAgY2hhcnRDb250YWluZXI6IFZpZXdDb250YWluZXJSZWY7XHJcbiAgICBjaGFydEhlYWRlcjogRWxlbWVudFJlZjtcclxuICAgIGNoYXJ0TGVnZW5kOiBFbGVtZW50UmVmO1xyXG4gICAgY2hhcnRXcmFwcGVyOiBFbGVtZW50UmVmO1xyXG4gICAgY29uc3RydWN0b3IoY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLCBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzKTtcclxuICAgIGdldCBpc0NoYXJ0R2F1Z2VUeXBlKCk6IGJvb2xlYW47XHJcbiAgICBvblJlc2l6ZTogKCkgPT4gdm9pZDtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIHJlYnVpbGRDb21wb25lbnQoKTogdm9pZDtcclxuICAgIHByaXZhdGUgY2hhcnRMZWdlbmRIZWlnaHQ7XHJcbiAgICBwcml2YXRlIGNoZWNraW5nRm9yU2VyaWVDaGFuZ2VzO1xyXG4gICAgcHJpdmF0ZSBjcmVhdGVDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIGR5bmFtaWNDb21wb25lbnRTZXR0aW5nO1xyXG4gICAgcHJpdmF0ZSBnZXRDb21wb25lbnRUeXBlO1xyXG4gICAgcHJpdmF0ZSBnZXRTZXJpZXNDb2xvcjtcclxuICAgIHByaXZhdGUgcmVtb3ZlV2luZG93UmVzaXplTGlzdGVuZXI7XHJcbiAgICBwcml2YXRlIHNldENoYXJ0UHJvcGVydGllcztcclxuICAgIHByaXZhdGUgc2V0Q2xpY2tTdWJzY3JpYmU7XHJcbiAgICBwcml2YXRlIHNldEhvdmVyU3Vic2NyaWJlO1xyXG4gICAgcHJpdmF0ZSBzZXRSZXNpemVMaXN0ZW5lclN1YnNjcmliZTtcclxufVxyXG4iXX0=