import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';
import { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoChartGaugeTextContentComponent implements AfterViewInit {
    private changeDetection;
    serieValueConverted: string;
    tooltip: string;
    private _gaugeWidth;
    private _serie;
    set gaugeWidth(value: number);
    get gaugeWidth(): number;
    set serie(serie: PoChartGaugeSerie);
    get serie(): PoChartGaugeSerie;
    descriptionElement: ElementRef;
    constructor(changeDetection: ChangeDetectorRef);
    get hasSerieDescription(): string;
    get hasSerieValue(): boolean;
    get maxDescriptionWidth(): {
        'max-width': string;
    };
    ngAfterViewInit(): void;
    private checkTextDescriptionSize;
    private convertValueInPercentFormat;
    private isEllipsisActive;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoChartGaugeTextContentComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoChartGaugeTextContentComponent, "po-chart-gauge-text-content", never, { "gaugeWidth": "p-gauge-width"; "serie": "p-serie"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtZ2F1Z2UtdGV4dC1jb250ZW50LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1jaGFydC1nYXVnZS10ZXh0LWNvbnRlbnQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9DaGFydEdhdWdlU2VyaWUgfSBmcm9tICcuLi9wby1jaGFydC1nYXVnZS1zZXJpZXMuaW50ZXJmYWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9DaGFydEdhdWdlVGV4dENvbnRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0aW9uO1xyXG4gICAgc2VyaWVWYWx1ZUNvbnZlcnRlZDogc3RyaW5nO1xyXG4gICAgdG9vbHRpcDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfZ2F1Z2VXaWR0aDtcclxuICAgIHByaXZhdGUgX3NlcmllO1xyXG4gICAgc2V0IGdhdWdlV2lkdGgodmFsdWU6IG51bWJlcik7XHJcbiAgICBnZXQgZ2F1Z2VXaWR0aCgpOiBudW1iZXI7XHJcbiAgICBzZXQgc2VyaWUoc2VyaWU6IFBvQ2hhcnRHYXVnZVNlcmllKTtcclxuICAgIGdldCBzZXJpZSgpOiBQb0NoYXJ0R2F1Z2VTZXJpZTtcclxuICAgIGRlc2NyaXB0aW9uRWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIGNvbnN0cnVjdG9yKGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xyXG4gICAgZ2V0IGhhc1NlcmllRGVzY3JpcHRpb24oKTogc3RyaW5nO1xyXG4gICAgZ2V0IGhhc1NlcmllVmFsdWUoKTogYm9vbGVhbjtcclxuICAgIGdldCBtYXhEZXNjcmlwdGlvbldpZHRoKCk6IHtcclxuICAgICAgICAnbWF4LXdpZHRoJzogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBjaGVja1RleHREZXNjcmlwdGlvblNpemU7XHJcbiAgICBwcml2YXRlIGNvbnZlcnRWYWx1ZUluUGVyY2VudEZvcm1hdDtcclxuICAgIHByaXZhdGUgaXNFbGxpcHNpc0FjdGl2ZTtcclxufVxyXG4iXX0=