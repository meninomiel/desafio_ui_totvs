import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, OnDestroy, QueryList, Renderer2, ViewContainerRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { PoDateService } from '../../services/po-date/po-date.service';
import { PoPopupComponent } from '../po-popup/po-popup.component';
import { PoTableAction } from './interfaces/po-table-action.interface';
import { PoTableBaseComponent } from './po-table-base.component';
import { PoTableColumn } from './interfaces/po-table-column.interface';
import { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';
import { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';
import { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';
/**
 * @docsExtends PoTableBaseComponent
 *
 * @example
 *
 * <example name="po-table-basic" title="PO Table Basic">
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.ts"> </file>
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="po-table-labs" title="PO Table Labs">
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.html"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.po.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-transport" title="PO Table - Transport">
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.ts"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.html"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-airfare" title="PO Table - Airfare">
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.ts"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.html"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-components" title="PO Table - Po Field Components">
 *  <file name="sample-po-table-components/sample-po-table-components.component.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.component.html"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.service.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {
    private changeDetector;
    private decimalPipe;
    private router;
    private _columnManagerTarget;
    heightTableContainer: number;
    popupTarget: any;
    tableOpacity: number;
    tooltipText: string;
    private differ;
    private footerHeight;
    private initialized;
    private parentRef;
    private timeoutResize;
    private visibleElement;
    private clickListener;
    private resizeListener;
    tableRowTemplate: PoTableRowTemplateDirective;
    set columnManagerTarget(value: ElementRef);
    get columnManagerTarget(): ElementRef;
    noColumnsHeader: any;
    poPopupComponent: PoPopupComponent;
    tableFooterElement: any;
    tableWrapperElement: any;
    actionsIconElement: QueryList<any>;
    actionsElement: QueryList<any>;
    headersTable: QueryList<any>;
    constructor(poDate: PoDateService, differs: IterableDiffers, viewRef: ViewContainerRef, renderer: Renderer2, changeDetector: ChangeDetectorRef, decimalPipe: DecimalPipe, router: Router);
    get columnCount(): number;
    get columnCountForMasterDetail(): number;
    get detailHideSelect(): boolean;
    get displayColumnManagerCell(): boolean;
    get firstAction(): PoTableAction;
    get hasFooter(): boolean;
    get hasMasterDetailColumn(): boolean;
    get hasRowTemplate(): boolean;
    get hasSelectableColumn(): boolean;
    get hasValidColumns(): boolean;
    get hasVisibleSubtitleColumns(): boolean;
    get isSingleAction(): boolean;
    get visibleActions(): PoTableAction[];
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    checkDisabled(row: any, column: PoTableColumn): any;
    containsMasterDetail(row: any): any;
    executeTableAction(row: any, tableAction: any): void;
    formatNumber(value: any, format: string): any;
    getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string;
    getColumnIcons(row: any, column: PoTableColumn): any;
    getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel;
    getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn;
    isShowMasterDetail(row: any): boolean;
    isShowRowTemplate(row: any, index: number): boolean;
    onClickLink(event: any, row: any, column: PoTableColumn): void;
    onVisibleColumnsChange(columns: Array<PoTableColumn>): void;
    tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any): any;
    tooltipMouseLeave(): void;
    togglePopup(row: any, targetRef: any): void;
    trackBy(index: number): number;
    validateTableAction(row: any, tableAction: any): any;
    protected calculateHeightTableContainer(height: any): void;
    protected calculateWidthHeaders(): void;
    private checkChangesItems;
    private checkingIfColumnHasTooltip;
    private debounceResize;
    private findCustomIcon;
    private getHeightTableFooter;
    private mergeCustomIcons;
    private removeListeners;
    private setTableOpacity;
    private verifyChangeHeightInFooter;
    private verifyCalculateHeightTableContainer;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoTableComponent, "po-table", never, {}, {}, ["tableRowTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,