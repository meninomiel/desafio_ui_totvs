import { EventEmitter } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { PoTableDetail } from './po-table-detail.interface';
import { PoTableDetailColumn } from './po-table-detail-column.interface';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por apresentar o detalhe de cada linha da tabela.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTableDetailComponent {
    private decimalPipe;
    private _detail;
    /**
     * Configuração da linha de detalhes.
     */
    set detail(value: PoTableDetail);
    get detail(): PoTableDetail;
    /**
     * Lista de itens do _detail_ da tabela.
     */
    items: Array<any>;
    /**
     * Define se a tabela possui a opção de `selectable` habilitada.
     */
    isSelectable?: boolean;
    /**
     * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
     */
    selectRow?: EventEmitter<any>;
    constructor(decimalPipe: DecimalPipe);
    get detailColumns(): Array<PoTableDetailColumn>;
    get typeHeaderInline(): boolean;
    get typeHeaderTop(): boolean;
    formatNumberDetail(value: any, format: string): any;
    getColumnTitleLabel(detail: PoTableDetailColumn): string;
    onSelectRow(item: any): void;
    private returnPoTableDetailObject;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTableDetailComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoTableDetailComponent, "po-table-detail", never, { "isSelectable": "p-selectable"; "detail": "p-detail"; "items": "p-items"; }, { "selectRow": "p-select-row"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby10YWJsZS1kZXRhaWwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGVjaW1hbFBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBQb1RhYmxlRGV0YWlsIH0gZnJvbSAnLi9wby10YWJsZS1kZXRhaWwuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9UYWJsZURldGFpbENvbHVtbiB9IGZyb20gJy4vcG8tdGFibGUtZGV0YWlsLWNvbHVtbi5pbnRlcmZhY2UnO1xyXG4vKipcclxuICogQGRvY3NQcml2YXRlXHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKlxyXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgYXByZXNlbnRhciBvIGRldGFsaGUgZGUgY2FkYSBsaW5oYSBkYSB0YWJlbGEuXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1RhYmxlRGV0YWlsQ29tcG9uZW50IHtcclxuICAgIHByaXZhdGUgZGVjaW1hbFBpcGU7XHJcbiAgICBwcml2YXRlIF9kZXRhaWw7XHJcbiAgICAvKipcclxuICAgICAqIENvbmZpZ3VyYcOnw6NvIGRhIGxpbmhhIGRlIGRldGFsaGVzLlxyXG4gICAgICovXHJcbiAgICBzZXQgZGV0YWlsKHZhbHVlOiBQb1RhYmxlRGV0YWlsKTtcclxuICAgIGdldCBkZXRhaWwoKTogUG9UYWJsZURldGFpbDtcclxuICAgIC8qKlxyXG4gICAgICogTGlzdGEgZGUgaXRlbnMgZG8gX2RldGFpbF8gZGEgdGFiZWxhLlxyXG4gICAgICovXHJcbiAgICBpdGVtczogQXJyYXk8YW55PjtcclxuICAgIC8qKlxyXG4gICAgICogRGVmaW5lIHNlIGEgdGFiZWxhIHBvc3N1aSBhIG9ww6fDo28gZGUgYHNlbGVjdGFibGVgIGhhYmlsaXRhZGEuXHJcbiAgICAgKi9cclxuICAgIGlzU2VsZWN0YWJsZT86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEHDp8OjbyBleGVjdXRhZGEgYW8gc2VsZWNpb25hciBvdSBkZXNtYXJjYXIgYSBzZWxlw6fDo28gZGUgdW1hIGxpbmhhIGRlIGRldGFsaGUgZG8gYHBvLXRhYmxlYC5cclxuICAgICAqL1xyXG4gICAgc2VsZWN0Um93PzogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBjb25zdHJ1Y3RvcihkZWNpbWFsUGlwZTogRGVjaW1hbFBpcGUpO1xyXG4gICAgZ2V0IGRldGFpbENvbHVtbnMoKTogQXJyYXk8UG9UYWJsZURldGFpbENvbHVtbj47XHJcbiAgICBnZXQgdHlwZUhlYWRlcklubGluZSgpOiBib29sZWFuO1xyXG4gICAgZ2V0IHR5cGVIZWFkZXJUb3AoKTogYm9vbGVhbjtcclxuICAgIGZvcm1hdE51bWJlckRldGFpbCh2YWx1ZTogYW55LCBmb3JtYXQ6IHN0cmluZyk6IGFueTtcclxuICAgIGdldENvbHVtblRpdGxlTGFiZWwoZGV0YWlsOiBQb1RhYmxlRGV0YWlsQ29sdW1uKTogc3RyaW5nO1xyXG4gICAgb25TZWxlY3RSb3coaXRlbTogYW55KTogdm9pZDtcclxuICAgIHByaXZhdGUgcmV0dXJuUG9UYWJsZURldGFpbE9iamVjdDtcclxufVxyXG4iXX0=