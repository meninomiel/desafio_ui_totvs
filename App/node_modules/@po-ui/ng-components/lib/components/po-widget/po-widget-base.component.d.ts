import { EventEmitter } from '@angular/core';
/**
 *
 * @description
 *
 * O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado
 * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.
 *
 * Além da exibição de conteúdos, este componente possibilita adicionar ações e um link
 * para ajuda, como também possibilita ser utilizado com ou sem sombra.
 *
 * Para controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior
 * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções.
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class PoWidgetBaseComponent {
    private _background?;
    private _disabled?;
    private _height?;
    private _help?;
    private _noShadow?;
    private _primary?;
    private _primaryLabel?;
    private _title?;
    containerHeight?: string;
    /**
     * @optional
     *
     * @description
     *
     * Aplicação de imagem de fundo.
     * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,
     * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.
     *
     */
    set background(value: string);
    get background(): string;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita todas as ações do componente.
     *
     * @default `false`
     */
    set disabled(value: boolean);
    get disabled(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-widget`.
     * A altura mínima para o `po-widget` depende do que será exibido através das propriedades `p-primary-label`,
     * `p-setting`, `p-help` e `p-title`.
     * > Caso não seja informado valor, a propriedade irá assumir o tamanho do conteúdo.
     */
    set height(value: number);
    get height(): number;
    /**
     * @optional
     *
     * @description
     *
     * Link de ajuda
     */
    set help(value: string);
    get help(): string;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a sombra do `po-widget`.
     *
     * @default `true`
     */
    set noShadow(value: boolean);
    get noShadow(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Opção para que o `po-widget` fique em destaque.
     *
     * @default `false`
     */
    set primary(value: boolean);
    get primary(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Descrição da primeira ação.
     *
     * @default `false`
     */
    set primaryLabel(value: string);
    get primaryLabel(): string;
    /** Descrição da segunda ação. */
    secondaryLabel?: string;
    /**
     * @optional
     *
     * @description
     *
     * Título do `po-widget`.
     *
     * @default `false`
     */
    set title(value: string);
    get title(): string;
    /** Ação que será executada quando o usuário clicar sobre a área total do `po-widget`. */
    click?: EventEmitter<MouseEvent>;
    /** Função que será disparada com o valor do `p-disabled` quando esta propriedade for alterada. */
    onDisabled?: EventEmitter<any>;
    /** Função que será chamada na primeira ação. */
    primaryAction?: EventEmitter<any>;
    /** Função que será chamada na segunda ação. */
    secondaryAction?: EventEmitter<any>;
    /** Função chamada ao clicar no ícone de configuração */
    setting?: EventEmitter<any>;
    /** Função que será chamada ao clicar no título. */
    titleAction?: EventEmitter<any>;
    abstract setHeight(height: number): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoWidgetBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoWidgetBaseComponent, never, never, { "background": "p-background"; "disabled": "p-disabled"; "height": "p-height"; "help": "p-help"; "noShadow": "p-no-shadow"; "primary": "p-primary"; "primaryLabel": "p-primary-label"; "title": "p-title"; "secondaryLabel": "p-secondary-label"; }, { "click": "p-click"; "onDisabled": "p-on-disabled"; "primaryAction": "p-primary-action"; "secondaryAction": "p-secondary-action"; "setting": "p-setting"; "titleAction": "p-title-action"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8td2lkZ2V0LWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXdpZGdldC1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLyoqXHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKlxyXG4gKiBPIGNvbXBvbmVudGUgYHBvLXdpZGdldGAgw6kgcmVjb21lbmRhZG8gcGFyYSBleGliacOnw6NvIGRlICpkYXNoYm9hcmRzKiwgcG9kZW5kbyBzZXIgdXRpbGl6YWRvXHJcbiAqIHBhcmEgaW5jbHVpciB2w6FyaW9zIHRpcG9zIGRlIGNvbnRlw7pkbyBjb21vOiBncsOhZmljb3MsIHRhYmVsYXMsIGdyaWRzIGUgaW1hZ2Vucy5cclxuICpcclxuICogQWzDqW0gZGEgZXhpYmnDp8OjbyBkZSBjb250ZcO6ZG9zLCBlc3RlIGNvbXBvbmVudGUgcG9zc2liaWxpdGEgYWRpY2lvbmFyIGHDp8O1ZXMgZSB1bSBsaW5rXHJcbiAqIHBhcmEgYWp1ZGEsIGNvbW8gdGFtYsOpbSBwb3NzaWJpbGl0YSBzZXIgdXRpbGl6YWRvIGNvbSBvdSBzZW0gc29tYnJhLlxyXG4gKlxyXG4gKiBQYXJhIGNvbnRyb2xhciBzdWEgbGFyZ3VyYSwgw6kgcG9zc8OtdmVsIHV0aWxpemFyIG8gW0dyaWQgU3lzdGVtXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSBwYXJhIHVtIG1haW9yXHJcbiAqIGNvbnRyb2xlIGRlIHNldSByZWRpbWVuc2lvbmFtZW50bywgYXNzaW0gcG9zc2liaWxpdGFuZG8gbyB0cmF0YW1lbnRvIHBhcmEgZGlmZXJlbnRlcyByZXNvbHXDp8O1ZXMuXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBQb1dpZGdldEJhc2VDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBfYmFja2dyb3VuZD87XHJcbiAgICBwcml2YXRlIF9kaXNhYmxlZD87XHJcbiAgICBwcml2YXRlIF9oZWlnaHQ/O1xyXG4gICAgcHJpdmF0ZSBfaGVscD87XHJcbiAgICBwcml2YXRlIF9ub1NoYWRvdz87XHJcbiAgICBwcml2YXRlIF9wcmltYXJ5PztcclxuICAgIHByaXZhdGUgX3ByaW1hcnlMYWJlbD87XHJcbiAgICBwcml2YXRlIF90aXRsZT87XHJcbiAgICBjb250YWluZXJIZWlnaHQ/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIEFwbGljYcOnw6NvIGRlIGltYWdlbSBkZSBmdW5kby5cclxuICAgICAqID4gU2UgYSBpbWFnZW0gZXNjb2xoaWRhIGludGVydmlyIG5hIGxlZ2liaWxpZGFkZSBkbyB0ZXh0byBjb250aWRvIG5vIGBwLXdpZGdldGAsXHJcbiAgICAgKiBwb2RlLXNlIHV0aWxpemFyIGEgcHJvcHJpZWRhZGUgYHAtcHJpbWFyeWAgZW0gY29uanVudG8gcGFyYSBxdWUgb3MgdGV4dG9zIGZpcXVlbSBuYSBjb3IgYnJhbmNhLlxyXG4gICAgICpcclxuICAgICAqL1xyXG4gICAgc2V0IGJhY2tncm91bmQodmFsdWU6IHN0cmluZyk7XHJcbiAgICBnZXQgYmFja2dyb3VuZCgpOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlc2FiaWxpdGEgdG9kYXMgYXMgYcOnw7VlcyBkbyBjb21wb25lbnRlLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcclxuICAgICAqL1xyXG4gICAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuKTtcclxuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBEZWZpbmUgYSBhbHR1cmEgZG8gYHBvLXdpZGdldGAuXHJcbiAgICAgKiBBIGFsdHVyYSBtw61uaW1hIHBhcmEgbyBgcG8td2lkZ2V0YCBkZXBlbmRlIGRvIHF1ZSBzZXLDoSBleGliaWRvIGF0cmF2w6lzIGRhcyBwcm9wcmllZGFkZXMgYHAtcHJpbWFyeS1sYWJlbGAsXHJcbiAgICAgKiBgcC1zZXR0aW5nYCwgYHAtaGVscGAgZSBgcC10aXRsZWAuXHJcbiAgICAgKiA+IENhc28gbsOjbyBzZWphIGluZm9ybWFkbyB2YWxvciwgYSBwcm9wcmllZGFkZSBpcsOhIGFzc3VtaXIgbyB0YW1hbmhvIGRvIGNvbnRlw7pkby5cclxuICAgICAqL1xyXG4gICAgc2V0IGhlaWdodCh2YWx1ZTogbnVtYmVyKTtcclxuICAgIGdldCBoZWlnaHQoKTogbnVtYmVyO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBMaW5rIGRlIGFqdWRhXHJcbiAgICAgKi9cclxuICAgIHNldCBoZWxwKHZhbHVlOiBzdHJpbmcpO1xyXG4gICAgZ2V0IGhlbHAoKTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBEZXNhYmlsaXRhIGEgc29tYnJhIGRvIGBwby13aWRnZXRgLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGB0cnVlYFxyXG4gICAgICovXHJcbiAgICBzZXQgbm9TaGFkb3codmFsdWU6IGJvb2xlYW4pO1xyXG4gICAgZ2V0IG5vU2hhZG93KCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIE9ww6fDo28gcGFyYSBxdWUgbyBgcG8td2lkZ2V0YCBmaXF1ZSBlbSBkZXN0YXF1ZS5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBwcmltYXJ5KHZhbHVlOiBib29sZWFuKTtcclxuICAgIGdldCBwcmltYXJ5KCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEBvcHRpb25hbFxyXG4gICAgICpcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIERlc2NyacOnw6NvIGRhIHByaW1laXJhIGHDp8Ojby5cclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXHJcbiAgICAgKi9cclxuICAgIHNldCBwcmltYXJ5TGFiZWwodmFsdWU6IHN0cmluZyk7XHJcbiAgICBnZXQgcHJpbWFyeUxhYmVsKCk6IHN0cmluZztcclxuICAgIC8qKiBEZXNjcmnDp8OjbyBkYSBzZWd1bmRhIGHDp8Ojby4gKi9cclxuICAgIHNlY29uZGFyeUxhYmVsPzogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBUw610dWxvIGRvIGBwby13aWRnZXRgLlxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcclxuICAgICAqL1xyXG4gICAgc2V0IHRpdGxlKHZhbHVlOiBzdHJpbmcpO1xyXG4gICAgZ2V0IHRpdGxlKCk6IHN0cmluZztcclxuICAgIC8qKiBBw6fDo28gcXVlIHNlcsOhIGV4ZWN1dGFkYSBxdWFuZG8gbyB1c3XDoXJpbyBjbGljYXIgc29icmUgYSDDoXJlYSB0b3RhbCBkbyBgcG8td2lkZ2V0YC4gKi9cclxuICAgIGNsaWNrPzogRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+O1xyXG4gICAgLyoqIEZ1bsOnw6NvIHF1ZSBzZXLDoSBkaXNwYXJhZGEgY29tIG8gdmFsb3IgZG8gYHAtZGlzYWJsZWRgIHF1YW5kbyBlc3RhIHByb3ByaWVkYWRlIGZvciBhbHRlcmFkYS4gKi9cclxuICAgIG9uRGlzYWJsZWQ/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIC8qKiBGdW7Dp8OjbyBxdWUgc2Vyw6EgY2hhbWFkYSBuYSBwcmltZWlyYSBhw6fDo28uICovXHJcbiAgICBwcmltYXJ5QWN0aW9uPzogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICAvKiogRnVuw6fDo28gcXVlIHNlcsOhIGNoYW1hZGEgbmEgc2VndW5kYSBhw6fDo28uICovXHJcbiAgICBzZWNvbmRhcnlBY3Rpb24/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIC8qKiBGdW7Dp8OjbyBjaGFtYWRhIGFvIGNsaWNhciBubyDDrWNvbmUgZGUgY29uZmlndXJhw6fDo28gKi9cclxuICAgIHNldHRpbmc/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIC8qKiBGdW7Dp8OjbyBxdWUgc2Vyw6EgY2hhbWFkYSBhbyBjbGljYXIgbm8gdMOtdHVsby4gKi9cclxuICAgIHRpdGxlQWN0aW9uPzogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBhYnN0cmFjdCBzZXRIZWlnaHQoaGVpZ2h0OiBudW1iZXIpOiBhbnk7XHJcbn1cclxuIl19