import { DoCheck, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { PoSlideBaseComponent } from './po-slide-base.component';
import { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';
import { PoSlideItem } from './interfaces/po-slide-item.interface';
/**
 * @docsExtends PoSlideBaseComponent
 *
 * @example
 * <example name="po-slide-basic" title="PO Slide Basic">
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.html"> </file>
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-labs" title="PO Slide Labs">
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.html"> </file>
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-useful-articles" title="PO Slide - Useful articles">
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html"> </file>
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-landscapes" title="PO Slide - Landscapes">
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.html"> </file>
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts"> </file>
 * </example>
 */
export declare class PoSlideComponent extends PoSlideBaseComponent implements DoCheck, OnChanges {
    private builder;
    private isLoaded;
    private player;
    private setInterval;
    private get hasElements();
    private get isImageSlide();
    private get offset();
    get hasSlides(): boolean;
    currentSlideIndex: number;
    imageHeight: number;
    slideItems: Array<PoSlideItem | any>;
    slideItemWidth: number;
    slideContentTemplate: PoSlideContentTemplateDirective;
    private slide;
    private itemsElements;
    constructor(builder: AnimationBuilder);
    onResize(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    goToItem(index: number): void;
    nextControl(): void;
    next(): void;
    previous(): void;
    previousControl(): void;
    setSlideHeight(height: number): void;
    private animate;
    private buildTransitionAnimation;
    private createArrayForTemplate;
    private createArrayFromSlides;
    private setDefaultHeight;
    private setHeight;
    private setSlideItemWidth;
    protected cancelInterval(): void;
    protected setSlideItems(slides: Array<PoSlideItem | string | any>): void;
    protected startSlide(): void;
    protected startInterval(): void;
}
