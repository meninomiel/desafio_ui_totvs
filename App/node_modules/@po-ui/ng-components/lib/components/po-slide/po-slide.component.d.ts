import { DoCheck, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { PoSlideBaseComponent } from './po-slide-base.component';
import { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';
import { PoSlideItem } from './interfaces/po-slide-item.interface';
/**
 * @docsExtends PoSlideBaseComponent
 *
 * @example
 * <example name="po-slide-basic" title="PO Slide Basic">
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.html"> </file>
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-labs" title="PO Slide Labs">
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.html"> </file>
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-useful-articles" title="PO Slide - Useful articles">
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html"> </file>
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-landscapes" title="PO Slide - Landscapes">
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.html"> </file>
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoSlideComponent extends PoSlideBaseComponent implements DoCheck, OnChanges {
    private builder;
    private isLoaded;
    private player;
    private setInterval;
    private get hasElements();
    private get isImageSlide();
    private get offset();
    get hasSlides(): boolean;
    currentSlideIndex: number;
    imageHeight: number;
    slideItems: Array<PoSlideItem | any>;
    slideItemWidth: number;
    slideContentTemplate: PoSlideContentTemplateDirective;
    private slide;
    private itemsElements;
    constructor(builder: AnimationBuilder);
    onResize(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    goToItem(index: number): void;
    nextControl(): void;
    next(): void;
    previous(): void;
    previousControl(): void;
    setSlideHeight(height: number): void;
    private animate;
    private buildTransitionAnimation;
    private createArrayForTemplate;
    private createArrayFromSlides;
    private setDefaultHeight;
    private setHeight;
    private setSlideItemWidth;
    protected cancelInterval(): void;
    protected setSlideItems(slides: Array<PoSlideItem | string | any>): void;
    protected startSlide(): void;
    protected startInterval(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoSlideComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoSlideComponent, "po-slide", never, {}, {}, ["slideContentTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXNsaWRlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9DaGVjaywgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFuaW1hdGlvbkJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuaW1wb3J0IHsgUG9TbGlkZUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXNsaWRlLWJhc2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9wby1zbGlkZS1jb250ZW50LXRlbXBsYXRlLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFBvU2xpZGVJdGVtIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXNsaWRlLWl0ZW0uaW50ZXJmYWNlJztcclxuLyoqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb1NsaWRlQmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tc2xpZGUtYmFzaWNcIiB0aXRsZT1cIlBPIFNsaWRlIEJhc2ljXCI+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS1iYXNpYy9zYW1wbGUtcG8tc2xpZGUtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2xpZGUtYmFzaWMvc2FtcGxlLXBvLXNsaWRlLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICogPGV4YW1wbGUgbmFtZT1cInBvLXNsaWRlLWxhYnNcIiB0aXRsZT1cIlBPIFNsaWRlIExhYnNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNsaWRlLWxhYnMvc2FtcGxlLXBvLXNsaWRlLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2xpZGUtbGFicy9zYW1wbGUtcG8tc2xpZGUtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1zbGlkZS11c2VmdWwtYXJ0aWNsZXNcIiB0aXRsZT1cIlBPIFNsaWRlIC0gVXNlZnVsIGFydGljbGVzXCI+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS11c2VmdWwtYXJ0aWNsZXMvc2FtcGxlLXBvLXNsaWRlLXVzZWZ1bC1hcnRpY2xlcy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS11c2VmdWwtYXJ0aWNsZXMvc2FtcGxlLXBvLXNsaWRlLXVzZWZ1bC1hcnRpY2xlcy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1zbGlkZS1sYW5kc2NhcGVzXCIgdGl0bGU9XCJQTyBTbGlkZSAtIExhbmRzY2FwZXNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNsaWRlLWxhbmRzY2FwZXMvc2FtcGxlLXBvLXNsaWRlLWxhbmRzY2FwZXMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2xpZGUtbGFuZHNjYXBlcy9zYW1wbGUtcG8tc2xpZGUtbGFuZHNjYXBlcy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1NsaWRlQ29tcG9uZW50IGV4dGVuZHMgUG9TbGlkZUJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrLCBPbkNoYW5nZXMge1xyXG4gICAgcHJpdmF0ZSBidWlsZGVyO1xyXG4gICAgcHJpdmF0ZSBpc0xvYWRlZDtcclxuICAgIHByaXZhdGUgcGxheWVyO1xyXG4gICAgcHJpdmF0ZSBzZXRJbnRlcnZhbDtcclxuICAgIHByaXZhdGUgZ2V0IGhhc0VsZW1lbnRzKCk7XHJcbiAgICBwcml2YXRlIGdldCBpc0ltYWdlU2xpZGUoKTtcclxuICAgIHByaXZhdGUgZ2V0IG9mZnNldCgpO1xyXG4gICAgZ2V0IGhhc1NsaWRlcygpOiBib29sZWFuO1xyXG4gICAgY3VycmVudFNsaWRlSW5kZXg6IG51bWJlcjtcclxuICAgIGltYWdlSGVpZ2h0OiBudW1iZXI7XHJcbiAgICBzbGlkZUl0ZW1zOiBBcnJheTxQb1NsaWRlSXRlbSB8IGFueT47XHJcbiAgICBzbGlkZUl0ZW1XaWR0aDogbnVtYmVyO1xyXG4gICAgc2xpZGVDb250ZW50VGVtcGxhdGU6IFBvU2xpZGVDb250ZW50VGVtcGxhdGVEaXJlY3RpdmU7XHJcbiAgICBwcml2YXRlIHNsaWRlO1xyXG4gICAgcHJpdmF0ZSBpdGVtc0VsZW1lbnRzO1xyXG4gICAgY29uc3RydWN0b3IoYnVpbGRlcjogQW5pbWF0aW9uQnVpbGRlcik7XHJcbiAgICBvblJlc2l6ZSgpOiB2b2lkO1xyXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIGdvVG9JdGVtKGluZGV4OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgbmV4dENvbnRyb2woKTogdm9pZDtcclxuICAgIG5leHQoKTogdm9pZDtcclxuICAgIHByZXZpb3VzKCk6IHZvaWQ7XHJcbiAgICBwcmV2aW91c0NvbnRyb2woKTogdm9pZDtcclxuICAgIHNldFNsaWRlSGVpZ2h0KGhlaWdodDogbnVtYmVyKTogdm9pZDtcclxuICAgIHByaXZhdGUgYW5pbWF0ZTtcclxuICAgIHByaXZhdGUgYnVpbGRUcmFuc2l0aW9uQW5pbWF0aW9uO1xyXG4gICAgcHJpdmF0ZSBjcmVhdGVBcnJheUZvclRlbXBsYXRlO1xyXG4gICAgcHJpdmF0ZSBjcmVhdGVBcnJheUZyb21TbGlkZXM7XHJcbiAgICBwcml2YXRlIHNldERlZmF1bHRIZWlnaHQ7XHJcbiAgICBwcml2YXRlIHNldEhlaWdodDtcclxuICAgIHByaXZhdGUgc2V0U2xpZGVJdGVtV2lkdGg7XHJcbiAgICBwcm90ZWN0ZWQgY2FuY2VsSW50ZXJ2YWwoKTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBzZXRTbGlkZUl0ZW1zKHNsaWRlczogQXJyYXk8UG9TbGlkZUl0ZW0gfCBzdHJpbmcgfCBhbnk+KTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBzdGFydFNsaWRlKCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgc3RhcnRJbnRlcnZhbCgpOiB2b2lkO1xyXG59XHJcbiJdfQ==