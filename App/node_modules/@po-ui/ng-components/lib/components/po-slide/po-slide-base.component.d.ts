import { PoSlideItem } from './interfaces/po-slide-item.interface';
/**
 * @description
 *
 * Componente de slide para visualização e controle de elementos de forma cíclica. Exibe um conjunto de imagens ou dados que permitem
 * customizar sua visualização utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.
 *
 * #### Boas práticas:
 * - Utilizar imagens no slide, mesmo quando possui conteúdo personalizado.
 * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.
 * - Evitar utilizar mais de 5 slides, pois a ideia do componente é destacar apenas informações importantes.
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class PoSlideBaseComponent {
    private _interval;
    private _height?;
    private _slides;
    /**
     * @optional
     *
     * @description
     * Altura do po-slide, caso seja slide com template customizado, não assume o valor `default`.
     *
     * @default `336`
     */
    set height(value: number);
    get height(): number;
    /**
     * @optional
     *
     * @description
     *
     * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides não trocam automaticamente.
     *
     * @default `4000`
     */
    set interval(value: number);
    get interval(): number;
    /**
     * @description
     *
     * Array de imagens ou dados para o slide, pode ser de três formas:
     *
     * - Array implementando objetos da interface `PoSlideItem`:
     * ```
     * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]
     * ```
     * - Array de `strings` com os caminhos das imagens:
     * ```
     * ['/assets/image-1', '/assets/image-2' ]
     * ```
     * - Array com lista de itens (para utilizar template):
     * ```
     * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]
     * ```
     *
     * > As setas de navegação e o controle com círculos apenas serão renderizados caso possua mais de um slide.
     */
    set slides(value: Array<PoSlideItem | string | any>);
    get slides(): Array<PoSlideItem | string | any>;
    abstract setSlideHeight(height: number): void;
    protected abstract cancelInterval(): void;
    protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;
    protected abstract startSlide(): void;
    protected abstract startInterval(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoSlideBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoSlideBaseComponent, never, never, { "height": "p-height"; "interval": "p-interval"; "slides": "p-slides"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tc2xpZGUtYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9TbGlkZUl0ZW0gfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tc2xpZGUtaXRlbS5pbnRlcmZhY2UnO1xyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIENvbXBvbmVudGUgZGUgc2xpZGUgcGFyYSB2aXN1YWxpemHDp8OjbyBlIGNvbnRyb2xlIGRlIGVsZW1lbnRvcyBkZSBmb3JtYSBjw61jbGljYS4gRXhpYmUgdW0gY29uanVudG8gZGUgaW1hZ2VucyBvdSBkYWRvcyBxdWUgcGVybWl0ZW1cclxuICogY3VzdG9taXphciBzdWEgdmlzdWFsaXphw6fDo28gdXRpbGl6YW5kbyBhIGRpcmV0aXZhICoqW3Atc2xpZGUtY29udGVudC10ZW1wbGF0ZV0oL2RvY3VtZW50YXRpb24vcG8tc2xpZGUtY29udGVudC10ZW1wbGF0ZSkqKi5cclxuICpcclxuICogIyMjIyBCb2FzIHByw6F0aWNhczpcclxuICogLSBVdGlsaXphciBpbWFnZW5zIG5vIHNsaWRlLCBtZXNtbyBxdWFuZG8gcG9zc3VpIGNvbnRlw7pkbyBwZXJzb25hbGl6YWRvLlxyXG4gKiAtIEV2aXRhciB1dGlsaXphciBhcGVuYXMgdW0gc2xpZGUgaXNvbGFkbywgdXRpbGl6ZSBwZWxvIG1lbm9zIGRvaXMuXHJcbiAqIC0gRXZpdGFyIHV0aWxpemFyIG1haXMgZGUgNSBzbGlkZXMsIHBvaXMgYSBpZGVpYSBkbyBjb21wb25lbnRlIMOpIGRlc3RhY2FyIGFwZW5hcyBpbmZvcm1hw6fDtWVzIGltcG9ydGFudGVzLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgUG9TbGlkZUJhc2VDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBfaW50ZXJ2YWw7XHJcbiAgICBwcml2YXRlIF9oZWlnaHQ/O1xyXG4gICAgcHJpdmF0ZSBfc2xpZGVzO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqIEFsdHVyYSBkbyBwby1zbGlkZSwgY2FzbyBzZWphIHNsaWRlIGNvbSB0ZW1wbGF0ZSBjdXN0b21pemFkbywgbsOjbyBhc3N1bWUgbyB2YWxvciBgZGVmYXVsdGAuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYDMzNmBcclxuICAgICAqL1xyXG4gICAgc2V0IGhlaWdodCh2YWx1ZTogbnVtYmVyKTtcclxuICAgIGdldCBoZWlnaHQoKTogbnVtYmVyO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAb3B0aW9uYWxcclxuICAgICAqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqXHJcbiAgICAgKiBWYWxvciBlbSBtaWxpc3NlZ3VuZG9zIHF1ZSBkZWZpbmUgbyB0ZW1wbyBkZSB0cm9jYSBkb3Mgc2xpZGVzLCBjYXNvIG8gdmFsb3Igc2VqYSBtZW5vciBxdWUgYDEwMDBgIG9zIHNsaWRlcyBuw6NvIHRyb2NhbSBhdXRvbWF0aWNhbWVudGUuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgYDQwMDBgXHJcbiAgICAgKi9cclxuICAgIHNldCBpbnRlcnZhbCh2YWx1ZTogbnVtYmVyKTtcclxuICAgIGdldCBpbnRlcnZhbCgpOiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIEFycmF5IGRlIGltYWdlbnMgb3UgZGFkb3MgcGFyYSBvIHNsaWRlLCBwb2RlIHNlciBkZSB0csOqcyBmb3JtYXM6XHJcbiAgICAgKlxyXG4gICAgICogLSBBcnJheSBpbXBsZW1lbnRhbmRvIG9iamV0b3MgZGEgaW50ZXJmYWNlIGBQb1NsaWRlSXRlbWA6XHJcbiAgICAgKiBgYGBcclxuICAgICAqIFt7IGltYWdlOiAnL2Fzc2V0cy9pbWFnZS0xJywgYWN0aW9uOiAnaW1hZ2VDbGljay5iaW5kKHRoaXMpJ30sIHsgaW1hZ2U6ICcvYXNzZXRzL2ltYWdlLTInIH1dXHJcbiAgICAgKiBgYGBcclxuICAgICAqIC0gQXJyYXkgZGUgYHN0cmluZ3NgIGNvbSBvcyBjYW1pbmhvcyBkYXMgaW1hZ2VuczpcclxuICAgICAqIGBgYFxyXG4gICAgICogWycvYXNzZXRzL2ltYWdlLTEnLCAnL2Fzc2V0cy9pbWFnZS0yJyBdXHJcbiAgICAgKiBgYGBcclxuICAgICAqIC0gQXJyYXkgY29tIGxpc3RhIGRlIGl0ZW5zIChwYXJhIHV0aWxpemFyIHRlbXBsYXRlKTpcclxuICAgICAqIGBgYFxyXG4gICAgICogW3sgbGFiZWw6ICcxJywgaW1nOiAnL2Fzc2V0cy9pbWFnZS0xJyB9LCB7IGxhYmVsOiAnMicsIGltZzogJy9hc3NldHMvaW1hZ2UtMScgfV1cclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqID4gQXMgc2V0YXMgZGUgbmF2ZWdhw6fDo28gZSBvIGNvbnRyb2xlIGNvbSBjw61yY3Vsb3MgYXBlbmFzIHNlcsOjbyByZW5kZXJpemFkb3MgY2FzbyBwb3NzdWEgbWFpcyBkZSB1bSBzbGlkZS5cclxuICAgICAqL1xyXG4gICAgc2V0IHNsaWRlcyh2YWx1ZTogQXJyYXk8UG9TbGlkZUl0ZW0gfCBzdHJpbmcgfCBhbnk+KTtcclxuICAgIGdldCBzbGlkZXMoKTogQXJyYXk8UG9TbGlkZUl0ZW0gfCBzdHJpbmcgfCBhbnk+O1xyXG4gICAgYWJzdHJhY3Qgc2V0U2xpZGVIZWlnaHQoaGVpZ2h0OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGNhbmNlbEludGVydmFsKCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3Qgc2V0U2xpZGVJdGVtcyh2YWx1ZTogQXJyYXk8UG9TbGlkZUl0ZW0gfCBzdHJpbmcgfCBhbnk+KTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBzdGFydFNsaWRlKCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3Qgc3RhcnRJbnRlcnZhbCgpOiB2b2lkO1xyXG59XHJcbiJdfQ==