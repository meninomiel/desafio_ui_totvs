import { EventEmitter } from '@angular/core';
import { PoCalendarLangService } from './services/po-calendar.lang.service';
import { PoDateService } from '../../services/po-date';
/**
 * @description
 *
 * O `po-calendar` é um componente para seleção de datas. Ele permite uma fácil navegação clicando nas setas
 * de direcionamento e nos *labels* do ano ou mês.
 *
 * Este componente pode receber os seguintes formatos de data:
 *
 * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**
 * ```
 * this.date = '2017-11-28T00:00:00-02:00';
 * ```
 *
 * - **Data (E8601DAw.): yyyy-mm-dd**
 * ```
 * this.date = '2017-11-28';
 * ```
 *
 * - **JavaScript Date Object:**
 * ```
 * this.date = new Date(2017, 10, 28);
 * ```
 *
 * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o
 * formato **Data (E8601DAw.): yyyy-mm-dd**.
 *
 * Importante:
 *
 * - Caso seja definida uma data fora do range da data mínima e data máxima via *ngModel* o componente mostrará
 * a data desabilitada porém o *model* não será alterado.
 * - Caso seja definida uma data inválida a mesma não será atribuída ao calendário porém o *model* manterá a data inválida.
 */
export declare class PoCalendarBaseComponent {
    poDate: PoDateService;
    poCalendarLangService: PoCalendarLangService;
    private _locale;
    private _maxDate;
    private _minDate;
    currentYear: number;
    dayVisible: boolean;
    displayDays: Array<number>;
    displayDecade: Array<number>;
    displayFinalDecade: number;
    displayMonth: any;
    displayMonthNumber: number;
    displayMonths: Array<any>;
    displayStartDecade: number;
    displayWeekDays: Array<any>;
    displayYear: number;
    monthVisible: boolean;
    yearVisible: boolean;
    protected currentMonthNumber: number;
    protected date: Date;
    protected dateIso: string;
    protected lastDisplay: string;
    protected onTouched: any;
    protected propagateChange: any;
    protected today: Date;
    protected validatorChange: any;
    /**
     * @optional
     *
     * @description
     *
     * Idioma do calendário.
     *
     * Valores válidos:
     *  - `pt`
     *  - `en`
     *  - `es`
     *
     * @default `pt`
     */
    set locale(locale: string);
    get locale(): string;
    /**
     * @optional
     *
     * @description
     *
     * Define a data máxima possível de ser selecionada.
     *
     * Pode receber os seguintes formatos de data:
     *
     * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**
     * ```
     * this.date = '2017-11-28T00:00:00-02:00';
     * ```
     *
     * - **Data (E8601DAw.): yyyy-mm-dd**
     * ```
     * this.date = '2017-11-28';
     * ```
     *
     * - **JavaScript Date Object:**
     * ```
     * this.date = new Date(2017, 10, 28);
     * ```
     */
    set maxDate(maxDate: any);
    get maxDate(): any;
    /**
     * @optional
     *
     * @description
     *
     * Define a data mínima possível de ser selecionada.
     *
     * Pode receber os seguintes formatos de data:
     *
     * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**
     * ```
     * this.date = '2017-11-28T00:00:00-02:00';
     * ```
     *
     * - **Data (E8601DAw.): yyyy-mm-dd**
     * ```
     * this.date = '2017-11-28';
     * ```
     *
     * - **JavaScript Date Object:**
     * ```
     * this.date = new Date(2017, 10, 28);
     * ```
     */
    set minDate(minDate: any);
    get minDate(): any;
    /** Evento disparado ao selecionar um dia do calendário. */
    change: EventEmitter<string>;
    constructor(poDate: PoDateService, poCalendarLangService: PoCalendarLangService);
    initializeLanguage(): void;
}
