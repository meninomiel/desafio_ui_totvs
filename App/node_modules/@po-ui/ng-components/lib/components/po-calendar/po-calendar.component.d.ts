import { OnInit } from '@angular/core';
import { AbstractControl } from '@angular/forms';
import { PoCalendarBaseComponent } from './po-calendar-base.component';
import { PoCalendarLangService } from './services/po-calendar.lang.service';
import { PoCalendarService } from './services/po-calendar.service';
import { PoDateService } from '../../services/po-date/po-date.service';
/**
 * @docsExtends PoCalendarBaseComponent
 *
 * @example
 *
 * <example name="po-calendar-basic" title="PO Calendar Basic" >
 *  <file name="sample-po-calendar-basic/sample-po-calendar-basic.component.html"> </file>
 *  <file name="sample-po-calendar-basic/sample-po-calendar-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-calendar-labs" title="PO Calendar Labs" >
 *  <file name="sample-po-calendar-labs/sample-po-calendar-labs.component.html"> </file>
 *  <file name="sample-po-calendar-labs/sample-po-calendar-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-calendar-ticket-sales" title="PO Calendar - Ticket Sales" >
 *  <file name="sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html"> </file>
 *  <file name="sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit {
    private poCalendarService;
    constructor(poCalendarService: PoCalendarService, poCalendarLangService: PoCalendarLangService, poDate: PoDateService);
    ngOnInit(): void;
    getBackgroundColor(displayValue: number, propertyValue: number): "po-calendar-box-background-selected" | "po-calendar-box-background";
    getDayBackgroundColor(date: Date): string;
    getDayForegroundColor(date: Date): string;
    getForegroundColor(displayValue: number, propertyValue: number): "po-calendar-box-foreground-selected" | "po-calendar-box-foreground";
    getMonthLabel(): any;
    getYearLabel(): any;
    onNextMonth(): void;
    onPreviousMonth(): void;
    onSelectDate(date: Date): void;
    onSelectMonth(year: number, month: number): void;
    onSelectYear(year: number, month: number): void;
    registerOnChange(fn: any): void;
    registerOnTouched(func: any): void;
    registerOnValidatorChange(fn: () => void): void;
    selectDay(): void;
    selectMonth(): void;
    selectYear(): void;
    updateYear(value: number): void;
    validateModel(model: any): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    writeValue(value: any): void;
    private addAllYearsInDecade;
    private equalsDate;
    private getDecadeArray;
    private getColorForDate;
    private getColorForDateRange;
    private getColorForToday;
    private getDayColor;
    private init;
    private selectDateFromDate;
    private selectDateFromIso;
    private updateDate;
    private updateDecade;
    private updateDisplay;
    private writeDate;
    private writeDateIso;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoCalendarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoCalendarComponent, "po-calendar", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2FsZW5kYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNhbGVuZGFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFBvQ2FsZW5kYXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1jYWxlbmRhci1iYXNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvQ2FsZW5kYXJMYW5nU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcG8tY2FsZW5kYXIubGFuZy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgUG9DYWxlbmRhclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3BvLWNhbGVuZGFyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb0RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcG8tZGF0ZS9wby1kYXRlLnNlcnZpY2UnO1xyXG4vKipcclxuICogQGRvY3NFeHRlbmRzIFBvQ2FsZW5kYXJCYXNlQ29tcG9uZW50XHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jYWxlbmRhci1iYXNpY1wiIHRpdGxlPVwiUE8gQ2FsZW5kYXIgQmFzaWNcIiA+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNhbGVuZGFyLWJhc2ljL3NhbXBsZS1wby1jYWxlbmRhci1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNhbGVuZGFyLWJhc2ljL3NhbXBsZS1wby1jYWxlbmRhci1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jYWxlbmRhci1sYWJzXCIgdGl0bGU9XCJQTyBDYWxlbmRhciBMYWJzXCIgPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jYWxlbmRhci1sYWJzL3NhbXBsZS1wby1jYWxlbmRhci1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2FsZW5kYXItbGFicy9zYW1wbGUtcG8tY2FsZW5kYXItbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxyXG4gKiA8L2V4YW1wbGU+XHJcbiAqXHJcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jYWxlbmRhci10aWNrZXQtc2FsZXNcIiB0aXRsZT1cIlBPIENhbGVuZGFyIC0gVGlja2V0IFNhbGVzXCIgPlxyXG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jYWxlbmRhci10aWNrZXQtc2FsZXMvc2FtcGxlLXBvLWNhbGVuZGFyLXRpY2tldC1zYWxlcy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNhbGVuZGFyLXRpY2tldC1zYWxlcy9zYW1wbGUtcG8tY2FsZW5kYXItdGlja2V0LXNhbGVzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQ2FsZW5kYXJDb21wb25lbnQgZXh0ZW5kcyBQb0NhbGVuZGFyQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwcml2YXRlIHBvQ2FsZW5kYXJTZXJ2aWNlO1xyXG4gICAgY29uc3RydWN0b3IocG9DYWxlbmRhclNlcnZpY2U6IFBvQ2FsZW5kYXJTZXJ2aWNlLCBwb0NhbGVuZGFyTGFuZ1NlcnZpY2U6IFBvQ2FsZW5kYXJMYW5nU2VydmljZSwgcG9EYXRlOiBQb0RhdGVTZXJ2aWNlKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBnZXRCYWNrZ3JvdW5kQ29sb3IoZGlzcGxheVZhbHVlOiBudW1iZXIsIHByb3BlcnR5VmFsdWU6IG51bWJlcik6IFwicG8tY2FsZW5kYXItYm94LWJhY2tncm91bmQtc2VsZWN0ZWRcIiB8IFwicG8tY2FsZW5kYXItYm94LWJhY2tncm91bmRcIjtcclxuICAgIGdldERheUJhY2tncm91bmRDb2xvcihkYXRlOiBEYXRlKTogc3RyaW5nO1xyXG4gICAgZ2V0RGF5Rm9yZWdyb3VuZENvbG9yKGRhdGU6IERhdGUpOiBzdHJpbmc7XHJcbiAgICBnZXRGb3JlZ3JvdW5kQ29sb3IoZGlzcGxheVZhbHVlOiBudW1iZXIsIHByb3BlcnR5VmFsdWU6IG51bWJlcik6IFwicG8tY2FsZW5kYXItYm94LWZvcmVncm91bmQtc2VsZWN0ZWRcIiB8IFwicG8tY2FsZW5kYXItYm94LWZvcmVncm91bmRcIjtcclxuICAgIGdldE1vbnRoTGFiZWwoKTogYW55O1xyXG4gICAgZ2V0WWVhckxhYmVsKCk6IGFueTtcclxuICAgIG9uTmV4dE1vbnRoKCk6IHZvaWQ7XHJcbiAgICBvblByZXZpb3VzTW9udGgoKTogdm9pZDtcclxuICAgIG9uU2VsZWN0RGF0ZShkYXRlOiBEYXRlKTogdm9pZDtcclxuICAgIG9uU2VsZWN0TW9udGgoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyKTogdm9pZDtcclxuICAgIG9uU2VsZWN0WWVhcih5ZWFyOiBudW1iZXIsIG1vbnRoOiBudW1iZXIpOiB2b2lkO1xyXG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZDtcclxuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZ1bmM6IGFueSk6IHZvaWQ7XHJcbiAgICByZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlKGZuOiAoKSA9PiB2b2lkKTogdm9pZDtcclxuICAgIHNlbGVjdERheSgpOiB2b2lkO1xyXG4gICAgc2VsZWN0TW9udGgoKTogdm9pZDtcclxuICAgIHNlbGVjdFllYXIoKTogdm9pZDtcclxuICAgIHVwZGF0ZVllYXIodmFsdWU6IG51bWJlcik6IHZvaWQ7XHJcbiAgICB2YWxpZGF0ZU1vZGVsKG1vZGVsOiBhbnkpOiB2b2lkO1xyXG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKToge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcclxuICAgIH07XHJcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBhZGRBbGxZZWFyc0luRGVjYWRlO1xyXG4gICAgcHJpdmF0ZSBlcXVhbHNEYXRlO1xyXG4gICAgcHJpdmF0ZSBnZXREZWNhZGVBcnJheTtcclxuICAgIHByaXZhdGUgZ2V0Q29sb3JGb3JEYXRlO1xyXG4gICAgcHJpdmF0ZSBnZXRDb2xvckZvckRhdGVSYW5nZTtcclxuICAgIHByaXZhdGUgZ2V0Q29sb3JGb3JUb2RheTtcclxuICAgIHByaXZhdGUgZ2V0RGF5Q29sb3I7XHJcbiAgICBwcml2YXRlIGluaXQ7XHJcbiAgICBwcml2YXRlIHNlbGVjdERhdGVGcm9tRGF0ZTtcclxuICAgIHByaXZhdGUgc2VsZWN0RGF0ZUZyb21Jc287XHJcbiAgICBwcml2YXRlIHVwZGF0ZURhdGU7XHJcbiAgICBwcml2YXRlIHVwZGF0ZURlY2FkZTtcclxuICAgIHByaXZhdGUgdXBkYXRlRGlzcGxheTtcclxuICAgIHByaXZhdGUgd3JpdGVEYXRlO1xyXG4gICAgcHJpdmF0ZSB3cml0ZURhdGVJc287XHJcbn1cclxuIl19