import { EventEmitter } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * O componente po-disclaimer é responsável por representar tags.
 * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,
 * como por exemplo, no po-multi-select.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDisclaimerBaseComponent {
    private _type;
    private _hideClose?;
    showDisclaimer: boolean;
    /**
     * Label que aparecerá dentro do po-disclaimer.
     * Quando não for definido um label será apresentada a propriedade p-value.
     */
    label?: string;
    /** Valor do po-disclaimer. */
    value: string;
    /** Nome da propriedade vinculada à este po-disclaimer. */
    property?: string;
    /**
     * @description
     *
     * Esta propriedade esconde o botão para fechamento do po-disclaimer, ao utilizar esta propriedade
     * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.
     *
     * @default false
     */
    set hideClose(value: boolean);
    get hideClose(): boolean;
    /**
     * Evento disparado ao fechar o disclaimer.
     * Para este evento será passado como parâmetro um objeto com value, label e property.
     */
    closeAction?: EventEmitter<any>;
    /**
     * @description
     *
     * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.
     *
     * @default default
     * @optional
     */
    set type(type: string);
    get type(): string;
    close(): void;
    getLabel(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDisclaimerBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoDisclaimerBaseComponent, never, never, { "hideClose": "p-hide-close"; "type": "p-type"; "label": "p-label"; "value": "p-value"; "property": "p-property"; }, { "closeAction": "p-close-action"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlzY2xhaW1lci1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1kaXNjbGFpbWVyLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogTyBjb21wb25lbnRlIHBvLWRpc2NsYWltZXIgw6kgcmVzcG9uc8OhdmVsIHBvciByZXByZXNlbnRhciB0YWdzLlxyXG4gKiBTZXUgdXNvIMOpIHJlY29tZW5kYWRvIGVtIGJ1c2NhcyBlIGVtIGNhbXBvcyBvbmRlIMOpIG5lY2Vzc8OhcmlvIHJlcHJlc2VudGFyIG9iamV0b3Mgc2VsZWNpb25hZG9zLFxyXG4gKiBjb21vIHBvciBleGVtcGxvLCBubyBwby1tdWx0aS1zZWxlY3QuXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0Rpc2NsYWltZXJCYXNlQ29tcG9uZW50IHtcclxuICAgIHByaXZhdGUgX3R5cGU7XHJcbiAgICBwcml2YXRlIF9oaWRlQ2xvc2U/O1xyXG4gICAgc2hvd0Rpc2NsYWltZXI6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIExhYmVsIHF1ZSBhcGFyZWNlcsOhIGRlbnRybyBkbyBwby1kaXNjbGFpbWVyLlxyXG4gICAgICogUXVhbmRvIG7Do28gZm9yIGRlZmluaWRvIHVtIGxhYmVsIHNlcsOhIGFwcmVzZW50YWRhIGEgcHJvcHJpZWRhZGUgcC12YWx1ZS5cclxuICAgICAqL1xyXG4gICAgbGFiZWw/OiBzdHJpbmc7XHJcbiAgICAvKiogVmFsb3IgZG8gcG8tZGlzY2xhaW1lci4gKi9cclxuICAgIHZhbHVlOiBzdHJpbmc7XHJcbiAgICAvKiogTm9tZSBkYSBwcm9wcmllZGFkZSB2aW5jdWxhZGEgw6AgZXN0ZSBwby1kaXNjbGFpbWVyLiAqL1xyXG4gICAgcHJvcGVydHk/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICpcclxuICAgICAqIEVzdGEgcHJvcHJpZWRhZGUgZXNjb25kZSBvIGJvdMOjbyBwYXJhIGZlY2hhbWVudG8gZG8gcG8tZGlzY2xhaW1lciwgYW8gdXRpbGl6YXIgZXN0YSBwcm9wcmllZGFkZVxyXG4gICAgICogc2VtIHBhc3NhciB2YWxvciBhIG1lc21hIMOpIHNldGFkYSBjb21vIGZhbHNlLCBvbmRlIG8gYm90w6NvIGRlIGZlY2hhbWVudG8gZXN0w6Egdmlzw612ZWwuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgZmFsc2VcclxuICAgICAqL1xyXG4gICAgc2V0IGhpZGVDbG9zZSh2YWx1ZTogYm9vbGVhbik7XHJcbiAgICBnZXQgaGlkZUNsb3NlKCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50byBkaXNwYXJhZG8gYW8gZmVjaGFyIG8gZGlzY2xhaW1lci5cclxuICAgICAqIFBhcmEgZXN0ZSBldmVudG8gc2Vyw6EgcGFzc2FkbyBjb21vIHBhcsOibWV0cm8gdW0gb2JqZXRvIGNvbSB2YWx1ZSwgbGFiZWwgZSBwcm9wZXJ0eS5cclxuICAgICAqL1xyXG4gICAgY2xvc2VBY3Rpb24/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKlxyXG4gICAgICogVGlwbyBkbyBwby1kaXNjbGFpbWVyLiBQb2RlIHNlciAnZGVmYXVsdCcgb3UgJ2RhbmdlcicuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgZGVmYXVsdFxyXG4gICAgICogQG9wdGlvbmFsXHJcbiAgICAgKi9cclxuICAgIHNldCB0eXBlKHR5cGU6IHN0cmluZyk7XHJcbiAgICBnZXQgdHlwZSgpOiBzdHJpbmc7XHJcbiAgICBjbG9zZSgpOiB2b2lkO1xyXG4gICAgZ2V0TGFiZWwoKTogc3RyaW5nO1xyXG59XHJcbiJdfQ==