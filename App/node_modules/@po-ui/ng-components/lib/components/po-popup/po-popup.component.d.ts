import { ChangeDetectorRef, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';
import { PoPopupAction } from './po-popup-action.interface';
import { PoPopupBaseComponent } from './po-popup-base.component';
/**
 *
 * @docsExtends PoPopupBaseComponent
 *
 * @example
 *
 * <example name="po-popup-basic" title="PO Popup - Basic">
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.html"> </file>
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-labs" title="PO Popup - Labs">
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.html"> </file>
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-email" title="PO Popup Email">
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.html"> </file>
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.ts"> </file>
 * </example>
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPopupComponent extends PoPopupBaseComponent {
    private renderer;
    private router;
    private poControlPosition;
    changeDetector: ChangeDetectorRef;
    popupRef: ElementRef;
    constructor(viewContainerRef: ViewContainerRef, renderer: Renderer2, router: Router, poControlPosition: PoControlPositionService, changeDetector: ChangeDetectorRef);
    /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     */
    close(): void;
    onActionClick(popupAction: PoPopupAction): void | Promise<boolean>;
    /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    open(param?: any): void;
    returnBooleanValue(popupAction: any, property: string): any;
    /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    toggle(param?: any): void;
    private clickedOutDisabledItem;
    private clickedOutHeaderTemplate;
    private clickedOutTarget;
    private closePopupOnClickout;
    private elementContains;
    private hasContentToShow;
    private initializeListeners;
    private onScroll;
    private openUrl;
    private removeListeners;
    private setPosition;
    private validateInitialContent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPopupComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoPopupComponent, "po-popup", never, {}, {}, never, ["[p-popup-header-template]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcG9wdXAuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXBvcHVwLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcG8tY29udHJvbC1wb3NpdGlvbi9wby1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb1BvcHVwQWN0aW9uIH0gZnJvbSAnLi9wby1wb3B1cC1hY3Rpb24uaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9Qb3B1cEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXBvcHVwLWJhc2UuY29tcG9uZW50JztcclxuLyoqXHJcbiAqXHJcbiAqIEBkb2NzRXh0ZW5kcyBQb1BvcHVwQmFzZUNvbXBvbmVudFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcG9wdXAtYmFzaWNcIiB0aXRsZT1cIlBPIFBvcHVwIC0gQmFzaWNcIj5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcHVwLWJhc2ljL3NhbXBsZS1wby1wb3B1cC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3B1cC1iYXNpYy9zYW1wbGUtcG8tcG9wdXAtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcG9wdXAtbGFic1wiIHRpdGxlPVwiUE8gUG9wdXAgLSBMYWJzXCI+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3B1cC1sYWJzL3NhbXBsZS1wby1wb3B1cC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cclxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcHVwLWxhYnMvc2FtcGxlLXBvLXBvcHVwLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cclxuICogPC9leGFtcGxlPlxyXG4gKlxyXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcG9wdXAtZW1haWxcIiB0aXRsZT1cIlBPIFBvcHVwIEVtYWlsXCI+XHJcbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3B1cC1lbWFpbC9zYW1wbGUtcG8tcG9wdXAtZW1haWwuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxyXG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcG9wdXAtZW1haWwvc2FtcGxlLXBvLXBvcHVwLWVtYWlsLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XHJcbiAqIDwvZXhhbXBsZT5cclxuICpcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvUG9wdXBDb21wb25lbnQgZXh0ZW5kcyBQb1BvcHVwQmFzZUNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSByb3V0ZXI7XHJcbiAgICBwcml2YXRlIHBvQ29udHJvbFBvc2l0aW9uO1xyXG4gICAgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmO1xyXG4gICAgcG9wdXBSZWY6IEVsZW1lbnRSZWY7XHJcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCByb3V0ZXI6IFJvdXRlciwgcG9Db250cm9sUG9zaXRpb246IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSwgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKTtcclxuICAgIC8qKlxyXG4gICAgICogRmVjaGEgbyBjb21wb25lbnRlICpwb3B1cCouXHJcbiAgICAgKlxyXG4gICAgICogPiBQb3IgcGFkcsOjbywgZXN0ZSBjb21wb3J0YW1lbnRvIMOpIGFjaW9uYWRvIHNvbWVudGUgYW8gY2xpY2FyIGZvcmEgZG8gY29tcG9uZW50ZSBvdSBlbSBkZXRlcm1pbmFkYSBhw6fDo28gLyB1cmwuXHJcbiAgICAgKi9cclxuICAgIGNsb3NlKCk6IHZvaWQ7XHJcbiAgICBvbkFjdGlvbkNsaWNrKHBvcHVwQWN0aW9uOiBQb1BvcHVwQWN0aW9uKTogdm9pZCB8IFByb21pc2U8Ym9vbGVhbj47XHJcbiAgICAvKipcclxuICAgICAqIEFicmUgbyBjb21wb25lbnRlICpwb3B1cCouXHJcbiAgICAgKlxyXG4gICAgICogPiDDiSBwb3Nzw612ZWwgaW5mb3JtYXIgdW0gcGFyw6JtZXRybyBxdWUgc2Vyw6EgdXRpbGl6YWRvIG5hIGV4ZWN1w6fDo28gZGEgYcOnw6NvIGRvIGl0ZW0gZSBuYSBmdW7Dp8OjbyBkZSBkZXNhYmlsaXRhci5cclxuICAgICAqL1xyXG4gICAgb3BlbihwYXJhbT86IGFueSk6IHZvaWQ7XHJcbiAgICByZXR1cm5Cb29sZWFuVmFsdWUocG9wdXBBY3Rpb246IGFueSwgcHJvcGVydHk6IHN0cmluZyk6IGFueTtcclxuICAgIC8qKlxyXG4gICAgICogUmVzcG9uc8OhdmVsIHBvciBhYnJpciBlIGZlY2hhciBvICpwb3B1cCouXHJcbiAgICAgKlxyXG4gICAgICogUXVhbmRvIGRpc3BhcmFkbyBhYnJpcsOhIG8gKnBvcHVwKiBlIGNhc28gbyBtZXNtbyBqw6EgZXN0aXZlciBhYmVydG8gZSBwb3NzdWlyIG8gbWVzbW8gYHRhcmdldGAgaXLDoSBmZWNoYS1sby5cclxuICAgICAqXHJcbiAgICAgKiDDiSBwb3Nzw612ZWwgaW5mb3JtYXIgdW0gcGFyw6JtZXRybyBxdWUgc2Vyw6EgdXRpbGl6YWRvIG5hIGV4ZWN1w6fDo28gZGEgYcOnw6NvIGRvIGl0ZW0gZSBuYSBmdW7Dp8OjbyBkZSBkZXNhYmlsaXRhci5cclxuICAgICAqL1xyXG4gICAgdG9nZ2xlKHBhcmFtPzogYW55KTogdm9pZDtcclxuICAgIHByaXZhdGUgY2xpY2tlZE91dERpc2FibGVkSXRlbTtcclxuICAgIHByaXZhdGUgY2xpY2tlZE91dEhlYWRlclRlbXBsYXRlO1xyXG4gICAgcHJpdmF0ZSBjbGlja2VkT3V0VGFyZ2V0O1xyXG4gICAgcHJpdmF0ZSBjbG9zZVBvcHVwT25DbGlja291dDtcclxuICAgIHByaXZhdGUgZWxlbWVudENvbnRhaW5zO1xyXG4gICAgcHJpdmF0ZSBoYXNDb250ZW50VG9TaG93O1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBvblNjcm9sbDtcclxuICAgIHByaXZhdGUgb3BlblVybDtcclxuICAgIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzO1xyXG4gICAgcHJpdmF0ZSBzZXRQb3NpdGlvbjtcclxuICAgIHByaXZhdGUgdmFsaWRhdGVJbml0aWFsQ29udGVudDtcclxufVxyXG4iXX0=